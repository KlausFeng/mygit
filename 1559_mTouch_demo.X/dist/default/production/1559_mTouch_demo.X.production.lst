

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Tue Sep 26 22:59:42 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16LF1559
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	text58,local,class=CODE,merge=1,delta=2
    82                           	psect	text59,local,class=CODE,merge=1,delta=2
    83                           	psect	text60,local,class=CODE,merge=1,delta=2
    84                           	psect	text61,local,class=CODE,merge=1,delta=2
    85                           	psect	text62,local,class=CODE,merge=1,delta=2
    86                           	psect	text63,local,class=CODE,merge=1,delta=2
    87                           	psect	text64,local,class=CODE,merge=1,delta=2
    88                           	psect	text65,local,class=CODE,merge=1,delta=2
    89                           	psect	text66,local,class=CODE,merge=1,delta=2
    90                           	psect	text67,local,class=CODE,merge=1,delta=2
    91                           	psect	text68,local,class=CODE,merge=1,delta=2
    92                           	psect	text69,local,class=CODE,merge=1,delta=2
    93                           	psect	text70,local,class=CODE,merge=1,delta=2
    94                           	psect	text71,local,class=CODE,merge=1,delta=2,group=1
    95                           	psect	text72,local,class=CODE,merge=1,delta=2
    96                           	psect	text73,local,class=CODE,merge=1,delta=2
    97                           	psect	text74,local,class=CODE,merge=1,delta=2
    98                           	psect	text75,local,class=CODE,merge=1,delta=2
    99                           	psect	text76,local,class=CODE,merge=1,delta=2
   100                           	psect	intentry,global,class=CODE,delta=2
   101                           	psect	text78,local,class=CODE,merge=1,delta=2
   102                           	psect	text79,local,class=CODE,merge=1,delta=2
   103                           	dabs	1,0x7E,2
   104  0000                     
   105                           ; Version 1.43
   106                           ; Generated 25/07/2017 GMT
   107                           ; 
   108                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   109                           ; All rights reserved.
   110                           ; 
   111                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   112                           ; 
   113                           ; Redistribution and use in source and binary forms, with or without modification, are
   114                           ; permitted provided that the following conditions are met:
   115                           ; 
   116                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   117                           ;        conditions and the following disclaimer.
   118                           ; 
   119                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   120                           ;        of conditions and the following disclaimer in the documentation and/or other
   121                           ;        materials provided with the distribution.
   122                           ; 
   123                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   124                           ;        software without specific prior written permission.
   125                           ; 
   126                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   127                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   128                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   129                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   130                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   131                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   132                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   133                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   134                           ; 
   135                           ; 
   136                           ; Code-generator required, PIC16LF1559 Definitions
   137                           ; 
   138                           ; SFR Addresses
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0095                     	;# 
   171  0096                     	;# 
   172  0097                     	;# 
   173  0099                     	;# 
   174  009A                     	;# 
   175  009B                     	;# 
   176  009B                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009E                     	;# 
   180  009F                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  0116                     	;# 
   185  0117                     	;# 
   186  011D                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189  018E                     	;# 
   190  0191                     	;# 
   191  0191                     	;# 
   192  0192                     	;# 
   193  0193                     	;# 
   194  0193                     	;# 
   195  0194                     	;# 
   196  0195                     	;# 
   197  0196                     	;# 
   198  0199                     	;# 
   199  019A                     	;# 
   200  019B                     	;# 
   201  019B                     	;# 
   202  019C                     	;# 
   203  019D                     	;# 
   204  019E                     	;# 
   205  019F                     	;# 
   206  020C                     	;# 
   207  020D                     	;# 
   208  0211                     	;# 
   209  0211                     	;# 
   210  0212                     	;# 
   211  0212                     	;# 
   212  0213                     	;# 
   213  0213                     	;# 
   214  0214                     	;# 
   215  0214                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0215                     	;# 
   219  0216                     	;# 
   220  0216                     	;# 
   221  0217                     	;# 
   222  0217                     	;# 
   223  0391                     	;# 
   224  0392                     	;# 
   225  0393                     	;# 
   226  0394                     	;# 
   227  0395                     	;# 
   228  0396                     	;# 
   229  0611                     	;# 
   230  0612                     	;# 
   231  0613                     	;# 
   232  0613                     	;# 
   233  0614                     	;# 
   234  0615                     	;# 
   235  0616                     	;# 
   236  0616                     	;# 
   237  0711                     	;# 
   238  0711                     	;# 
   239  0711                     	;# 
   240  0712                     	;# 
   241  0712                     	;# 
   242  0713                     	;# 
   243  0713                     	;# 
   244  0713                     	;# 
   245  0714                     	;# 
   246  0714                     	;# 
   247  0714                     	;# 
   248  0715                     	;# 
   249  0715                     	;# 
   250  0716                     	;# 
   251  0716                     	;# 
   252  0716                     	;# 
   253  0716                     	;# 
   254  0717                     	;# 
   255  0717                     	;# 
   256  0717                     	;# 
   257  0717                     	;# 
   258  0718                     	;# 
   259  0718                     	;# 
   260  0718                     	;# 
   261  0719                     	;# 
   262  0719                     	;# 
   263  0719                     	;# 
   264  0719                     	;# 
   265  071A                     	;# 
   266  071A                     	;# 
   267  071A                     	;# 
   268  071A                     	;# 
   269  071A                     	;# 
   270  071B                     	;# 
   271  071B                     	;# 
   272  071C                     	;# 
   273  071C                     	;# 
   274  071C                     	;# 
   275  071C                     	;# 
   276  071C                     	;# 
   277  071D                     	;# 
   278  071D                     	;# 
   279  071E                     	;# 
   280  071E                     	;# 
   281  0791                     	;# 
   282  0791                     	;# 
   283  0793                     	;# 
   284  0793                     	;# 
   285  0794                     	;# 
   286  0794                     	;# 
   287  0796                     	;# 
   288  0796                     	;# 
   289  0796                     	;# 
   290  0797                     	;# 
   291  0797                     	;# 
   292  0797                     	;# 
   293  0798                     	;# 
   294  0798                     	;# 
   295  0799                     	;# 
   296  0799                     	;# 
   297  0799                     	;# 
   298  079A                     	;# 
   299  079A                     	;# 
   300  079A                     	;# 
   301  079B                     	;# 
   302  079C                     	;# 
   303  079C                     	;# 
   304  079C                     	;# 
   305  079D                     	;# 
   306  079E                     	;# 
   307  079E                     	;# 
   308  0F8C                     	;# 
   309  0F8D                     	;# 
   310  0F91                     	;# 
   311  0F96                     	;# 
   312  0F97                     	;# 
   313  0F9C                     	;# 
   314  0F9D                     	;# 
   315  0F9E                     	;# 
   316  0FE3                     	;# 
   317  0FE4                     	;# 
   318  0FE5                     	;# 
   319  0FE6                     	;# 
   320  0FE7                     	;# 
   321  0FE8                     	;# 
   322  0FE9                     	;# 
   323  0FEA                     	;# 
   324  0FEB                     	;# 
   325  0FED                     	;# 
   326  0FEE                     	;# 
   327  0FEF                     	;# 
   328  0000                     	;# 
   329  0001                     	;# 
   330  0002                     	;# 
   331  0003                     	;# 
   332  0004                     	;# 
   333  0005                     	;# 
   334  0006                     	;# 
   335  0007                     	;# 
   336  0008                     	;# 
   337  0009                     	;# 
   338  000A                     	;# 
   339  000B                     	;# 
   340  000C                     	;# 
   341  000D                     	;# 
   342  000E                     	;# 
   343  0011                     	;# 
   344  0012                     	;# 
   345  0015                     	;# 
   346  0016                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001C                     	;# 
   354  008C                     	;# 
   355  008D                     	;# 
   356  008E                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  0116                     	;# 
   374  0117                     	;# 
   375  011D                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  018E                     	;# 
   379  0191                     	;# 
   380  0191                     	;# 
   381  0192                     	;# 
   382  0193                     	;# 
   383  0193                     	;# 
   384  0194                     	;# 
   385  0195                     	;# 
   386  0196                     	;# 
   387  0199                     	;# 
   388  019A                     	;# 
   389  019B                     	;# 
   390  019B                     	;# 
   391  019C                     	;# 
   392  019D                     	;# 
   393  019E                     	;# 
   394  019F                     	;# 
   395  020C                     	;# 
   396  020D                     	;# 
   397  0211                     	;# 
   398  0211                     	;# 
   399  0212                     	;# 
   400  0212                     	;# 
   401  0213                     	;# 
   402  0213                     	;# 
   403  0214                     	;# 
   404  0214                     	;# 
   405  0215                     	;# 
   406  0215                     	;# 
   407  0215                     	;# 
   408  0216                     	;# 
   409  0216                     	;# 
   410  0217                     	;# 
   411  0217                     	;# 
   412  0391                     	;# 
   413  0392                     	;# 
   414  0393                     	;# 
   415  0394                     	;# 
   416  0395                     	;# 
   417  0396                     	;# 
   418  0611                     	;# 
   419  0612                     	;# 
   420  0613                     	;# 
   421  0613                     	;# 
   422  0614                     	;# 
   423  0615                     	;# 
   424  0616                     	;# 
   425  0616                     	;# 
   426  0711                     	;# 
   427  0711                     	;# 
   428  0711                     	;# 
   429  0712                     	;# 
   430  0712                     	;# 
   431  0713                     	;# 
   432  0713                     	;# 
   433  0713                     	;# 
   434  0714                     	;# 
   435  0714                     	;# 
   436  0714                     	;# 
   437  0715                     	;# 
   438  0715                     	;# 
   439  0716                     	;# 
   440  0716                     	;# 
   441  0716                     	;# 
   442  0716                     	;# 
   443  0717                     	;# 
   444  0717                     	;# 
   445  0717                     	;# 
   446  0717                     	;# 
   447  0718                     	;# 
   448  0718                     	;# 
   449  0718                     	;# 
   450  0719                     	;# 
   451  0719                     	;# 
   452  0719                     	;# 
   453  0719                     	;# 
   454  071A                     	;# 
   455  071A                     	;# 
   456  071A                     	;# 
   457  071A                     	;# 
   458  071A                     	;# 
   459  071B                     	;# 
   460  071B                     	;# 
   461  071C                     	;# 
   462  071C                     	;# 
   463  071C                     	;# 
   464  071C                     	;# 
   465  071C                     	;# 
   466  071D                     	;# 
   467  071D                     	;# 
   468  071E                     	;# 
   469  071E                     	;# 
   470  0791                     	;# 
   471  0791                     	;# 
   472  0793                     	;# 
   473  0793                     	;# 
   474  0794                     	;# 
   475  0794                     	;# 
   476  0796                     	;# 
   477  0796                     	;# 
   478  0796                     	;# 
   479  0797                     	;# 
   480  0797                     	;# 
   481  0797                     	;# 
   482  0798                     	;# 
   483  0798                     	;# 
   484  0799                     	;# 
   485  0799                     	;# 
   486  0799                     	;# 
   487  079A                     	;# 
   488  079A                     	;# 
   489  079A                     	;# 
   490  079B                     	;# 
   491  079C                     	;# 
   492  079C                     	;# 
   493  079C                     	;# 
   494  079D                     	;# 
   495  079E                     	;# 
   496  079E                     	;# 
   497  0F8C                     	;# 
   498  0F8D                     	;# 
   499  0F91                     	;# 
   500  0F96                     	;# 
   501  0F97                     	;# 
   502  0F9C                     	;# 
   503  0F9D                     	;# 
   504  0F9E                     	;# 
   505  0FE3                     	;# 
   506  0FE4                     	;# 
   507  0FE5                     	;# 
   508  0FE6                     	;# 
   509  0FE7                     	;# 
   510  0FE8                     	;# 
   511  0FE9                     	;# 
   512  0FEA                     	;# 
   513  0FEB                     	;# 
   514  0FED                     	;# 
   515  0FEE                     	;# 
   516  0FEF                     	;# 
   517  0000                     	;# 
   518  0001                     	;# 
   519  0002                     	;# 
   520  0003                     	;# 
   521  0004                     	;# 
   522  0005                     	;# 
   523  0006                     	;# 
   524  0007                     	;# 
   525  0008                     	;# 
   526  0009                     	;# 
   527  000A                     	;# 
   528  000B                     	;# 
   529  000C                     	;# 
   530  000D                     	;# 
   531  000E                     	;# 
   532  0011                     	;# 
   533  0012                     	;# 
   534  0015                     	;# 
   535  0016                     	;# 
   536  0016                     	;# 
   537  0017                     	;# 
   538  0018                     	;# 
   539  0019                     	;# 
   540  001A                     	;# 
   541  001B                     	;# 
   542  001C                     	;# 
   543  008C                     	;# 
   544  008D                     	;# 
   545  008E                     	;# 
   546  0091                     	;# 
   547  0092                     	;# 
   548  0095                     	;# 
   549  0096                     	;# 
   550  0097                     	;# 
   551  0099                     	;# 
   552  009A                     	;# 
   553  009B                     	;# 
   554  009B                     	;# 
   555  009C                     	;# 
   556  009D                     	;# 
   557  009E                     	;# 
   558  009F                     	;# 
   559  010C                     	;# 
   560  010D                     	;# 
   561  010E                     	;# 
   562  0116                     	;# 
   563  0117                     	;# 
   564  011D                     	;# 
   565  018C                     	;# 
   566  018D                     	;# 
   567  018E                     	;# 
   568  0191                     	;# 
   569  0191                     	;# 
   570  0192                     	;# 
   571  0193                     	;# 
   572  0193                     	;# 
   573  0194                     	;# 
   574  0195                     	;# 
   575  0196                     	;# 
   576  0199                     	;# 
   577  019A                     	;# 
   578  019B                     	;# 
   579  019B                     	;# 
   580  019C                     	;# 
   581  019D                     	;# 
   582  019E                     	;# 
   583  019F                     	;# 
   584  020C                     	;# 
   585  020D                     	;# 
   586  0211                     	;# 
   587  0211                     	;# 
   588  0212                     	;# 
   589  0212                     	;# 
   590  0213                     	;# 
   591  0213                     	;# 
   592  0214                     	;# 
   593  0214                     	;# 
   594  0215                     	;# 
   595  0215                     	;# 
   596  0215                     	;# 
   597  0216                     	;# 
   598  0216                     	;# 
   599  0217                     	;# 
   600  0217                     	;# 
   601  0391                     	;# 
   602  0392                     	;# 
   603  0393                     	;# 
   604  0394                     	;# 
   605  0395                     	;# 
   606  0396                     	;# 
   607  0611                     	;# 
   608  0612                     	;# 
   609  0613                     	;# 
   610  0613                     	;# 
   611  0614                     	;# 
   612  0615                     	;# 
   613  0616                     	;# 
   614  0616                     	;# 
   615  0711                     	;# 
   616  0711                     	;# 
   617  0711                     	;# 
   618  0712                     	;# 
   619  0712                     	;# 
   620  0713                     	;# 
   621  0713                     	;# 
   622  0713                     	;# 
   623  0714                     	;# 
   624  0714                     	;# 
   625  0714                     	;# 
   626  0715                     	;# 
   627  0715                     	;# 
   628  0716                     	;# 
   629  0716                     	;# 
   630  0716                     	;# 
   631  0716                     	;# 
   632  0717                     	;# 
   633  0717                     	;# 
   634  0717                     	;# 
   635  0717                     	;# 
   636  0718                     	;# 
   637  0718                     	;# 
   638  0718                     	;# 
   639  0719                     	;# 
   640  0719                     	;# 
   641  0719                     	;# 
   642  0719                     	;# 
   643  071A                     	;# 
   644  071A                     	;# 
   645  071A                     	;# 
   646  071A                     	;# 
   647  071A                     	;# 
   648  071B                     	;# 
   649  071B                     	;# 
   650  071C                     	;# 
   651  071C                     	;# 
   652  071C                     	;# 
   653  071C                     	;# 
   654  071C                     	;# 
   655  071D                     	;# 
   656  071D                     	;# 
   657  071E                     	;# 
   658  071E                     	;# 
   659  0791                     	;# 
   660  0791                     	;# 
   661  0793                     	;# 
   662  0793                     	;# 
   663  0794                     	;# 
   664  0794                     	;# 
   665  0796                     	;# 
   666  0796                     	;# 
   667  0796                     	;# 
   668  0797                     	;# 
   669  0797                     	;# 
   670  0797                     	;# 
   671  0798                     	;# 
   672  0798                     	;# 
   673  0799                     	;# 
   674  0799                     	;# 
   675  0799                     	;# 
   676  079A                     	;# 
   677  079A                     	;# 
   678  079A                     	;# 
   679  079B                     	;# 
   680  079C                     	;# 
   681  079C                     	;# 
   682  079C                     	;# 
   683  079D                     	;# 
   684  079E                     	;# 
   685  079E                     	;# 
   686  0F8C                     	;# 
   687  0F8D                     	;# 
   688  0F91                     	;# 
   689  0F96                     	;# 
   690  0F97                     	;# 
   691  0F9C                     	;# 
   692  0F9D                     	;# 
   693  0F9E                     	;# 
   694  0FE3                     	;# 
   695  0FE4                     	;# 
   696  0FE5                     	;# 
   697  0FE6                     	;# 
   698  0FE7                     	;# 
   699  0FE8                     	;# 
   700  0FE9                     	;# 
   701  0FEA                     	;# 
   702  0FEB                     	;# 
   703  0FED                     	;# 
   704  0FEE                     	;# 
   705  0FEF                     	;# 
   706  0000                     	;# 
   707  0001                     	;# 
   708  0002                     	;# 
   709  0003                     	;# 
   710  0004                     	;# 
   711  0005                     	;# 
   712  0006                     	;# 
   713  0007                     	;# 
   714  0008                     	;# 
   715  0009                     	;# 
   716  000A                     	;# 
   717  000B                     	;# 
   718  000C                     	;# 
   719  000D                     	;# 
   720  000E                     	;# 
   721  0011                     	;# 
   722  0012                     	;# 
   723  0015                     	;# 
   724  0016                     	;# 
   725  0016                     	;# 
   726  0017                     	;# 
   727  0018                     	;# 
   728  0019                     	;# 
   729  001A                     	;# 
   730  001B                     	;# 
   731  001C                     	;# 
   732  008C                     	;# 
   733  008D                     	;# 
   734  008E                     	;# 
   735  0091                     	;# 
   736  0092                     	;# 
   737  0095                     	;# 
   738  0096                     	;# 
   739  0097                     	;# 
   740  0099                     	;# 
   741  009A                     	;# 
   742  009B                     	;# 
   743  009B                     	;# 
   744  009C                     	;# 
   745  009D                     	;# 
   746  009E                     	;# 
   747  009F                     	;# 
   748  010C                     	;# 
   749  010D                     	;# 
   750  010E                     	;# 
   751  0116                     	;# 
   752  0117                     	;# 
   753  011D                     	;# 
   754  018C                     	;# 
   755  018D                     	;# 
   756  018E                     	;# 
   757  0191                     	;# 
   758  0191                     	;# 
   759  0192                     	;# 
   760  0193                     	;# 
   761  0193                     	;# 
   762  0194                     	;# 
   763  0195                     	;# 
   764  0196                     	;# 
   765  0199                     	;# 
   766  019A                     	;# 
   767  019B                     	;# 
   768  019B                     	;# 
   769  019C                     	;# 
   770  019D                     	;# 
   771  019E                     	;# 
   772  019F                     	;# 
   773  020C                     	;# 
   774  020D                     	;# 
   775  0211                     	;# 
   776  0211                     	;# 
   777  0212                     	;# 
   778  0212                     	;# 
   779  0213                     	;# 
   780  0213                     	;# 
   781  0214                     	;# 
   782  0214                     	;# 
   783  0215                     	;# 
   784  0215                     	;# 
   785  0215                     	;# 
   786  0216                     	;# 
   787  0216                     	;# 
   788  0217                     	;# 
   789  0217                     	;# 
   790  0391                     	;# 
   791  0392                     	;# 
   792  0393                     	;# 
   793  0394                     	;# 
   794  0395                     	;# 
   795  0396                     	;# 
   796  0611                     	;# 
   797  0612                     	;# 
   798  0613                     	;# 
   799  0613                     	;# 
   800  0614                     	;# 
   801  0615                     	;# 
   802  0616                     	;# 
   803  0616                     	;# 
   804  0711                     	;# 
   805  0711                     	;# 
   806  0711                     	;# 
   807  0712                     	;# 
   808  0712                     	;# 
   809  0713                     	;# 
   810  0713                     	;# 
   811  0713                     	;# 
   812  0714                     	;# 
   813  0714                     	;# 
   814  0714                     	;# 
   815  0715                     	;# 
   816  0715                     	;# 
   817  0716                     	;# 
   818  0716                     	;# 
   819  0716                     	;# 
   820  0716                     	;# 
   821  0717                     	;# 
   822  0717                     	;# 
   823  0717                     	;# 
   824  0717                     	;# 
   825  0718                     	;# 
   826  0718                     	;# 
   827  0718                     	;# 
   828  0719                     	;# 
   829  0719                     	;# 
   830  0719                     	;# 
   831  0719                     	;# 
   832  071A                     	;# 
   833  071A                     	;# 
   834  071A                     	;# 
   835  071A                     	;# 
   836  071A                     	;# 
   837  071B                     	;# 
   838  071B                     	;# 
   839  071C                     	;# 
   840  071C                     	;# 
   841  071C                     	;# 
   842  071C                     	;# 
   843  071C                     	;# 
   844  071D                     	;# 
   845  071D                     	;# 
   846  071E                     	;# 
   847  071E                     	;# 
   848  0791                     	;# 
   849  0791                     	;# 
   850  0793                     	;# 
   851  0793                     	;# 
   852  0794                     	;# 
   853  0794                     	;# 
   854  0796                     	;# 
   855  0796                     	;# 
   856  0796                     	;# 
   857  0797                     	;# 
   858  0797                     	;# 
   859  0797                     	;# 
   860  0798                     	;# 
   861  0798                     	;# 
   862  0799                     	;# 
   863  0799                     	;# 
   864  0799                     	;# 
   865  079A                     	;# 
   866  079A                     	;# 
   867  079A                     	;# 
   868  079B                     	;# 
   869  079C                     	;# 
   870  079C                     	;# 
   871  079C                     	;# 
   872  079D                     	;# 
   873  079E                     	;# 
   874  079E                     	;# 
   875  0F8C                     	;# 
   876  0F8D                     	;# 
   877  0F91                     	;# 
   878  0F96                     	;# 
   879  0F97                     	;# 
   880  0F9C                     	;# 
   881  0F9D                     	;# 
   882  0F9E                     	;# 
   883  0FE3                     	;# 
   884  0FE4                     	;# 
   885  0FE5                     	;# 
   886  0FE6                     	;# 
   887  0FE7                     	;# 
   888  0FE8                     	;# 
   889  0FE9                     	;# 
   890  0FEA                     	;# 
   891  0FEB                     	;# 
   892  0FED                     	;# 
   893  0FEE                     	;# 
   894  0FEF                     	;# 
   895  0000                     	;# 
   896  0001                     	;# 
   897  0002                     	;# 
   898  0003                     	;# 
   899  0004                     	;# 
   900  0005                     	;# 
   901  0006                     	;# 
   902  0007                     	;# 
   903  0008                     	;# 
   904  0009                     	;# 
   905  000A                     	;# 
   906  000B                     	;# 
   907  000C                     	;# 
   908  000D                     	;# 
   909  000E                     	;# 
   910  0011                     	;# 
   911  0012                     	;# 
   912  0015                     	;# 
   913  0016                     	;# 
   914  0016                     	;# 
   915  0017                     	;# 
   916  0018                     	;# 
   917  0019                     	;# 
   918  001A                     	;# 
   919  001B                     	;# 
   920  001C                     	;# 
   921  008C                     	;# 
   922  008D                     	;# 
   923  008E                     	;# 
   924  0091                     	;# 
   925  0092                     	;# 
   926  0095                     	;# 
   927  0096                     	;# 
   928  0097                     	;# 
   929  0099                     	;# 
   930  009A                     	;# 
   931  009B                     	;# 
   932  009B                     	;# 
   933  009C                     	;# 
   934  009D                     	;# 
   935  009E                     	;# 
   936  009F                     	;# 
   937  010C                     	;# 
   938  010D                     	;# 
   939  010E                     	;# 
   940  0116                     	;# 
   941  0117                     	;# 
   942  011D                     	;# 
   943  018C                     	;# 
   944  018D                     	;# 
   945  018E                     	;# 
   946  0191                     	;# 
   947  0191                     	;# 
   948  0192                     	;# 
   949  0193                     	;# 
   950  0193                     	;# 
   951  0194                     	;# 
   952  0195                     	;# 
   953  0196                     	;# 
   954  0199                     	;# 
   955  019A                     	;# 
   956  019B                     	;# 
   957  019B                     	;# 
   958  019C                     	;# 
   959  019D                     	;# 
   960  019E                     	;# 
   961  019F                     	;# 
   962  020C                     	;# 
   963  020D                     	;# 
   964  0211                     	;# 
   965  0211                     	;# 
   966  0212                     	;# 
   967  0212                     	;# 
   968  0213                     	;# 
   969  0213                     	;# 
   970  0214                     	;# 
   971  0214                     	;# 
   972  0215                     	;# 
   973  0215                     	;# 
   974  0215                     	;# 
   975  0216                     	;# 
   976  0216                     	;# 
   977  0217                     	;# 
   978  0217                     	;# 
   979  0391                     	;# 
   980  0392                     	;# 
   981  0393                     	;# 
   982  0394                     	;# 
   983  0395                     	;# 
   984  0396                     	;# 
   985  0611                     	;# 
   986  0612                     	;# 
   987  0613                     	;# 
   988  0613                     	;# 
   989  0614                     	;# 
   990  0615                     	;# 
   991  0616                     	;# 
   992  0616                     	;# 
   993  0711                     	;# 
   994  0711                     	;# 
   995  0711                     	;# 
   996  0712                     	;# 
   997  0712                     	;# 
   998  0713                     	;# 
   999  0713                     	;# 
  1000  0713                     	;# 
  1001  0714                     	;# 
  1002  0714                     	;# 
  1003  0714                     	;# 
  1004  0715                     	;# 
  1005  0715                     	;# 
  1006  0716                     	;# 
  1007  0716                     	;# 
  1008  0716                     	;# 
  1009  0716                     	;# 
  1010  0717                     	;# 
  1011  0717                     	;# 
  1012  0717                     	;# 
  1013  0717                     	;# 
  1014  0718                     	;# 
  1015  0718                     	;# 
  1016  0718                     	;# 
  1017  0719                     	;# 
  1018  0719                     	;# 
  1019  0719                     	;# 
  1020  0719                     	;# 
  1021  071A                     	;# 
  1022  071A                     	;# 
  1023  071A                     	;# 
  1024  071A                     	;# 
  1025  071A                     	;# 
  1026  071B                     	;# 
  1027  071B                     	;# 
  1028  071C                     	;# 
  1029  071C                     	;# 
  1030  071C                     	;# 
  1031  071C                     	;# 
  1032  071C                     	;# 
  1033  071D                     	;# 
  1034  071D                     	;# 
  1035  071E                     	;# 
  1036  071E                     	;# 
  1037  0791                     	;# 
  1038  0791                     	;# 
  1039  0793                     	;# 
  1040  0793                     	;# 
  1041  0794                     	;# 
  1042  0794                     	;# 
  1043  0796                     	;# 
  1044  0796                     	;# 
  1045  0796                     	;# 
  1046  0797                     	;# 
  1047  0797                     	;# 
  1048  0797                     	;# 
  1049  0798                     	;# 
  1050  0798                     	;# 
  1051  0799                     	;# 
  1052  0799                     	;# 
  1053  0799                     	;# 
  1054  079A                     	;# 
  1055  079A                     	;# 
  1056  079A                     	;# 
  1057  079B                     	;# 
  1058  079C                     	;# 
  1059  079C                     	;# 
  1060  079C                     	;# 
  1061  079D                     	;# 
  1062  079E                     	;# 
  1063  079E                     	;# 
  1064  0F8C                     	;# 
  1065  0F8D                     	;# 
  1066  0F91                     	;# 
  1067  0F96                     	;# 
  1068  0F97                     	;# 
  1069  0F9C                     	;# 
  1070  0F9D                     	;# 
  1071  0F9E                     	;# 
  1072  0FE3                     	;# 
  1073  0FE4                     	;# 
  1074  0FE5                     	;# 
  1075  0FE6                     	;# 
  1076  0FE7                     	;# 
  1077  0FE8                     	;# 
  1078  0FE9                     	;# 
  1079  0FEA                     	;# 
  1080  0FEB                     	;# 
  1081  0FED                     	;# 
  1082  0FEE                     	;# 
  1083  0FEF                     	;# 
  1084  0000                     	;# 
  1085  0001                     	;# 
  1086  0002                     	;# 
  1087  0003                     	;# 
  1088  0004                     	;# 
  1089  0005                     	;# 
  1090  0006                     	;# 
  1091  0007                     	;# 
  1092  0008                     	;# 
  1093  0009                     	;# 
  1094  000A                     	;# 
  1095  000B                     	;# 
  1096  000C                     	;# 
  1097  000D                     	;# 
  1098  000E                     	;# 
  1099  0011                     	;# 
  1100  0012                     	;# 
  1101  0015                     	;# 
  1102  0016                     	;# 
  1103  0016                     	;# 
  1104  0017                     	;# 
  1105  0018                     	;# 
  1106  0019                     	;# 
  1107  001A                     	;# 
  1108  001B                     	;# 
  1109  001C                     	;# 
  1110  008C                     	;# 
  1111  008D                     	;# 
  1112  008E                     	;# 
  1113  0091                     	;# 
  1114  0092                     	;# 
  1115  0095                     	;# 
  1116  0096                     	;# 
  1117  0097                     	;# 
  1118  0099                     	;# 
  1119  009A                     	;# 
  1120  009B                     	;# 
  1121  009B                     	;# 
  1122  009C                     	;# 
  1123  009D                     	;# 
  1124  009E                     	;# 
  1125  009F                     	;# 
  1126  010C                     	;# 
  1127  010D                     	;# 
  1128  010E                     	;# 
  1129  0116                     	;# 
  1130  0117                     	;# 
  1131  011D                     	;# 
  1132  018C                     	;# 
  1133  018D                     	;# 
  1134  018E                     	;# 
  1135  0191                     	;# 
  1136  0191                     	;# 
  1137  0192                     	;# 
  1138  0193                     	;# 
  1139  0193                     	;# 
  1140  0194                     	;# 
  1141  0195                     	;# 
  1142  0196                     	;# 
  1143  0199                     	;# 
  1144  019A                     	;# 
  1145  019B                     	;# 
  1146  019B                     	;# 
  1147  019C                     	;# 
  1148  019D                     	;# 
  1149  019E                     	;# 
  1150  019F                     	;# 
  1151  020C                     	;# 
  1152  020D                     	;# 
  1153  0211                     	;# 
  1154  0211                     	;# 
  1155  0212                     	;# 
  1156  0212                     	;# 
  1157  0213                     	;# 
  1158  0213                     	;# 
  1159  0214                     	;# 
  1160  0214                     	;# 
  1161  0215                     	;# 
  1162  0215                     	;# 
  1163  0215                     	;# 
  1164  0216                     	;# 
  1165  0216                     	;# 
  1166  0217                     	;# 
  1167  0217                     	;# 
  1168  0391                     	;# 
  1169  0392                     	;# 
  1170  0393                     	;# 
  1171  0394                     	;# 
  1172  0395                     	;# 
  1173  0396                     	;# 
  1174  0611                     	;# 
  1175  0612                     	;# 
  1176  0613                     	;# 
  1177  0613                     	;# 
  1178  0614                     	;# 
  1179  0615                     	;# 
  1180  0616                     	;# 
  1181  0616                     	;# 
  1182  0711                     	;# 
  1183  0711                     	;# 
  1184  0711                     	;# 
  1185  0712                     	;# 
  1186  0712                     	;# 
  1187  0713                     	;# 
  1188  0713                     	;# 
  1189  0713                     	;# 
  1190  0714                     	;# 
  1191  0714                     	;# 
  1192  0714                     	;# 
  1193  0715                     	;# 
  1194  0715                     	;# 
  1195  0716                     	;# 
  1196  0716                     	;# 
  1197  0716                     	;# 
  1198  0716                     	;# 
  1199  0717                     	;# 
  1200  0717                     	;# 
  1201  0717                     	;# 
  1202  0717                     	;# 
  1203  0718                     	;# 
  1204  0718                     	;# 
  1205  0718                     	;# 
  1206  0719                     	;# 
  1207  0719                     	;# 
  1208  0719                     	;# 
  1209  0719                     	;# 
  1210  071A                     	;# 
  1211  071A                     	;# 
  1212  071A                     	;# 
  1213  071A                     	;# 
  1214  071A                     	;# 
  1215  071B                     	;# 
  1216  071B                     	;# 
  1217  071C                     	;# 
  1218  071C                     	;# 
  1219  071C                     	;# 
  1220  071C                     	;# 
  1221  071C                     	;# 
  1222  071D                     	;# 
  1223  071D                     	;# 
  1224  071E                     	;# 
  1225  071E                     	;# 
  1226  0791                     	;# 
  1227  0791                     	;# 
  1228  0793                     	;# 
  1229  0793                     	;# 
  1230  0794                     	;# 
  1231  0794                     	;# 
  1232  0796                     	;# 
  1233  0796                     	;# 
  1234  0796                     	;# 
  1235  0797                     	;# 
  1236  0797                     	;# 
  1237  0797                     	;# 
  1238  0798                     	;# 
  1239  0798                     	;# 
  1240  0799                     	;# 
  1241  0799                     	;# 
  1242  0799                     	;# 
  1243  079A                     	;# 
  1244  079A                     	;# 
  1245  079A                     	;# 
  1246  079B                     	;# 
  1247  079C                     	;# 
  1248  079C                     	;# 
  1249  079C                     	;# 
  1250  079D                     	;# 
  1251  079E                     	;# 
  1252  079E                     	;# 
  1253  0F8C                     	;# 
  1254  0F8D                     	;# 
  1255  0F91                     	;# 
  1256  0F96                     	;# 
  1257  0F97                     	;# 
  1258  0F9C                     	;# 
  1259  0F9D                     	;# 
  1260  0F9E                     	;# 
  1261  0FE3                     	;# 
  1262  0FE4                     	;# 
  1263  0FE5                     	;# 
  1264  0FE6                     	;# 
  1265  0FE7                     	;# 
  1266  0FE8                     	;# 
  1267  0FE9                     	;# 
  1268  0FEA                     	;# 
  1269  0FEB                     	;# 
  1270  0FED                     	;# 
  1271  0FEE                     	;# 
  1272  0FEF                     	;# 
  1273  0000                     	;# 
  1274  0001                     	;# 
  1275  0002                     	;# 
  1276  0003                     	;# 
  1277  0004                     	;# 
  1278  0005                     	;# 
  1279  0006                     	;# 
  1280  0007                     	;# 
  1281  0008                     	;# 
  1282  0009                     	;# 
  1283  000A                     	;# 
  1284  000B                     	;# 
  1285  000C                     	;# 
  1286  000D                     	;# 
  1287  000E                     	;# 
  1288  0011                     	;# 
  1289  0012                     	;# 
  1290  0015                     	;# 
  1291  0016                     	;# 
  1292  0016                     	;# 
  1293  0017                     	;# 
  1294  0018                     	;# 
  1295  0019                     	;# 
  1296  001A                     	;# 
  1297  001B                     	;# 
  1298  001C                     	;# 
  1299  008C                     	;# 
  1300  008D                     	;# 
  1301  008E                     	;# 
  1302  0091                     	;# 
  1303  0092                     	;# 
  1304  0095                     	;# 
  1305  0096                     	;# 
  1306  0097                     	;# 
  1307  0099                     	;# 
  1308  009A                     	;# 
  1309  009B                     	;# 
  1310  009B                     	;# 
  1311  009C                     	;# 
  1312  009D                     	;# 
  1313  009E                     	;# 
  1314  009F                     	;# 
  1315  010C                     	;# 
  1316  010D                     	;# 
  1317  010E                     	;# 
  1318  0116                     	;# 
  1319  0117                     	;# 
  1320  011D                     	;# 
  1321  018C                     	;# 
  1322  018D                     	;# 
  1323  018E                     	;# 
  1324  0191                     	;# 
  1325  0191                     	;# 
  1326  0192                     	;# 
  1327  0193                     	;# 
  1328  0193                     	;# 
  1329  0194                     	;# 
  1330  0195                     	;# 
  1331  0196                     	;# 
  1332  0199                     	;# 
  1333  019A                     	;# 
  1334  019B                     	;# 
  1335  019B                     	;# 
  1336  019C                     	;# 
  1337  019D                     	;# 
  1338  019E                     	;# 
  1339  019F                     	;# 
  1340  020C                     	;# 
  1341  020D                     	;# 
  1342  0211                     	;# 
  1343  0211                     	;# 
  1344  0212                     	;# 
  1345  0212                     	;# 
  1346  0213                     	;# 
  1347  0213                     	;# 
  1348  0214                     	;# 
  1349  0214                     	;# 
  1350  0215                     	;# 
  1351  0215                     	;# 
  1352  0215                     	;# 
  1353  0216                     	;# 
  1354  0216                     	;# 
  1355  0217                     	;# 
  1356  0217                     	;# 
  1357  0391                     	;# 
  1358  0392                     	;# 
  1359  0393                     	;# 
  1360  0394                     	;# 
  1361  0395                     	;# 
  1362  0396                     	;# 
  1363  0611                     	;# 
  1364  0612                     	;# 
  1365  0613                     	;# 
  1366  0613                     	;# 
  1367  0614                     	;# 
  1368  0615                     	;# 
  1369  0616                     	;# 
  1370  0616                     	;# 
  1371  0711                     	;# 
  1372  0711                     	;# 
  1373  0711                     	;# 
  1374  0712                     	;# 
  1375  0712                     	;# 
  1376  0713                     	;# 
  1377  0713                     	;# 
  1378  0713                     	;# 
  1379  0714                     	;# 
  1380  0714                     	;# 
  1381  0714                     	;# 
  1382  0715                     	;# 
  1383  0715                     	;# 
  1384  0716                     	;# 
  1385  0716                     	;# 
  1386  0716                     	;# 
  1387  0716                     	;# 
  1388  0717                     	;# 
  1389  0717                     	;# 
  1390  0717                     	;# 
  1391  0717                     	;# 
  1392  0718                     	;# 
  1393  0718                     	;# 
  1394  0718                     	;# 
  1395  0719                     	;# 
  1396  0719                     	;# 
  1397  0719                     	;# 
  1398  0719                     	;# 
  1399  071A                     	;# 
  1400  071A                     	;# 
  1401  071A                     	;# 
  1402  071A                     	;# 
  1403  071A                     	;# 
  1404  071B                     	;# 
  1405  071B                     	;# 
  1406  071C                     	;# 
  1407  071C                     	;# 
  1408  071C                     	;# 
  1409  071C                     	;# 
  1410  071C                     	;# 
  1411  071D                     	;# 
  1412  071D                     	;# 
  1413  071E                     	;# 
  1414  071E                     	;# 
  1415  0791                     	;# 
  1416  0791                     	;# 
  1417  0793                     	;# 
  1418  0793                     	;# 
  1419  0794                     	;# 
  1420  0794                     	;# 
  1421  0796                     	;# 
  1422  0796                     	;# 
  1423  0796                     	;# 
  1424  0797                     	;# 
  1425  0797                     	;# 
  1426  0797                     	;# 
  1427  0798                     	;# 
  1428  0798                     	;# 
  1429  0799                     	;# 
  1430  0799                     	;# 
  1431  0799                     	;# 
  1432  079A                     	;# 
  1433  079A                     	;# 
  1434  079A                     	;# 
  1435  079B                     	;# 
  1436  079C                     	;# 
  1437  079C                     	;# 
  1438  079C                     	;# 
  1439  079D                     	;# 
  1440  079E                     	;# 
  1441  079E                     	;# 
  1442  0F8C                     	;# 
  1443  0F8D                     	;# 
  1444  0F91                     	;# 
  1445  0F96                     	;# 
  1446  0F97                     	;# 
  1447  0F9C                     	;# 
  1448  0F9D                     	;# 
  1449  0F9E                     	;# 
  1450  0FE3                     	;# 
  1451  0FE4                     	;# 
  1452  0FE5                     	;# 
  1453  0FE6                     	;# 
  1454  0FE7                     	;# 
  1455  0FE8                     	;# 
  1456  0FE9                     	;# 
  1457  0FEA                     	;# 
  1458  0FEB                     	;# 
  1459  0FED                     	;# 
  1460  0FEE                     	;# 
  1461  0FEF                     	;# 
  1462  0000                     	;# 
  1463  0001                     	;# 
  1464  0002                     	;# 
  1465  0003                     	;# 
  1466  0004                     	;# 
  1467  0005                     	;# 
  1468  0006                     	;# 
  1469  0007                     	;# 
  1470  0008                     	;# 
  1471  0009                     	;# 
  1472  000A                     	;# 
  1473  000B                     	;# 
  1474  000C                     	;# 
  1475  000D                     	;# 
  1476  000E                     	;# 
  1477  0011                     	;# 
  1478  0012                     	;# 
  1479  0015                     	;# 
  1480  0016                     	;# 
  1481  0016                     	;# 
  1482  0017                     	;# 
  1483  0018                     	;# 
  1484  0019                     	;# 
  1485  001A                     	;# 
  1486  001B                     	;# 
  1487  001C                     	;# 
  1488  008C                     	;# 
  1489  008D                     	;# 
  1490  008E                     	;# 
  1491  0091                     	;# 
  1492  0092                     	;# 
  1493  0095                     	;# 
  1494  0096                     	;# 
  1495  0097                     	;# 
  1496  0099                     	;# 
  1497  009A                     	;# 
  1498  009B                     	;# 
  1499  009B                     	;# 
  1500  009C                     	;# 
  1501  009D                     	;# 
  1502  009E                     	;# 
  1503  009F                     	;# 
  1504  010C                     	;# 
  1505  010D                     	;# 
  1506  010E                     	;# 
  1507  0116                     	;# 
  1508  0117                     	;# 
  1509  011D                     	;# 
  1510  018C                     	;# 
  1511  018D                     	;# 
  1512  018E                     	;# 
  1513  0191                     	;# 
  1514  0191                     	;# 
  1515  0192                     	;# 
  1516  0193                     	;# 
  1517  0193                     	;# 
  1518  0194                     	;# 
  1519  0195                     	;# 
  1520  0196                     	;# 
  1521  0199                     	;# 
  1522  019A                     	;# 
  1523  019B                     	;# 
  1524  019B                     	;# 
  1525  019C                     	;# 
  1526  019D                     	;# 
  1527  019E                     	;# 
  1528  019F                     	;# 
  1529  020C                     	;# 
  1530  020D                     	;# 
  1531  0211                     	;# 
  1532  0211                     	;# 
  1533  0212                     	;# 
  1534  0212                     	;# 
  1535  0213                     	;# 
  1536  0213                     	;# 
  1537  0214                     	;# 
  1538  0214                     	;# 
  1539  0215                     	;# 
  1540  0215                     	;# 
  1541  0215                     	;# 
  1542  0216                     	;# 
  1543  0216                     	;# 
  1544  0217                     	;# 
  1545  0217                     	;# 
  1546  0391                     	;# 
  1547  0392                     	;# 
  1548  0393                     	;# 
  1549  0394                     	;# 
  1550  0395                     	;# 
  1551  0396                     	;# 
  1552  0611                     	;# 
  1553  0612                     	;# 
  1554  0613                     	;# 
  1555  0613                     	;# 
  1556  0614                     	;# 
  1557  0615                     	;# 
  1558  0616                     	;# 
  1559  0616                     	;# 
  1560  0711                     	;# 
  1561  0711                     	;# 
  1562  0711                     	;# 
  1563  0712                     	;# 
  1564  0712                     	;# 
  1565  0713                     	;# 
  1566  0713                     	;# 
  1567  0713                     	;# 
  1568  0714                     	;# 
  1569  0714                     	;# 
  1570  0714                     	;# 
  1571  0715                     	;# 
  1572  0715                     	;# 
  1573  0716                     	;# 
  1574  0716                     	;# 
  1575  0716                     	;# 
  1576  0716                     	;# 
  1577  0717                     	;# 
  1578  0717                     	;# 
  1579  0717                     	;# 
  1580  0717                     	;# 
  1581  0718                     	;# 
  1582  0718                     	;# 
  1583  0718                     	;# 
  1584  0719                     	;# 
  1585  0719                     	;# 
  1586  0719                     	;# 
  1587  0719                     	;# 
  1588  071A                     	;# 
  1589  071A                     	;# 
  1590  071A                     	;# 
  1591  071A                     	;# 
  1592  071A                     	;# 
  1593  071B                     	;# 
  1594  071B                     	;# 
  1595  071C                     	;# 
  1596  071C                     	;# 
  1597  071C                     	;# 
  1598  071C                     	;# 
  1599  071C                     	;# 
  1600  071D                     	;# 
  1601  071D                     	;# 
  1602  071E                     	;# 
  1603  071E                     	;# 
  1604  0791                     	;# 
  1605  0791                     	;# 
  1606  0793                     	;# 
  1607  0793                     	;# 
  1608  0794                     	;# 
  1609  0794                     	;# 
  1610  0796                     	;# 
  1611  0796                     	;# 
  1612  0796                     	;# 
  1613  0797                     	;# 
  1614  0797                     	;# 
  1615  0797                     	;# 
  1616  0798                     	;# 
  1617  0798                     	;# 
  1618  0799                     	;# 
  1619  0799                     	;# 
  1620  0799                     	;# 
  1621  079A                     	;# 
  1622  079A                     	;# 
  1623  079A                     	;# 
  1624  079B                     	;# 
  1625  079C                     	;# 
  1626  079C                     	;# 
  1627  079C                     	;# 
  1628  079D                     	;# 
  1629  079E                     	;# 
  1630  079E                     	;# 
  1631  0F8C                     	;# 
  1632  0F8D                     	;# 
  1633  0F91                     	;# 
  1634  0F96                     	;# 
  1635  0F97                     	;# 
  1636  0F9C                     	;# 
  1637  0F9D                     	;# 
  1638  0F9E                     	;# 
  1639  0FE3                     	;# 
  1640  0FE4                     	;# 
  1641  0FE5                     	;# 
  1642  0FE6                     	;# 
  1643  0FE7                     	;# 
  1644  0FE8                     	;# 
  1645  0FE9                     	;# 
  1646  0FEA                     	;# 
  1647  0FEB                     	;# 
  1648  0FED                     	;# 
  1649  0FEE                     	;# 
  1650  0FEF                     	;# 
  1651  0000                     	;# 
  1652  0001                     	;# 
  1653  0002                     	;# 
  1654  0003                     	;# 
  1655  0004                     	;# 
  1656  0005                     	;# 
  1657  0006                     	;# 
  1658  0007                     	;# 
  1659  0008                     	;# 
  1660  0009                     	;# 
  1661  000A                     	;# 
  1662  000B                     	;# 
  1663  000C                     	;# 
  1664  000D                     	;# 
  1665  000E                     	;# 
  1666  0011                     	;# 
  1667  0012                     	;# 
  1668  0015                     	;# 
  1669  0016                     	;# 
  1670  0016                     	;# 
  1671  0017                     	;# 
  1672  0018                     	;# 
  1673  0019                     	;# 
  1674  001A                     	;# 
  1675  001B                     	;# 
  1676  001C                     	;# 
  1677  008C                     	;# 
  1678  008D                     	;# 
  1679  008E                     	;# 
  1680  0091                     	;# 
  1681  0092                     	;# 
  1682  0095                     	;# 
  1683  0096                     	;# 
  1684  0097                     	;# 
  1685  0099                     	;# 
  1686  009A                     	;# 
  1687  009B                     	;# 
  1688  009B                     	;# 
  1689  009C                     	;# 
  1690  009D                     	;# 
  1691  009E                     	;# 
  1692  009F                     	;# 
  1693  010C                     	;# 
  1694  010D                     	;# 
  1695  010E                     	;# 
  1696  0116                     	;# 
  1697  0117                     	;# 
  1698  011D                     	;# 
  1699  018C                     	;# 
  1700  018D                     	;# 
  1701  018E                     	;# 
  1702  0191                     	;# 
  1703  0191                     	;# 
  1704  0192                     	;# 
  1705  0193                     	;# 
  1706  0193                     	;# 
  1707  0194                     	;# 
  1708  0195                     	;# 
  1709  0196                     	;# 
  1710  0199                     	;# 
  1711  019A                     	;# 
  1712  019B                     	;# 
  1713  019B                     	;# 
  1714  019C                     	;# 
  1715  019D                     	;# 
  1716  019E                     	;# 
  1717  019F                     	;# 
  1718  020C                     	;# 
  1719  020D                     	;# 
  1720  0211                     	;# 
  1721  0211                     	;# 
  1722  0212                     	;# 
  1723  0212                     	;# 
  1724  0213                     	;# 
  1725  0213                     	;# 
  1726  0214                     	;# 
  1727  0214                     	;# 
  1728  0215                     	;# 
  1729  0215                     	;# 
  1730  0215                     	;# 
  1731  0216                     	;# 
  1732  0216                     	;# 
  1733  0217                     	;# 
  1734  0217                     	;# 
  1735  0391                     	;# 
  1736  0392                     	;# 
  1737  0393                     	;# 
  1738  0394                     	;# 
  1739  0395                     	;# 
  1740  0396                     	;# 
  1741  0611                     	;# 
  1742  0612                     	;# 
  1743  0613                     	;# 
  1744  0613                     	;# 
  1745  0614                     	;# 
  1746  0615                     	;# 
  1747  0616                     	;# 
  1748  0616                     	;# 
  1749  0711                     	;# 
  1750  0711                     	;# 
  1751  0711                     	;# 
  1752  0712                     	;# 
  1753  0712                     	;# 
  1754  0713                     	;# 
  1755  0713                     	;# 
  1756  0713                     	;# 
  1757  0714                     	;# 
  1758  0714                     	;# 
  1759  0714                     	;# 
  1760  0715                     	;# 
  1761  0715                     	;# 
  1762  0716                     	;# 
  1763  0716                     	;# 
  1764  0716                     	;# 
  1765  0716                     	;# 
  1766  0717                     	;# 
  1767  0717                     	;# 
  1768  0717                     	;# 
  1769  0717                     	;# 
  1770  0718                     	;# 
  1771  0718                     	;# 
  1772  0718                     	;# 
  1773  0719                     	;# 
  1774  0719                     	;# 
  1775  0719                     	;# 
  1776  0719                     	;# 
  1777  071A                     	;# 
  1778  071A                     	;# 
  1779  071A                     	;# 
  1780  071A                     	;# 
  1781  071A                     	;# 
  1782  071B                     	;# 
  1783  071B                     	;# 
  1784  071C                     	;# 
  1785  071C                     	;# 
  1786  071C                     	;# 
  1787  071C                     	;# 
  1788  071C                     	;# 
  1789  071D                     	;# 
  1790  071D                     	;# 
  1791  071E                     	;# 
  1792  071E                     	;# 
  1793  0791                     	;# 
  1794  0791                     	;# 
  1795  0793                     	;# 
  1796  0793                     	;# 
  1797  0794                     	;# 
  1798  0794                     	;# 
  1799  0796                     	;# 
  1800  0796                     	;# 
  1801  0796                     	;# 
  1802  0797                     	;# 
  1803  0797                     	;# 
  1804  0797                     	;# 
  1805  0798                     	;# 
  1806  0798                     	;# 
  1807  0799                     	;# 
  1808  0799                     	;# 
  1809  0799                     	;# 
  1810  079A                     	;# 
  1811  079A                     	;# 
  1812  079A                     	;# 
  1813  079B                     	;# 
  1814  079C                     	;# 
  1815  079C                     	;# 
  1816  079C                     	;# 
  1817  079D                     	;# 
  1818  079E                     	;# 
  1819  079E                     	;# 
  1820  0F8C                     	;# 
  1821  0F8D                     	;# 
  1822  0F91                     	;# 
  1823  0F96                     	;# 
  1824  0F97                     	;# 
  1825  0F9C                     	;# 
  1826  0F9D                     	;# 
  1827  0F9E                     	;# 
  1828  0FE3                     	;# 
  1829  0FE4                     	;# 
  1830  0FE5                     	;# 
  1831  0FE6                     	;# 
  1832  0FE7                     	;# 
  1833  0FE8                     	;# 
  1834  0FE9                     	;# 
  1835  0FEA                     	;# 
  1836  0FEB                     	;# 
  1837  0FED                     	;# 
  1838  0FEE                     	;# 
  1839  0FEF                     	;# 
  1840  0000                     	;# 
  1841  0001                     	;# 
  1842  0002                     	;# 
  1843  0003                     	;# 
  1844  0004                     	;# 
  1845  0005                     	;# 
  1846  0006                     	;# 
  1847  0007                     	;# 
  1848  0008                     	;# 
  1849  0009                     	;# 
  1850  000A                     	;# 
  1851  000B                     	;# 
  1852  000C                     	;# 
  1853  000D                     	;# 
  1854  000E                     	;# 
  1855  0011                     	;# 
  1856  0012                     	;# 
  1857  0015                     	;# 
  1858  0016                     	;# 
  1859  0016                     	;# 
  1860  0017                     	;# 
  1861  0018                     	;# 
  1862  0019                     	;# 
  1863  001A                     	;# 
  1864  001B                     	;# 
  1865  001C                     	;# 
  1866  008C                     	;# 
  1867  008D                     	;# 
  1868  008E                     	;# 
  1869  0091                     	;# 
  1870  0092                     	;# 
  1871  0095                     	;# 
  1872  0096                     	;# 
  1873  0097                     	;# 
  1874  0099                     	;# 
  1875  009A                     	;# 
  1876  009B                     	;# 
  1877  009B                     	;# 
  1878  009C                     	;# 
  1879  009D                     	;# 
  1880  009E                     	;# 
  1881  009F                     	;# 
  1882  010C                     	;# 
  1883  010D                     	;# 
  1884  010E                     	;# 
  1885  0116                     	;# 
  1886  0117                     	;# 
  1887  011D                     	;# 
  1888  018C                     	;# 
  1889  018D                     	;# 
  1890  018E                     	;# 
  1891  0191                     	;# 
  1892  0191                     	;# 
  1893  0192                     	;# 
  1894  0193                     	;# 
  1895  0193                     	;# 
  1896  0194                     	;# 
  1897  0195                     	;# 
  1898  0196                     	;# 
  1899  0199                     	;# 
  1900  019A                     	;# 
  1901  019B                     	;# 
  1902  019B                     	;# 
  1903  019C                     	;# 
  1904  019D                     	;# 
  1905  019E                     	;# 
  1906  019F                     	;# 
  1907  020C                     	;# 
  1908  020D                     	;# 
  1909  0211                     	;# 
  1910  0211                     	;# 
  1911  0212                     	;# 
  1912  0212                     	;# 
  1913  0213                     	;# 
  1914  0213                     	;# 
  1915  0214                     	;# 
  1916  0214                     	;# 
  1917  0215                     	;# 
  1918  0215                     	;# 
  1919  0215                     	;# 
  1920  0216                     	;# 
  1921  0216                     	;# 
  1922  0217                     	;# 
  1923  0217                     	;# 
  1924  0391                     	;# 
  1925  0392                     	;# 
  1926  0393                     	;# 
  1927  0394                     	;# 
  1928  0395                     	;# 
  1929  0396                     	;# 
  1930  0611                     	;# 
  1931  0612                     	;# 
  1932  0613                     	;# 
  1933  0613                     	;# 
  1934  0614                     	;# 
  1935  0615                     	;# 
  1936  0616                     	;# 
  1937  0616                     	;# 
  1938  0711                     	;# 
  1939  0711                     	;# 
  1940  0711                     	;# 
  1941  0712                     	;# 
  1942  0712                     	;# 
  1943  0713                     	;# 
  1944  0713                     	;# 
  1945  0713                     	;# 
  1946  0714                     	;# 
  1947  0714                     	;# 
  1948  0714                     	;# 
  1949  0715                     	;# 
  1950  0715                     	;# 
  1951  0716                     	;# 
  1952  0716                     	;# 
  1953  0716                     	;# 
  1954  0716                     	;# 
  1955  0717                     	;# 
  1956  0717                     	;# 
  1957  0717                     	;# 
  1958  0717                     	;# 
  1959  0718                     	;# 
  1960  0718                     	;# 
  1961  0718                     	;# 
  1962  0719                     	;# 
  1963  0719                     	;# 
  1964  0719                     	;# 
  1965  0719                     	;# 
  1966  071A                     	;# 
  1967  071A                     	;# 
  1968  071A                     	;# 
  1969  071A                     	;# 
  1970  071A                     	;# 
  1971  071B                     	;# 
  1972  071B                     	;# 
  1973  071C                     	;# 
  1974  071C                     	;# 
  1975  071C                     	;# 
  1976  071C                     	;# 
  1977  071C                     	;# 
  1978  071D                     	;# 
  1979  071D                     	;# 
  1980  071E                     	;# 
  1981  071E                     	;# 
  1982  0791                     	;# 
  1983  0791                     	;# 
  1984  0793                     	;# 
  1985  0793                     	;# 
  1986  0794                     	;# 
  1987  0794                     	;# 
  1988  0796                     	;# 
  1989  0796                     	;# 
  1990  0796                     	;# 
  1991  0797                     	;# 
  1992  0797                     	;# 
  1993  0797                     	;# 
  1994  0798                     	;# 
  1995  0798                     	;# 
  1996  0799                     	;# 
  1997  0799                     	;# 
  1998  0799                     	;# 
  1999  079A                     	;# 
  2000  079A                     	;# 
  2001  079A                     	;# 
  2002  079B                     	;# 
  2003  079C                     	;# 
  2004  079C                     	;# 
  2005  079C                     	;# 
  2006  079D                     	;# 
  2007  079E                     	;# 
  2008  079E                     	;# 
  2009  0F8C                     	;# 
  2010  0F8D                     	;# 
  2011  0F91                     	;# 
  2012  0F96                     	;# 
  2013  0F97                     	;# 
  2014  0F9C                     	;# 
  2015  0F9D                     	;# 
  2016  0F9E                     	;# 
  2017  0FE3                     	;# 
  2018  0FE4                     	;# 
  2019  0FE5                     	;# 
  2020  0FE6                     	;# 
  2021  0FE7                     	;# 
  2022  0FE8                     	;# 
  2023  0FE9                     	;# 
  2024  0FEA                     	;# 
  2025  0FEB                     	;# 
  2026  0FED                     	;# 
  2027  0FEE                     	;# 
  2028  0FEF                     	;# 
  2029                           
  2030                           	psect	idataBANK0
  2031  0000'                    __pidataBANK0:	
  2032                           
  2033                           ;initializer for _Proximity_StateMachine
  2034  0000' 3400'              	retlw	low _Proximity_State_Initializing
  2035  0001' 3400'              	retlw	high _Proximity_State_Initializing
  2036  0002' 3400'              	retlw	low _Proximity_State_NotActivated
  2037  0003' 3400'              	retlw	high _Proximity_State_NotActivated
  2038  0004' 3400'              	retlw	low _Proximity_State_Activated
  2039  0005' 3400'              	retlw	high _Proximity_State_Activated
  2040                           
  2041                           ;initializer for _Button_StateMachine
  2042  0006' 3400'              	retlw	low _Button_State_Initializing
  2043  0007' 3400'              	retlw	high _Button_State_Initializing
  2044  0008' 3400'              	retlw	low _Button_State_NotPressed
  2045  0009' 3400'              	retlw	high _Button_State_NotPressed
  2046  000A' 3400'              	retlw	low _Button_State_Pressed
  2047  000B' 3400'              	retlw	high _Button_State_Pressed
  2048                           
  2049                           ;initializer for _callback_notActivated
  2050  000C' 3400'              	retlw	low _Proximity_DefaultCallback
  2051  000D' 3400'              	retlw	high _Proximity_DefaultCallback
  2052                           
  2053                           ;initializer for _callback_activated
  2054  000E' 3400'              	retlw	low _Proximity_DefaultCallback
  2055  000F' 3400'              	retlw	high _Proximity_DefaultCallback
  2056                           
  2057                           ;initializer for _callback_notPressed
  2058  0010' 3400'              	retlw	low _Button_DefaultCallback
  2059  0011' 3400'              	retlw	high _Button_DefaultCallback
  2060                           
  2061                           ;initializer for _callback_pressed
  2062  0012' 3400'              	retlw	low _Button_DefaultCallback
  2063  0013' 3400'              	retlw	high _Button_DefaultCallback
  2064                           
  2065                           ;initializer for _callback_sampled
  2066  0014' 3400'              	retlw	low _Sensor_DefaultCallback
  2067  0015' 3400'              	retlw	high _Sensor_DefaultCallback
  2068                           
  2069                           ;initializer for _sample_period
  2070  0016' 34AE               	retlw	174
  2071                           
  2072                           	psect	idataBANK2
  2073  0000'                    __pidataBANK2:	
  2074                           
  2075                           ;initializer for _mtouch_sensor
  2076  0000' 3400               	retlw	0
  2077  0001' 3435               	retlw	53
  2078  0002' 340A               	retlw	10
  2079  0003' 3405               	retlw	5
  2080  0004' 3420               	retlw	32
  2081  0005' 3400               	retlw	0
  2082  0006' 3400               	retlw	0
  2083  0007' 3400               	retlw	0
  2084  0008' 3400               	retlw	0
  2085  0009' 3401               	retlw	1
  2086  000A' 345D               	retlw	93
  2087  000B' 340A               	retlw	10
  2088  000C' 3405               	retlw	5
  2089  000D' 3420               	retlw	32
  2090  000E' 3400               	retlw	0
  2091  000F' 3400               	retlw	0
  2092  0010' 3400               	retlw	0
  2093  0011' 3400               	retlw	0
  2094  0012' 3402               	retlw	2
  2095  0013' 3439               	retlw	57
  2096  0014' 340A               	retlw	10
  2097  0015' 3405               	retlw	5
  2098  0016' 3420               	retlw	32
  2099  0017' 3400               	retlw	0
  2100  0018' 3400               	retlw	0
  2101  0019' 3400               	retlw	0
  2102  001A' 3400               	retlw	0
  2103  001B' 3403               	retlw	3
  2104  001C' 3409               	retlw	9
  2105  001D' 340A               	retlw	10
  2106  001E' 3405               	retlw	5
  2107  001F' 3420               	retlw	32
  2108  0020' 3400               	retlw	0
  2109  0021' 3400               	retlw	0
  2110  0022' 3400               	retlw	0
  2111  0023' 3400               	retlw	0
  2112  0024' 3404               	retlw	4
  2113  0025' 3451               	retlw	81
  2114  0026' 340A               	retlw	10
  2115  0027' 3405               	retlw	5
  2116  0028' 3420               	retlw	32
  2117  0029' 3400               	retlw	0
  2118  002A' 3400               	retlw	0
  2119  002B' 3400               	retlw	0
  2120  002C' 3400               	retlw	0
  2121  002D' 3405               	retlw	5
  2122  002E' 3469               	retlw	105
  2123  002F' 340A               	retlw	10
  2124  0030' 3405               	retlw	5
  2125  0031' 3420               	retlw	32
  2126  0032' 3400               	retlw	0
  2127  0033' 3400               	retlw	0
  2128  0034' 3400               	retlw	0
  2129  0035' 3400               	retlw	0
  2130                           
  2131                           	psect	stringtext1
  2132  0000'                    __pstringtext1:	
  2133  0000'                    _sensor_scan_group:	
  2134  0000' 3400'              	retlw	low (_mtouch_sensor| (0+256))
  2135  0001' 3400'              	retlw	low ((_mtouch_sensor| (0+256)+9))
  2136  0002' 3400'              	retlw	low ((_mtouch_sensor| (0+256)+18))
  2137  0003' 3400'              	retlw	low ((_mtouch_sensor| (0+256)+36))
  2138  0004' 3400'              	retlw	low ((_mtouch_sensor| (0+256)+27))
  2139  0005' 3400'              	retlw	low ((_mtouch_sensor| (0+256)+45))
  2140  0006'                    __end_of_sensor_scan_group:	
  2141                           
  2142                           	psect	stringtext2
  2143  0000'                    __pstringtext2:	
  2144  0000'                    Sensor_Scanfrequency_Evaluation@frequency_hop:	
  2145  0000' 3400               	retlw	0
  2146  0001' 340D               	retlw	13
  2147  0002' 341C               	retlw	28
  2148  0003' 341E               	retlw	30
  2149  0004' 3417               	retlw	23
  2150  0005'                    __end_ofSensor_Scanfrequency_Evaluation@frequency_hop:	
  2151                           
  2152                           	psect	stringtext3
  2153  0000'                    __pstringtext3:	
  2154  0000'                    _mtouch_button_init:	
  2155  0000' 3400               	retlw	0
  2156  0001' 3405               	retlw	5
  2157  0002' 3400               	retlw	0
  2158  0003' 3400               	retlw	0
  2159  0004' 3400               	retlw	0
  2160  0005' 3400               	retlw	0
  2161  0006' 3400               	retlw	0
  2162  0007' 3400               	retlw	0
  2163  0008' 3400               	retlw	0
  2164  0009' 3400               	retlw	0
  2165  000A' 3400               	retlw	0
  2166  000B' 3400               	retlw	0
  2167  000C' 3400               	retlw	0
  2168  000D' 3400               	retlw	0
  2169  000E' 3464               	retlw	100
  2170  000F' 3401               	retlw	1
  2171  0010' 3401               	retlw	1
  2172  0011' 3401               	retlw	1
  2173  0012' 3400               	retlw	0
  2174  0013' 3400               	retlw	0
  2175  0014' 3400               	retlw	0
  2176  0015' 3400               	retlw	0
  2177  0016' 3400               	retlw	0
  2178  0017' 3400               	retlw	0
  2179  0018' 3400               	retlw	0
  2180  0019' 3400               	retlw	0
  2181  001A' 3400               	retlw	0
  2182  001B' 3400               	retlw	0
  2183  001C' 3400               	retlw	0
  2184  001D' 3400               	retlw	0
  2185  001E' 3464               	retlw	100
  2186  001F' 3401               	retlw	1
  2187  0020' 3402               	retlw	2
  2188  0021' 3400               	retlw	0
  2189  0022' 3400               	retlw	0
  2190  0023' 3400               	retlw	0
  2191  0024' 3400               	retlw	0
  2192  0025' 3400               	retlw	0
  2193  0026' 3400               	retlw	0
  2194  0027' 3400               	retlw	0
  2195  0028' 3400               	retlw	0
  2196  0029' 3400               	retlw	0
  2197  002A' 3400               	retlw	0
  2198  002B' 3400               	retlw	0
  2199  002C' 3400               	retlw	0
  2200  002D' 3400               	retlw	0
  2201  002E' 3464               	retlw	100
  2202  002F' 3401               	retlw	1
  2203  0030' 3403               	retlw	3
  2204  0031' 3403               	retlw	3
  2205  0032' 3400               	retlw	0
  2206  0033' 3400               	retlw	0
  2207  0034' 3400               	retlw	0
  2208  0035' 3400               	retlw	0
  2209  0036' 3400               	retlw	0
  2210  0037' 3400               	retlw	0
  2211  0038' 3400               	retlw	0
  2212  0039' 3400               	retlw	0
  2213  003A' 3400               	retlw	0
  2214  003B' 3400               	retlw	0
  2215  003C' 3400               	retlw	0
  2216  003D' 3400               	retlw	0
  2217  003E' 3464               	retlw	100
  2218  003F' 3401               	retlw	1
  2219  0040' 3404               	retlw	4
  2220  0041' 3404               	retlw	4
  2221  0042' 3400               	retlw	0
  2222  0043' 3400               	retlw	0
  2223  0044' 3400               	retlw	0
  2224  0045' 3400               	retlw	0
  2225  0046' 3400               	retlw	0
  2226  0047' 3400               	retlw	0
  2227  0048' 3400               	retlw	0
  2228  0049' 3400               	retlw	0
  2229  004A' 3400               	retlw	0
  2230  004B' 3400               	retlw	0
  2231  004C' 3400               	retlw	0
  2232  004D' 3400               	retlw	0
  2233  004E' 3464               	retlw	100
  2234  004F' 3401               	retlw	1
  2235  0050'                    __end_of_mtouch_button_init:	
  2236                           
  2237                           	psect	stringtext4
  2238  0000'                    __pstringtext4:	
  2239  0000'                    _mtouch_proximity_init:	
  2240  0000' 3400               	retlw	0
  2241  0001' 3402               	retlw	2
  2242  0002' 3400               	retlw	0
  2243  0003' 3400               	retlw	0
  2244  0004' 3400               	retlw	0
  2245  0005' 3400               	retlw	0
  2246  0006' 3400               	retlw	0
  2247  0007' 3400               	retlw	0
  2248  0008' 3400               	retlw	0
  2249  0009' 3400               	retlw	0
  2250  000A' 3400               	retlw	0
  2251  000B' 3400               	retlw	0
  2252  000C' 3400               	retlw	0
  2253  000D' 3400               	retlw	0
  2254  000E' 3400               	retlw	0
  2255  000F' 3400               	retlw	0
  2256  0010' 3478               	retlw	120
  2257  0011' 3400               	retlw	0
  2258  0012'                    __end_of_mtouch_proximity_init:	
  2259                           
  2260                           	psect	nvBANK0
  2261  0000'                    __pnvBANK0:	
  2262  0000'                    _eusartTxBufferRemaining:	
  2263  0000'                    	ds	1
  2264  0012                     _PIR2bits	set	18
  2265  000B                     _INTCONbits	set	11
  2266  001C                     _T2CONbits	set	28
  2267  0011                     _PIR1bits	set	17
  2268  001A                     _TMR2	set	26
  2269  001B                     _PR2	set	27
  2270  001C                     _T2CON	set	28
  2271  008D                     _TRISBbits	set	141
  2272  008C                     _TRISAbits	set	140
  2273  008E                     _TRISCbits	set	142
  2274  0095                     _OPTION_REGbits	set	149
  2275  008E                     _TRISC	set	142
  2276  008D                     _TRISB	set	141
  2277  008C                     _TRISA	set	140
  2278  0091                     _PIE1bits	set	145
  2279  0097                     _WDTCON	set	151
  2280  0099                     _OSCCON	set	153
  2281  011D                     _APFCONbits	set	285
  2282  011D                     _APFCON	set	285
  2283  010E                     _LATC	set	270
  2284  010D                     _LATB	set	269
  2285  010C                     _LATA	set	268
  2286  018D                     _ANSELBbits	set	397
  2287  018C                     _ANSELAbits	set	396
  2288  018E                     _ANSELCbits	set	398
  2289  018C                     _ANSELA	set	396
  2290  018D                     _ANSELB	set	397
  2291  018E                     _ANSELC	set	398
  2292  0199                     _RCREG	set	409
  2293  019D                     _RCSTAbits	set	413
  2294  019A                     _TXREG	set	410
  2295  019C                     _SPBRGH	set	412
  2296  019B                     _SPBRGL	set	411
  2297  019E                     _TXSTA	set	414
  2298  019D                     _RCSTA	set	413
  2299  019F                     _BAUDCON	set	415
  2300  020D                     _WPUBbits	set	525
  2301  020C                     _WPUAbits	set	524
  2302  020C                     _WPUA	set	524
  2303  020D                     _WPUB	set	525
  2304  071A                     _AAD1RES0	set	1818
  2305  0711                     _AD1CON0bits	set	1809
  2306  0714                     _AAD1CON3	set	1812
  2307  0718                     _AAD1GRD	set	1816
  2308  0717                     _AD1ACQCON	set	1815
  2309  0716                     _AD1PRECON	set	1814
  2310  0713                     _AD1CON2bits	set	1811
  2311  0719                     _AAD1CAP	set	1817
  2312  0713                     _AD1CON2	set	1811
  2313  0714                     _AD1CON3	set	1812
  2314  0712                     _ADCOMCON	set	1810
  2315  0711                     _AD1CON0	set	1809
  2316  079A                     _AAD2RES0	set	1946
  2317  0791                     _AD2CON0bits	set	1937
  2318  0794                     _AAD2CON3	set	1940
  2319  0797                     _AD2ACQCON	set	1943
  2320  0796                     _AD2PRECON	set	1942
  2321  0793                     _AD2CON2bits	set	1939
  2322  0799                     _AAD2CAP	set	1945
  2323  0798                     _AAD2GRD	set	1944
  2324  0793                     _AD2CON2	set	1939
  2325  0794                     _AD2CON3	set	1940
  2326  0791                     _AD2CON0	set	1937
  2327                           
  2328                           ; #config settings
  2329  0000                     
  2330                           	psect	cinit
  2331  0000'                    start_initialization:	
  2332  0000'                    __initialization:	
  2333                           
  2334                           ; Initialize objects allocated to BANK0
  2335  0000' 3000'              	movlw	low __pidataBANK0
  2336  0001' 0084               	movwf	4
  2337  0002' 3000'              	movlw	(high __pidataBANK0)| (0+128)
  2338  0003' 0085               	movwf	5
  2339  0004' 3000'              	movlw	low __pdataBANK0
  2340  0005' 0086               	movwf	6
  2341  0006' 3000'              	movlw	high __pdataBANK0
  2342  0007' 0087               	movwf	7
  2343  0008' 3017               	movlw	23
  2344  0009' 3180' 2000' 3180'  	fcall	init_ram
  2345                           
  2346                           ; Initialize objects allocated to BANK2
  2347  000C' 3000'              	movlw	low __pidataBANK2
  2348  000D' 0084               	movwf	4
  2349  000E' 3000'              	movlw	(high __pidataBANK2)| (0+128)
  2350  000F' 0085               	movwf	5
  2351  0010' 3000'              	movlw	low __pdataBANK2
  2352  0011' 0086               	movwf	6
  2353  0012' 3000'              	movlw	high __pdataBANK2
  2354  0013' 0087               	movwf	7
  2355  0014' 3036               	movlw	54
  2356  0015' 3180' 2000' 3180'  	fcall	init_ram
  2357                           
  2358                           ; Clear objects allocated to COMMON
  2359  0018' 0180'              	clrf	__pbssCOMMON& (0+127)
  2360  0019' 0180'              	clrf	(__pbssCOMMON+1)& (0+127)
  2361                           
  2362                           ; Clear objects allocated to BANK0
  2363  001A' 3000'              	movlw	low __pbssBANK0
  2364  001B' 0084               	movwf	4
  2365  001C' 3000'              	movlw	high __pbssBANK0
  2366  001D' 0085               	movwf	5
  2367  001E' 3009               	movlw	9
  2368  001F' 3180' 2000' 3180'  	fcall	clear_ram0
  2369                           
  2370                           ; Clear objects allocated to BANK1
  2371  0022' 3000'              	movlw	low __pbssBANK1
  2372  0023' 0084               	movwf	4
  2373  0024' 3000'              	movlw	high __pbssBANK1
  2374  0025' 0085               	movwf	5
  2375  0026' 3032               	movlw	50
  2376  0027' 3180' 2000' 3180'  	fcall	clear_ram0
  2377                           
  2378                           ; Clear objects allocated to BANK3
  2379  002A' 3000'              	movlw	low __pbssBANK3
  2380  002B' 0084               	movwf	4
  2381  002C' 3000'              	movlw	high __pbssBANK3
  2382  002D' 0085               	movwf	5
  2383  002E' 3050               	movlw	80
  2384  002F' 3180' 2000'        	fcall	clear_ram0
  2385  0031'                    end_of_initialization:	
  2386                           ;End of C runtime variable initialization code
  2387                           
  2388  0031'                    __end_of__initialization:	
  2389  0031' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2390  0032' 0020               	movlb	0
  2391  0033' 3180' 2800'        	ljmp	_main	;jump to C main() function
  2392                           
  2393                           	psect	bssCOMMON
  2394  0000'                    __pbssCOMMON:	
  2395  0000'                    _eusartTxTail:	
  2396  0000'                    	ds	1
  2397  0001'                    _eusartTxHead:	
  2398  0001'                    	ds	1
  2399                           
  2400                           	psect	bssBANK0
  2401  0000'                    __pbssBANK0:	
  2402  0000'                    _packet_sample:	
  2403  0000'                    	ds	4
  2404  0004'                    _packet_noise:	
  2405  0004'                    	ds	2
  2406  0006'                    _eusartRxCount:	
  2407  0006'                    	ds	1
  2408  0007'                    _eusartRxTail:	
  2409  0007'                    	ds	1
  2410  0008'                    _eusartRxHead:	
  2411  0008'                    	ds	1
  2412                           
  2413                           	psect	dataBANK0
  2414  0000'                    __pdataBANK0:	
  2415  0000'                    _Proximity_StateMachine:	
  2416  0000'                    	ds	6
  2417  0006'                    _Button_StateMachine:	
  2418  0006'                    	ds	6
  2419  000C'                    _callback_notActivated:	
  2420  000C'                    	ds	2
  2421  000E'                    _callback_activated:	
  2422  000E'                    	ds	2
  2423  0010'                    _callback_notPressed:	
  2424  0010'                    	ds	2
  2425  0012'                    _callback_pressed:	
  2426  0012'                    	ds	2
  2427  0014'                    _callback_sampled:	
  2428  0014'                    	ds	2
  2429  0016'                    _sample_period:	
  2430  0016'                    	ds	1
  2431                           
  2432                           	psect	bssBANK1
  2433  0000'                    __pbssBANK1:	
  2434  0000'                    _eusartRxBuffer:	
  2435  0000'                    	ds	16
  2436  0010'                    _eusartTxBuffer:	
  2437  0010'                    	ds	16
  2438  0020'                    _mtouch_proximity:	
  2439  0020'                    	ds	18
  2440                           
  2441                           	psect	dataBANK2
  2442  0000'                    __pdataBANK2:	
  2443  0000'                    _mtouch_sensor:	
  2444  0000'                    	ds	54
  2445                           
  2446                           	psect	bssBANK3
  2447  0000'                    __pbssBANK3:	
  2448  0000'                    _mtouch_button:	
  2449  0000'                    	ds	80
  2450                           
  2451                           	psect	inittext
  2452  0000'                    init_ram:	
  2453  0000' 00FE               	movwf	126
  2454  0001'                    initloop:	
  2455  0001' 0012               	moviw fsr0++
  2456  0002' 001E               	movwi fsr1++
  2457  0003' 0BFE               	decfsz	126,f
  2458  0004' 2800'              	goto	initloop
  2459  0005' 3400               	retlw	0
  2460                           
  2461                           	psect	clrtext
  2462  0000'                    clear_ram0:	
  2463                           ;	Called with FSR0 containing the base address, and
  2464                           ;	WREG with the size to clear
  2465                           
  2466  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
  2467  0001'                    clrloop0:	
  2468  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
  2469  0002' 3101               	addfsr 0,1
  2470  0003' 0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2471  0004' 2800'              	goto	clrloop0	;have we reached the end yet?
  2472  0005' 3400               	retlw	0	;all done for this memory range, return
  2473                           
  2474                           	psect	cstackBANK1
  2475  0000'                    __pcstackBANK1:	
  2476  0000'                    MTOUCH_Sensor_SampleAll@group:	
  2477                           
  2478                           ; 1 bytes @ 0x0
  2479  0000'                    	ds	1
  2480                           
  2481                           	psect	cstackCOMMON
  2482  0000'                    __pcstackCOMMON:	
  2483  0000'                    ?_PIN_MANAGER_Initialize:	
  2484  0000'                    ?_OSCILLATOR_Initialize:	
  2485                           ; 1 bytes @ 0x0
  2486                           
  2487  0000'                    ?_WDT_Initialize:	
  2488                           ; 1 bytes @ 0x0
  2489                           
  2490  0000'                    ?_TMR2_Initialize:	
  2491                           ; 1 bytes @ 0x0
  2492                           
  2493  0000'                    ?_EUSART_Initialize:	
  2494                           ; 1 bytes @ 0x0
  2495                           
  2496  0000'                    ?_MTOUCH_Service_Mainloop:	
  2497                           ; 1 bytes @ 0x0
  2498                           
  2499  0000'                    ?_USART_SendChar:	
  2500                           ; 1 bytes @ 0x0
  2501                           
  2502  0000'                    ??_USART_SendChar:	
  2503                           ; 1 bytes @ 0x0
  2504                           
  2505  0000'                    ?_TMR2_StartTimer:	
  2506                           ; 1 bytes @ 0x0
  2507                           
  2508  0000'                    ?_MTOUCH_Sensor_Sampled_ResetAll:	
  2509                           ; 1 bytes @ 0x0
  2510                           
  2511  0000'                    ?_MTOUCH_Sensor_Scan_Initialize:	
  2512                           ; 1 bytes @ 0x0
  2513                           
  2514  0000'                    ?_MTOUCH_Sensor_SampleAll:	
  2515                           ; 1 bytes @ 0x0
  2516                           
  2517  0000'                    ?_MTOUCH_Button_ServiceAll:	
  2518                           ; 1 bytes @ 0x0
  2519                           
  2520  0000'                    ?_MTOUCH_Proximity_ServiceAll:	
  2521                           ; 1 bytes @ 0x0
  2522                           
  2523  0000'                    ?_MTOUCH_Tick:	
  2524                           ; 1 bytes @ 0x0
  2525                           
  2526  0000'                    ?_MTOUCH_Button_Tick:	
  2527                           ; 1 bytes @ 0x0
  2528                           
  2529  0000'                    ?_MTOUCH_Proximity_Tick:	
  2530                           ; 1 bytes @ 0x0
  2531                           
  2532  0000'                    ?_MTOUCH_Sensor_Calibrate:	
  2533                           ; 1 bytes @ 0x0
  2534                           
  2535  0000'                    ?_Sensor_Sampled_Reset:	
  2536                           ; 1 bytes @ 0x0
  2537                           
  2538  0000'                    ?_Sensor_Service:	
  2539                           ; 1 bytes @ 0x0
  2540                           
  2541  0000'                    ?_Sensor_isEnabled:	
  2542                           ; 1 bytes @ 0x0
  2543                           
  2544  0000'                    ?_Sensor_RawSample_Update:	
  2545                           ; 1 bytes @ 0x0
  2546                           
  2547  0000'                    ?_Sensor_setSampled:	
  2548                           ; 1 bytes @ 0x0
  2549                           
  2550  0000'                    ?_Sensor_postAcquisitionProcess:	
  2551                           ; 1 bytes @ 0x0
  2552                           
  2553  0000'                    ?_Sensor_isActive:	
  2554                           ; 1 bytes @ 0x0
  2555                           
  2556  0000'                    ?_Sensor_isCalibrated:	
  2557                           ; 1 bytes @ 0x0
  2558                           
  2559  0000'                    ?_Sensor_setActive:	
  2560                           ; 1 bytes @ 0x0
  2561                           
  2562  0000'                    ?_Sensor_setInactive:	
  2563                           ; 1 bytes @ 0x0
  2564                           
  2565  0000'                    ?_Sensor_isCalibratingAcqTime:	
  2566                           ; 1 bytes @ 0x0
  2567                           
  2568  0000'                    ?_Sensor_autoCalibration:	
  2569                           ; 1 bytes @ 0x0
  2570                           
  2571  0000'                    ?_Sensor_setCalibratAcqTime:	
  2572                           ; 1 bytes @ 0x0
  2573                           
  2574  0000'                    ?_Sensor_setCalibrated:	
  2575                           ; 1 bytes @ 0x0
  2576                           
  2577  0000'                    ?_Button_Service:	
  2578                           ; 1 bytes @ 0x0
  2579                           
  2580  0000'                    ?_Button_Reading_Update:	
  2581                           ; 1 bytes @ 0x0
  2582                           
  2583  0000'                    ?_Button_Deviation_Update:	
  2584                           ; 1 bytes @ 0x0
  2585                           
  2586  0000'                    ?_Button_Baseline_Initialize:	
  2587                           ; 1 bytes @ 0x0
  2588                           
  2589  0000'                    ?_Button_Baseline_Update:	
  2590                           ; 1 bytes @ 0x0
  2591                           
  2592  0000'                    ?_Button_Tick_helper:	
  2593                           ; 1 bytes @ 0x0
  2594                           
  2595  0000'                    ?_Proximity_Service:	
  2596                           ; 1 bytes @ 0x0
  2597                           
  2598  0000'                    ?_Proximity_Reading_Update:	
  2599                           ; 1 bytes @ 0x0
  2600                           
  2601  0000'                    ?_Proximity_Deviation_Update:	
  2602                           ; 1 bytes @ 0x0
  2603                           
  2604  0000'                    ?_Proximity_Baseline_Initialize:	
  2605                           ; 1 bytes @ 0x0
  2606                           
  2607  0000'                    ?_Proximity_Baseline_Update:	
  2608                           ; 1 bytes @ 0x0
  2609                           
  2610  0000'                    ?_Proximity_Tick_helper:	
  2611                           ; 1 bytes @ 0x0
  2612                           
  2613  0000'                    ?_SYSTEM_Initialize:	
  2614                           ; 1 bytes @ 0x0
  2615                           
  2616  0000'                    ?_main:	
  2617                           ; 1 bytes @ 0x0
  2618                           
  2619  0000'                    ?_TMR2_StopTimer:	
  2620                           ; 1 bytes @ 0x0
  2621                           
  2622  0000'                    ?_TMR2_LoadPeriodRegister:	
  2623                           ; 1 bytes @ 0x0
  2624                           
  2625  0000'                    ?_EUSART_Transmit_ISR:	
  2626                           ; 1 bytes @ 0x0
  2627                           
  2628  0000'                    ??_EUSART_Transmit_ISR:	
  2629                           ; 1 bytes @ 0x0
  2630                           
  2631  0000'                    ?_EUSART_Receive_ISR:	
  2632                           ; 1 bytes @ 0x0
  2633                           
  2634  0000'                    ??_EUSART_Receive_ISR:	
  2635                           ; 1 bytes @ 0x0
  2636                           
  2637  0000'                    ?_INTERRUPT_InterruptManager:	
  2638                           ; 1 bytes @ 0x0
  2639                           
  2640  0000'                    ?_Sensor_getScanGroupIndex:	
  2641                           ; 1 bytes @ 0x0
  2642                           
  2643  0000'                    ?_MTOUCH_Sensor_isCalibrated:	
  2644                           ; 1 bytes @ 0x0
  2645                           
  2646  0000'                    ?_MTOUCH_Sensor_wasSampled:	
  2647                           ; 1 bytes @ 0x0
  2648                           
  2649  0000'                    ?_MTOUCH_Button_Initialize:	
  2650                           ; 1 bytes @ 0x0
  2651                           
  2652  0000'                    ?_MTOUCH_Proximity_Initialize:	
  2653                           ; 1 bytes @ 0x0
  2654                           
  2655                           
  2656                           ; 1 bytes @ 0x0
  2657  0000'                    	ds	1
  2658  0001'                    ??_INTERRUPT_InterruptManager:	
  2659                           
  2660                           ; 1 bytes @ 0x1
  2661  0001'                    	ds	1
  2662  0002'                    ??_PIN_MANAGER_Initialize:	
  2663  0002'                    ??_OSCILLATOR_Initialize:	
  2664                           ; 1 bytes @ 0x2
  2665                           
  2666  0002'                    ??_WDT_Initialize:	
  2667                           ; 1 bytes @ 0x2
  2668                           
  2669  0002'                    ??_TMR2_Initialize:	
  2670                           ; 1 bytes @ 0x2
  2671                           
  2672  0002'                    ??_EUSART_Initialize:	
  2673                           ; 1 bytes @ 0x2
  2674                           
  2675  0002'                    ?_MTOUCH_Button_SetPressedCallback:	
  2676                           ; 1 bytes @ 0x2
  2677                           
  2678  0002'                    ?_MTOUCH_Button_SetNotPressedCallback:	
  2679                           ; 1 bytes @ 0x2
  2680                           
  2681  0002'                    ?_MTOUCH_Proximity_SetActivatedCallback:	
  2682                           ; 1 bytes @ 0x2
  2683                           
  2684  0002'                    ?_MTOUCH_Proximity_SetNotActivatedCallback:	
  2685                           ; 1 bytes @ 0x2
  2686                           
  2687  0002'                    ??_TMR2_StartTimer:	
  2688                           ; 1 bytes @ 0x2
  2689                           
  2690  0002'                    ??_MTOUCH_Sensor_Scan_Initialize:	
  2691                           ; 1 bytes @ 0x2
  2692                           
  2693  0002'                    ?_Sensor_DefaultCallback:	
  2694                           ; 1 bytes @ 0x2
  2695                           
  2696  0002'                    ??_Sensor_Sampled_Reset:	
  2697                           ; 1 bytes @ 0x2
  2698                           
  2699  0002'                    ??_Sensor_isEnabled:	
  2700                           ; 1 bytes @ 0x2
  2701                           
  2702  0002'                    ??_Sensor_setSampled:	
  2703                           ; 1 bytes @ 0x2
  2704                           
  2705  0002'                    ??_Sensor_isActive:	
  2706                           ; 1 bytes @ 0x2
  2707                           
  2708  0002'                    ??_Sensor_isCalibrated:	
  2709                           ; 1 bytes @ 0x2
  2710                           
  2711  0002'                    ??_Sensor_setActive:	
  2712                           ; 1 bytes @ 0x2
  2713                           
  2714  0002'                    ??_Sensor_setInactive:	
  2715                           ; 1 bytes @ 0x2
  2716                           
  2717  0002'                    ??_Sensor_isCalibratingAcqTime:	
  2718                           ; 1 bytes @ 0x2
  2719                           
  2720  0002'                    ??_Sensor_setCalibratAcqTime:	
  2721                           ; 1 bytes @ 0x2
  2722                           
  2723  0002'                    ??_Sensor_setCalibrated:	
  2724                           ; 1 bytes @ 0x2
  2725                           
  2726  0002'                    ?_Button_DefaultCallback:	
  2727                           ; 1 bytes @ 0x2
  2728                           
  2729  0002'                    ??_Button_Tick_helper:	
  2730                           ; 1 bytes @ 0x2
  2731                           
  2732  0002'                    ?_Proximity_DefaultCallback:	
  2733                           ; 1 bytes @ 0x2
  2734                           
  2735  0002'                    ??_Proximity_Baseline_Update:	
  2736                           ; 1 bytes @ 0x2
  2737                           
  2738  0002'                    ??_Proximity_Tick_helper:	
  2739                           ; 1 bytes @ 0x2
  2740                           
  2741  0002'                    ?_processButtonTouch:	
  2742                           ; 1 bytes @ 0x2
  2743                           
  2744  0002'                    ?_processButtonRelease:	
  2745                           ; 1 bytes @ 0x2
  2746                           
  2747  0002'                    ?_processProximityActivate:	
  2748                           ; 1 bytes @ 0x2
  2749                           
  2750  0002'                    ?_processProximityNotActivate:	
  2751                           ; 1 bytes @ 0x2
  2752                           
  2753  0002'                    ??_TMR2_StopTimer:	
  2754                           ; 1 bytes @ 0x2
  2755                           
  2756  0002'                    ??_TMR2_LoadPeriodRegister:	
  2757                           ; 1 bytes @ 0x2
  2758                           
  2759  0002'                    ??_Sensor_getScanGroupIndex:	
  2760                           ; 1 bytes @ 0x2
  2761                           
  2762  0002'                    ??_MTOUCH_Proximity_Initialize:	
  2763                           ; 1 bytes @ 0x2
  2764                           
  2765  0002'                    ?___bmul:	
  2766                           ; 1 bytes @ 0x2
  2767                           
  2768  0002'                    ?_abs:	
  2769                           ; 1 bytes @ 0x2
  2770                           
  2771  0002'                    ?_MTOUCH_Proximity_Reading_Get:	
  2772                           ; 2 bytes @ 0x2
  2773                           
  2774  0002'                    ?_Proximity_Baseline_Get_helper:	
  2775                           ; 4 bytes @ 0x2
  2776                           
  2777  0002'                    processButtonTouch@button:	
  2778                           ; 4 bytes @ 0x2
  2779                           
  2780  0002'                    processButtonRelease@button:	
  2781                           ; 1 bytes @ 0x2
  2782                           
  2783  0002'                    processProximityActivate@prox:	
  2784                           ; 1 bytes @ 0x2
  2785                           
  2786  0002'                    processProximityNotActivate@prox:	
  2787                           ; 1 bytes @ 0x2
  2788                           
  2789  0002'                    TMR2_LoadPeriodRegister@periodVal:	
  2790                           ; 1 bytes @ 0x2
  2791                           
  2792  0002'                    Sensor_DefaultCallback@sensor:	
  2793                           ; 1 bytes @ 0x2
  2794                           
  2795  0002'                    Sensor_setActive@sensor:	
  2796                           ; 1 bytes @ 0x2
  2797                           
  2798  0002'                    Sensor_setInactive@sensor:	
  2799                           ; 1 bytes @ 0x2
  2800                           
  2801  0002'                    Sensor_isActive@sensor:	
  2802                           ; 1 bytes @ 0x2
  2803                           
  2804  0002'                    Sensor_isCalibrated@sensor:	
  2805                           ; 1 bytes @ 0x2
  2806                           
  2807  0002'                    Sensor_setCalibrated@sensor:	
  2808                           ; 1 bytes @ 0x2
  2809                           
  2810  0002'                    Sensor_setCalibratAcqTime@sensor:	
  2811                           ; 1 bytes @ 0x2
  2812                           
  2813  0002'                    Sensor_isCalibratingAcqTime@sensor:	
  2814                           ; 1 bytes @ 0x2
  2815                           
  2816  0002'                    Sensor_Sampled_Reset@sensor:	
  2817                           ; 1 bytes @ 0x2
  2818                           
  2819  0002'                    Sensor_setSampled@sensor:	
  2820                           ; 1 bytes @ 0x2
  2821                           
  2822  0002'                    Button_Deviation_Update@button:	
  2823                           ; 1 bytes @ 0x2
  2824                           
  2825  0002'                    Button_DefaultCallback@button:	
  2826                           ; 1 bytes @ 0x2
  2827                           
  2828  0002'                    Proximity_DefaultCallback@name:	
  2829                           ; 1 bytes @ 0x2
  2830                           
  2831  0002'                    ___bmul@multiplicand:	
  2832                           ; 1 bytes @ 0x2
  2833                           
  2834  0002'                    MTOUCH_Button_SetPressedCallback@callback:	
  2835                           ; 1 bytes @ 0x2
  2836                           
  2837  0002'                    MTOUCH_Button_SetNotPressedCallback@callback:	
  2838                           ; 2 bytes @ 0x2
  2839                           
  2840  0002'                    MTOUCH_Proximity_SetActivatedCallback@callback:	
  2841                           ; 2 bytes @ 0x2
  2842                           
  2843  0002'                    MTOUCH_Proximity_SetNotActivatedCallback@callback:	
  2844                           ; 2 bytes @ 0x2
  2845                           
  2846  0002'                    abs@a:	
  2847                           ; 2 bytes @ 0x2
  2848                           
  2849                           
  2850                           ; 2 bytes @ 0x2
  2851  0002'                    	ds	1
  2852  0003'                    ??_MTOUCH_Sensor_Sampled_ResetAll:	
  2853  0003'                    ??_Sensor_DefaultCallback:	
  2854                           ; 1 bytes @ 0x3
  2855                           
  2856  0003'                    ??_Button_DefaultCallback:	
  2857                           ; 1 bytes @ 0x3
  2858                           
  2859  0003'                    ??_Proximity_DefaultCallback:	
  2860                           ; 1 bytes @ 0x3
  2861                           
  2862  0003'                    ??_SYSTEM_Initialize:	
  2863                           ; 1 bytes @ 0x3
  2864                           
  2865  0003'                    ??_processButtonTouch:	
  2866                           ; 1 bytes @ 0x3
  2867                           
  2868  0003'                    ??_processButtonRelease:	
  2869                           ; 1 bytes @ 0x3
  2870                           
  2871  0003'                    ??_processProximityActivate:	
  2872                           ; 1 bytes @ 0x3
  2873                           
  2874  0003'                    ??_processProximityNotActivate:	
  2875                           ; 1 bytes @ 0x3
  2876                           
  2877  0003'                    ??___bmul:	
  2878                           ; 1 bytes @ 0x3
  2879                           
  2880  0003'                    Sensor_isEnabled@sensor:	
  2881                           ; 1 bytes @ 0x3
  2882                           
  2883  0003'                    MTOUCH_Proximity_Initialize@name:	
  2884                           ; 1 bytes @ 0x3
  2885                           
  2886  0003'                    Button_Deviation_Update@deviation:	
  2887                           ; 1 bytes @ 0x3
  2888                           
  2889                           
  2890                           ; 4 bytes @ 0x3
  2891  0003'                    	ds	1
  2892  0004'                    ??_MTOUCH_Button_SetPressedCallback:	
  2893  0004'                    ??_MTOUCH_Button_SetNotPressedCallback:	
  2894                           ; 1 bytes @ 0x4
  2895                           
  2896  0004'                    ??_MTOUCH_Proximity_SetActivatedCallback:	
  2897                           ; 1 bytes @ 0x4
  2898                           
  2899  0004'                    ??_MTOUCH_Proximity_SetNotActivatedCallback:	
  2900                           ; 1 bytes @ 0x4
  2901                           
  2902  0004'                    ??_abs:	
  2903                           ; 1 bytes @ 0x4
  2904                           
  2905  0004'                    MTOUCH_Sensor_Sampled_ResetAll@sensor:	
  2906                           ; 1 bytes @ 0x4
  2907                           
  2908  0004'                    Button_Tick_helper@button:	
  2909                           ; 1 bytes @ 0x4
  2910                           
  2911  0004'                    MTOUCH_Proximity_Initialize@prox:	
  2912                           ; 1 bytes @ 0x4
  2913                           
  2914  0004'                    Proximity_Tick_helper@prox:	
  2915                           ; 1 bytes @ 0x4
  2916                           
  2917  0004'                    ___bmul@product:	
  2918                           ; 1 bytes @ 0x4
  2919                           
  2920                           
  2921                           ; 1 bytes @ 0x4
  2922  0004'                    	ds	1
  2923  0005'                    ??_MTOUCH_Button_Tick:	
  2924  0005'                    ??_MTOUCH_Proximity_Tick:	
  2925                           ; 1 bytes @ 0x5
  2926                           
  2927  0005'                    ___bmul@multiplier:	
  2928                           ; 1 bytes @ 0x5
  2929                           
  2930                           
  2931                           ; 1 bytes @ 0x5
  2932  0005'                    	ds	1
  2933  0006'                    ??_MTOUCH_Sensor_Calibrate:	
  2934  0006'                    ??_Proximity_Baseline_Get_helper:	
  2935                           ; 1 bytes @ 0x6
  2936                           
  2937  0006'                    ??_MTOUCH_Sensor_isCalibrated:	
  2938                           ; 1 bytes @ 0x6
  2939                           
  2940  0006'                    ??_MTOUCH_Sensor_wasSampled:	
  2941                           ; 1 bytes @ 0x6
  2942                           
  2943  0006'                    ?_MTOUCH_Sensor_RawSample_Get:	
  2944                           ; 1 bytes @ 0x6
  2945                           
  2946  0006'                    Sensor_getScanGroupIndex@sensor:	
  2947                           ; 2 bytes @ 0x6
  2948                           
  2949  0006'                    MTOUCH_Button_Tick@i:	
  2950                           ; 1 bytes @ 0x6
  2951                           
  2952  0006'                    Proximity_Baseline_Update@prox:	
  2953                           ; 1 bytes @ 0x6
  2954                           
  2955                           
  2956                           ; 1 bytes @ 0x6
  2957  0006'                    	ds	1
  2958  0007'                    ??_MTOUCH_Tick:	
  2959  0007'                    ??_MTOUCH_Proximity_Reading_Get:	
  2960                           ; 1 bytes @ 0x7
  2961                           
  2962  0007'                    Sensor_getScanGroupIndex@sensorGroup:	
  2963                           ; 1 bytes @ 0x7
  2964                           
  2965  0007'                    MTOUCH_Sensor_Calibrate@sensor:	
  2966                           ; 1 bytes @ 0x7
  2967                           
  2968  0007'                    MTOUCH_Sensor_isCalibrated@sensor:	
  2969                           ; 1 bytes @ 0x7
  2970                           
  2971  0007'                    MTOUCH_Sensor_wasSampled@sensor:	
  2972                           ; 1 bytes @ 0x7
  2973                           
  2974  0007'                    MTOUCH_Proximity_Reading_Get@name:	
  2975                           ; 1 bytes @ 0x7
  2976                           
  2977                           
  2978                           ; 1 bytes @ 0x7
  2979  0007'                    	ds	1
  2980  0008'                    ??_Sensor_RawSample_Update:	
  2981  0008'                    ??_Sensor_postAcquisitionProcess:	
  2982                           ; 1 bytes @ 0x8
  2983                           
  2984  0008'                    ??_MTOUCH_Sensor_RawSample_Get:	
  2985                           ; 1 bytes @ 0x8
  2986                           
  2987  0008'                    ??_MTOUCH_Button_Initialize:	
  2988                           ; 1 bytes @ 0x8
  2989                           
  2990  0008'                    Sensor_autoCalibration@adcIndex:	
  2991                           ; 1 bytes @ 0x8
  2992                           
  2993                           
  2994                           ; 1 bytes @ 0x8
  2995  0008'                    	ds	1
  2996  0009'                    Sensor_autoCalibration@sensor:	
  2997  0009'                    MTOUCH_Sensor_RawSample_Get@name:	
  2998                           ; 1 bytes @ 0x9
  2999                           
  3000                           
  3001                           ; 1 bytes @ 0x9
  3002  0009'                    	ds	1
  3003  000A'                    ??_MTOUCH_Service_Mainloop:	
  3004  000A'                    ??_MTOUCH_Proximity_ServiceAll:	
  3005                           ; 1 bytes @ 0xA
  3006                           
  3007  000A'                    ??_MTOUCH_Proximity_Baseline_Get:	
  3008                           ; 1 bytes @ 0xA
  3009                           
  3010  000A'                    ??_main:	
  3011                           ; 1 bytes @ 0xA
  3012                           
  3013                           
  3014                           	psect	cstackBANK0
  3015  0000'                    __pcstackBANK0:	
  3016                           ; 1 bytes @ 0xA
  3017                           
  3018  0000'                    ??_Sensor_autoCalibration:	
  3019  0000'                    ??_Button_Reading_Update:	
  3020                           ; 1 bytes @ 0x0
  3021                           
  3022  0000'                    ??_Button_Deviation_Update:	
  3023                           ; 1 bytes @ 0x0
  3024                           
  3025  0000'                    ??_Button_Baseline_Initialize:	
  3026                           ; 1 bytes @ 0x0
  3027                           
  3028  0000'                    ??_Button_Baseline_Update:	
  3029                           ; 1 bytes @ 0x0
  3030                           
  3031  0000'                    ??_Proximity_Reading_Update:	
  3032                           ; 1 bytes @ 0x0
  3033                           
  3034  0000'                    ??_Proximity_Baseline_Initialize:	
  3035                           ; 1 bytes @ 0x0
  3036                           
  3037  0000'                    Sensor_postAcquisitionProcess@adcIndex:	
  3038                           ; 1 bytes @ 0x0
  3039                           
  3040  0000'                    Sensor_RawSample_Update@adcIndex:	
  3041                           ; 1 bytes @ 0x0
  3042                           
  3043  0000'                    MTOUCH_Button_Initialize@name:	
  3044                           ; 1 bytes @ 0x0
  3045                           
  3046  0000'                    Proximity_Baseline_Get_helper@name:	
  3047                           ; 1 bytes @ 0x0
  3048                           
  3049                           
  3050                           ; 1 bytes @ 0x0
  3051  0000'                    	ds	1
  3052  0001'                    ?_MTOUCH_Proximity_Baseline_Get:	
  3053  0001'                    Sensor_RawSample_Update@sensor:	
  3054                           ; 4 bytes @ 0x1
  3055                           
  3056  0001'                    MTOUCH_Button_Initialize@button:	
  3057                           ; 1 bytes @ 0x1
  3058                           
  3059  0001'                    Sensor_postAcquisitionProcess@deviation:	
  3060                           ; 1 bytes @ 0x1
  3061                           
  3062                           
  3063                           ; 2 bytes @ 0x1
  3064  0001'                    	ds	1
  3065  0002'                    Button_Reading_Update@button:	
  3066                           
  3067                           ; 1 bytes @ 0x2
  3068  0002'                    	ds	1
  3069  0003'                    Sensor_postAcquisitionProcess@sensor:	
  3070                           
  3071                           ; 1 bytes @ 0x3
  3072  0003'                    	ds	1
  3073  0004'                    ?_Sensor_Acq_ExecutePacket:	
  3074  0004'                    Sensor_Acq_ExecutePacket@sensor_adc2:	
  3075                           ; 1 bytes @ 0x4
  3076                           
  3077  0004'                    Button_Baseline_Initialize@button:	
  3078                           ; 1 bytes @ 0x4
  3079                           
  3080  0004'                    Proximity_Reading_Update@prox:	
  3081                           ; 1 bytes @ 0x4
  3082                           
  3083  0004'                    Proximity_Baseline_Initialize@prox:	
  3084                           ; 1 bytes @ 0x4
  3085                           
  3086                           
  3087                           ; 1 bytes @ 0x4
  3088  0004'                    	ds	1
  3089  0005'                    ??_Sensor_Acq_ExecutePacket:	
  3090                           
  3091                           ; 1 bytes @ 0x5
  3092  0005'                    	ds	1
  3093  0006'                    Button_Baseline_Update@button:	
  3094  0006'                    MTOUCH_Proximity_Baseline_Get@name:	
  3095                           ; 1 bytes @ 0x6
  3096                           
  3097                           
  3098                           ; 1 bytes @ 0x6
  3099  0006'                    	ds	1
  3100  0007'                    ?_Button_State_Initializing:	
  3101  0007'                    ?_Button_State_NotPressed:	
  3102                           ; 1 bytes @ 0x7
  3103                           
  3104  0007'                    ?_Button_State_Pressed:	
  3105                           ; 1 bytes @ 0x7
  3106                           
  3107  0007'                    ?_Proximity_State_Initializing:	
  3108                           ; 1 bytes @ 0x7
  3109                           
  3110  0007'                    ?_Proximity_State_NotActivated:	
  3111                           ; 1 bytes @ 0x7
  3112                           
  3113  0007'                    ?_Proximity_State_Activated:	
  3114                           ; 1 bytes @ 0x7
  3115                           
  3116  0007'                    ??_Proximity_Deviation_Update:	
  3117                           ; 1 bytes @ 0x7
  3118                           
  3119  0007'                    Sensor_Acq_ExecutePacket@ADCOMCON_temp:	
  3120                           ; 1 bytes @ 0x7
  3121                           
  3122  0007'                    Button_State_Initializing@button:	
  3123                           ; 1 bytes @ 0x7
  3124                           
  3125  0007'                    Button_State_NotPressed@button:	
  3126                           ; 1 bytes @ 0x7
  3127                           
  3128  0007'                    Button_State_Pressed@button:	
  3129                           ; 1 bytes @ 0x7
  3130                           
  3131  0007'                    Proximity_State_Initializing@prox:	
  3132                           ; 1 bytes @ 0x7
  3133                           
  3134  0007'                    Proximity_State_NotActivated@prox:	
  3135                           ; 1 bytes @ 0x7
  3136                           
  3137  0007'                    Proximity_State_Activated@prox:	
  3138                           ; 1 bytes @ 0x7
  3139                           
  3140                           
  3141                           ; 1 bytes @ 0x7
  3142  0007'                    	ds	1
  3143  0008'                    ??_Button_State_Initializing:	
  3144  0008'                    ??_Button_State_NotPressed:	
  3145                           ; 1 bytes @ 0x8
  3146                           
  3147  0008'                    ??_Button_State_Pressed:	
  3148                           ; 1 bytes @ 0x8
  3149                           
  3150  0008'                    ??_Proximity_State_Initializing:	
  3151                           ; 1 bytes @ 0x8
  3152                           
  3153  0008'                    ??_Proximity_State_NotActivated:	
  3154                           ; 1 bytes @ 0x8
  3155                           
  3156  0008'                    ??_Proximity_State_Activated:	
  3157                           ; 1 bytes @ 0x8
  3158                           
  3159  0008'                    Sensor_Acq_ExecutePacket@AD1CON2_temp:	
  3160                           ; 1 bytes @ 0x8
  3161                           
  3162                           
  3163                           ; 1 bytes @ 0x8
  3164  0008'                    	ds	1
  3165  0009'                    Sensor_Acq_ExecutePacket@AD2CON2_temp:	
  3166                           
  3167                           ; 1 bytes @ 0x9
  3168  0009'                    	ds	1
  3169  000A'                    ??_Button_Service:	
  3170  000A'                    Sensor_Acq_ExecutePacket@ADxIF_flag:	
  3171                           ; 1 bytes @ 0xA
  3172                           
  3173                           
  3174                           ; 1 bytes @ 0xA
  3175  000A'                    	ds	1
  3176  000B'                    Sensor_Acq_ExecutePacket@error:	
  3177                           
  3178                           ; 1 bytes @ 0xB
  3179  000B'                    	ds	1
  3180  000C'                    Sensor_Acq_ExecutePacket@activeSensor:	
  3181  000C'                    Button_Service@name:	
  3182                           ; 1 bytes @ 0xC
  3183                           
  3184  000C'                    Proximity_State_NotActivated@deviation:	
  3185                           ; 1 bytes @ 0xC
  3186                           
  3187                           
  3188                           ; 4 bytes @ 0xC
  3189  000C'                    	ds	1
  3190  000D'                    Button_Service@button:	
  3191  000D'                    Sensor_Acq_ExecutePacket@last_a:	
  3192                           ; 1 bytes @ 0xD
  3193                           
  3194                           
  3195                           ; 2 bytes @ 0xD
  3196  000D'                    	ds	1
  3197  000E'                    ??_MTOUCH_Button_ServiceAll:	
  3198                           
  3199                           ; 1 bytes @ 0xE
  3200  000E'                    	ds	1
  3201  000F'                    MTOUCH_Button_ServiceAll@button:	
  3202  000F'                    Sensor_Acq_ExecutePacket@last_b:	
  3203                           ; 1 bytes @ 0xF
  3204                           
  3205                           
  3206                           ; 2 bytes @ 0xF
  3207  000F'                    	ds	1
  3208  0010'                    Proximity_Deviation_Update@deviation:	
  3209                           
  3210                           ; 4 bytes @ 0x10
  3211  0010'                    	ds	1
  3212  0011'                    Sensor_Acq_ExecutePacket@packet_counter:	
  3213                           
  3214                           ; 1 bytes @ 0x11
  3215  0011'                    	ds	1
  3216  0012'                    Sensor_Acq_ExecutePacket@sensor_globalFlags:	
  3217                           
  3218                           ; 1 bytes @ 0x12
  3219  0012'                    	ds	1
  3220  0013'                    Sensor_Acq_ExecutePacket@sensor_adc1:	
  3221                           
  3222                           ; 1 bytes @ 0x13
  3223  0013'                    	ds	1
  3224  0014'                    ?_Sensor_Scanfrequency_Evaluation:	
  3225  0014'                    Sensor_Scanfrequency_Evaluation@sensor_adc2:	
  3226                           ; 1 bytes @ 0x14
  3227                           
  3228  0014'                    Proximity_Deviation_Update@name:	
  3229                           ; 1 bytes @ 0x14
  3230                           
  3231                           
  3232                           ; 1 bytes @ 0x14
  3233  0014'                    	ds	1
  3234  0015'                    ??_Sensor_Scanfrequency_Evaluation:	
  3235  0015'                    ??_Proximity_Service:	
  3236                           ; 1 bytes @ 0x15
  3237                           
  3238                           
  3239                           ; 1 bytes @ 0x15
  3240  0015'                    	ds	1
  3241  0016'                    Proximity_Service@name:	
  3242                           
  3243                           ; 1 bytes @ 0x16
  3244  0016'                    	ds	1
  3245  0017'                    Sensor_Scanfrequency_Evaluation@sensor_adc1:	
  3246  0017'                    Proximity_Service@prox:	
  3247                           ; 1 bytes @ 0x17
  3248                           
  3249                           
  3250                           ; 1 bytes @ 0x17
  3251  0017'                    	ds	1
  3252  0018'                    Sensor_Scanfrequency_Evaluation@packet_noise_Max:	
  3253                           
  3254                           ; 2 bytes @ 0x18
  3255  0018'                    	ds	2
  3256  001A'                    Sensor_Scanfrequency_Evaluation@best_sample_period:	
  3257                           
  3258                           ; 1 bytes @ 0x1A
  3259  001A'                    	ds	1
  3260  001B'                    Sensor_Scanfrequency_Evaluation@best_packet_sample:	
  3261                           
  3262                           ; 4 bytes @ 0x1B
  3263  001B'                    	ds	4
  3264  001F'                    Sensor_Scanfrequency_Evaluation@i:	
  3265                           
  3266                           ; 1 bytes @ 0x1F
  3267  001F'                    	ds	1
  3268  0020'                    ?_Sensor_Acquisition:	
  3269  0020'                    Sensor_Acquisition@sensor_adc2:	
  3270                           ; 1 bytes @ 0x20
  3271                           
  3272                           
  3273                           ; 1 bytes @ 0x20
  3274  0020'                    	ds	1
  3275  0021'                    ??_Sensor_Acquisition:	
  3276                           
  3277                           ; 1 bytes @ 0x21
  3278  0021'                    	ds	2
  3279  0023'                    Sensor_Acquisition@error:	
  3280                           
  3281                           ; 1 bytes @ 0x23
  3282  0023'                    	ds	1
  3283  0024'                    Sensor_Acquisition@sensor_adc1:	
  3284                           
  3285                           ; 1 bytes @ 0x24
  3286  0024'                    	ds	1
  3287  0025'                    ??_Sensor_Service:	
  3288                           
  3289                           ; 1 bytes @ 0x25
  3290  0025'                    	ds	5
  3291  002A'                    Sensor_Service@scanGroup:	
  3292                           
  3293                           ; 1 bytes @ 0x2A
  3294  002A'                    	ds	1
  3295  002B'                    Sensor_Service@error:	
  3296                           
  3297                           ; 1 bytes @ 0x2B
  3298  002B'                    	ds	1
  3299  002C'                    Sensor_Service@sensor_adc1:	
  3300                           
  3301                           ; 1 bytes @ 0x2C
  3302  002C'                    	ds	1
  3303  002D'                    Sensor_Service@sensor_adc2:	
  3304                           
  3305                           ; 1 bytes @ 0x2D
  3306  002D'                    	ds	1
  3307  002E'                    ??_MTOUCH_Sensor_SampleAll:	
  3308                           
  3309                           ; 1 bytes @ 0x2E
  3310  002E'                    	ds	1
  3311                           
  3312                           	psect	maintext
  3313  0000'                    __pmaintext:	
  3314 ;;
  3315 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3316 ;;
  3317 ;; *************** function _main *****************
  3318 ;; Defined at:
  3319 ;;		line 91 in file "main.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;		None
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : B1F/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3333 ;;      Params:         0       0       0       0       0       0       0       0
  3334 ;;      Locals:         0       0       0       0       0       0       0       0
  3335 ;;      Temps:          0       0       0       0       0       0       0       0
  3336 ;;      Totals:         0       0       0       0       0       0       0       0
  3337 ;;Total ram usage:        0 bytes
  3338 ;; Hardware stack levels required when called:   10
  3339 ;; This function calls:
  3340 ;;		_MTOUCH_Button_SetNotPressedCallback
  3341 ;;		_MTOUCH_Button_SetPressedCallback
  3342 ;;		_MTOUCH_Proximity_SetActivatedCallback
  3343 ;;		_MTOUCH_Proximity_SetNotActivatedCallback
  3344 ;;		_MTOUCH_Service_Mainloop
  3345 ;;		_SYSTEM_Initialize
  3346 ;;		_USART_SendChar
  3347 ;; This function is called by:
  3348 ;;		Startup code after reset
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _main
  3354  0000'                    _main:	
  3355                           
  3356                           ;main.c: 94: SYSTEM_Initialize();
  3357                           
  3358                           ;incstack = 0
  3359                           ; Regs used in _main: [allreg]
  3360  0000' 3180' 2000' 3180'  	fcall	_SYSTEM_Initialize
  3361                           
  3362                           ;main.c: 111: MTOUCH_Button_SetPressedCallback(processButtonTouch);
  3363  0003' 3000'              	movlw	low _processButtonTouch
  3364  0004' 0082'              	movwf	MTOUCH_Button_SetPressedCallback@callback
  3365  0005' 3000'              	movlw	high _processButtonTouch
  3366  0006' 0083'              	movwf	MTOUCH_Button_SetPressedCallback@callback+1
  3367  0007' 3180' 2000' 3180'  	fcall	_MTOUCH_Button_SetPressedCallback
  3368                           
  3369                           ;main.c: 112: MTOUCH_Button_SetNotPressedCallback(processButtonRelease);
  3370  000A' 3000'              	movlw	low _processButtonRelease
  3371  000B' 0082'              	movwf	MTOUCH_Button_SetNotPressedCallback@callback
  3372  000C' 3000'              	movlw	high _processButtonRelease
  3373  000D' 0083'              	movwf	MTOUCH_Button_SetNotPressedCallback@callback+1
  3374  000E' 3180' 2000' 3180'  	fcall	_MTOUCH_Button_SetNotPressedCallback
  3375                           
  3376                           ;main.c: 113: MTOUCH_Proximity_SetActivatedCallback(processProximityActivate);
  3377  0011' 3000'              	movlw	low _processProximityActivate
  3378  0012' 0082'              	movwf	MTOUCH_Proximity_SetActivatedCallback@callback
  3379  0013' 3000'              	movlw	high _processProximityActivate
  3380  0014' 0083'              	movwf	MTOUCH_Proximity_SetActivatedCallback@callback+1
  3381  0015' 3180' 2000' 3180'  	fcall	_MTOUCH_Proximity_SetActivatedCallback
  3382                           
  3383                           ;main.c: 114: MTOUCH_Proximity_SetNotActivatedCallback(processProximityNotActivate);
  3384  0018' 3000'              	movlw	low _processProximityNotActivate
  3385  0019' 0082'              	movwf	MTOUCH_Proximity_SetNotActivatedCallback@callback
  3386  001A' 3000'              	movlw	high _processProximityNotActivate
  3387  001B' 0083'              	movwf	MTOUCH_Proximity_SetNotActivatedCallback@callback+1
  3388  001C' 3180' 2000' 3180'  	fcall	_MTOUCH_Proximity_SetNotActivatedCallback
  3389  001F'                    l5681:	
  3390                           ;main.c: 116: while (1)
  3391                           
  3392                           
  3393                           ;main.c: 117: {
  3394                           ;main.c: 119: MTOUCH_Service_Mainloop();
  3395  001F' 3180' 2000' 3180'  	fcall	_MTOUCH_Service_Mainloop
  3396                           
  3397                           ;main.c: 120: USART_SendChar(240);
  3398  0022' 30F0               	movlw	240
  3399  0023' 3180' 2000' 3180'  	fcall	_USART_SendChar
  3400  0026' 2800'              	goto	l5681
  3401  0027'                    __end_of_main:	
  3402                           
  3403                           	psect	text1
  3404  0000'                    __ptext1:	
  3405 ;; *************** function _SYSTEM_Initialize *****************
  3406 ;; Defined at:
  3407 ;;		line 66 in file "mcc_generated_files/mcc.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;		None
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		wreg, status,2, status,0, pclath, cstack
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3421 ;;      Params:         0       0       0       0       0       0       0       0
  3422 ;;      Locals:         0       0       0       0       0       0       0       0
  3423 ;;      Temps:          0       0       0       0       0       0       0       0
  3424 ;;      Totals:         0       0       0       0       0       0       0       0
  3425 ;;Total ram usage:        0 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    4
  3428 ;; This function calls:
  3429 ;;		_EUSART_Initialize
  3430 ;;		_OSCILLATOR_Initialize
  3431 ;;		_PIN_MANAGER_Initialize
  3432 ;;		_TMR2_Initialize
  3433 ;;		_WDT_Initialize
  3434 ;; This function is called by:
  3435 ;;		_main
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           
  3440                           ;psect for function _SYSTEM_Initialize
  3441  0000'                    _SYSTEM_Initialize:	
  3442                           
  3443                           ;mcc.c: 69: PIN_MANAGER_Initialize();
  3444                           
  3445                           ;incstack = 0
  3446                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3447  0000' 3180' 2000' 3180'  	fcall	_PIN_MANAGER_Initialize
  3448                           
  3449                           ;mcc.c: 70: OSCILLATOR_Initialize();
  3450  0003' 3180' 2000' 3180'  	fcall	_OSCILLATOR_Initialize
  3451                           
  3452                           ;mcc.c: 71: WDT_Initialize();
  3453  0006' 3180' 2000' 3180'  	fcall	_WDT_Initialize
  3454                           
  3455                           ;mcc.c: 72: TMR2_Initialize();
  3456  0009' 3180' 2000' 3180'  	fcall	_TMR2_Initialize
  3457                           
  3458                           ;mcc.c: 73: EUSART_Initialize();
  3459  000C' 3180' 2000'        	fcall	_EUSART_Initialize
  3460  000E' 0008               	return
  3461  000F'                    __end_of_SYSTEM_Initialize:	
  3462                           
  3463                           	psect	text2
  3464  0000'                    __ptext2:	
  3465 ;; *************** function _WDT_Initialize *****************
  3466 ;; Defined at:
  3467 ;;		line 82 in file "mcc_generated_files/mcc.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;		None
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;		None
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3481 ;;      Params:         0       0       0       0       0       0       0       0
  3482 ;;      Locals:         0       0       0       0       0       0       0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0       0
  3484 ;;      Totals:         0       0       0       0       0       0       0       0
  3485 ;;Total ram usage:        0 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; Hardware stack levels required when called:    2
  3488 ;; This function calls:
  3489 ;;		Nothing
  3490 ;; This function is called by:
  3491 ;;		_SYSTEM_Initialize
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           
  3496                           ;psect for function _WDT_Initialize
  3497  0000'                    _WDT_Initialize:	
  3498                           
  3499                           ;mcc.c: 85: WDTCON = 0x16;
  3500                           
  3501                           ;incstack = 0
  3502                           ; Regs used in _WDT_Initialize: [wreg]
  3503  0000' 3016               	movlw	22
  3504  0001' 0021               	movlb	1	; select bank1
  3505  0002' 0097               	movwf	23	;volatile
  3506  0003' 0008               	return
  3507  0004'                    __end_of_WDT_Initialize:	
  3508                           
  3509                           	psect	text3
  3510  0000'                    __ptext3:	
  3511 ;; *************** function _TMR2_Initialize *****************
  3512 ;; Defined at:
  3513 ;;		line 61 in file "mcc_generated_files/tmr2.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;		None
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;		None
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      void 
  3520 ;; Registers used:
  3521 ;;		wreg, status,2, status,0, pclath, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3527 ;;      Params:         0       0       0       0       0       0       0       0
  3528 ;;      Locals:         0       0       0       0       0       0       0       0
  3529 ;;      Temps:          0       0       0       0       0       0       0       0
  3530 ;;      Totals:         0       0       0       0       0       0       0       0
  3531 ;;Total ram usage:        0 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:    3
  3534 ;; This function calls:
  3535 ;;		_TMR2_StartTimer
  3536 ;; This function is called by:
  3537 ;;		_SYSTEM_Initialize
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           
  3542                           ;psect for function _TMR2_Initialize
  3543  0000'                    _TMR2_Initialize:	
  3544                           
  3545                           ;tmr2.c: 66: T2CON = 0x00;
  3546                           
  3547                           ;incstack = 0
  3548                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3549  0000' 0020               	movlb	0	; select bank0
  3550  0001' 019C               	clrf	28	;volatile
  3551                           
  3552                           ;tmr2.c: 69: PR2 = 0xFF;
  3553  0002' 30FF               	movlw	255
  3554  0003' 009B               	movwf	27	;volatile
  3555                           
  3556                           ;tmr2.c: 72: TMR2 = 0x00;
  3557  0004' 019A               	clrf	26	;volatile
  3558                           
  3559                           ;tmr2.c: 75: PIR1bits.TMR2IF = 0;
  3560  0005' 1091               	bcf	17,1	;volatile
  3561                           
  3562                           ;tmr2.c: 78: TMR2_StartTimer();
  3563  0006' 3180' 2000'        	fcall	_TMR2_StartTimer
  3564  0008' 0008               	return
  3565  0009'                    __end_of_TMR2_Initialize:	
  3566                           
  3567                           	psect	text4
  3568  0000'                    __ptext4:	
  3569 ;; *************** function _PIN_MANAGER_Initialize *****************
  3570 ;; Defined at:
  3571 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;		None
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;		None
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      void 
  3578 ;; Registers used:
  3579 ;;		wreg, status,2
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3585 ;;      Params:         0       0       0       0       0       0       0       0
  3586 ;;      Locals:         0       0       0       0       0       0       0       0
  3587 ;;      Temps:          0       0       0       0       0       0       0       0
  3588 ;;      Totals:         0       0       0       0       0       0       0       0
  3589 ;;Total ram usage:        0 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    2
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_SYSTEM_Initialize
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           
  3600                           ;psect for function _PIN_MANAGER_Initialize
  3601  0000'                    _PIN_MANAGER_Initialize:	
  3602                           
  3603                           ;pin_manager.c: 57: LATA = 0x00;
  3604                           
  3605                           ;incstack = 0
  3606                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3607  0000' 0022               	movlb	2	; select bank2
  3608  0001' 018C               	clrf	12	;volatile
  3609                           
  3610                           ;pin_manager.c: 58: LATB = 0x00;
  3611  0002' 018D               	clrf	13	;volatile
  3612                           
  3613                           ;pin_manager.c: 59: LATC = 0x00;
  3614  0003' 018E               	clrf	14	;volatile
  3615                           
  3616                           ;pin_manager.c: 64: TRISA = 0x3F;
  3617  0004' 303F               	movlw	63
  3618  0005' 0021               	movlb	1	; select bank1
  3619  0006' 008C               	movwf	12	;volatile
  3620                           
  3621                           ;pin_manager.c: 65: TRISB = 0x70;
  3622  0007' 3070               	movlw	112
  3623  0008' 008D               	movwf	13	;volatile
  3624                           
  3625                           ;pin_manager.c: 66: TRISC = 0xFF;
  3626  0009' 30FF               	movlw	255
  3627  000A' 008E               	movwf	14	;volatile
  3628                           
  3629                           ;pin_manager.c: 71: ANSELC = 0xFF;
  3630  000B' 30FF               	movlw	255
  3631  000C' 0023               	movlb	3	; select bank3
  3632  000D' 008E               	movwf	14	;volatile
  3633                           
  3634                           ;pin_manager.c: 72: ANSELB = 0x50;
  3635  000E' 3050               	movlw	80
  3636  000F' 008D               	movwf	13	;volatile
  3637                           
  3638                           ;pin_manager.c: 73: ANSELA = 0x37;
  3639  0010' 3037               	movlw	55
  3640  0011' 008C               	movwf	12	;volatile
  3641                           
  3642                           ;pin_manager.c: 78: WPUB = 0xF0;
  3643  0012' 30F0               	movlw	240
  3644  0013' 0024               	movlb	4	; select bank4
  3645  0014' 008D               	movwf	13	;volatile
  3646                           
  3647                           ;pin_manager.c: 79: WPUA = 0x3F;
  3648  0015' 303F               	movlw	63
  3649  0016' 008C               	movwf	12	;volatile
  3650                           
  3651                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 0;
  3652  0017' 0021               	movlb	1	; select bank1
  3653  0018' 1395               	bcf	21,7	;volatile
  3654                           
  3655                           ;pin_manager.c: 86: APFCON = 0x00;
  3656  0019' 0022               	movlb	2	; select bank2
  3657  001A' 019D               	clrf	29	;volatile
  3658  001B' 0008               	return
  3659  001C'                    __end_of_PIN_MANAGER_Initialize:	
  3660                           
  3661                           	psect	text5
  3662  0000'                    __ptext5:	
  3663 ;; *************** function _OSCILLATOR_Initialize *****************
  3664 ;; Defined at:
  3665 ;;		line 76 in file "mcc_generated_files/mcc.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;		None
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3679 ;;      Params:         0       0       0       0       0       0       0       0
  3680 ;;      Locals:         0       0       0       0       0       0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0       0
  3682 ;;      Totals:         0       0       0       0       0       0       0       0
  3683 ;;Total ram usage:        0 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    2
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_SYSTEM_Initialize
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           
  3694                           ;psect for function _OSCILLATOR_Initialize
  3695  0000'                    _OSCILLATOR_Initialize:	
  3696                           
  3697                           ;mcc.c: 79: OSCCON = 0xF0;
  3698                           
  3699                           ;incstack = 0
  3700                           ; Regs used in _OSCILLATOR_Initialize: [wreg]
  3701  0000' 30F0               	movlw	240
  3702  0001' 0021               	movlb	1	; select bank1
  3703  0002' 0099               	movwf	25	;volatile
  3704  0003' 0008               	return
  3705  0004'                    __end_of_OSCILLATOR_Initialize:	
  3706                           
  3707                           	psect	text6
  3708  0000'                    __ptext6:	
  3709 ;; *************** function _EUSART_Initialize *****************
  3710 ;; Defined at:
  3711 ;;		line 75 in file "mcc_generated_files/eusart.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      void 
  3718 ;; Registers used:
  3719 ;;		wreg, status,2
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3725 ;;      Params:         0       0       0       0       0       0       0       0
  3726 ;;      Locals:         0       0       0       0       0       0       0       0
  3727 ;;      Temps:          1       0       0       0       0       0       0       0
  3728 ;;      Totals:         1       0       0       0       0       0       0       0
  3729 ;;Total ram usage:        1 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; Hardware stack levels required when called:    2
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_SYSTEM_Initialize
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           
  3740                           ;psect for function _EUSART_Initialize
  3741  0000'                    _EUSART_Initialize:	
  3742                           
  3743                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  3744                           
  3745                           ;incstack = 0
  3746                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  3747  0000' 0021               	movlb	1	; select bank1
  3748  0001' 1291               	bcf	17,5	;volatile
  3749                           
  3750                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  3751  0002' 1211               	bcf	17,4	;volatile
  3752                           
  3753                           ;eusart.c: 84: BAUDCON = 0x09;
  3754  0003' 3009               	movlw	9
  3755  0004' 0023               	movlb	3	; select bank3
  3756  0005' 009F               	movwf	31	;volatile
  3757                           
  3758                           ;eusart.c: 87: RCSTA = 0x90;
  3759  0006' 3090               	movlw	144
  3760  0007' 009D               	movwf	29	;volatile
  3761                           
  3762                           ;eusart.c: 90: TXSTA = 0x24;
  3763  0008' 3024               	movlw	36
  3764  0009' 009E               	movwf	30	;volatile
  3765                           
  3766                           ;eusart.c: 93: SPBRGL = 0x40;
  3767  000A' 3040               	movlw	64
  3768  000B' 009B               	movwf	27	;volatile
  3769                           
  3770                           ;eusart.c: 96: SPBRGH = 0x03;
  3771  000C' 3003               	movlw	3
  3772  000D' 009C               	movwf	28	;volatile
  3773                           
  3774                           ;eusart.c: 100: eusartTxHead = 0;
  3775  000E' 0181'              	clrf	_eusartTxHead	;volatile
  3776                           
  3777                           ;eusart.c: 101: eusartTxTail = 0;
  3778  000F' 0180'              	clrf	_eusartTxTail	;volatile
  3779                           
  3780                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  3781  0010' 3010               	movlw	16
  3782  0011' 0082'              	movwf	??_EUSART_Initialize
  3783  0012' 0802'              	movf	??_EUSART_Initialize,w
  3784  0013' 0020               	movlb	0	; select bank0
  3785  0014' 0080'              	movwf	_eusartTxBufferRemaining	;volatile
  3786                           
  3787                           ;eusart.c: 104: eusartRxHead = 0;
  3788  0015' 0188'              	clrf	_eusartRxHead	;volatile
  3789                           
  3790                           ;eusart.c: 105: eusartRxTail = 0;
  3791  0016' 0187'              	clrf	_eusartRxTail	;volatile
  3792                           
  3793                           ;eusart.c: 106: eusartRxCount = 0;
  3794  0017' 0186'              	clrf	_eusartRxCount	;volatile
  3795                           
  3796                           ;eusart.c: 109: PIE1bits.RCIE = 1;
  3797  0018' 0021               	movlb	1	; select bank1
  3798  0019' 1691               	bsf	17,5	;volatile
  3799  001A' 0008               	return
  3800  001B'                    __end_of_EUSART_Initialize:	
  3801                           
  3802                           	psect	text7
  3803  0000'                    __ptext7:	
  3804 ;; *************** function _MTOUCH_Service_Mainloop *****************
  3805 ;; Defined at:
  3806 ;;		line 64 in file "mcc_generated_files/mtouch/mtouch.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;		None
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;		None
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  1    wreg      unsigned char 
  3813 ;; Registers used:
  3814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3820 ;;      Params:         0       0       0       0       0       0       0       0
  3821 ;;      Locals:         0       0       0       0       0       0       0       0
  3822 ;;      Temps:          0       0       0       0       0       0       0       0
  3823 ;;      Totals:         0       0       0       0       0       0       0       0
  3824 ;;Total ram usage:        0 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; Hardware stack levels required when called:    9
  3827 ;; This function calls:
  3828 ;;		_MTOUCH_Button_ServiceAll
  3829 ;;		_MTOUCH_Proximity_ServiceAll
  3830 ;;		_MTOUCH_Sensor_SampleAll
  3831 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  3832 ;;		_MTOUCH_Tick
  3833 ;; This function is called by:
  3834 ;;		_main
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838                           
  3839                           ;psect for function _MTOUCH_Service_Mainloop
  3840  0000'                    _MTOUCH_Service_Mainloop:	
  3841                           
  3842                           ;mtouch.c: 66: if(MTOUCH_Sensor_SampleAll() == 0)
  3843                           
  3844                           ;incstack = 0
  3845                           ; Regs used in _MTOUCH_Service_Mainloop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3846  0000' 3180' 2000' 3180'  	fcall	_MTOUCH_Sensor_SampleAll
  3847  0003' 3A00               	xorlw	0
  3848  0004' 1903               	btfsc	3,2
  3849  0005' 0008               	return
  3850                           
  3851                           ;mtouch.c: 68: MTOUCH_Button_ServiceAll();
  3852                           
  3853                           ;mtouch.c: 67: return 0;
  3854                           ;	Return value of _MTOUCH_Service_Mainloop is never used
  3855  0006' 3180' 2000' 3180'  	fcall	_MTOUCH_Button_ServiceAll
  3856                           
  3857                           ;mtouch.c: 69: MTOUCH_Proximity_ServiceAll();
  3858  0009' 3180' 2000' 3180'  	fcall	_MTOUCH_Proximity_ServiceAll
  3859                           
  3860                           ;mtouch.c: 70: MTOUCH_Sensor_Sampled_ResetAll();
  3861  000C' 3180' 2000' 3180'  	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  3862                           
  3863                           ;mtouch.c: 71: MTOUCH_Tick();
  3864  000F' 3180' 2000'        	fcall	_MTOUCH_Tick
  3865  0011' 0008               	return
  3866  0012'                    __end_of_MTOUCH_Service_Mainloop:	
  3867                           ;mtouch.c: 72: return 1;
  3868                           ;	Return value of _MTOUCH_Service_Mainloop is never used
  3869                           
  3870                           
  3871                           	psect	text8
  3872  0000'                    __ptext8:	
  3873 ;; *************** function _MTOUCH_Tick *****************
  3874 ;; Defined at:
  3875 ;;		line 80 in file "mcc_generated_files/mtouch/mtouch.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;		None
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;		None
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      void 
  3882 ;; Registers used:
  3883 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3889 ;;      Params:         0       0       0       0       0       0       0       0
  3890 ;;      Locals:         0       0       0       0       0       0       0       0
  3891 ;;      Temps:          0       0       0       0       0       0       0       0
  3892 ;;      Totals:         0       0       0       0       0       0       0       0
  3893 ;;Total ram usage:        0 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    4
  3896 ;; This function calls:
  3897 ;;		_MTOUCH_Button_Tick
  3898 ;;		_MTOUCH_Proximity_Tick
  3899 ;; This function is called by:
  3900 ;;		_MTOUCH_Service_Mainloop
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           
  3905                           ;psect for function _MTOUCH_Tick
  3906  0000'                    _MTOUCH_Tick:	
  3907                           
  3908                           ;mtouch.c: 82: MTOUCH_Button_Tick();
  3909                           
  3910                           ;incstack = 0
  3911                           ; Regs used in _MTOUCH_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3912  0000' 3180' 2000' 3180'  	fcall	_MTOUCH_Button_Tick
  3913                           
  3914                           ;mtouch.c: 83: MTOUCH_Proximity_Tick();
  3915  0003' 3180' 2000'        	fcall	_MTOUCH_Proximity_Tick
  3916  0005' 0008               	return
  3917  0006'                    __end_of_MTOUCH_Tick:	
  3918                           
  3919                           	psect	text9
  3920  0000'                    __ptext9:	
  3921 ;; *************** function _MTOUCH_Proximity_Tick *****************
  3922 ;; Defined at:
  3923 ;;		line 256 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;		None
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;		None
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      void 
  3930 ;; Registers used:
  3931 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3937 ;;      Params:         0       0       0       0       0       0       0       0
  3938 ;;      Locals:         0       0       0       0       0       0       0       0
  3939 ;;      Temps:          0       0       0       0       0       0       0       0
  3940 ;;      Totals:         0       0       0       0       0       0       0       0
  3941 ;;Total ram usage:        0 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; Hardware stack levels required when called:    3
  3944 ;; This function calls:
  3945 ;;		_Proximity_Tick_helper
  3946 ;; This function is called by:
  3947 ;;		_MTOUCH_Tick
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           
  3952                           ;psect for function _MTOUCH_Proximity_Tick
  3953  0000'                    _MTOUCH_Proximity_Tick:	
  3954                           
  3955                           ;mtouch_proximity.c: 258: Proximity_Tick_helper(&mtouch_proximity[0]);
  3956                           
  3957                           ;incstack = 0
  3958                           ; Regs used in _MTOUCH_Proximity_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  3959  0000' 3000'              	movlw	(low (_mtouch_proximity| 0))& (0+255)
  3960  0001' 3180' 2000'        	fcall	_Proximity_Tick_helper
  3961  0003' 0008               	return
  3962  0004'                    __end_of_MTOUCH_Proximity_Tick:	
  3963                           
  3964                           	psect	text10
  3965  0000'                    __ptext10:	
  3966 ;; *************** function _Proximity_Tick_helper *****************
  3967 ;; Defined at:
  3968 ;;		line 260 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  prox            1    wreg     PTR struct .
  3971 ;;		 -> mtouch_proximity(18), 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  prox            1    4[COMMON] PTR struct .
  3974 ;;		 -> mtouch_proximity(18), 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3984 ;;      Params:         0       0       0       0       0       0       0       0
  3985 ;;      Locals:         1       0       0       0       0       0       0       0
  3986 ;;      Temps:          2       0       0       0       0       0       0       0
  3987 ;;      Totals:         3       0       0       0       0       0       0       0
  3988 ;;Total ram usage:        3 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:    2
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_MTOUCH_Proximity_Tick
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           
  3999                           ;psect for function _Proximity_Tick_helper
  4000  0000'                    _Proximity_Tick_helper:	
  4001                           
  4002                           ;incstack = 0
  4003                           ; Regs used in _Proximity_Tick_helper: [wreg+fsr1l+fsr1h+status,2+status,0]
  4004                           ;Proximity_Tick_helper@prox stored from wreg
  4005  0000' 0084'              	movwf	Proximity_Tick_helper@prox
  4006                           
  4007                           ;mtouch_proximity.c: 263: if ((prox->state) == MTOUCH_PROXIMITY_STATE_activated)
  4008  0001' 0804'              	movf	Proximity_Tick_helper@prox,w
  4009  0002' 3E02               	addlw	2
  4010  0003' 0086               	movwf	6
  4011  0004' 0187               	clrf	7
  4012  0005' 3002               	movlw	2
  4013  0006' 0601               	xorwf	1,w
  4014  0007' 1D03               	btfss	3,2
  4015  0008' 0008               	return
  4016                           
  4017                           ;mtouch_proximity.c: 264: {
  4018                           ;mtouch_proximity.c: 265: (prox->counter)++;
  4019  0009' 0804'              	movf	Proximity_Tick_helper@prox,w
  4020  000A' 3E0C               	addlw	12
  4021  000B' 0086               	movwf	6
  4022  000C' 0187               	clrf	7
  4023  000D' 3001               	movlw	1
  4024  000E' 0781               	addwf	1,f
  4025  000F' 3141               	addfsr 1,1
  4026  0010' 1803               	skipnc
  4027  0011' 0A81               	incf	1,f
  4028                           
  4029                           ;mtouch_proximity.c: 266: if (prox->counter == (mtouch_prox_statecounter_t)0)
  4030  0012' 0804'              	movf	Proximity_Tick_helper@prox,w
  4031  0013' 3E0C               	addlw	12
  4032  0014' 0086               	movwf	6
  4033  0015' 0187               	clrf	7
  4034  0016' 0016               	moviw fsr1++
  4035  0017' 0401               	iorwf	1,w
  4036  0018' 1D03               	btfss	3,2
  4037  0019' 0008               	return
  4038                           
  4039                           ;mtouch_proximity.c: 267: {
  4040                           ;mtouch_proximity.c: 268: prox->counter = (mtouch_prox_statecounter_t)0xFFFF;
  4041  001A' 0804'              	movf	Proximity_Tick_helper@prox,w
  4042  001B' 3E0C               	addlw	12
  4043  001C' 0086               	movwf	6
  4044  001D' 0187               	clrf	7
  4045  001E' 30FF               	movlw	255
  4046  001F' 3FC0               	movwi [0]fsr1
  4047  0020' 30FF               	movlw	255
  4048  0021' 3FC1               	movwi [1]fsr1
  4049  0022' 0008               	return
  4050  0023'                    __end_of_Proximity_Tick_helper:	
  4051                           
  4052                           	psect	text11
  4053  0000'                    __ptext11:	
  4054 ;; *************** function _MTOUCH_Button_Tick *****************
  4055 ;; Defined at:
  4056 ;;		line 287 in file "mcc_generated_files/mtouch/mtouch_button.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  i               1    6[COMMON] unsigned char 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4070 ;;      Params:         0       0       0       0       0       0       0       0
  4071 ;;      Locals:         1       0       0       0       0       0       0       0
  4072 ;;      Temps:          1       0       0       0       0       0       0       0
  4073 ;;      Totals:         2       0       0       0       0       0       0       0
  4074 ;;Total ram usage:        2 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    3
  4077 ;; This function calls:
  4078 ;;		_Button_Tick_helper
  4079 ;; This function is called by:
  4080 ;;		_MTOUCH_Tick
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           
  4085                           ;psect for function _MTOUCH_Button_Tick
  4086  0000'                    _MTOUCH_Button_Tick:	
  4087                           
  4088                           ;mtouch_button.c: 289: uint8_t i;
  4089                           ;mtouch_button.c: 290: for (i = 0; i < 5; i++)
  4090                           
  4091                           ;incstack = 0
  4092                           ; Regs used in _MTOUCH_Button_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4093  0000' 0186'              	clrf	MTOUCH_Button_Tick@i
  4094  0001'                    L1:	
  4095  0001' 3005               	movlw	5
  4096  0002' 0206'              	subwf	MTOUCH_Button_Tick@i,w
  4097  0003' 1803               	btfsc	3,0
  4098  0004' 0008               	return
  4099                           
  4100                           ;mtouch_button.c: 291: {
  4101                           ;mtouch_button.c: 292: Button_Tick_helper(&mtouch_button[i]);
  4102  0005' 0806'              	movf	MTOUCH_Button_Tick@i,w
  4103  0006' 0085'              	movwf	??_MTOUCH_Button_Tick
  4104  0007' 3003               	movlw	3
  4105  0008'                    u3505:	
  4106  0008' 3585'              	lslf	??_MTOUCH_Button_Tick,f
  4107  0009' 3EFF               	addlw	-1
  4108  000A' 1D03               	skipz
  4109  000B' 2800'              	goto	u3505
  4110  000C' 3505'              	lslf	??_MTOUCH_Button_Tick,w
  4111  000D' 3E00'              	addlw	(low (_mtouch_button| (0+256)))& (0+255)
  4112  000E' 3180' 2000' 3180'  	fcall	_Button_Tick_helper
  4113  0011' 3001               	movlw	1
  4114  0012' 0085'              	movwf	??_MTOUCH_Button_Tick
  4115  0013' 0805'              	movf	??_MTOUCH_Button_Tick,w
  4116  0014' 0786'              	addwf	MTOUCH_Button_Tick@i,f
  4117  0015' 2800'              	goto	L1
  4118  0016'                    __end_of_MTOUCH_Button_Tick:	
  4119                           
  4120                           	psect	text12
  4121  0000'                    __ptext12:	
  4122 ;; *************** function _Button_Tick_helper *****************
  4123 ;; Defined at:
  4124 ;;		line 295 in file "mcc_generated_files/mtouch/mtouch_button.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  button          1    wreg     PTR struct .
  4127 ;;		 -> mtouch_button(80), 
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;  button          1    4[COMMON] PTR struct .
  4130 ;;		 -> mtouch_button(80), 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4140 ;;      Params:         0       0       0       0       0       0       0       0
  4141 ;;      Locals:         1       0       0       0       0       0       0       0
  4142 ;;      Temps:          2       0       0       0       0       0       0       0
  4143 ;;      Totals:         3       0       0       0       0       0       0       0
  4144 ;;Total ram usage:        3 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; Hardware stack levels required when called:    2
  4147 ;; This function calls:
  4148 ;;		Nothing
  4149 ;; This function is called by:
  4150 ;;		_MTOUCH_Button_Tick
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           
  4155                           ;psect for function _Button_Tick_helper
  4156  0000'                    _Button_Tick_helper:	
  4157                           
  4158                           ;incstack = 0
  4159                           ; Regs used in _Button_Tick_helper: [wreg+fsr1l+fsr1h+status,2+status,0]
  4160                           ;Button_Tick_helper@button stored from wreg
  4161  0000' 0084'              	movwf	Button_Tick_helper@button
  4162                           
  4163                           ;mtouch_button.c: 298: if ((button->state) == MTOUCH_BUTTON_STATE_pressed)
  4164  0001' 0804'              	movf	Button_Tick_helper@button,w
  4165  0002' 3E02               	addlw	2
  4166  0003' 0086               	movwf	6
  4167  0004' 3001               	movlw	1	; select bank2/3
  4168  0005' 0087               	movwf	7
  4169  0006' 3002               	movlw	2
  4170  0007' 0601               	xorwf	1,w
  4171  0008' 1D03               	btfss	3,2
  4172  0009' 0008               	return
  4173                           
  4174                           ;mtouch_button.c: 299: {
  4175                           ;mtouch_button.c: 300: (button->counter)++;
  4176  000A' 0804'              	movf	Button_Tick_helper@button,w
  4177  000B' 3E0A               	addlw	10
  4178  000C' 0086               	movwf	6
  4179  000D' 3001               	movlw	1	; select bank2/3
  4180  000E' 0087               	movwf	7
  4181  000F' 3001               	movlw	1
  4182  0010' 0781               	addwf	1,f
  4183  0011' 3141               	addfsr 1,1
  4184  0012' 1803               	skipnc
  4185  0013' 0A81               	incf	1,f
  4186                           
  4187                           ;mtouch_button.c: 301: if (button->counter == (mtouch_button_statecounter_t)0)
  4188  0014' 0804'              	movf	Button_Tick_helper@button,w
  4189  0015' 3E0A               	addlw	10
  4190  0016' 0086               	movwf	6
  4191  0017' 3001               	movlw	1	; select bank2/3
  4192  0018' 0087               	movwf	7
  4193  0019' 0016               	moviw fsr1++
  4194  001A' 0401               	iorwf	1,w
  4195  001B' 1D03               	btfss	3,2
  4196  001C' 0008               	return
  4197                           
  4198                           ;mtouch_button.c: 302: {
  4199                           ;mtouch_button.c: 303: button->counter = (mtouch_button_statecounter_t)0xFFFF;
  4200  001D' 0804'              	movf	Button_Tick_helper@button,w
  4201  001E' 3E0A               	addlw	10
  4202  001F' 0086               	movwf	6
  4203  0020' 3001               	movlw	1	; select bank2/3
  4204  0021' 0087               	movwf	7
  4205  0022' 30FF               	movlw	255
  4206  0023' 3FC0               	movwi [0]fsr1
  4207  0024' 30FF               	movlw	255
  4208  0025' 3FC1               	movwi [1]fsr1
  4209  0026' 0008               	return
  4210  0027'                    __end_of_Button_Tick_helper:	
  4211                           
  4212                           	psect	text13
  4213  0000'                    __ptext13:	
  4214 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
  4215 ;; Defined at:
  4216 ;;		line 841 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;		None
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  sensor          1    4[COMMON] PTR struct .
  4221 ;;		 -> mtouch_sensor(54), 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4231 ;;      Params:         0       0       0       0       0       0       0       0
  4232 ;;      Locals:         1       0       0       0       0       0       0       0
  4233 ;;      Temps:          1       0       0       0       0       0       0       0
  4234 ;;      Totals:         2       0       0       0       0       0       0       0
  4235 ;;Total ram usage:        2 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:    3
  4238 ;; This function calls:
  4239 ;;		_Sensor_Sampled_Reset
  4240 ;; This function is called by:
  4241 ;;		_MTOUCH_Service_Mainloop
  4242 ;;		_MTOUCH_Initialize
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           
  4247                           ;psect for function _MTOUCH_Sensor_Sampled_ResetAll
  4248  0000'                    _MTOUCH_Sensor_Sampled_ResetAll:	
  4249                           
  4250                           ;mtouch_sensor.c: 843: mtouch_sensor_t* sensor;
  4251                           ;mtouch_sensor.c: 844: for(sensor = &mtouch_sensor[0];sensor<= &mtouch_sensor[6-1];senso
      +                          r++)
  4252                           
  4253                           ;incstack = 0
  4254                           ; Regs used in _MTOUCH_Sensor_Sampled_ResetAll: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
  4255  0000' 3000'              	movlw	(low (_mtouch_sensor| (0+256)))& (0+255)
  4256  0001' 0083'              	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  4257  0002' 0803'              	movf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  4258  0003' 0084'              	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor
  4259  0004'                    L2:	
  4260  0004' 3000'              	movlw	(low ((_mtouch_sensor| (0+256)+45)))& (0+255)
  4261  0005' 0083'              	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  4262  0006' 0804'              	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  4263  0007' 0203'              	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  4264  0008' 1C03               	btfss	3,0
  4265  0009' 0008               	return
  4266                           
  4267                           ;mtouch_sensor.c: 845: {
  4268                           ;mtouch_sensor.c: 846: Sensor_Sampled_Reset(sensor);
  4269  000A' 0804'              	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  4270  000B' 3180' 2000' 3180'  	fcall	_Sensor_Sampled_Reset
  4271  000E' 3009               	movlw	9
  4272  000F' 0083'              	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  4273  0010' 0803'              	movf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  4274  0011' 0784'              	addwf	MTOUCH_Sensor_Sampled_ResetAll@sensor,f
  4275  0012' 2800'              	goto	L2
  4276  0013'                    __end_of_MTOUCH_Sensor_Sampled_ResetAll:	
  4277                           
  4278                           	psect	text14
  4279  0000'                    __ptext14:	
  4280 ;; *************** function _Sensor_Sampled_Reset *****************
  4281 ;; Defined at:
  4282 ;;		line 855 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  sensor          1    wreg     PTR struct .
  4285 ;;		 -> mtouch_sensor(54), 
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;  sensor          1    2[COMMON] PTR struct .
  4288 ;;		 -> mtouch_sensor(54), 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4298 ;;      Params:         0       0       0       0       0       0       0       0
  4299 ;;      Locals:         1       0       0       0       0       0       0       0
  4300 ;;      Temps:          0       0       0       0       0       0       0       0
  4301 ;;      Totals:         1       0       0       0       0       0       0       0
  4302 ;;Total ram usage:        1 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; Hardware stack levels required when called:    2
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  4309 ;;		_MTOUCH_Sensor_Initialize
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           
  4314                           ;psect for function _Sensor_Sampled_Reset
  4315  0000'                    _Sensor_Sampled_Reset:	
  4316                           
  4317                           ;incstack = 0
  4318                           ; Regs used in _Sensor_Sampled_Reset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4319                           ;Sensor_Sampled_Reset@sensor stored from wreg
  4320  0000' 0082'              	movwf	Sensor_Sampled_Reset@sensor
  4321                           
  4322                           ;mtouch_sensor.c: 857: sensor->sampled = 0;
  4323  0001' 0802'              	movf	Sensor_Sampled_Reset@sensor,w
  4324  0002' 3E08               	addlw	8
  4325  0003' 0086               	movwf	6
  4326  0004' 3001               	movlw	1	; select bank2/3
  4327  0005' 0087               	movwf	7
  4328  0006' 1001               	bcf	1,0
  4329  0007' 0008               	return
  4330  0008'                    __end_of_Sensor_Sampled_Reset:	
  4331                           
  4332                           	psect	text15
  4333  0000'                    __ptext15:	
  4334 ;; *************** function _MTOUCH_Sensor_SampleAll *****************
  4335 ;; Defined at:
  4336 ;;		line 269 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  group           1    0[BANK1 ] unsigned char 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      unsigned char 
  4343 ;; Registers used:
  4344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4350 ;;      Params:         0       0       0       0       0       0       0       0
  4351 ;;      Locals:         0       0       1       0       0       0       0       0
  4352 ;;      Temps:          0       1       0       0       0       0       0       0
  4353 ;;      Totals:         0       1       1       0       0       0       0       0
  4354 ;;Total ram usage:        2 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    8
  4357 ;; This function calls:
  4358 ;;		_Sensor_Service
  4359 ;; This function is called by:
  4360 ;;		_MTOUCH_Service_Mainloop
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           
  4365                           ;psect for function _MTOUCH_Sensor_SampleAll
  4366  0000'                    _MTOUCH_Sensor_SampleAll:	
  4367                           
  4368                           ;mtouch_sensor.c: 271: uint8_t group;
  4369                           ;mtouch_sensor.c: 272: for (group = 0; group < 3; group++)
  4370                           
  4371                           ;incstack = 0
  4372                           ; Regs used in _MTOUCH_Sensor_SampleAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4373  0000' 0021               	movlb	1	; select bank1
  4374  0001' 0180'              	clrf	MTOUCH_Sensor_SampleAll@group^(0+128)
  4375  0002' 3003               	movlw	3
  4376  0003' 0200'              	subwf	MTOUCH_Sensor_SampleAll@group^(0+128),w
  4377  0004' 1803               	btfsc	3,0
  4378  0005' 2800'              	goto	l5637
  4379  0006'                    l5627:	
  4380                           
  4381                           ;mtouch_sensor.c: 273: {
  4382                           ;mtouch_sensor.c: 274: if(Sensor_Service(group)!= MTOUCH_SENSOR_ERROR_none)
  4383  0006' 0800'              	movf	MTOUCH_Sensor_SampleAll@group^(0+128),w
  4384  0007' 3180' 2000' 3180'  	fcall	_Sensor_Service
  4385  000A' 3A00               	xorlw	0
  4386  000B' 1903               	skipnz
  4387  000C' 2800'              	goto	l5633
  4388                           
  4389                           ;mtouch_sensor.c: 275: return 0;
  4390  000D' 3000               	movlw	0
  4391  000E' 0008               	return
  4392  000F'                    l5633:	
  4393  000F' 3001               	movlw	1
  4394  0010' 0020               	movlb	0	; select bank0
  4395  0011' 00AE'              	movwf	??_MTOUCH_Sensor_SampleAll
  4396  0012' 082E'              	movf	??_MTOUCH_Sensor_SampleAll,w
  4397  0013' 0021               	movlb	1	; select bank1
  4398  0014' 0780'              	addwf	MTOUCH_Sensor_SampleAll@group^(0+128),f
  4399  0015' 3003               	movlw	3
  4400  0016' 0200'              	subwf	MTOUCH_Sensor_SampleAll@group^(0+128),w
  4401  0017' 1C03               	skipc
  4402  0018' 2800'              	goto	l5627
  4403  0019'                    l5637:	
  4404                           
  4405                           ;mtouch_sensor.c: 276: }
  4406                           ;mtouch_sensor.c: 277: return 1;
  4407  0019' 3001               	movlw	1
  4408  001A' 0008               	return
  4409  001B'                    __end_of_MTOUCH_Sensor_SampleAll:	
  4410                           
  4411                           	psect	text16
  4412  0000'                    __ptext16:	
  4413 ;; *************** function _Sensor_Service *****************
  4414 ;; Defined at:
  4415 ;;		line 285 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  scanGroup       1    wreg     unsigned char 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  scanGroup       1   42[BANK0 ] unsigned char 
  4420 ;;  sensor_adc2     1   45[BANK0 ] PTR struct .
  4421 ;;		 -> mtouch_sensor(54), 
  4422 ;;  sensor_adc1     1   44[BANK0 ] PTR struct .
  4423 ;;		 -> mtouch_sensor(54), 
  4424 ;;  error           1   43[BANK0 ] enum E3335
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  1    wreg      enum E3335
  4427 ;; Registers used:
  4428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4434 ;;      Params:         0       0       0       0       0       0       0       0
  4435 ;;      Locals:         0       4       0       0       0       0       0       0
  4436 ;;      Temps:          0       5       0       0       0       0       0       0
  4437 ;;      Totals:         0       9       0       0       0       0       0       0
  4438 ;;Total ram usage:        9 bytes
  4439 ;; Hardware stack levels used:    1
  4440 ;; Hardware stack levels required when called:    7
  4441 ;; This function calls:
  4442 ;;		_Sensor_Acquisition
  4443 ;;		_Sensor_DefaultCallback
  4444 ;;		_Sensor_RawSample_Update
  4445 ;;		_Sensor_isEnabled
  4446 ;;		_Sensor_setSampled
  4447 ;; This function is called by:
  4448 ;;		_MTOUCH_Sensor_SampleAll
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           
  4453                           ;psect for function _Sensor_Service
  4454  0000'                    _Sensor_Service:	
  4455                           
  4456                           ;incstack = 0
  4457                           ; Regs used in _Sensor_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4458                           ;Sensor_Service@scanGroup stored from wreg
  4459  0000' 0020               	movlb	0	; select bank0
  4460  0001' 00AA'              	movwf	Sensor_Service@scanGroup
  4461                           
  4462                           ;mtouch_sensor.c: 287: mtouch_sensor_t* sensor_adc1;
  4463                           ;mtouch_sensor.c: 288: mtouch_sensor_t* sensor_adc2;
  4464                           ;mtouch_sensor.c: 290: sensor_adc1 = (mtouch_sensor_t*)sensor_scan_group[scanGroup].sens
      +                          or_adc1;
  4465  0002' 082A'              	movf	Sensor_Service@scanGroup,w
  4466  0003' 00A5'              	movwf	??_Sensor_Service
  4467  0004' 01A6'              	clrf	??_Sensor_Service+1
  4468  0005' 35A5'              	lslf	??_Sensor_Service,f
  4469  0006' 0DA6'              	rlf	??_Sensor_Service+1,f
  4470  0007' 3000'              	movlw	low (_sensor_scan_group| (0+32768))
  4471  0008' 0725'              	addwf	??_Sensor_Service,w
  4472  0009' 0084               	movwf	4
  4473  000A' 3000'              	movlw	high (_sensor_scan_group| (0+32768))
  4474  000B' 3D26'              	addwfc	??_Sensor_Service+1,w
  4475  000C' 0085               	movwf	5
  4476  000D' 0800               	movf	0,w	;code access
  4477  000E' 00A7'              	movwf	??_Sensor_Service+2
  4478  000F' 0827'              	movf	??_Sensor_Service+2,w
  4479  0010' 00AC'              	movwf	Sensor_Service@sensor_adc1
  4480                           
  4481                           ;mtouch_sensor.c: 291: sensor_adc2 = (mtouch_sensor_t*)sensor_scan_group[scanGroup].sens
      +                          or_adc2;
  4482  0011' 082A'              	movf	Sensor_Service@scanGroup,w
  4483  0012' 00A5'              	movwf	??_Sensor_Service
  4484  0013' 01A6'              	clrf	??_Sensor_Service+1
  4485  0014' 35A5'              	lslf	??_Sensor_Service,f
  4486  0015' 0DA6'              	rlf	??_Sensor_Service+1,f
  4487  0016' 0825'              	movf	??_Sensor_Service,w
  4488  0017' 3E01               	addlw	1
  4489  0018' 00A7'              	movwf	??_Sensor_Service+2
  4490  0019' 3000               	movlw	0
  4491  001A' 3D26'              	addwfc	??_Sensor_Service+1,w
  4492  001B' 00A8'              	movwf	??_Sensor_Service+3
  4493  001C' 3000'              	movlw	low (_sensor_scan_group| (0+32768))
  4494  001D' 0727'              	addwf	??_Sensor_Service+2,w
  4495  001E' 0084               	movwf	4
  4496  001F' 3000'              	movlw	high (_sensor_scan_group| (0+32768))
  4497  0020' 3D28'              	addwfc	??_Sensor_Service+3,w
  4498  0021' 0085               	movwf	5
  4499  0022' 0800               	movf	0,w	;code access
  4500  0023' 00A9'              	movwf	??_Sensor_Service+4
  4501  0024' 0829'              	movf	??_Sensor_Service+4,w
  4502  0025' 00AD'              	movwf	Sensor_Service@sensor_adc2
  4503                           
  4504                           ;mtouch_sensor.c: 293: enum mtouch_sensor_error error = Sensor_Acquisition(sensor_adc1,s
      +                          ensor_adc2);
  4505  0026' 082D'              	movf	Sensor_Service@sensor_adc2,w
  4506  0027' 00A5'              	movwf	??_Sensor_Service
  4507  0028' 0825'              	movf	??_Sensor_Service,w
  4508  0029' 00A0'              	movwf	Sensor_Acquisition@sensor_adc2
  4509  002A' 082C'              	movf	Sensor_Service@sensor_adc1,w
  4510  002B' 3180' 2000' 3180'  	fcall	_Sensor_Acquisition
  4511  002E' 0020               	movlb	0	; select bank0
  4512  002F' 00A6'              	movwf	??_Sensor_Service+1
  4513  0030' 0826'              	movf	??_Sensor_Service+1,w
  4514  0031' 00AB'              	movwf	Sensor_Service@error
  4515                           
  4516                           ;mtouch_sensor.c: 296: switch(error)
  4517  0032' 2800'              	goto	l5581
  4518  0033'                    l5563:	
  4519                           ;mtouch_sensor.c: 297: {
  4520                           ;mtouch_sensor.c: 298: case MTOUCH_SENSOR_ERROR_none:
  4521                           
  4522                           
  4523                           ;mtouch_sensor.c: 299: {
  4524                           ;mtouch_sensor.c: 300: if(Sensor_isEnabled(sensor_adc1))
  4525  0033' 082C'              	movf	Sensor_Service@sensor_adc1,w
  4526  0034' 3180' 2000' 3180'  	fcall	_Sensor_isEnabled
  4527  0037' 3A00               	xorlw	0
  4528  0038' 1903               	skipnz
  4529  0039' 2800'              	goto	l5571
  4530                           
  4531                           ;mtouch_sensor.c: 301: {
  4532                           ;mtouch_sensor.c: 302: Sensor_RawSample_Update(sensor_adc1);
  4533  003A' 0020               	movlb	0	; select bank0
  4534  003B' 082C'              	movf	Sensor_Service@sensor_adc1,w
  4535  003C' 3180' 2000' 3180'  	fcall	_Sensor_RawSample_Update
  4536                           
  4537                           ;mtouch_sensor.c: 303: Sensor_setSampled(sensor_adc1);
  4538  003F' 0020               	movlb	0	; select bank0
  4539  0040' 082C'              	movf	Sensor_Service@sensor_adc1,w
  4540  0041' 3180' 2000' 3180'  	fcall	_Sensor_setSampled
  4541                           
  4542                           ;mtouch_sensor.c: 304: callback_sampled(sensor_adc1->sensor);
  4543  0044' 0020               	movlb	0	; select bank0
  4544  0045' 082C'              	movf	Sensor_Service@sensor_adc1,w
  4545  0046' 0086               	movwf	6
  4546  0047' 3001               	movlw	1	; select bank2/3
  4547  0048' 0087               	movwf	7
  4548  0049' 0801               	movf	1,w
  4549  004A' 00A5'              	movwf	??_Sensor_Service
  4550  004B' 0825'              	movf	??_Sensor_Service,w
  4551  004C' 0082'              	movwf	Sensor_DefaultCallback@sensor
  4552  004D' 0815'              	movf	_callback_sampled+1,w
  4553  004E' 008A               	movwf	10
  4554  004F' 0814'              	movf	_callback_sampled,w
  4555  0050' 000A               	callw
  4556  0051' 3180'              	pagesel	$
  4557  0052'                    l5571:	
  4558                           
  4559                           ;mtouch_sensor.c: 305: }
  4560                           ;mtouch_sensor.c: 306: if(Sensor_isEnabled(sensor_adc2))
  4561  0052' 0020               	movlb	0	; select bank0
  4562  0053' 082D'              	movf	Sensor_Service@sensor_adc2,w
  4563  0054' 3180' 2000' 3180'  	fcall	_Sensor_isEnabled
  4564  0057' 3A00               	xorlw	0
  4565  0058' 1903               	skipnz
  4566  0059' 2800'              	goto	l5583
  4567                           
  4568                           ;mtouch_sensor.c: 307: {
  4569                           ;mtouch_sensor.c: 308: Sensor_RawSample_Update(sensor_adc2);
  4570  005A' 0020               	movlb	0	; select bank0
  4571  005B' 082D'              	movf	Sensor_Service@sensor_adc2,w
  4572  005C' 3180' 2000' 3180'  	fcall	_Sensor_RawSample_Update
  4573                           
  4574                           ;mtouch_sensor.c: 309: Sensor_setSampled(sensor_adc2);
  4575  005F' 0020               	movlb	0	; select bank0
  4576  0060' 082D'              	movf	Sensor_Service@sensor_adc2,w
  4577  0061' 3180' 2000' 3180'  	fcall	_Sensor_setSampled
  4578                           
  4579                           ;mtouch_sensor.c: 310: callback_sampled(sensor_adc2->sensor);
  4580  0064' 0020               	movlb	0	; select bank0
  4581  0065' 082D'              	movf	Sensor_Service@sensor_adc2,w
  4582  0066' 0086               	movwf	6
  4583  0067' 3001               	movlw	1	; select bank2/3
  4584  0068' 0087               	movwf	7
  4585  0069' 0801               	movf	1,w
  4586  006A' 00A5'              	movwf	??_Sensor_Service
  4587  006B' 0825'              	movf	??_Sensor_Service,w
  4588  006C' 0082'              	movwf	Sensor_DefaultCallback@sensor
  4589  006D' 0815'              	movf	_callback_sampled+1,w
  4590  006E' 008A               	movwf	10
  4591  006F' 0814'              	movf	_callback_sampled,w
  4592  0070' 000A               	callw
  4593  0071' 3180'              	pagesel	$
  4594                           
  4595                           ;mtouch_sensor.c: 319: }
  4596                           
  4597                           ;mtouch_sensor.c: 318: default: break;
  4598                           
  4599                           ;mtouch_sensor.c: 317: case MTOUCH_SENSOR_ERROR_invalid_calibrate: break;
  4600                           
  4601                           ;mtouch_sensor.c: 316: case MTOUCH_SENSOR_ERROR_interrupt_notEnabled: break;
  4602                           
  4603                           ;mtouch_sensor.c: 315: case MTOUCH_SENSOR_ERROR_invalid_index: break;
  4604                           
  4605                           ;mtouch_sensor.c: 311: }
  4606                           ;mtouch_sensor.c: 312: }
  4607                           ;mtouch_sensor.c: 313: break;
  4608  0072' 2800'              	goto	l5583
  4609  0073'                    l5581:	
  4610  0073' 0020               	movlb	0	; select bank0
  4611  0074' 082B'              	movf	Sensor_Service@error,w
  4612                           
  4613                           ; Switch size 1, requested type "space"
  4614                           ; Number of cases is 4, Range of values is 0 to 255
  4615                           ; switch strategies available:
  4616                           ; Name         Instructions Cycles
  4617                           ; simple_byte           13     7 (average)
  4618                           ; jumptable            260     6 (fixed)
  4619                           ;	Chosen strategy is simple_byte
  4620  0075' 3A00               	xorlw	0	; case 0
  4621  0076' 1903               	skipnz
  4622  0077' 2800'              	goto	l5563
  4623  0078' 3AFD               	xorlw	253	; case 253
  4624  0079' 1903               	skipnz
  4625  007A' 2800'              	goto	l5583
  4626  007B' 3A03               	xorlw	3	; case 254
  4627  007C' 1903               	skipnz
  4628  007D' 2800'              	goto	l5583
  4629  007E' 3A01               	xorlw	1	; case 255
  4630  007F' 1903               	skipnz
  4631  0080' 2800'              	goto	l5583
  4632  0081' 2800'              	goto	l5583
  4633  0082'                    l5583:	
  4634                           
  4635                           ;mtouch_sensor.c: 321: return error;
  4636  0082' 0020               	movlb	0	; select bank0
  4637  0083' 082B'              	movf	Sensor_Service@error,w
  4638  0084' 0008               	return
  4639  0085'                    __end_of_Sensor_Service:	
  4640                           
  4641                           	psect	text17
  4642  0000'                    __ptext17:	
  4643 ;; *************** function _Sensor_setSampled *****************
  4644 ;; Defined at:
  4645 ;;		line 860 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  sensor          1    wreg     PTR struct .
  4648 ;;		 -> mtouch_sensor(54), 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;  sensor          1    2[COMMON] PTR struct .
  4651 ;;		 -> mtouch_sensor(54), 
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  1    wreg      void 
  4654 ;; Registers used:
  4655 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4661 ;;      Params:         0       0       0       0       0       0       0       0
  4662 ;;      Locals:         1       0       0       0       0       0       0       0
  4663 ;;      Temps:          0       0       0       0       0       0       0       0
  4664 ;;      Totals:         1       0       0       0       0       0       0       0
  4665 ;;Total ram usage:        1 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:    2
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_Sensor_Service
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           
  4676                           ;psect for function _Sensor_setSampled
  4677  0000'                    _Sensor_setSampled:	
  4678                           
  4679                           ;incstack = 0
  4680                           ; Regs used in _Sensor_setSampled: [wreg+fsr1l+fsr1h+status,2+status,0]
  4681                           ;Sensor_setSampled@sensor stored from wreg
  4682  0000' 0082'              	movwf	Sensor_setSampled@sensor
  4683                           
  4684                           ;mtouch_sensor.c: 862: sensor->sampled = 1;
  4685  0001' 0802'              	movf	Sensor_setSampled@sensor,w
  4686  0002' 3E08               	addlw	8
  4687  0003' 0086               	movwf	6
  4688  0004' 3001               	movlw	1	; select bank2/3
  4689  0005' 0087               	movwf	7
  4690  0006' 1401               	bsf	1,0
  4691  0007' 0008               	return
  4692  0008'                    __end_of_Sensor_setSampled:	
  4693                           
  4694                           	psect	text18
  4695  0000'                    __ptext18:	
  4696 ;; *************** function _Sensor_RawSample_Update *****************
  4697 ;; Defined at:
  4698 ;;		line 695 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  sensor          1    wreg     PTR struct .
  4701 ;;		 -> mtouch_sensor(54), 
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;  sensor          1    1[BANK0 ] PTR struct .
  4704 ;;		 -> mtouch_sensor(54), 
  4705 ;;  adcIndex        1    0[BANK0 ] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4715 ;;      Params:         0       0       0       0       0       0       0       0
  4716 ;;      Locals:         0       2       0       0       0       0       0       0
  4717 ;;      Temps:          1       0       0       0       0       0       0       0
  4718 ;;      Totals:         1       2       0       0       0       0       0       0
  4719 ;;Total ram usage:        3 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    3
  4722 ;; This function calls:
  4723 ;;		_Sensor_getScanGroupIndex
  4724 ;; This function is called by:
  4725 ;;		_Sensor_Service
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           
  4730                           ;psect for function _Sensor_RawSample_Update
  4731  0000'                    _Sensor_RawSample_Update:	
  4732                           
  4733                           ;incstack = 0
  4734                           ; Regs used in _Sensor_RawSample_Update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4735                           ;Sensor_RawSample_Update@sensor stored from wreg
  4736  0000' 0020               	movlb	0	; select bank0
  4737  0001' 0081'              	movwf	Sensor_RawSample_Update@sensor
  4738                           
  4739                           ;mtouch_sensor.c: 697: uint8_t adcIndex = Sensor_getScanGroupIndex(sensor);
  4740  0002' 0801'              	movf	Sensor_RawSample_Update@sensor,w
  4741  0003' 3180' 2000' 3180'  	fcall	_Sensor_getScanGroupIndex
  4742  0006' 0088'              	movwf	??_Sensor_RawSample_Update
  4743  0007' 0808'              	movf	??_Sensor_RawSample_Update,w
  4744  0008' 0020               	movlb	0	; select bank0
  4745  0009' 0080'              	movwf	Sensor_RawSample_Update@adcIndex
  4746                           
  4747                           ;mtouch_sensor.c: 699: if (INTCONbits.GIE == (uint8_t)1)
  4748  000A' 1F8B               	btfss	11,7	;volatile
  4749  000B' 2800'              	goto	l5395
  4750                           
  4751                           ;mtouch_sensor.c: 700: {
  4752                           ;mtouch_sensor.c: 701: INTCONbits.GIE = (uint8_t)0;
  4753  000C' 138B               	bcf	11,7	;volatile
  4754                           
  4755                           ;mtouch_sensor.c: 702: sensor->rawSample = packet_sample[adcIndex];
  4756  000D' 3500'              	lslf	Sensor_RawSample_Update@adcIndex,w
  4757  000E' 3E00'              	addlw	(low (_packet_sample| 0))& (0+255)
  4758  000F' 0086               	movwf	6
  4759  0010' 0187               	clrf	7
  4760  0011' 0801'              	movf	Sensor_RawSample_Update@sensor,w
  4761  0012' 3E06               	addlw	6
  4762  0013' 0084               	movwf	4
  4763  0014' 3001               	movlw	1	; select bank2/3
  4764  0015' 0085               	movwf	5
  4765  0016' 3F40               	moviw [0]fsr1
  4766  0017' 3F80               	movwi [0]fsr0
  4767  0018' 3F41               	moviw [1]fsr1
  4768  0019' 3F81               	movwi [1]fsr0
  4769                           
  4770                           ;mtouch_sensor.c: 703: INTCONbits.GIE = (uint8_t)1;
  4771  001A' 178B               	bsf	11,7	;volatile
  4772                           
  4773                           ;mtouch_sensor.c: 704: }
  4774  001B' 0008               	return
  4775  001C'                    l5395:	
  4776                           
  4777                           ;mtouch_sensor.c: 705: else
  4778                           ;mtouch_sensor.c: 706: {
  4779                           ;mtouch_sensor.c: 707: sensor->rawSample = packet_sample[adcIndex];
  4780  001C' 3500'              	lslf	Sensor_RawSample_Update@adcIndex,w
  4781  001D' 3E00'              	addlw	(low (_packet_sample| 0))& (0+255)
  4782  001E' 0086               	movwf	6
  4783  001F' 0187               	clrf	7
  4784  0020' 0801'              	movf	Sensor_RawSample_Update@sensor,w
  4785  0021' 3E06               	addlw	6
  4786  0022' 0084               	movwf	4
  4787  0023' 3001               	movlw	1	; select bank2/3
  4788  0024' 0085               	movwf	5
  4789  0025' 3F40               	moviw [0]fsr1
  4790  0026' 3F80               	movwi [0]fsr0
  4791  0027' 3F41               	moviw [1]fsr1
  4792  0028' 3F81               	movwi [1]fsr0
  4793  0029' 0008               	return
  4794  002A'                    __end_of_Sensor_RawSample_Update:	
  4795                           
  4796                           	psect	text19
  4797  0000'                    __ptext19:	
  4798 ;; *************** function _Sensor_DefaultCallback *****************
  4799 ;; Defined at:
  4800 ;;		line 716 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  sensor          1    2[COMMON] enum E3328
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;		None
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  1    wreg      void 
  4807 ;; Registers used:
  4808 ;;		None
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4814 ;;      Params:         1       0       0       0       0       0       0       0
  4815 ;;      Locals:         0       0       0       0       0       0       0       0
  4816 ;;      Temps:          0       0       0       0       0       0       0       0
  4817 ;;      Totals:         1       0       0       0       0       0       0       0
  4818 ;;Total ram usage:        1 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; Hardware stack levels required when called:    2
  4821 ;; This function calls:
  4822 ;;		Nothing
  4823 ;; This function is called by:
  4824 ;;		_Sensor_Service
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           
  4829                           ;psect for function _Sensor_DefaultCallback
  4830  0000'                    _Sensor_DefaultCallback:	
  4831                           
  4832                           ;incstack = 0
  4833                           ; Regs used in _Sensor_DefaultCallback: []
  4834  0000' 0008               	return
  4835  0001'                    __end_of_Sensor_DefaultCallback:	
  4836                           
  4837                           	psect	text20
  4838  0000'                    __ptext20:	
  4839 ;; *************** function _Sensor_Acquisition *****************
  4840 ;; Defined at:
  4841 ;;		line 342 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  sensor_adc1     1    wreg     PTR struct .
  4844 ;;		 -> mtouch_sensor(54), 
  4845 ;;  sensor_adc2     1   32[BANK0 ] PTR struct .
  4846 ;;		 -> mtouch_sensor(54), 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  sensor_adc1     1   36[BANK0 ] PTR struct .
  4849 ;;		 -> mtouch_sensor(54), 
  4850 ;;  error           1   35[BANK0 ] enum E3335
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  1    wreg      enum E3335
  4853 ;; Registers used:
  4854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4860 ;;      Params:         0       1       0       0       0       0       0       0
  4861 ;;      Locals:         0       2       0       0       0       0       0       0
  4862 ;;      Temps:          0       2       0       0       0       0       0       0
  4863 ;;      Totals:         0       5       0       0       0       0       0       0
  4864 ;;Total ram usage:        5 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; Hardware stack levels required when called:    6
  4867 ;; This function calls:
  4868 ;;		_Sensor_Acq_ExecutePacket
  4869 ;;		_Sensor_Scanfrequency_Evaluation
  4870 ;;		_Sensor_isActive
  4871 ;;		_Sensor_isCalibrated
  4872 ;;		_Sensor_postAcquisitionProcess
  4873 ;; This function is called by:
  4874 ;;		_Sensor_Service
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           
  4879                           ;psect for function _Sensor_Acquisition
  4880  0000'                    _Sensor_Acquisition:	
  4881                           
  4882                           ;incstack = 0
  4883                           ; Regs used in _Sensor_Acquisition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4884                           ;Sensor_Acquisition@sensor_adc1 stored from wreg
  4885  0000' 0020               	movlb	0	; select bank0
  4886  0001' 00A4'              	movwf	Sensor_Acquisition@sensor_adc1
  4887                           
  4888                           ;mtouch_sensor.c: 344: enum mtouch_sensor_error error = MTOUCH_SENSOR_ERROR_none;
  4889  0002' 01A3'              	clrf	Sensor_Acquisition@error
  4890                           
  4891                           ;mtouch_sensor.c: 347: if (sensor_adc1 == (0) && sensor_adc2 == (0))
  4892  0003' 0824'              	movf	Sensor_Acquisition@sensor_adc1,w
  4893  0004' 1D03               	btfss	3,2
  4894  0005' 2800'              	goto	l5359
  4895  0006' 0820'              	movf	Sensor_Acquisition@sensor_adc2,w
  4896  0007' 1D03               	btfss	3,2
  4897  0008' 2800'              	goto	l5359
  4898                           
  4899                           ;mtouch_sensor.c: 348: {
  4900                           ;mtouch_sensor.c: 349: error = MTOUCH_SENSOR_ERROR_invalid_index;
  4901  0009' 01A3'              	clrf	Sensor_Acquisition@error
  4902  000A' 03A3'              	decf	Sensor_Acquisition@error,f
  4903  000B'                    l5359:	
  4904                           
  4905                           ;mtouch_sensor.c: 350: }
  4906                           ;mtouch_sensor.c: 357: if (error == MTOUCH_SENSOR_ERROR_none)
  4907  000B' 0823'              	movf	Sensor_Acquisition@error,w
  4908  000C' 1D03               	btfss	3,2
  4909  000D' 2800'              	goto	l5363
  4910                           
  4911                           ;mtouch_sensor.c: 358: error = Sensor_Acq_ExecutePacket(sensor_adc1,sensor_adc2);
  4912  000E' 0820'              	movf	Sensor_Acquisition@sensor_adc2,w
  4913  000F' 00A1'              	movwf	??_Sensor_Acquisition
  4914  0010' 0821'              	movf	??_Sensor_Acquisition,w
  4915  0011' 0084'              	movwf	Sensor_Acq_ExecutePacket@sensor_adc2
  4916  0012' 0824'              	movf	Sensor_Acquisition@sensor_adc1,w
  4917  0013' 3180' 2000' 3180'  	fcall	_Sensor_Acq_ExecutePacket
  4918  0016' 0020               	movlb	0	; select bank0
  4919  0017' 00A2'              	movwf	??_Sensor_Acquisition+1
  4920  0018' 0822'              	movf	??_Sensor_Acquisition+1,w
  4921  0019' 00A3'              	movwf	Sensor_Acquisition@error
  4922  001A'                    l5363:	
  4923                           
  4924                           ;mtouch_sensor.c: 360: if(sensor_adc1 != (0))
  4925  001A' 0824'              	movf	Sensor_Acquisition@sensor_adc1,w
  4926  001B' 1903               	btfsc	3,2
  4927  001C' 2800'              	goto	l5367
  4928                           
  4929                           ;mtouch_sensor.c: 361: {
  4930                           ;mtouch_sensor.c: 362: Sensor_postAcquisitionProcess(sensor_adc1);
  4931  001D' 0824'              	movf	Sensor_Acquisition@sensor_adc1,w
  4932  001E' 3180' 2000' 3180'  	fcall	_Sensor_postAcquisitionProcess
  4933  0021'                    l5367:	
  4934                           
  4935                           ;mtouch_sensor.c: 363: }
  4936                           ;mtouch_sensor.c: 365: if(sensor_adc2 !=(0))
  4937  0021' 0020               	movlb	0	; select bank0
  4938  0022' 0820'              	movf	Sensor_Acquisition@sensor_adc2,w
  4939  0023' 1903               	btfsc	3,2
  4940  0024' 2800'              	goto	l5371
  4941                           
  4942                           ;mtouch_sensor.c: 366: {
  4943                           ;mtouch_sensor.c: 367: Sensor_postAcquisitionProcess(sensor_adc2);
  4944  0025' 0820'              	movf	Sensor_Acquisition@sensor_adc2,w
  4945  0026' 3180' 2000' 3180'  	fcall	_Sensor_postAcquisitionProcess
  4946  0029'                    l5371:	
  4947                           
  4948                           ;mtouch_sensor.c: 368: }
  4949                           ;mtouch_sensor.c: 370: if((Sensor_isActive(sensor_adc1) && Sensor_isCalibrated(sensor_ad
      +                          c1))
  4950                           ;mtouch_sensor.c: 371: ||(Sensor_isActive(sensor_adc2) && Sensor_isCalibrated(sensor_adc
      +                          2)))
  4951  0029' 0020               	movlb	0	; select bank0
  4952  002A' 0824'              	movf	Sensor_Acquisition@sensor_adc1,w
  4953  002B' 3180' 2000' 3180'  	fcall	_Sensor_isActive
  4954  002E' 3A00               	xorlw	0
  4955  002F' 1903               	skipnz
  4956  0030' 2800'              	goto	l5375
  4957  0031' 0020               	movlb	0	; select bank0
  4958  0032' 0824'              	movf	Sensor_Acquisition@sensor_adc1,w
  4959  0033' 3180' 2000' 3180'  	fcall	_Sensor_isCalibrated
  4960  0036' 3A00               	xorlw	0
  4961  0037' 1D03               	skipz
  4962  0038' 2800'              	goto	l5379
  4963  0039'                    l5375:	
  4964  0039' 0020               	movlb	0	; select bank0
  4965  003A' 0820'              	movf	Sensor_Acquisition@sensor_adc2,w
  4966  003B' 3180' 2000' 3180'  	fcall	_Sensor_isActive
  4967  003E' 3A00               	xorlw	0
  4968  003F' 1903               	skipnz
  4969  0040' 2800'              	goto	l5381
  4970  0041' 0020               	movlb	0	; select bank0
  4971  0042' 0820'              	movf	Sensor_Acquisition@sensor_adc2,w
  4972  0043' 3180' 2000' 3180'  	fcall	_Sensor_isCalibrated
  4973  0046' 3A00               	xorlw	0
  4974  0047' 1903               	skipnz
  4975  0048' 2800'              	goto	l5381
  4976  0049'                    l5379:	
  4977                           
  4978                           ;mtouch_sensor.c: 372: {
  4979                           ;mtouch_sensor.c: 373: Sensor_Scanfrequency_Evaluation(sensor_adc1,sensor_adc2);
  4980  0049' 0020               	movlb	0	; select bank0
  4981  004A' 0820'              	movf	Sensor_Acquisition@sensor_adc2,w
  4982  004B' 00A1'              	movwf	??_Sensor_Acquisition
  4983  004C' 0821'              	movf	??_Sensor_Acquisition,w
  4984  004D' 0094'              	movwf	Sensor_Scanfrequency_Evaluation@sensor_adc2
  4985  004E' 0824'              	movf	Sensor_Acquisition@sensor_adc1,w
  4986  004F' 3180' 2000'        	fcall	_Sensor_Scanfrequency_Evaluation
  4987  0051'                    l5381:	
  4988                           
  4989                           ;mtouch_sensor.c: 374: }
  4990                           ;mtouch_sensor.c: 376: return error;
  4991  0051' 0020               	movlb	0	; select bank0
  4992  0052' 0823'              	movf	Sensor_Acquisition@error,w
  4993  0053' 0008               	return
  4994  0054'                    __end_of_Sensor_Acquisition:	
  4995                           
  4996                           	psect	text21
  4997  0000'                    __ptext21:	
  4998 ;; *************** function _Sensor_postAcquisitionProcess *****************
  4999 ;; Defined at:
  5000 ;;		line 379 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  sensor          1    wreg     PTR struct .
  5003 ;;		 -> mtouch_sensor(54), 
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;  sensor          1    3[BANK0 ] PTR struct .
  5006 ;;		 -> mtouch_sensor(54), 
  5007 ;;  deviation       2    1[BANK0 ] unsigned int 
  5008 ;;  adcIndex        1    0[BANK0 ] unsigned char 
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      enum E3335
  5011 ;; Registers used:
  5012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5018 ;;      Params:         0       0       0       0       0       0       0       0
  5019 ;;      Locals:         0       4       0       0       0       0       0       0
  5020 ;;      Temps:          2       0       0       0       0       0       0       0
  5021 ;;      Totals:         2       4       0       0       0       0       0       0
  5022 ;;Total ram usage:        6 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; Hardware stack levels required when called:    3
  5025 ;; This function calls:
  5026 ;;		_Sensor_getScanGroupIndex
  5027 ;;		_Sensor_isEnabled
  5028 ;;		_Sensor_setActive
  5029 ;;		_Sensor_setInactive
  5030 ;;		_abs
  5031 ;; This function is called by:
  5032 ;;		_Sensor_Acquisition
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           
  5037                           ;psect for function _Sensor_postAcquisitionProcess
  5038  0000'                    _Sensor_postAcquisitionProcess:	
  5039                           
  5040                           ;incstack = 0
  5041                           ; Regs used in _Sensor_postAcquisitionProcess: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5042                           ;Sensor_postAcquisitionProcess@sensor stored from wreg
  5043  0000' 0020               	movlb	0	; select bank0
  5044  0001' 0083'              	movwf	Sensor_postAcquisitionProcess@sensor
  5045                           
  5046                           ;mtouch_sensor.c: 381: mtouch_sensor_sample_t deviation;
  5047                           ;mtouch_sensor.c: 382: uint8_t adcIndex = Sensor_getScanGroupIndex(sensor);
  5048  0002' 0803'              	movf	Sensor_postAcquisitionProcess@sensor,w
  5049  0003' 3180' 2000' 3180'  	fcall	_Sensor_getScanGroupIndex
  5050  0006' 0088'              	movwf	??_Sensor_postAcquisitionProcess
  5051  0007' 0808'              	movf	??_Sensor_postAcquisitionProcess,w
  5052  0008' 0020               	movlb	0	; select bank0
  5053  0009' 0080'              	movwf	Sensor_postAcquisitionProcess@adcIndex
  5054                           
  5055                           ;mtouch_sensor.c: 384: if(Sensor_isEnabled(sensor))
  5056  000A' 0803'              	movf	Sensor_postAcquisitionProcess@sensor,w
  5057  000B' 3180' 2000' 3180'  	fcall	_Sensor_isEnabled
  5058  000E' 3A00               	xorlw	0
  5059  000F' 1903               	skipnz
  5060  0010' 2800'              	goto	l5263
  5061                           
  5062                           ;mtouch_sensor.c: 385: deviation = abs(packet_sample[adcIndex] - sensor->rawSample);
  5063  0011' 0020               	movlb	0	; select bank0
  5064  0012' 3500'              	lslf	Sensor_postAcquisitionProcess@adcIndex,w
  5065  0013' 3E00'              	addlw	(low (_packet_sample| 0))& (0+255)
  5066  0014' 0086               	movwf	6
  5067  0015' 0187               	clrf	7
  5068  0016' 0803'              	movf	Sensor_postAcquisitionProcess@sensor,w
  5069  0017' 3E06               	addlw	6
  5070  0018' 0084               	movwf	4
  5071  0019' 3001               	movlw	1	; select bank2/3
  5072  001A' 0085               	movwf	5
  5073  001B' 3F00               	moviw [0]fsr0
  5074  001C' 0088'              	movwf	??_Sensor_postAcquisitionProcess
  5075  001D' 3F01               	moviw [1]fsr0
  5076  001E' 0089'              	movwf	??_Sensor_postAcquisitionProcess+1
  5077  001F' 0988'              	comf	??_Sensor_postAcquisitionProcess,f
  5078  0020' 0989'              	comf	??_Sensor_postAcquisitionProcess+1,f
  5079  0021' 0A88'              	incf	??_Sensor_postAcquisitionProcess,f
  5080  0022' 1903               	skipnz
  5081  0023' 0A89'              	incf	??_Sensor_postAcquisitionProcess+1,f
  5082  0024' 3F40               	moviw [0]fsr1
  5083  0025' 0708'              	addwf	??_Sensor_postAcquisitionProcess,w
  5084  0026' 0082'              	movwf	abs@a
  5085  0027' 3F41               	moviw [1]fsr1
  5086  0028' 3D09'              	addwfc	??_Sensor_postAcquisitionProcess+1,w
  5087  0029' 0083'              	movwf	abs@a+1
  5088  002A' 3180' 2000' 3180'  	fcall	_abs
  5089  002D' 0803'              	movf	?_abs+1,w
  5090  002E' 0020               	movlb	0	; select bank0
  5091  002F' 0082'              	movwf	Sensor_postAcquisitionProcess@deviation+1
  5092  0030' 0802'              	movf	?_abs,w
  5093  0031' 0081'              	movwf	Sensor_postAcquisitionProcess@deviation
  5094  0032' 2800'              	goto	l5265
  5095  0033'                    l5263:	
  5096                           
  5097                           ;mtouch_sensor.c: 386: else
  5098                           ;mtouch_sensor.c: 387: deviation = 0;
  5099  0033' 0020               	movlb	0	; select bank0
  5100  0034' 0181'              	clrf	Sensor_postAcquisitionProcess@deviation
  5101  0035' 0182'              	clrf	Sensor_postAcquisitionProcess@deviation+1
  5102  0036'                    l5265:	
  5103                           
  5104                           ;mtouch_sensor.c: 389: if(deviation > (mtouch_sensor_packetsample_t)(sensor->oversamplin
      +                          g)<<2)
  5105  0036' 0803'              	movf	Sensor_postAcquisitionProcess@sensor,w
  5106  0037' 3E04               	addlw	4
  5107  0038' 0086               	movwf	6
  5108  0039' 3001               	movlw	1	; select bank2/3
  5109  003A' 0087               	movwf	7
  5110  003B' 0801               	movf	1,w
  5111  003C' 0088'              	movwf	??_Sensor_postAcquisitionProcess
  5112  003D' 0189'              	clrf	??_Sensor_postAcquisitionProcess+1
  5113  003E' 3588'              	lslf	??_Sensor_postAcquisitionProcess,f
  5114  003F' 0D89'              	rlf	??_Sensor_postAcquisitionProcess+1,f
  5115  0040' 3588'              	lslf	??_Sensor_postAcquisitionProcess,f
  5116  0041' 0D89'              	rlf	??_Sensor_postAcquisitionProcess+1,f
  5117  0042' 0802'              	movf	Sensor_postAcquisitionProcess@deviation+1,w
  5118  0043' 0209'              	subwf	??_Sensor_postAcquisitionProcess+1,w
  5119  0044' 1D03               	skipz
  5120  0045' 2800'              	goto	u5225
  5121  0046' 0801'              	movf	Sensor_postAcquisitionProcess@deviation,w
  5122  0047' 0208'              	subwf	??_Sensor_postAcquisitionProcess,w
  5123  0048'                    u5225:	
  5124  0048' 1803               	skipnc
  5125  0049' 2800'              	goto	l5269
  5126                           
  5127                           ;mtouch_sensor.c: 390: Sensor_setActive(sensor);
  5128  004A' 0803'              	movf	Sensor_postAcquisitionProcess@sensor,w
  5129  004B' 3180' 2000'        	fcall	_Sensor_setActive
  5130  004D' 0008               	return
  5131  004E'                    l5269:	
  5132                           
  5133                           ;mtouch_sensor.c: 391: else
  5134                           ;mtouch_sensor.c: 392: Sensor_setInactive(sensor);
  5135  004E' 0020               	movlb	0	; select bank0
  5136  004F' 0803'              	movf	Sensor_postAcquisitionProcess@sensor,w
  5137  0050' 3180' 2000'        	fcall	_Sensor_setInactive
  5138  0052' 0008               	return
  5139  0053'                    __end_of_Sensor_postAcquisitionProcess:	
  5140                           ;mtouch_sensor.c: 394: return MTOUCH_SENSOR_ERROR_none;
  5141                           ;	Return value of _Sensor_postAcquisitionProcess is never used
  5142                           
  5143                           
  5144                           	psect	text22
  5145  0000'                    __ptext22:	
  5146 ;; *************** function _Sensor_setInactive *****************
  5147 ;; Defined at:
  5148 ;;		line 770 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  sensor          1    wreg     PTR struct .
  5151 ;;		 -> mtouch_sensor(54), 
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;  sensor          1    2[COMMON] PTR struct .
  5154 ;;		 -> mtouch_sensor(54), 
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  1    wreg      void 
  5157 ;; Registers used:
  5158 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5164 ;;      Params:         0       0       0       0       0       0       0       0
  5165 ;;      Locals:         1       0       0       0       0       0       0       0
  5166 ;;      Temps:          0       0       0       0       0       0       0       0
  5167 ;;      Totals:         1       0       0       0       0       0       0       0
  5168 ;;Total ram usage:        1 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; Hardware stack levels required when called:    2
  5171 ;; This function calls:
  5172 ;;		Nothing
  5173 ;; This function is called by:
  5174 ;;		_Sensor_postAcquisitionProcess
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           
  5179                           ;psect for function _Sensor_setInactive
  5180  0000'                    _Sensor_setInactive:	
  5181                           
  5182                           ;incstack = 0
  5183                           ; Regs used in _Sensor_setInactive: [wreg+fsr1l+fsr1h+status,2+status,0]
  5184                           ;Sensor_setInactive@sensor stored from wreg
  5185  0000' 0082'              	movwf	Sensor_setInactive@sensor
  5186                           
  5187                           ;mtouch_sensor.c: 772: sensor->active = 0;
  5188  0001' 0802'              	movf	Sensor_setInactive@sensor,w
  5189  0002' 3E08               	addlw	8
  5190  0003' 0086               	movwf	6
  5191  0004' 3001               	movlw	1	; select bank2/3
  5192  0005' 0087               	movwf	7
  5193  0006' 1081               	bcf	1,1
  5194  0007' 0008               	return
  5195  0008'                    __end_of_Sensor_setInactive:	
  5196                           
  5197                           	psect	text23
  5198  0000'                    __ptext23:	
  5199 ;; *************** function _Sensor_setActive *****************
  5200 ;; Defined at:
  5201 ;;		line 765 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;  sensor          1    wreg     PTR struct .
  5204 ;;		 -> mtouch_sensor(54), 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  sensor          1    2[COMMON] PTR struct .
  5207 ;;		 -> mtouch_sensor(54), 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      void 
  5210 ;; Registers used:
  5211 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5217 ;;      Params:         0       0       0       0       0       0       0       0
  5218 ;;      Locals:         1       0       0       0       0       0       0       0
  5219 ;;      Temps:          0       0       0       0       0       0       0       0
  5220 ;;      Totals:         1       0       0       0       0       0       0       0
  5221 ;;Total ram usage:        1 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    2
  5224 ;; This function calls:
  5225 ;;		Nothing
  5226 ;; This function is called by:
  5227 ;;		_Sensor_postAcquisitionProcess
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           
  5232                           ;psect for function _Sensor_setActive
  5233  0000'                    _Sensor_setActive:	
  5234                           
  5235                           ;incstack = 0
  5236                           ; Regs used in _Sensor_setActive: [wreg+fsr1l+fsr1h+status,2+status,0]
  5237                           ;Sensor_setActive@sensor stored from wreg
  5238  0000' 0082'              	movwf	Sensor_setActive@sensor
  5239                           
  5240                           ;mtouch_sensor.c: 767: sensor->active = 1;
  5241  0001' 0802'              	movf	Sensor_setActive@sensor,w
  5242  0002' 3E08               	addlw	8
  5243  0003' 0086               	movwf	6
  5244  0004' 3001               	movlw	1	; select bank2/3
  5245  0005' 0087               	movwf	7
  5246  0006' 1481               	bsf	1,1
  5247  0007' 0008               	return
  5248  0008'                    __end_of_Sensor_setActive:	
  5249                           
  5250                           	psect	text24
  5251  0000'                    __ptext24:	
  5252 ;; *************** function _Sensor_Scanfrequency_Evaluation *****************
  5253 ;; Defined at:
  5254 ;;		line 640 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;  sensor_adc1     1    wreg     PTR struct .
  5257 ;;		 -> mtouch_sensor(54), 
  5258 ;;  sensor_adc2     1   20[BANK0 ] PTR struct .
  5259 ;;		 -> mtouch_sensor(54), 
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;  sensor_adc1     1   23[BANK0 ] PTR struct .
  5262 ;;		 -> mtouch_sensor(54), 
  5263 ;;  best_packet_    4   27[BANK0 ] unsigned int [2]
  5264 ;;  packet_noise    2   24[BANK0 ] unsigned int 
  5265 ;;  i               1   31[BANK0 ] unsigned char 
  5266 ;;  best_sample_    1   26[BANK0 ] unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      void 
  5269 ;; Registers used:
  5270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5276 ;;      Params:         0       1       0       0       0       0       0       0
  5277 ;;      Locals:         0       9       0       0       0       0       0       0
  5278 ;;      Temps:          0       2       0       0       0       0       0       0
  5279 ;;      Totals:         0      12       0       0       0       0       0       0
  5280 ;;Total ram usage:       12 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    5
  5283 ;; This function calls:
  5284 ;;		_Sensor_Acq_ExecutePacket
  5285 ;; This function is called by:
  5286 ;;		_Sensor_Acquisition
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           
  5291                           ;psect for function _Sensor_Scanfrequency_Evaluation
  5292  0000'                    _Sensor_Scanfrequency_Evaluation:	
  5293                           
  5294                           ;incstack = 0
  5295                           ; Regs used in _Sensor_Scanfrequency_Evaluation: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  5296                           ;Sensor_Scanfrequency_Evaluation@sensor_adc1 stored from wreg
  5297  0000' 0020               	movlb	0	; select bank0
  5298  0001' 0097'              	movwf	Sensor_Scanfrequency_Evaluation@sensor_adc1
  5299                           
  5300                           ;mtouch_sensor.c: 642: uint8_t i;
  5301                           ;mtouch_sensor.c: 643: const mtouch_sensor_sampleperiod_t frequency_hop[5] = {0,13,28,30
      +                          ,23};
  5302                           ;mtouch_sensor.c: 644: mtouch_sensor_packetnoise_t packet_noise_Max;
  5303                           ;mtouch_sensor.c: 645: mtouch_sensor_sampleperiod_t best_sample_period;
  5304                           ;mtouch_sensor.c: 646: mtouch_sensor_packetsample_t best_packet_sample[2];
  5305                           ;mtouch_sensor.c: 648: packet_noise_Max = packet_noise + (packet_noise>>2);
  5306  0002' 0805'              	movf	_packet_noise+1,w
  5307  0003' 0096'              	movwf	??_Sensor_Scanfrequency_Evaluation+1
  5308  0004' 0804'              	movf	_packet_noise,w
  5309  0005' 0095'              	movwf	??_Sensor_Scanfrequency_Evaluation
  5310  0006' 3696'              	lsrf	??_Sensor_Scanfrequency_Evaluation+1,f
  5311  0007' 0C95'              	rrf	??_Sensor_Scanfrequency_Evaluation,f
  5312  0008' 3696'              	lsrf	??_Sensor_Scanfrequency_Evaluation+1,f
  5313  0009' 0C95'              	rrf	??_Sensor_Scanfrequency_Evaluation,f
  5314  000A' 0804'              	movf	_packet_noise,w
  5315  000B' 0715'              	addwf	??_Sensor_Scanfrequency_Evaluation,w
  5316  000C' 0098'              	movwf	Sensor_Scanfrequency_Evaluation@packet_noise_Max
  5317  000D' 0805'              	movf	_packet_noise+1,w
  5318  000E' 3D16'              	addwfc	??_Sensor_Scanfrequency_Evaluation+1,w
  5319  000F' 0099'              	movwf	Sensor_Scanfrequency_Evaluation@packet_noise_Max+1
  5320                           
  5321                           ;mtouch_sensor.c: 649: best_sample_period = sample_period;
  5322  0010' 0816'              	movf	_sample_period,w
  5323  0011' 0095'              	movwf	??_Sensor_Scanfrequency_Evaluation
  5324  0012' 0815'              	movf	??_Sensor_Scanfrequency_Evaluation,w
  5325  0013' 009A'              	movwf	Sensor_Scanfrequency_Evaluation@best_sample_period
  5326                           
  5327                           ;mtouch_sensor.c: 650: best_packet_sample[0] = packet_sample[0];
  5328  0014' 0801'              	movf	_packet_sample+1,w
  5329  0015' 009C'              	movwf	Sensor_Scanfrequency_Evaluation@best_packet_sample+1
  5330  0016' 0800'              	movf	_packet_sample,w
  5331  0017' 009B'              	movwf	Sensor_Scanfrequency_Evaluation@best_packet_sample
  5332                           
  5333                           ;mtouch_sensor.c: 651: best_packet_sample[1] = packet_sample[1];
  5334  0018' 0803'              	movf	_packet_sample+3,w
  5335  0019' 009E'              	movwf	Sensor_Scanfrequency_Evaluation@best_packet_sample+3
  5336  001A' 0802'              	movf	_packet_sample+2,w
  5337  001B' 009D'              	movwf	Sensor_Scanfrequency_Evaluation@best_packet_sample+2
  5338                           
  5339                           ;mtouch_sensor.c: 653: for(i=(uint8_t)0;i<(uint8_t)5;i++)
  5340  001C' 019F'              	clrf	Sensor_Scanfrequency_Evaluation@i
  5341  001D' 3005               	movlw	5
  5342  001E' 021F'              	subwf	Sensor_Scanfrequency_Evaluation@i,w
  5343  001F' 1803               	btfsc	3,0
  5344  0020' 2800'              	goto	l5305
  5345  0021'                    l5287:	
  5346                           
  5347                           ;mtouch_sensor.c: 654: {
  5348                           ;mtouch_sensor.c: 655: sample_period += frequency_hop[i];
  5349  0021' 081F'              	movf	Sensor_Scanfrequency_Evaluation@i,w
  5350  0022' 3E00'              	addlw	low (Sensor_Scanfrequency_Evaluation@frequency_hop| (0+32768))
  5351  0023' 0084               	movwf	4
  5352  0024' 3000'              	movlw	high (Sensor_Scanfrequency_Evaluation@frequency_hop| (0+32768))
  5353  0025' 1803               	skipnc
  5354  0026' 3E01               	addlw	1
  5355  0027' 0085               	movwf	5
  5356  0028' 0800               	movf	0,w	;code access
  5357  0029' 0095'              	movwf	??_Sensor_Scanfrequency_Evaluation
  5358  002A' 0815'              	movf	??_Sensor_Scanfrequency_Evaluation,w
  5359  002B' 0796'              	addwf	_sample_period,f
  5360                           
  5361                           ;mtouch_sensor.c: 661: else if(sample_period < ((mtouch_sensor_sampleperiod_t)(mtouch_se
      +                          nsor_time_t)32+(mtouch_sensor_time_t)32+(mtouch_sensor_time_t)110))
  5362                           
  5363                           ;mtouch_sensor.c: 660: }
  5364                           
  5365                           ;mtouch_sensor.c: 659: sample_period+=((mtouch_sensor_sampleperiod_t)(mtouch_sensor_time
      +                          _t)32+(mtouch_sensor_time_t)32+(mtouch_sensor_time_t)110);
  5366                           
  5367                           ;mtouch_sensor.c: 657: {
  5368                           ;mtouch_sensor.c: 658: sample_period-=((mtouch_sensor_sampleperiod_t)255);
  5369                           
  5370                           ;mtouch_sensor.c: 656: if(sample_period > ((mtouch_sensor_sampleperiod_t)255))
  5371  002C' 30AE               	movlw	174
  5372  002D' 0216'              	subwf	_sample_period,w
  5373  002E' 1803               	skipnc
  5374  002F' 2800'              	goto	l5295
  5375                           
  5376                           ;mtouch_sensor.c: 662: {
  5377                           ;mtouch_sensor.c: 663: sample_period += ((mtouch_sensor_sampleperiod_t)(mtouch_sensor_ti
      +                          me_t)32+(mtouch_sensor_time_t)32+(mtouch_sensor_time_t)110);
  5378  0030' 30AE               	movlw	174
  5379  0031' 0095'              	movwf	??_Sensor_Scanfrequency_Evaluation
  5380  0032' 0815'              	movf	??_Sensor_Scanfrequency_Evaluation,w
  5381  0033' 0796'              	addwf	_sample_period,f
  5382  0034'                    l5295:	
  5383                           
  5384                           ;mtouch_sensor.c: 664: }
  5385                           ;mtouch_sensor.c: 665: Sensor_Acq_ExecutePacket(sensor_adc1,sensor_adc2);
  5386  0034' 0814'              	movf	Sensor_Scanfrequency_Evaluation@sensor_adc2,w
  5387  0035' 0095'              	movwf	??_Sensor_Scanfrequency_Evaluation
  5388  0036' 0815'              	movf	??_Sensor_Scanfrequency_Evaluation,w
  5389  0037' 0084'              	movwf	Sensor_Acq_ExecutePacket@sensor_adc2
  5390  0038' 0817'              	movf	Sensor_Scanfrequency_Evaluation@sensor_adc1,w
  5391  0039' 3180' 2000' 3180'  	fcall	_Sensor_Acq_ExecutePacket
  5392                           
  5393                           ;mtouch_sensor.c: 666: if(packet_noise_Max < packet_noise)
  5394  003C' 0020               	movlb	0	; select bank0
  5395  003D' 0805'              	movf	_packet_noise+1,w
  5396  003E' 0219'              	subwf	Sensor_Scanfrequency_Evaluation@packet_noise_Max+1,w
  5397  003F' 1D03               	skipz
  5398  0040' 2800'              	goto	u5255
  5399  0041' 0804'              	movf	_packet_noise,w
  5400  0042' 0218'              	subwf	Sensor_Scanfrequency_Evaluation@packet_noise_Max,w
  5401  0043'                    u5255:	
  5402  0043' 1803               	skipnc
  5403  0044' 2800'              	goto	l5301
  5404                           
  5405                           ;mtouch_sensor.c: 667: {
  5406                           ;mtouch_sensor.c: 668: packet_noise_Max = packet_noise;
  5407  0045' 0805'              	movf	_packet_noise+1,w
  5408  0046' 0099'              	movwf	Sensor_Scanfrequency_Evaluation@packet_noise_Max+1
  5409  0047' 0804'              	movf	_packet_noise,w
  5410  0048' 0098'              	movwf	Sensor_Scanfrequency_Evaluation@packet_noise_Max
  5411                           
  5412                           ;mtouch_sensor.c: 669: best_sample_period = sample_period;
  5413  0049' 0816'              	movf	_sample_period,w
  5414  004A' 0095'              	movwf	??_Sensor_Scanfrequency_Evaluation
  5415  004B' 0815'              	movf	??_Sensor_Scanfrequency_Evaluation,w
  5416  004C' 009A'              	movwf	Sensor_Scanfrequency_Evaluation@best_sample_period
  5417                           
  5418                           ;mtouch_sensor.c: 670: best_packet_sample[0] = packet_sample[0];
  5419  004D' 0801'              	movf	_packet_sample+1,w
  5420  004E' 009C'              	movwf	Sensor_Scanfrequency_Evaluation@best_packet_sample+1
  5421  004F' 0800'              	movf	_packet_sample,w
  5422  0050' 009B'              	movwf	Sensor_Scanfrequency_Evaluation@best_packet_sample
  5423                           
  5424                           ;mtouch_sensor.c: 671: best_packet_sample[1] = packet_sample[1];
  5425  0051' 0803'              	movf	_packet_sample+3,w
  5426  0052' 009E'              	movwf	Sensor_Scanfrequency_Evaluation@best_packet_sample+3
  5427  0053' 0802'              	movf	_packet_sample+2,w
  5428  0054' 009D'              	movwf	Sensor_Scanfrequency_Evaluation@best_packet_sample+2
  5429  0055'                    l5301:	
  5430  0055' 3001               	movlw	1
  5431  0056' 0095'              	movwf	??_Sensor_Scanfrequency_Evaluation
  5432  0057' 0815'              	movf	??_Sensor_Scanfrequency_Evaluation,w
  5433  0058' 079F'              	addwf	Sensor_Scanfrequency_Evaluation@i,f
  5434  0059' 3005               	movlw	5
  5435  005A' 021F'              	subwf	Sensor_Scanfrequency_Evaluation@i,w
  5436  005B' 1C03               	skipc
  5437  005C' 2800'              	goto	l5287
  5438  005D'                    l5305:	
  5439                           
  5440                           ;mtouch_sensor.c: 672: }
  5441                           ;mtouch_sensor.c: 673: }
  5442                           ;mtouch_sensor.c: 675: sample_period = best_sample_period;
  5443  005D' 081A'              	movf	Sensor_Scanfrequency_Evaluation@best_sample_period,w
  5444  005E' 0095'              	movwf	??_Sensor_Scanfrequency_Evaluation
  5445  005F' 0815'              	movf	??_Sensor_Scanfrequency_Evaluation,w
  5446  0060' 0096'              	movwf	_sample_period
  5447                           
  5448                           ;mtouch_sensor.c: 676: packet_sample[0] = best_packet_sample[0];
  5449  0061' 081C'              	movf	Sensor_Scanfrequency_Evaluation@best_packet_sample+1,w
  5450  0062' 0081'              	movwf	_packet_sample+1
  5451  0063' 081B'              	movf	Sensor_Scanfrequency_Evaluation@best_packet_sample,w
  5452  0064' 0080'              	movwf	_packet_sample
  5453                           
  5454                           ;mtouch_sensor.c: 677: packet_sample[1] = best_packet_sample[1];
  5455  0065' 081E'              	movf	Sensor_Scanfrequency_Evaluation@best_packet_sample+3,w
  5456  0066' 0083'              	movwf	_packet_sample+3
  5457  0067' 081D'              	movf	Sensor_Scanfrequency_Evaluation@best_packet_sample+2,w
  5458  0068' 0082'              	movwf	_packet_sample+2
  5459  0069' 0008               	return
  5460  006A'                    __end_of_Sensor_Scanfrequency_Evaluation:	
  5461                           
  5462                           	psect	text25
  5463  0000'                    __ptext25:	
  5464 ;; *************** function _Sensor_Acq_ExecutePacket *****************
  5465 ;; Defined at:
  5466 ;;		line 402 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  sensor_adc1     1    wreg     PTR struct .
  5469 ;;		 -> mtouch_sensor(54), 
  5470 ;;  sensor_adc2     1    4[BANK0 ] PTR struct .
  5471 ;;		 -> mtouch_sensor(54), 
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;  sensor_adc1     1   19[BANK0 ] PTR struct .
  5474 ;;		 -> mtouch_sensor(54), 
  5475 ;;  last_b          2   15[BANK0 ] unsigned int 
  5476 ;;  last_a          2   13[BANK0 ] unsigned int 
  5477 ;;  sensor_globa    1   18[BANK0 ] struct .
  5478 ;;  packet_count    1   17[BANK0 ] unsigned char 
  5479 ;;  activeSensor    1   12[BANK0 ] unsigned char 
  5480 ;;  error           1   11[BANK0 ] enum E3335
  5481 ;;  ADxIF_flag      1   10[BANK0 ] unsigned char 
  5482 ;;  AD2CON2_temp    1    9[BANK0 ] unsigned char 
  5483 ;;  AD1CON2_temp    1    8[BANK0 ] unsigned char 
  5484 ;;  ADCOMCON_tem    1    7[BANK0 ] unsigned char 
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      enum E3335
  5487 ;; Registers used:
  5488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5494 ;;      Params:         0       1       0       0       0       0       0       0
  5495 ;;      Locals:         0      13       0       0       0       0       0       0
  5496 ;;      Temps:          0       2       0       0       0       0       0       0
  5497 ;;      Totals:         0      16       0       0       0       0       0       0
  5498 ;;Total ram usage:       16 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:    4
  5501 ;; This function calls:
  5502 ;;		_MTOUCH_Sensor_Scan_Initialize
  5503 ;;		_Sensor_autoCalibration
  5504 ;;		_Sensor_isActive
  5505 ;;		_Sensor_isCalibrated
  5506 ;;		_Sensor_isCalibratingAcqTime
  5507 ;;		_Sensor_isEnabled
  5508 ;;		_TMR2_LoadPeriodRegister
  5509 ;;		_TMR2_StartTimer
  5510 ;;		_TMR2_StopTimer
  5511 ;;		_abs
  5512 ;; This function is called by:
  5513 ;;		_Sensor_Acquisition
  5514 ;;		_Sensor_Scanfrequency_Evaluation
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           
  5519                           ;psect for function _Sensor_Acq_ExecutePacket
  5520  0000'                    _Sensor_Acq_ExecutePacket:	
  5521                           
  5522                           ;incstack = 0
  5523                           ; Regs used in _Sensor_Acq_ExecutePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5524                           ;Sensor_Acq_ExecutePacket@sensor_adc1 stored from wreg
  5525  0000' 0020               	movlb	0	; select bank0
  5526  0001' 0093'              	movwf	Sensor_Acq_ExecutePacket@sensor_adc1
  5527                           
  5528                           ;mtouch_sensor.c: 404: enum mtouch_sensor_error error = MTOUCH_SENSOR_ERROR_none;
  5529  0002' 018B'              	clrf	Sensor_Acq_ExecutePacket@error
  5530                           
  5531                           ;mtouch_sensor.c: 405: uint8_t ADCOMCON_temp;
  5532                           ;mtouch_sensor.c: 406: uint8_t ADxIF_flag = 0;
  5533  0003' 018A'              	clrf	Sensor_Acq_ExecutePacket@ADxIF_flag
  5534                           
  5535                           ;mtouch_sensor.c: 407: mtouch_sensor_globalflags_t sensor_globalFlags;
  5536                           ;mtouch_sensor.c: 408: mtouch_sensor_packetcounter_t packet_counter;
  5537                           ;mtouch_sensor.c: 410: mtouch_sensor_adcsample_t last_a = 0;
  5538  0004' 018D'              	clrf	Sensor_Acq_ExecutePacket@last_a
  5539  0005' 018E'              	clrf	Sensor_Acq_ExecutePacket@last_a+1
  5540                           
  5541                           ;mtouch_sensor.c: 411: mtouch_sensor_adcsample_t last_b = 0;
  5542  0006' 018F'              	clrf	Sensor_Acq_ExecutePacket@last_b
  5543  0007' 0190'              	clrf	Sensor_Acq_ExecutePacket@last_b+1
  5544                           
  5545                           ;mtouch_sensor.c: 412: uint8_t activeSensor = 0;
  5546  0008' 018C'              	clrf	Sensor_Acq_ExecutePacket@activeSensor
  5547                           
  5548                           ;mtouch_sensor.c: 414: uint8_t ADCOMCON_temp;
  5549                           ;mtouch_sensor.c: 415: uint8_t AD1CON2_temp,AD2CON2_temp;
  5550                           ;mtouch_sensor.c: 418: if(Sensor_isEnabled(sensor_adc1)== 0 && Sensor_isEnabled(sensor_a
      +                          dc2)== 0)
  5551  0009' 0813'              	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5552  000A' 3180' 2000' 3180'  	fcall	_Sensor_isEnabled
  5553  000D' 3A00               	xorlw	0
  5554  000E' 1D03               	skipz
  5555  000F' 2800'              	goto	l5077
  5556  0010' 0020               	movlb	0	; select bank0
  5557  0011' 0804'              	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5558  0012' 3180' 2000' 3180'  	fcall	_Sensor_isEnabled
  5559  0015' 3A00               	xorlw	0
  5560  0016' 1D03               	skipz
  5561  0017' 2800'              	goto	l5077
  5562                           
  5563                           ;mtouch_sensor.c: 419: return error;
  5564  0018' 0020               	movlb	0	; select bank0
  5565  0019' 080B'              	movf	Sensor_Acq_ExecutePacket@error,w
  5566  001A' 0008               	return
  5567  001B'                    l5077:	
  5568                           
  5569                           ;mtouch_sensor.c: 421: if(Sensor_isActive(sensor_adc2))
  5570  001B' 0020               	movlb	0	; select bank0
  5571  001C' 0804'              	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5572  001D' 3180' 2000' 3180'  	fcall	_Sensor_isActive
  5573  0020' 3A00               	xorlw	0
  5574  0021' 1903               	skipnz
  5575  0022' 2800'              	goto	l5081
  5576                           
  5577                           ;mtouch_sensor.c: 422: activeSensor = 1;
  5578  0023' 0020               	movlb	0	; select bank0
  5579  0024' 018C'              	clrf	Sensor_Acq_ExecutePacket@activeSensor
  5580  0025' 0A8C'              	incf	Sensor_Acq_ExecutePacket@activeSensor,f
  5581  0026'                    l5081:	
  5582                           ;mtouch_sensor.c: 423: else
  5583                           ;mtouch_sensor.c: 424: {
  5584                           
  5585                           
  5586                           ;mtouch_sensor.c: 426: }
  5587                           ;mtouch_sensor.c: 428: ADCOMCON_temp = ADCOMCON;
  5588  0026' 002E               	movlb	14	; select bank14
  5589  0027' 0812               	movf	18,w	;volatile
  5590  0028' 0020               	movlb	0	; select bank0
  5591  0029' 0085'              	movwf	??_Sensor_Acq_ExecutePacket
  5592  002A' 0805'              	movf	??_Sensor_Acq_ExecutePacket,w
  5593  002B' 0087'              	movwf	Sensor_Acq_ExecutePacket@ADCOMCON_temp
  5594                           
  5595                           ;mtouch_sensor.c: 429: AD1CON2_temp = AD1CON2;
  5596  002C' 002E               	movlb	14	; select bank14
  5597  002D' 0813               	movf	19,w	;volatile
  5598  002E' 0020               	movlb	0	; select bank0
  5599  002F' 0085'              	movwf	??_Sensor_Acq_ExecutePacket
  5600  0030' 0805'              	movf	??_Sensor_Acq_ExecutePacket,w
  5601  0031' 0088'              	movwf	Sensor_Acq_ExecutePacket@AD1CON2_temp
  5602                           
  5603                           ;mtouch_sensor.c: 430: AD2CON2_temp = AD2CON2;
  5604  0032' 002F               	movlb	15	; select bank15
  5605  0033' 0813               	movf	19,w	;volatile
  5606  0034' 0020               	movlb	0	; select bank0
  5607  0035' 0085'              	movwf	??_Sensor_Acq_ExecutePacket
  5608  0036' 0805'              	movf	??_Sensor_Acq_ExecutePacket,w
  5609  0037' 0089'              	movwf	Sensor_Acq_ExecutePacket@AD2CON2_temp
  5610                           
  5611                           ;mtouch_sensor.c: 431: MTOUCH_Sensor_Scan_Initialize();
  5612  0038' 3180' 2000' 3180'  	fcall	_MTOUCH_Sensor_Scan_Initialize
  5613                           
  5614                           ;mtouch_sensor.c: 433: if(Sensor_isEnabled(sensor_adc1))
  5615  003B' 0020               	movlb	0	; select bank0
  5616  003C' 0813'              	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5617  003D' 3180' 2000' 3180'  	fcall	_Sensor_isEnabled
  5618  0040' 3A00               	xorlw	0
  5619  0041' 1903               	skipnz
  5620  0042' 2800'              	goto	l5113
  5621                           
  5622                           ;mtouch_sensor.c: 434: {
  5623                           ;mtouch_sensor.c: 435: AD1CON0 = (uint8_t)sensor_adc1->adcon0;
  5624  0043' 0020               	movlb	0	; select bank0
  5625  0044' 0813'              	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5626  0045' 0086               	movwf	6
  5627  0046' 3001               	movlw	1	; select bank2/3
  5628  0047' 0087               	movwf	7
  5629  0048' 3001               	movlw	1	; select bank2/3
  5630  0049' 3F41               	moviw [1]fsr1
  5631  004A' 002E               	movlb	14	; select bank14
  5632  004B' 0091               	movwf	17	;volatile
  5633                           
  5634                           ;mtouch_sensor.c: 436: AAD1CAP = (uint8_t)sensor_adc1->addcap;
  5635  004C' 0020               	movlb	0	; select bank0
  5636  004D' 0813'              	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5637  004E' 0086               	movwf	6
  5638  004F' 3001               	movlw	1	; select bank2/3
  5639  0050' 0087               	movwf	7
  5640  0051' 3001               	movlw	1	; select bank2/3
  5641  0052' 3F45               	moviw [5]fsr1
  5642  0053' 002E               	movlb	14	; select bank14
  5643  0054' 0099               	movwf	25	;volatile
  5644                           
  5645                           ;mtouch_sensor.c: 437: AD1CON2bits.TRIGSEL = (uint8_t)0b101;
  5646  0055' 0813               	movf	19,w	;volatile
  5647  0056' 398F               	andlw	-113
  5648  0057' 3850               	iorlw	80
  5649  0058' 0093               	movwf	19	;volatile
  5650                           
  5651                           ;mtouch_sensor.c: 439: if(Sensor_isCalibrated(sensor_adc1))
  5652  0059' 0020               	movlb	0	; select bank0
  5653  005A' 0813'              	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5654  005B' 3180' 2000' 3180'  	fcall	_Sensor_isCalibrated
  5655  005E' 3A00               	xorlw	0
  5656  005F' 1903               	skipnz
  5657  0060' 2800'              	goto	l5095
  5658                           
  5659                           ;mtouch_sensor.c: 440: {
  5660                           ;mtouch_sensor.c: 441: AD1PRECON = (uint8_t)sensor_adc1->precharge_time;
  5661  0061' 0020               	movlb	0	; select bank0
  5662  0062' 0813'              	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5663  0063' 0086               	movwf	6
  5664  0064' 3001               	movlw	1	; select bank2/3
  5665  0065' 0087               	movwf	7
  5666  0066' 3001               	movlw	1	; select bank2/3
  5667  0067' 3F42               	moviw [2]fsr1
  5668  0068' 002E               	movlb	14	; select bank14
  5669  0069' 0096               	movwf	22	;volatile
  5670                           
  5671                           ;mtouch_sensor.c: 442: AD1ACQCON = (uint8_t)sensor_adc1->acquisition_time;
  5672  006A' 0020               	movlb	0	; select bank0
  5673  006B' 0813'              	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5674  006C' 0086               	movwf	6
  5675  006D' 3001               	movlw	1	; select bank2/3
  5676  006E' 0087               	movwf	7
  5677  006F' 3001               	movlw	1	; select bank2/3
  5678  0070' 3F43               	moviw [3]fsr1
  5679  0071' 2800'              	goto	L4
  5680  0072'                    l5095:	
  5681                           ;mtouch_sensor.c: 443: }
  5682                           
  5683                           
  5684                           ;mtouch_sensor.c: 444: else
  5685                           ;mtouch_sensor.c: 445: {
  5686                           ;mtouch_sensor.c: 446: AD1PRECON = (mtouch_sensor_time_t)32;
  5687  0072' 3020               	movlw	32
  5688  0073' 002E               	movlb	14	; select bank14
  5689  0074' 0096               	movwf	22	;volatile
  5690                           
  5691                           ;mtouch_sensor.c: 447: if(Sensor_isCalibratingAcqTime(sensor_adc1))
  5692  0075' 0020               	movlb	0	; select bank0
  5693  0076' 0813'              	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5694  0077' 3180' 2000' 3180'  	fcall	_Sensor_isCalibratingAcqTime
  5695  007A' 3A00               	xorlw	0
  5696  007B' 1903               	skipnz
  5697  007C' 2800'              	goto	l5101
  5698                           
  5699                           ;mtouch_sensor.c: 448: AD1ACQCON = (uint8_t)sensor_adc1->acquisition_time;
  5700  007D' 0020               	movlb	0	; select bank0
  5701  007E' 0813'              	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5702  007F' 0086               	movwf	6
  5703  0080' 3001               	movlw	1	; select bank2/3
  5704  0081' 0087               	movwf	7
  5705  0082' 3001               	movlw	1	; select bank2/3
  5706  0083' 3F43               	moviw [3]fsr1
  5707  0084' 2800'              	goto	L4
  5708  0085'                    l5101:	
  5709                           
  5710                           ;mtouch_sensor.c: 449: else
  5711                           ;mtouch_sensor.c: 450: AD1ACQCON = (mtouch_sensor_time_t)32;
  5712  0085' 3020               	movlw	32
  5713  0086'                    L4:	
  5714  0086' 002E               	movlb	14	; select bank14
  5715  0087' 0097               	movwf	23	;volatile
  5716                           
  5717                           ;mtouch_sensor.c: 451: }
  5718                           ;mtouch_sensor.c: 453: packet_counter = sensor_adc1->oversampling-(mtouch_sensor_packetc
      +                          ounter_t)1;
  5719  0088' 0020               	movlb	0	; select bank0
  5720  0089' 0813'              	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5721  008A' 3E04               	addlw	4
  5722  008B' 0086               	movwf	6
  5723  008C' 3001               	movlw	1	; select bank2/3
  5724  008D' 0087               	movwf	7
  5725  008E' 0801               	movf	1,w
  5726  008F' 3EFF               	addlw	255
  5727  0090' 0085'              	movwf	??_Sensor_Acq_ExecutePacket
  5728  0091' 0805'              	movf	??_Sensor_Acq_ExecutePacket,w
  5729  0092' 0091'              	movwf	Sensor_Acq_ExecutePacket@packet_counter
  5730                           
  5731                           ;mtouch_sensor.c: 454: packet_sample[0] = (mtouch_sensor_packetsample_t)(sensor_adc1->ov
      +                          ersampling)<<9;
  5732  0093' 0813'              	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5733  0094' 3E04               	addlw	4
  5734  0095' 0086               	movwf	6
  5735  0096' 3001               	movlw	1	; select bank2/3
  5736  0097' 0087               	movwf	7
  5737  0098' 0801               	movf	1,w
  5738  0099' 0085'              	movwf	??_Sensor_Acq_ExecutePacket
  5739  009A' 0186'              	clrf	??_Sensor_Acq_ExecutePacket+1
  5740  009B' 3009               	movlw	9
  5741  009C'                    u4995:	
  5742  009C' 3585'              	lslf	??_Sensor_Acq_ExecutePacket,f
  5743  009D' 0D86'              	rlf	??_Sensor_Acq_ExecutePacket+1,f
  5744  009E' 0B89               	decfsz	9,f
  5745  009F' 2800'              	goto	u4995
  5746  00A0' 0805'              	movf	??_Sensor_Acq_ExecutePacket,w
  5747  00A1' 0080'              	movwf	_packet_sample
  5748  00A2' 0806'              	movf	??_Sensor_Acq_ExecutePacket+1,w
  5749  00A3' 0081'              	movwf	_packet_sample+1
  5750                           
  5751                           ;mtouch_sensor.c: 456: PIR1bits.AD1IF = 0;
  5752  00A4' 1311               	bcf	17,6	;volatile
  5753                           
  5754                           ;mtouch_sensor.c: 457: AAD1GRD = 0b01000000;
  5755  00A5' 3040               	movlw	64
  5756  00A6' 002E               	movlb	14	; select bank14
  5757  00A7' 0098               	movwf	24	;volatile
  5758                           
  5759                           ;mtouch_sensor.c: 458: AAD2GRD = 0b00000000;
  5760  00A8' 002F               	movlb	15	; select bank15
  5761  00A9' 0198               	clrf	24	;volatile
  5762                           
  5763                           ;mtouch_sensor.c: 459: APFCONbits.GRDASEL = 0x0;
  5764  00AA' 0022               	movlb	2	; select bank2
  5765  00AB' 101D               	bcf	29,0	;volatile
  5766                           
  5767                           ;mtouch_sensor.c: 461: }
  5768  00AC' 2800'              	goto	l5123
  5769  00AD'                    l5113:	
  5770                           
  5771                           ;mtouch_sensor.c: 462: else
  5772                           ;mtouch_sensor.c: 463: {
  5773                           ;mtouch_sensor.c: 464: packet_counter = sensor_adc2->oversampling-(mtouch_sensor_packetc
      +                          ounter_t)1;
  5774  00AD' 0020               	movlb	0	; select bank0
  5775  00AE' 0804'              	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5776  00AF' 3E04               	addlw	4
  5777  00B0' 0086               	movwf	6
  5778  00B1' 3001               	movlw	1	; select bank2/3
  5779  00B2' 0087               	movwf	7
  5780  00B3' 0801               	movf	1,w
  5781  00B4' 3EFF               	addlw	255
  5782  00B5' 0085'              	movwf	??_Sensor_Acq_ExecutePacket
  5783  00B6' 0805'              	movf	??_Sensor_Acq_ExecutePacket,w
  5784  00B7' 0091'              	movwf	Sensor_Acq_ExecutePacket@packet_counter
  5785                           
  5786                           ;mtouch_sensor.c: 465: ADxIF_flag = 1;
  5787  00B8' 018A'              	clrf	Sensor_Acq_ExecutePacket@ADxIF_flag
  5788  00B9' 0A8A'              	incf	Sensor_Acq_ExecutePacket@ADxIF_flag,f
  5789                           
  5790                           ;mtouch_sensor.c: 466: AAD1GRD = 0b00000000;
  5791  00BA' 002E               	movlb	14	; select bank14
  5792  00BB' 0198               	clrf	24	;volatile
  5793                           
  5794                           ;mtouch_sensor.c: 467: AAD2GRD = 0b01000000;
  5795  00BC' 3040               	movlw	64
  5796  00BD' 002F               	movlb	15	; select bank15
  5797  00BE' 0098               	movwf	24	;volatile
  5798                           
  5799                           ;mtouch_sensor.c: 468: APFCONbits.GRDASEL = 0x1;
  5800  00BF' 0022               	movlb	2	; select bank2
  5801  00C0' 141D               	bsf	29,0	;volatile
  5802  00C1'                    l5123:	
  5803                           
  5804                           ;mtouch_sensor.c: 469: }
  5805                           ;mtouch_sensor.c: 471: if(Sensor_isEnabled(sensor_adc2))
  5806  00C1' 0020               	movlb	0	; select bank0
  5807  00C2' 0804'              	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5808  00C3' 3180' 2000' 3180'  	fcall	_Sensor_isEnabled
  5809  00C6' 3A00               	xorlw	0
  5810  00C7' 1903               	skipnz
  5811  00C8' 2800'              	goto	l5145
  5812                           
  5813                           ;mtouch_sensor.c: 472: {
  5814                           ;mtouch_sensor.c: 473: AD2CON0 = (uint8_t)sensor_adc2->adcon0;
  5815  00C9' 0020               	movlb	0	; select bank0
  5816  00CA' 0804'              	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5817  00CB' 0086               	movwf	6
  5818  00CC' 3001               	movlw	1	; select bank2/3
  5819  00CD' 0087               	movwf	7
  5820  00CE' 3001               	movlw	1	; select bank2/3
  5821  00CF' 3F41               	moviw [1]fsr1
  5822  00D0' 002F               	movlb	15	; select bank15
  5823  00D1' 0091               	movwf	17	;volatile
  5824                           
  5825                           ;mtouch_sensor.c: 474: AAD2CAP = (uint8_t)sensor_adc2->addcap;
  5826  00D2' 0020               	movlb	0	; select bank0
  5827  00D3' 0804'              	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5828  00D4' 0086               	movwf	6
  5829  00D5' 3001               	movlw	1	; select bank2/3
  5830  00D6' 0087               	movwf	7
  5831  00D7' 3001               	movlw	1	; select bank2/3
  5832  00D8' 3F45               	moviw [5]fsr1
  5833  00D9' 002F               	movlb	15	; select bank15
  5834  00DA' 0099               	movwf	25	;volatile
  5835                           
  5836                           ;mtouch_sensor.c: 475: AD2CON2bits.TRIGSEL = (uint8_t)0b101;
  5837  00DB' 0813               	movf	19,w	;volatile
  5838  00DC' 398F               	andlw	-113
  5839  00DD' 3850               	iorlw	80
  5840  00DE' 0093               	movwf	19	;volatile
  5841                           
  5842                           ;mtouch_sensor.c: 476: if(Sensor_isCalibrated(sensor_adc2))
  5843  00DF' 0020               	movlb	0	; select bank0
  5844  00E0' 0804'              	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5845  00E1' 3180' 2000' 3180'  	fcall	_Sensor_isCalibrated
  5846  00E4' 3A00               	xorlw	0
  5847  00E5' 1903               	skipnz
  5848  00E6' 2800'              	goto	l5133
  5849                           
  5850                           ;mtouch_sensor.c: 477: {
  5851                           ;mtouch_sensor.c: 478: AD2PRECON = (uint8_t)sensor_adc2->precharge_time;
  5852  00E7' 0020               	movlb	0	; select bank0
  5853  00E8' 0804'              	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5854  00E9' 0086               	movwf	6
  5855  00EA' 3001               	movlw	1	; select bank2/3
  5856  00EB' 0087               	movwf	7
  5857  00EC' 3001               	movlw	1	; select bank2/3
  5858  00ED' 3F42               	moviw [2]fsr1
  5859  00EE' 002F               	movlb	15	; select bank15
  5860  00EF' 0096               	movwf	22	;volatile
  5861                           
  5862                           ;mtouch_sensor.c: 479: AD2ACQCON = (uint8_t)sensor_adc2->acquisition_time;
  5863  00F0' 0020               	movlb	0	; select bank0
  5864  00F1' 0804'              	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5865  00F2' 0086               	movwf	6
  5866  00F3' 3001               	movlw	1	; select bank2/3
  5867  00F4' 0087               	movwf	7
  5868  00F5' 3001               	movlw	1	; select bank2/3
  5869  00F6' 3F43               	moviw [3]fsr1
  5870  00F7' 2800'              	goto	L6
  5871  00F8'                    l5133:	
  5872                           ;mtouch_sensor.c: 480: }
  5873                           
  5874                           
  5875                           ;mtouch_sensor.c: 481: else
  5876                           ;mtouch_sensor.c: 482: {
  5877                           ;mtouch_sensor.c: 483: AD2PRECON = (mtouch_sensor_time_t)32;
  5878  00F8' 3020               	movlw	32
  5879  00F9' 002F               	movlb	15	; select bank15
  5880  00FA' 0096               	movwf	22	;volatile
  5881                           
  5882                           ;mtouch_sensor.c: 484: if(Sensor_isCalibratingAcqTime(sensor_adc2))
  5883  00FB' 0020               	movlb	0	; select bank0
  5884  00FC' 0804'              	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5885  00FD' 3180' 2000' 3180'  	fcall	_Sensor_isCalibratingAcqTime
  5886  0100' 3A00               	xorlw	0
  5887  0101' 1903               	skipnz
  5888  0102' 2800'              	goto	l5139
  5889                           
  5890                           ;mtouch_sensor.c: 485: AD2ACQCON = (uint8_t)sensor_adc2->acquisition_time;
  5891  0103' 0020               	movlb	0	; select bank0
  5892  0104' 0804'              	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5893  0105' 0086               	movwf	6
  5894  0106' 3001               	movlw	1	; select bank2/3
  5895  0107' 0087               	movwf	7
  5896  0108' 3001               	movlw	1	; select bank2/3
  5897  0109' 3F43               	moviw [3]fsr1
  5898  010A' 2800'              	goto	L6
  5899  010B'                    l5139:	
  5900                           
  5901                           ;mtouch_sensor.c: 486: else
  5902                           ;mtouch_sensor.c: 487: AD2ACQCON = (mtouch_sensor_time_t)32;
  5903  010B' 3020               	movlw	32
  5904  010C'                    L6:	
  5905  010C' 002F               	movlb	15	; select bank15
  5906  010D' 0097               	movwf	23	;volatile
  5907                           
  5908                           ;mtouch_sensor.c: 488: }
  5909                           ;mtouch_sensor.c: 489: packet_sample[1] = (mtouch_sensor_packetsample_t)(sensor_adc2->ov
      +                          ersampling)<<9;
  5910  010E' 0020               	movlb	0	; select bank0
  5911  010F' 0804'              	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5912  0110' 3E04               	addlw	4
  5913  0111' 0086               	movwf	6
  5914  0112' 3001               	movlw	1	; select bank2/3
  5915  0113' 0087               	movwf	7
  5916  0114' 0801               	movf	1,w
  5917  0115' 0085'              	movwf	??_Sensor_Acq_ExecutePacket
  5918  0116' 0186'              	clrf	??_Sensor_Acq_ExecutePacket+1
  5919  0117' 3009               	movlw	9
  5920  0118'                    u5035:	
  5921  0118' 3585'              	lslf	??_Sensor_Acq_ExecutePacket,f
  5922  0119' 0D86'              	rlf	??_Sensor_Acq_ExecutePacket+1,f
  5923  011A' 0B89               	decfsz	9,f
  5924  011B' 2800'              	goto	u5035
  5925  011C' 0805'              	movf	??_Sensor_Acq_ExecutePacket,w
  5926  011D' 0082'              	movwf	_packet_sample+2
  5927  011E' 0806'              	movf	??_Sensor_Acq_ExecutePacket+1,w
  5928  011F' 0083'              	movwf	_packet_sample+3
  5929                           
  5930                           ;mtouch_sensor.c: 490: PIR2bits.AD2IF = 0;
  5931  0120' 1312               	bcf	18,6	;volatile
  5932  0121'                    l5145:	
  5933                           
  5934                           ;mtouch_sensor.c: 491: }
  5935                           ;mtouch_sensor.c: 493: sensor_globalFlags.done = 0;
  5936  0121' 0020               	movlb	0	; select bank0
  5937  0122' 1012'              	bcf	Sensor_Acq_ExecutePacket@sensor_globalFlags,0
  5938                           
  5939                           ;mtouch_sensor.c: 495: TMR2_LoadPeriodRegister(sample_period);
  5940  0123' 0816'              	movf	_sample_period,w
  5941  0124' 3180' 2000' 3180'  	fcall	_TMR2_LoadPeriodRegister
  5942                           
  5943                           ;mtouch_sensor.c: 496: TMR2_StartTimer();
  5944  0127' 3180' 2000' 3180'  	fcall	_TMR2_StartTimer
  5945                           
  5946                           ;mtouch_sensor.c: 497: packet_noise = 0;
  5947  012A' 0020               	movlb	0	; select bank0
  5948  012B' 0184'              	clrf	_packet_noise
  5949  012C' 0185'              	clrf	_packet_noise+1
  5950  012D'                    l5153:	
  5951                           ;mtouch_sensor.c: 499: do
  5952                           
  5953                           
  5954                           ;mtouch_sensor.c: 500: {
  5955                           ;mtouch_sensor.c: 501: if(ADxIF_flag == 0)
  5956  012D' 080A'              	movf	Sensor_Acq_ExecutePacket@ADxIF_flag,w
  5957  012E' 1D03               	btfss	3,2
  5958  012F' 2800'              	goto	l667
  5959                           
  5960                           ;mtouch_sensor.c: 502: {
  5961                           ;mtouch_sensor.c: 503: if (PIR1bits.AD1IF == 0) { sensor_globalFlags.check = 0; }
  5962  0130' 1F11               	btfss	17,6	;volatile
  5963  0131' 1092'              	bcf	Sensor_Acq_ExecutePacket@sensor_globalFlags,1
  5964  0132'                    l669:	
  5965                           ;mtouch_sensor.c: 504: while (PIR1bits.AD1IF == 0) { }
  5966                           
  5967  0132' 1F11               	btfss	17,6	;volatile
  5968  0133' 2800'              	goto	l669
  5969                           
  5970                           ;mtouch_sensor.c: 505: PIR1bits.AD1IF = 0;
  5971  0134' 1311               	bcf	17,6	;volatile
  5972                           
  5973                           ;mtouch_sensor.c: 506: AAD1GRD ^= 0b00100000;
  5974  0135' 3020               	movlw	32
  5975  0136' 0085'              	movwf	??_Sensor_Acq_ExecutePacket
  5976  0137' 0805'              	movf	??_Sensor_Acq_ExecutePacket,w
  5977  0138' 002E               	movlb	14	; select bank14
  5978  0139' 2800'              	goto	L7
  5979  013A'                    l667:	
  5980                           ;mtouch_sensor.c: 507: }
  5981                           
  5982                           
  5983                           ;mtouch_sensor.c: 508: else
  5984                           ;mtouch_sensor.c: 509: {
  5985                           ;mtouch_sensor.c: 510: if (PIR2bits.AD2IF == 0) { sensor_globalFlags.check = 0; }
  5986  013A' 1B12               	btfsc	18,6	;volatile
  5987  013B' 2800'              	goto	l674
  5988  013C' 1092'              	bcf	Sensor_Acq_ExecutePacket@sensor_globalFlags,1
  5989  013D'                    l674:	
  5990                           ;mtouch_sensor.c: 511: while (PIR2bits.AD2IF == 0) { }
  5991                           
  5992  013D' 1F12               	btfss	18,6	;volatile
  5993  013E' 2800'              	goto	l674
  5994                           
  5995                           ;mtouch_sensor.c: 512: PIR2bits.AD2IF = 0;
  5996  013F' 1312               	bcf	18,6	;volatile
  5997                           
  5998                           ;mtouch_sensor.c: 513: AAD2GRD ^= 0b00100000;
  5999  0140' 3020               	movlw	32
  6000  0141' 0085'              	movwf	??_Sensor_Acq_ExecutePacket
  6001  0142' 0805'              	movf	??_Sensor_Acq_ExecutePacket,w
  6002  0143' 002F               	movlb	15	; select bank15
  6003  0144'                    L7:	
  6004  0144' 0698               	xorwf	24,f	;volatile
  6005                           
  6006                           ;mtouch_sensor.c: 514: }
  6007                           ;mtouch_sensor.c: 516: AAD1CON3 ^= 0b11000000;
  6008  0145' 30C0               	movlw	192
  6009  0146' 0020               	movlb	0	; select bank0
  6010  0147' 0085'              	movwf	??_Sensor_Acq_ExecutePacket
  6011  0148' 0805'              	movf	??_Sensor_Acq_ExecutePacket,w
  6012  0149' 002E               	movlb	14	; select bank14
  6013  014A' 0694               	xorwf	20,f	;volatile
  6014                           
  6015                           ;mtouch_sensor.c: 517: AAD2CON3 ^= 0b11000000;
  6016  014B' 30C0               	movlw	192
  6017  014C' 0020               	movlb	0	; select bank0
  6018  014D' 0085'              	movwf	??_Sensor_Acq_ExecutePacket
  6019  014E' 0805'              	movf	??_Sensor_Acq_ExecutePacket,w
  6020  014F' 002F               	movlb	15	; select bank15
  6021  0150' 0694               	xorwf	20,f	;volatile
  6022                           
  6023                           ;mtouch_sensor.c: 520: if ((packet_counter & 0x01) == 0)
  6024  0151' 0020               	movlb	0	; select bank0
  6025  0152' 1811'              	btfsc	Sensor_Acq_ExecutePacket@packet_counter,0
  6026  0153' 2800'              	goto	l5179
  6027                           
  6028                           ;mtouch_sensor.c: 521: {
  6029                           ;mtouch_sensor.c: 522: packet_sample[0] += AAD1RES0;
  6030  0154' 002E               	movlb	14	; select bank14
  6031  0155' 081A               	movf	26,w	;volatile
  6032  0156' 0020               	movlb	0	; select bank0
  6033  0157' 0780'              	addwf	_packet_sample,f
  6034  0158' 002E               	movlb	14	; select bank14
  6035  0159' 081B               	movf	27,w	;volatile
  6036  015A' 0020               	movlb	0	; select bank0
  6037  015B' 3D81'              	addwfc	_packet_sample+1,f
  6038                           
  6039                           ;mtouch_sensor.c: 523: packet_sample[1] += AAD2RES0;
  6040  015C' 002F               	movlb	15	; select bank15
  6041  015D' 081A               	movf	26,w	;volatile
  6042  015E' 0020               	movlb	0	; select bank0
  6043  015F' 0782'              	addwf	_packet_sample+2,f
  6044  0160' 002F               	movlb	15	; select bank15
  6045  0161' 081B               	movf	27,w	;volatile
  6046  0162' 0020               	movlb	0	; select bank0
  6047  0163' 3D83'              	addwfc	_packet_sample+3,f
  6048                           
  6049                           ;mtouch_sensor.c: 524: if(activeSensor ==0)
  6050  0164' 080C'              	movf	Sensor_Acq_ExecutePacket@activeSensor,w
  6051  0165' 1D03               	btfss	3,2
  6052  0166' 2800'              	goto	l5175
  6053                           
  6054                           ;mtouch_sensor.c: 525: {
  6055                           ;mtouch_sensor.c: 526: packet_noise += abs(last_b-AAD1RES0);
  6056  0167' 002E               	movlb	14	; select bank14
  6057  0168' 091A               	comf	26,w	;volatile
  6058  0169' 0020               	movlb	0	; select bank0
  6059  016A' 0085'              	movwf	??_Sensor_Acq_ExecutePacket
  6060  016B' 002E               	movlb	14	; select bank14
  6061  016C' 091B               	comf	27,w	;volatile
  6062  016D' 0020               	movlb	0	; select bank0
  6063  016E' 0086'              	movwf	??_Sensor_Acq_ExecutePacket+1
  6064  016F' 0A85'              	incf	??_Sensor_Acq_ExecutePacket,f
  6065  0170' 1903               	skipnz
  6066  0171' 0A86'              	incf	??_Sensor_Acq_ExecutePacket+1,f
  6067  0172' 080F'              	movf	Sensor_Acq_ExecutePacket@last_b,w
  6068  0173' 0705'              	addwf	??_Sensor_Acq_ExecutePacket,w
  6069  0174' 0082'              	movwf	abs@a
  6070  0175' 0810'              	movf	Sensor_Acq_ExecutePacket@last_b+1,w
  6071  0176' 3D06'              	addwfc	??_Sensor_Acq_ExecutePacket+1,w
  6072  0177' 0083'              	movwf	abs@a+1
  6073  0178' 3180' 2000' 3180'  	fcall	_abs
  6074  017B' 0802'              	movf	?_abs,w
  6075  017C' 0020               	movlb	0	; select bank0
  6076  017D' 0784'              	addwf	_packet_noise,f
  6077  017E' 0803'              	movf	?_abs+1,w
  6078  017F' 3D85'              	addwfc	_packet_noise+1,f
  6079                           
  6080                           ;mtouch_sensor.c: 527: last_b = AAD1RES0;
  6081  0180' 002E               	movlb	14	; select bank14
  6082  0181' 081B               	movf	27,w	;volatile
  6083  0182' 0020               	movlb	0	; select bank0
  6084  0183' 0090'              	movwf	Sensor_Acq_ExecutePacket@last_b+1
  6085  0184' 002E               	movlb	14	; select bank14
  6086  0185' 2800'              	goto	L8
  6087  0186'                    l5175:	
  6088                           ;mtouch_sensor.c: 528: }
  6089                           
  6090                           
  6091                           ;mtouch_sensor.c: 529: else
  6092                           ;mtouch_sensor.c: 530: {
  6093                           ;mtouch_sensor.c: 531: packet_noise += abs(last_b-AAD2RES0);
  6094  0186' 002F               	movlb	15	; select bank15
  6095  0187' 091A               	comf	26,w	;volatile
  6096  0188' 0020               	movlb	0	; select bank0
  6097  0189' 0085'              	movwf	??_Sensor_Acq_ExecutePacket
  6098  018A' 002F               	movlb	15	; select bank15
  6099  018B' 091B               	comf	27,w	;volatile
  6100  018C' 0020               	movlb	0	; select bank0
  6101  018D' 0086'              	movwf	??_Sensor_Acq_ExecutePacket+1
  6102  018E' 0A85'              	incf	??_Sensor_Acq_ExecutePacket,f
  6103  018F' 1903               	skipnz
  6104  0190' 0A86'              	incf	??_Sensor_Acq_ExecutePacket+1,f
  6105  0191' 080F'              	movf	Sensor_Acq_ExecutePacket@last_b,w
  6106  0192' 0705'              	addwf	??_Sensor_Acq_ExecutePacket,w
  6107  0193' 0082'              	movwf	abs@a
  6108  0194' 0810'              	movf	Sensor_Acq_ExecutePacket@last_b+1,w
  6109  0195' 3D06'              	addwfc	??_Sensor_Acq_ExecutePacket+1,w
  6110  0196' 0083'              	movwf	abs@a+1
  6111  0197' 3180' 2000' 3180'  	fcall	_abs
  6112  019A' 0802'              	movf	?_abs,w
  6113  019B' 0020               	movlb	0	; select bank0
  6114  019C' 0784'              	addwf	_packet_noise,f
  6115  019D' 0803'              	movf	?_abs+1,w
  6116  019E' 3D85'              	addwfc	_packet_noise+1,f
  6117                           
  6118                           ;mtouch_sensor.c: 532: last_b = AAD2RES0;
  6119  019F' 002F               	movlb	15	; select bank15
  6120  01A0' 081B               	movf	27,w	;volatile
  6121  01A1' 0020               	movlb	0	; select bank0
  6122  01A2' 0090'              	movwf	Sensor_Acq_ExecutePacket@last_b+1
  6123  01A3' 002F               	movlb	15	; select bank15
  6124  01A4'                    L8:	
  6125  01A4' 081A               	movf	26,w	;volatile
  6126  01A5' 0020               	movlb	0	; select bank0
  6127  01A6' 008F'              	movwf	Sensor_Acq_ExecutePacket@last_b
  6128                           
  6129                           ;mtouch_sensor.c: 533: }
  6130                           ;mtouch_sensor.c: 534: }
  6131  01A7' 2800'              	goto	l5191
  6132  01A8'                    l5179:	
  6133                           
  6134                           ;mtouch_sensor.c: 535: else
  6135                           ;mtouch_sensor.c: 536: {
  6136                           ;mtouch_sensor.c: 537: packet_sample[0] -= AAD1RES0;
  6137  01A8' 002E               	movlb	14	; select bank14
  6138  01A9' 081A               	movf	26,w	;volatile
  6139  01AA' 0020               	movlb	0	; select bank0
  6140  01AB' 0280'              	subwf	_packet_sample,f
  6141  01AC' 002E               	movlb	14	; select bank14
  6142  01AD' 081B               	movf	27,w	;volatile
  6143  01AE' 0020               	movlb	0	; select bank0
  6144  01AF' 3B81'              	subwfb	_packet_sample+1,f
  6145                           
  6146                           ;mtouch_sensor.c: 538: packet_sample[1] -= AAD2RES0;
  6147  01B0' 002F               	movlb	15	; select bank15
  6148  01B1' 081A               	movf	26,w	;volatile
  6149  01B2' 0020               	movlb	0	; select bank0
  6150  01B3' 0282'              	subwf	_packet_sample+2,f
  6151  01B4' 002F               	movlb	15	; select bank15
  6152  01B5' 081B               	movf	27,w	;volatile
  6153  01B6' 0020               	movlb	0	; select bank0
  6154  01B7' 3B83'              	subwfb	_packet_sample+3,f
  6155                           
  6156                           ;mtouch_sensor.c: 539: if(activeSensor ==0)
  6157  01B8' 080C'              	movf	Sensor_Acq_ExecutePacket@activeSensor,w
  6158  01B9' 1D03               	btfss	3,2
  6159  01BA' 2800'              	goto	l5187
  6160                           
  6161                           ;mtouch_sensor.c: 540: {
  6162                           ;mtouch_sensor.c: 541: packet_noise +=abs(last_a-AAD1RES0);
  6163  01BB' 002E               	movlb	14	; select bank14
  6164  01BC' 091A               	comf	26,w	;volatile
  6165  01BD' 0020               	movlb	0	; select bank0
  6166  01BE' 0085'              	movwf	??_Sensor_Acq_ExecutePacket
  6167  01BF' 002E               	movlb	14	; select bank14
  6168  01C0' 2800'              	goto	L9
  6169  01C1'                    l5187:	
  6170                           ;mtouch_sensor.c: 543: }
  6171                           
  6172                           ;mtouch_sensor.c: 542: last_a = AAD1RES0;
  6173                           
  6174                           
  6175                           ;mtouch_sensor.c: 544: else
  6176                           ;mtouch_sensor.c: 545: {
  6177                           ;mtouch_sensor.c: 546: packet_noise +=abs(last_a-AAD2RES0);
  6178  01C1' 002F               	movlb	15	; select bank15
  6179  01C2' 091A               	comf	26,w	;volatile
  6180  01C3' 0020               	movlb	0	; select bank0
  6181  01C4' 0085'              	movwf	??_Sensor_Acq_ExecutePacket
  6182  01C5' 002F               	movlb	15	; select bank15
  6183  01C6'                    L9:	
  6184  01C6' 091B               	comf	27,w	;volatile
  6185  01C7' 0020               	movlb	0	; select bank0
  6186  01C8' 0086'              	movwf	??_Sensor_Acq_ExecutePacket+1
  6187  01C9' 0A85'              	incf	??_Sensor_Acq_ExecutePacket,f
  6188  01CA' 1903               	skipnz
  6189  01CB' 0A86'              	incf	??_Sensor_Acq_ExecutePacket+1,f
  6190  01CC' 080D'              	movf	Sensor_Acq_ExecutePacket@last_a,w
  6191  01CD' 0705'              	addwf	??_Sensor_Acq_ExecutePacket,w
  6192  01CE' 0082'              	movwf	abs@a
  6193  01CF' 080E'              	movf	Sensor_Acq_ExecutePacket@last_a+1,w
  6194  01D0' 3D06'              	addwfc	??_Sensor_Acq_ExecutePacket+1,w
  6195  01D1' 0083'              	movwf	abs@a+1
  6196  01D2' 3180' 2000' 3180'  	fcall	_abs
  6197  01D5' 0802'              	movf	?_abs,w
  6198  01D6' 0020               	movlb	0	; select bank0
  6199  01D7' 0784'              	addwf	_packet_noise,f
  6200  01D8' 0803'              	movf	?_abs+1,w
  6201  01D9' 3D85'              	addwfc	_packet_noise+1,f
  6202                           
  6203                           ;mtouch_sensor.c: 547: last_a = AAD1RES0;
  6204  01DA' 002E               	movlb	14	; select bank14
  6205  01DB' 081B               	movf	27,w	;volatile
  6206  01DC' 0020               	movlb	0	; select bank0
  6207  01DD' 008E'              	movwf	Sensor_Acq_ExecutePacket@last_a+1
  6208  01DE' 002E               	movlb	14	; select bank14
  6209  01DF' 081A               	movf	26,w	;volatile
  6210  01E0' 0020               	movlb	0	; select bank0
  6211  01E1' 008D'              	movwf	Sensor_Acq_ExecutePacket@last_a
  6212  01E2'                    l5191:	
  6213                           
  6214                           ;mtouch_sensor.c: 548: }
  6215                           ;mtouch_sensor.c: 549: }
  6216                           ;mtouch_sensor.c: 552: if (packet_counter == 0)
  6217  01E2' 0811'              	movf	Sensor_Acq_ExecutePacket@packet_counter,w
  6218  01E3' 1903               	btfsc	3,2
  6219                           
  6220                           ;mtouch_sensor.c: 553: {
  6221                           ;mtouch_sensor.c: 555: sensor_globalFlags.done = (uint8_t)1;
  6222  01E4' 1412'              	bsf	Sensor_Acq_ExecutePacket@sensor_globalFlags,0
  6223                           
  6224                           ;mtouch_sensor.c: 556: }
  6225                           ;mtouch_sensor.c: 557: packet_counter--;
  6226  01E5' 3001               	movlw	1
  6227  01E6' 0291'              	subwf	Sensor_Acq_ExecutePacket@packet_counter,f
  6228                           
  6229                           ;mtouch_sensor.c: 559: if (sensor_globalFlags.check != 0)
  6230  01E7' 1C92'              	btfss	Sensor_Acq_ExecutePacket@sensor_globalFlags,1
  6231  01E8' 2800'              	goto	l684
  6232                           
  6233                           ;mtouch_sensor.c: 560: {
  6234                           ;mtouch_sensor.c: 561: sensor_globalFlags.error = 1;
  6235  01E9' 1512'              	bsf	Sensor_Acq_ExecutePacket@sensor_globalFlags,2
  6236                           
  6237                           ;mtouch_sensor.c: 562: sensor_globalFlags.done = 1;
  6238  01EA' 1412'              	bsf	Sensor_Acq_ExecutePacket@sensor_globalFlags,0
  6239  01EB'                    l684:	
  6240                           
  6241                           ;mtouch_sensor.c: 563: }
  6242                           ;mtouch_sensor.c: 564: sensor_globalFlags.check = 1;
  6243  01EB' 1492'              	bsf	Sensor_Acq_ExecutePacket@sensor_globalFlags,1
  6244                           
  6245                           ;mtouch_sensor.c: 565: } while(sensor_globalFlags.done == 0);
  6246  01EC' 1C12'              	btfss	Sensor_Acq_ExecutePacket@sensor_globalFlags,0
  6247  01ED' 2800'              	goto	l5153
  6248                           
  6249                           ;mtouch_sensor.c: 567: TMR2_StopTimer();
  6250  01EE' 3180' 2000' 3180'  	fcall	_TMR2_StopTimer
  6251                           
  6252                           ;mtouch_sensor.c: 568: ADCOMCON = ADCOMCON_temp;
  6253  01F1' 0020               	movlb	0	; select bank0
  6254  01F2' 0807'              	movf	Sensor_Acq_ExecutePacket@ADCOMCON_temp,w
  6255  01F3' 002E               	movlb	14	; select bank14
  6256  01F4' 0092               	movwf	18	;volatile
  6257                           
  6258                           ;mtouch_sensor.c: 569: AD1CON2 = AD1CON2_temp;
  6259  01F5' 0020               	movlb	0	; select bank0
  6260  01F6' 0808'              	movf	Sensor_Acq_ExecutePacket@AD1CON2_temp,w
  6261  01F7' 002E               	movlb	14	; select bank14
  6262  01F8' 0093               	movwf	19	;volatile
  6263                           
  6264                           ;mtouch_sensor.c: 570: AD2CON2 = AD2CON2_temp;
  6265  01F9' 0020               	movlb	0	; select bank0
  6266  01FA' 0809'              	movf	Sensor_Acq_ExecutePacket@AD2CON2_temp,w
  6267  01FB' 002F               	movlb	15	; select bank15
  6268  01FC' 0093               	movwf	19	;volatile
  6269                           
  6270                           ;mtouch_sensor.c: 573: if(Sensor_isEnabled(sensor_adc1) && !Sensor_isCalibrated(sensor_a
      +                          dc1))
  6271  01FD' 0020               	movlb	0	; select bank0
  6272  01FE' 0813'              	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  6273  01FF' 3180' 2000' 3180'  	fcall	_Sensor_isEnabled
  6274  0202' 3A00               	xorlw	0
  6275  0203' 1903               	skipnz
  6276  0204' 2800'              	goto	l5215
  6277  0205' 0020               	movlb	0	; select bank0
  6278  0206' 0813'              	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  6279  0207' 3180' 2000' 3180'  	fcall	_Sensor_isCalibrated
  6280  020A' 3A00               	xorlw	0
  6281  020B' 1D03               	skipz
  6282  020C' 2800'              	goto	l5215
  6283                           
  6284                           ;mtouch_sensor.c: 574: Sensor_autoCalibration(sensor_adc1);
  6285  020D' 0020               	movlb	0	; select bank0
  6286  020E' 0813'              	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  6287  020F' 3180' 2000' 3180'  	fcall	_Sensor_autoCalibration
  6288  0212'                    l5215:	
  6289                           
  6290                           ;mtouch_sensor.c: 576: if(Sensor_isEnabled(sensor_adc2) && !Sensor_isCalibrated(sensor_a
      +                          dc2))
  6291  0212' 0020               	movlb	0	; select bank0
  6292  0213' 0804'              	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  6293  0214' 3180' 2000' 3180'  	fcall	_Sensor_isEnabled
  6294  0217' 3A00               	xorlw	0
  6295  0218' 1903               	skipnz
  6296  0219' 2800'              	goto	l5221
  6297  021A' 0020               	movlb	0	; select bank0
  6298  021B' 0804'              	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  6299  021C' 3180' 2000' 3180'  	fcall	_Sensor_isCalibrated
  6300  021F' 3A00               	xorlw	0
  6301  0220' 1D03               	skipz
  6302  0221' 2800'              	goto	l5221
  6303                           
  6304                           ;mtouch_sensor.c: 577: Sensor_autoCalibration(sensor_adc2);
  6305  0222' 0020               	movlb	0	; select bank0
  6306  0223' 0804'              	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  6307  0224' 3180' 2000'        	fcall	_Sensor_autoCalibration
  6308  0226'                    l5221:	
  6309                           
  6310                           ;mtouch_sensor.c: 579: AD1PRECON = 0;
  6311  0226' 002E               	movlb	14	; select bank14
  6312  0227' 0196               	clrf	22	;volatile
  6313                           
  6314                           ;mtouch_sensor.c: 580: AD2PRECON = 0;
  6315  0228' 002F               	movlb	15	; select bank15
  6316  0229' 0196               	clrf	22	;volatile
  6317                           
  6318                           ;mtouch_sensor.c: 581: AD1ACQCON = 0;
  6319  022A' 002E               	movlb	14	; select bank14
  6320  022B' 0197               	clrf	23	;volatile
  6321                           
  6322                           ;mtouch_sensor.c: 582: AD2ACQCON = 0;
  6323  022C' 002F               	movlb	15	; select bank15
  6324  022D' 0197               	clrf	23	;volatile
  6325                           
  6326                           ;mtouch_sensor.c: 583: AD1CON0bits.ADON = 0;
  6327  022E' 002E               	movlb	14	; select bank14
  6328  022F' 1011               	bcf	17,0	;volatile
  6329                           
  6330                           ;mtouch_sensor.c: 584: AD2CON0bits.ADON = 0;
  6331  0230' 002F               	movlb	15	; select bank15
  6332  0231' 1011               	bcf	17,0	;volatile
  6333                           
  6334                           ;mtouch_sensor.c: 586: return error;
  6335  0232' 0020               	movlb	0	; select bank0
  6336  0233' 080B'              	movf	Sensor_Acq_ExecutePacket@error,w
  6337  0234' 0008               	return
  6338  0235'                    __end_of_Sensor_Acq_ExecutePacket:	
  6339                           
  6340                           	psect	text26
  6341  0000'                    __ptext26:	
  6342 ;; *************** function _TMR2_StopTimer *****************
  6343 ;; Defined at:
  6344 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;		None
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;		None
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1    wreg      void 
  6351 ;; Registers used:
  6352 ;;		None
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6358 ;;      Params:         0       0       0       0       0       0       0       0
  6359 ;;      Locals:         0       0       0       0       0       0       0       0
  6360 ;;      Temps:          0       0       0       0       0       0       0       0
  6361 ;;      Totals:         0       0       0       0       0       0       0       0
  6362 ;;Total ram usage:        0 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; Hardware stack levels required when called:    2
  6365 ;; This function calls:
  6366 ;;		Nothing
  6367 ;; This function is called by:
  6368 ;;		_Sensor_Acq_ExecutePacket
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           
  6373                           ;psect for function _TMR2_StopTimer
  6374  0000'                    _TMR2_StopTimer:	
  6375                           
  6376                           ;tmr2.c: 90: T2CONbits.TMR2ON = 0;
  6377                           
  6378                           ;incstack = 0
  6379                           ; Regs used in _TMR2_StopTimer: []
  6380  0000' 0020               	movlb	0	; select bank0
  6381  0001' 111C               	bcf	28,2	;volatile
  6382  0002' 0008               	return
  6383  0003'                    __end_of_TMR2_StopTimer:	
  6384                           
  6385                           	psect	text27
  6386  0000'                    __ptext27:	
  6387 ;; *************** function _TMR2_StartTimer *****************
  6388 ;; Defined at:
  6389 ;;		line 81 in file "mcc_generated_files/tmr2.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;		None
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      void 
  6396 ;; Registers used:
  6397 ;;		None
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6403 ;;      Params:         0       0       0       0       0       0       0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0       0
  6405 ;;      Temps:          0       0       0       0       0       0       0       0
  6406 ;;      Totals:         0       0       0       0       0       0       0       0
  6407 ;;Total ram usage:        0 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; Hardware stack levels required when called:    2
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_TMR2_Initialize
  6414 ;;		_Sensor_Acq_ExecutePacket
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           
  6419                           ;psect for function _TMR2_StartTimer
  6420  0000'                    _TMR2_StartTimer:	
  6421                           
  6422                           ;tmr2.c: 84: T2CONbits.TMR2ON = 1;
  6423                           
  6424                           ;incstack = 0
  6425                           ; Regs used in _TMR2_StartTimer: []
  6426  0000' 0020               	movlb	0	; select bank0
  6427  0001' 151C               	bsf	28,2	;volatile
  6428  0002' 0008               	return
  6429  0003'                    __end_of_TMR2_StartTimer:	
  6430                           
  6431                           	psect	text28
  6432  0000'                    __ptext28:	
  6433 ;; *************** function _TMR2_LoadPeriodRegister *****************
  6434 ;; Defined at:
  6435 ;;		line 108 in file "mcc_generated_files/tmr2.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;  periodVal       1    wreg     unsigned char 
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;  periodVal       1    2[COMMON] unsigned char 
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  1    wreg      void 
  6442 ;; Registers used:
  6443 ;;		wreg
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6449 ;;      Params:         0       0       0       0       0       0       0       0
  6450 ;;      Locals:         1       0       0       0       0       0       0       0
  6451 ;;      Temps:          0       0       0       0       0       0       0       0
  6452 ;;      Totals:         1       0       0       0       0       0       0       0
  6453 ;;Total ram usage:        1 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:    2
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		_Sensor_Acq_ExecutePacket
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           
  6464                           ;psect for function _TMR2_LoadPeriodRegister
  6465  0000'                    _TMR2_LoadPeriodRegister:	
  6466                           
  6467                           ;incstack = 0
  6468                           ; Regs used in _TMR2_LoadPeriodRegister: [wreg]
  6469                           ;TMR2_LoadPeriodRegister@periodVal stored from wreg
  6470  0000' 0082'              	movwf	TMR2_LoadPeriodRegister@periodVal
  6471                           
  6472                           ;tmr2.c: 110: PR2 = periodVal;
  6473  0001' 0802'              	movf	TMR2_LoadPeriodRegister@periodVal,w
  6474  0002' 0020               	movlb	0	; select bank0
  6475  0003' 009B               	movwf	27	;volatile
  6476  0004' 0008               	return
  6477  0005'                    __end_of_TMR2_LoadPeriodRegister:	
  6478                           
  6479                           	psect	text29
  6480  0000'                    __ptext29:	
  6481 ;; *************** function _Sensor_isEnabled *****************
  6482 ;; Defined at:
  6483 ;;		line 748 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;  sensor          1    wreg     PTR struct .
  6486 ;;		 -> mtouch_sensor(54), 
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;  sensor          1    3[COMMON] PTR struct .
  6489 ;;		 -> mtouch_sensor(54), 
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  1    wreg      unsigned char 
  6492 ;; Registers used:
  6493 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6499 ;;      Params:         0       0       0       0       0       0       0       0
  6500 ;;      Locals:         1       0       0       0       0       0       0       0
  6501 ;;      Temps:          1       0       0       0       0       0       0       0
  6502 ;;      Totals:         2       0       0       0       0       0       0       0
  6503 ;;Total ram usage:        2 bytes
  6504 ;; Hardware stack levels used:    1
  6505 ;; Hardware stack levels required when called:    2
  6506 ;; This function calls:
  6507 ;;		Nothing
  6508 ;; This function is called by:
  6509 ;;		_Sensor_Service
  6510 ;;		_Sensor_postAcquisitionProcess
  6511 ;;		_Sensor_Acq_ExecutePacket
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           
  6516                           ;psect for function _Sensor_isEnabled
  6517  0000'                    _Sensor_isEnabled:	
  6518                           
  6519                           ;incstack = 0
  6520                           ; Regs used in _Sensor_isEnabled: [wreg+fsr1l+fsr1h+status,2+status,0]
  6521                           ;Sensor_isEnabled@sensor stored from wreg
  6522  0000' 0083'              	movwf	Sensor_isEnabled@sensor
  6523                           
  6524                           ;mtouch_sensor.c: 750: if(sensor!=(0))
  6525  0001' 0803'              	movf	Sensor_isEnabled@sensor,w
  6526  0002' 1903               	btfsc	3,2
  6527  0003' 2800'              	goto	l5011
  6528                           
  6529                           ;mtouch_sensor.c: 751: return (bool)sensor->enabled;
  6530  0004' 0803'              	movf	Sensor_isEnabled@sensor,w
  6531  0005' 3E08               	addlw	8
  6532  0006' 0086               	movwf	6
  6533  0007' 3001               	movlw	1	; select bank2/3
  6534  0008' 0087               	movwf	7
  6535  0009' 0C01               	rrf	1,w
  6536  000A' 0082'              	movwf	??_Sensor_isEnabled
  6537  000B' 0C82'              	rrf	??_Sensor_isEnabled,f
  6538  000C' 0C02'              	rrf	??_Sensor_isEnabled,w
  6539  000D' 3901               	andlw	1
  6540  000E' 0008               	return
  6541  000F'                    l5011:	
  6542                           
  6543                           ;mtouch_sensor.c: 752: else
  6544                           ;mtouch_sensor.c: 753: return 0;
  6545  000F' 3000               	movlw	0
  6546  0010' 0008               	return
  6547  0011'                    __end_of_Sensor_isEnabled:	
  6548                           
  6549                           	psect	text30
  6550  0000'                    __ptext30:	
  6551 ;; *************** function _Sensor_isCalibrated *****************
  6552 ;; Defined at:
  6553 ;;		line 811 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6554 ;; Parameters:    Size  Location     Type
  6555 ;;  sensor          1    wreg     PTR struct .
  6556 ;;		 -> mtouch_sensor(54), 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  sensor          1    2[COMMON] PTR struct .
  6559 ;;		 -> mtouch_sensor(54), 
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  1    wreg      unsigned char 
  6562 ;; Registers used:
  6563 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6569 ;;      Params:         0       0       0       0       0       0       0       0
  6570 ;;      Locals:         1       0       0       0       0       0       0       0
  6571 ;;      Temps:          0       0       0       0       0       0       0       0
  6572 ;;      Totals:         1       0       0       0       0       0       0       0
  6573 ;;Total ram usage:        1 bytes
  6574 ;; Hardware stack levels used:    1
  6575 ;; Hardware stack levels required when called:    2
  6576 ;; This function calls:
  6577 ;;		Nothing
  6578 ;; This function is called by:
  6579 ;;		_Sensor_Acquisition
  6580 ;;		_Sensor_Acq_ExecutePacket
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583                           
  6584                           
  6585                           ;psect for function _Sensor_isCalibrated
  6586  0000'                    _Sensor_isCalibrated:	
  6587                           
  6588                           ;incstack = 0
  6589                           ; Regs used in _Sensor_isCalibrated: [wreg+fsr1l+fsr1h+status,2+status,0]
  6590                           ;Sensor_isCalibrated@sensor stored from wreg
  6591  0000' 0082'              	movwf	Sensor_isCalibrated@sensor
  6592                           
  6593                           ;mtouch_sensor.c: 813: return (bool)sensor->calibrated;
  6594  0001' 0802'              	movf	Sensor_isCalibrated@sensor,w
  6595  0002' 3E08               	addlw	8
  6596  0003' 0086               	movwf	6
  6597  0004' 3001               	movlw	1	; select bank2/3
  6598  0005' 0087               	movwf	7
  6599  0006' 0C01               	rrf	1,w
  6600  0007' 0C89               	rrf	9,f
  6601  0008' 3901               	andlw	1
  6602  0009' 0008               	return
  6603  000A'                    __end_of_Sensor_isCalibrated:	
  6604                           
  6605                           	psect	text31
  6606  0000'                    __ptext31:	
  6607 ;; *************** function _Sensor_isActive *****************
  6608 ;; Defined at:
  6609 ;;		line 775 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6610 ;; Parameters:    Size  Location     Type
  6611 ;;  sensor          1    wreg     PTR struct .
  6612 ;;		 -> mtouch_sensor(54), 
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;  sensor          1    2[COMMON] PTR struct .
  6615 ;;		 -> mtouch_sensor(54), 
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  1    wreg      unsigned char 
  6618 ;; Registers used:
  6619 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/0
  6622 ;;		On exit  : 0/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6625 ;;      Params:         0       0       0       0       0       0       0       0
  6626 ;;      Locals:         1       0       0       0       0       0       0       0
  6627 ;;      Temps:          0       0       0       0       0       0       0       0
  6628 ;;      Totals:         1       0       0       0       0       0       0       0
  6629 ;;Total ram usage:        1 bytes
  6630 ;; Hardware stack levels used:    1
  6631 ;; Hardware stack levels required when called:    2
  6632 ;; This function calls:
  6633 ;;		Nothing
  6634 ;; This function is called by:
  6635 ;;		_Sensor_Acquisition
  6636 ;;		_Sensor_Acq_ExecutePacket
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640                           
  6641                           ;psect for function _Sensor_isActive
  6642  0000'                    _Sensor_isActive:	
  6643                           
  6644                           ;incstack = 0
  6645                           ; Regs used in _Sensor_isActive: [wreg+fsr1l+fsr1h+status,2+status,0]
  6646                           ;Sensor_isActive@sensor stored from wreg
  6647  0000' 0082'              	movwf	Sensor_isActive@sensor
  6648                           
  6649                           ;mtouch_sensor.c: 777: return (bool)sensor->active;
  6650  0001' 0802'              	movf	Sensor_isActive@sensor,w
  6651  0002' 3E08               	addlw	8
  6652  0003' 0086               	movwf	6
  6653  0004' 3001               	movlw	1	; select bank2/3
  6654  0005' 0087               	movwf	7
  6655  0006' 0C01               	rrf	1,w
  6656  0007' 3901               	andlw	1
  6657  0008' 0008               	return
  6658  0009'                    __end_of_Sensor_isActive:	
  6659                           
  6660                           	psect	text32
  6661  0000'                    __ptext32:	
  6662 ;; *************** function _Sensor_autoCalibration *****************
  6663 ;; Defined at:
  6664 ;;		line 597 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6665 ;; Parameters:    Size  Location     Type
  6666 ;;  sensor          1    wreg     PTR struct .
  6667 ;;		 -> mtouch_sensor(54), 
  6668 ;; Auto vars:     Size  Location     Type
  6669 ;;  sensor          1    9[COMMON] PTR struct .
  6670 ;;		 -> mtouch_sensor(54), 
  6671 ;;  adcIndex        1    8[COMMON] unsigned char 
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  1    wreg      enum E3335
  6674 ;; Registers used:
  6675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6681 ;;      Params:         0       0       0       0       0       0       0       0
  6682 ;;      Locals:         2       0       0       0       0       0       0       0
  6683 ;;      Temps:          0       4       0       0       0       0       0       0
  6684 ;;      Totals:         2       4       0       0       0       0       0       0
  6685 ;;Total ram usage:        6 bytes
  6686 ;; Hardware stack levels used:    1
  6687 ;; Hardware stack levels required when called:    3
  6688 ;; This function calls:
  6689 ;;		_Sensor_getScanGroupIndex
  6690 ;;		_Sensor_isCalibratingAcqTime
  6691 ;;		_Sensor_setCalibratAcqTime
  6692 ;;		_Sensor_setCalibrated
  6693 ;;		_abs
  6694 ;; This function is called by:
  6695 ;;		_Sensor_Acq_ExecutePacket
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           
  6700                           ;psect for function _Sensor_autoCalibration
  6701  0000'                    _Sensor_autoCalibration:	
  6702                           
  6703                           ;incstack = 0
  6704                           ; Regs used in _Sensor_autoCalibration: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6705                           ;Sensor_autoCalibration@sensor stored from wreg
  6706  0000' 0089'              	movwf	Sensor_autoCalibration@sensor
  6707                           
  6708                           ;mtouch_sensor.c: 599: uint8_t adcIndex = Sensor_getScanGroupIndex(sensor);
  6709  0001' 0809'              	movf	Sensor_autoCalibration@sensor,w
  6710  0002' 3180' 2000' 3180'  	fcall	_Sensor_getScanGroupIndex
  6711  0005' 0020               	movlb	0	; select bank0
  6712  0006' 0080'              	movwf	??_Sensor_autoCalibration
  6713  0007' 0800'              	movf	??_Sensor_autoCalibration,w
  6714  0008' 0088'              	movwf	Sensor_autoCalibration@adcIndex
  6715                           
  6716                           ;mtouch_sensor.c: 601: if(!Sensor_isCalibratingAcqTime(sensor))
  6717  0009' 0809'              	movf	Sensor_autoCalibration@sensor,w
  6718  000A' 3180' 2000' 3180'  	fcall	_Sensor_isCalibratingAcqTime
  6719  000D' 3A00               	xorlw	0
  6720  000E' 1D03               	skipz
  6721  000F' 2800'              	goto	l5035
  6722                           
  6723                           ;mtouch_sensor.c: 602: {
  6724                           ;mtouch_sensor.c: 603: if(packet_sample[adcIndex] > (mtouch_sensor_packetsample_t)(senso
      +                          r->oversampling)<<9)
  6725  0010' 3508'              	lslf	Sensor_autoCalibration@adcIndex,w
  6726  0011' 3E00'              	addlw	(low (_packet_sample| 0))& (0+255)
  6727  0012' 0086               	movwf	6
  6728  0013' 0187               	clrf	7
  6729  0014' 3F40               	moviw [0]fsr1
  6730  0015' 0020               	movlb	0	; select bank0
  6731  0016' 0080'              	movwf	??_Sensor_autoCalibration
  6732  0017' 3F41               	moviw [1]fsr1
  6733  0018' 0081'              	movwf	??_Sensor_autoCalibration+1
  6734  0019' 0809'              	movf	Sensor_autoCalibration@sensor,w
  6735  001A' 3E04               	addlw	4
  6736  001B' 0086               	movwf	6
  6737  001C' 3001               	movlw	1	; select bank2/3
  6738  001D' 0087               	movwf	7
  6739  001E' 0801               	movf	1,w
  6740  001F' 0082'              	movwf	??_Sensor_autoCalibration+2
  6741  0020' 0183'              	clrf	??_Sensor_autoCalibration+3
  6742  0021' 3009               	movlw	9
  6743  0022'                    u4855:	
  6744  0022' 3582'              	lslf	??_Sensor_autoCalibration+2,f
  6745  0023' 0D83'              	rlf	??_Sensor_autoCalibration+3,f
  6746  0024' 0B89               	decfsz	9,f
  6747  0025' 2800'              	goto	u4855
  6748  0026' 0801'              	movf	??_Sensor_autoCalibration+1,w
  6749  0027' 0203'              	subwf	??_Sensor_autoCalibration+3,w
  6750  0028' 1D03               	skipz
  6751  0029' 2800'              	goto	u4865
  6752  002A' 0800'              	movf	??_Sensor_autoCalibration,w
  6753  002B' 0202'              	subwf	??_Sensor_autoCalibration+2,w
  6754  002C'                    u4865:	
  6755  002C' 1803               	skipnc
  6756  002D' 2800'              	goto	l5033
  6757                           
  6758                           ;mtouch_sensor.c: 604: {
  6759                           ;mtouch_sensor.c: 605: if(++(sensor->addcap) >= (uint8_t)0x0F)
  6760  002E' 3001               	movlw	1
  6761  002F' 0080'              	movwf	??_Sensor_autoCalibration
  6762  0030' 0809'              	movf	Sensor_autoCalibration@sensor,w
  6763  0031' 3E05               	addlw	5
  6764  0032' 0086               	movwf	6
  6765  0033' 3001               	movlw	1	; select bank2/3
  6766  0034' 0087               	movwf	7
  6767  0035' 0800'              	movf	??_Sensor_autoCalibration,w
  6768  0036' 0781               	addwf	1,f
  6769  0037' 300F               	movlw	15
  6770  0038' 0201               	subwf	1,w
  6771  0039' 1C03               	skipc
  6772  003A' 0008               	return
  6773                           
  6774                           ;mtouch_sensor.c: 606: Sensor_setCalibratAcqTime(sensor);
  6775  003B' 0809'              	movf	Sensor_autoCalibration@sensor,w
  6776  003C' 3180' 2000'        	fcall	_Sensor_setCalibratAcqTime
  6777                           
  6778                           ;mtouch_sensor.c: 607: }
  6779  003E' 0008               	return
  6780  003F'                    l5033:	
  6781                           
  6782                           ;mtouch_sensor.c: 608: else
  6783                           ;mtouch_sensor.c: 609: {
  6784                           ;mtouch_sensor.c: 610: Sensor_setCalibratAcqTime(sensor);
  6785  003F' 0809'              	movf	Sensor_autoCalibration@sensor,w
  6786  0040' 3180' 2000'        	fcall	_Sensor_setCalibratAcqTime
  6787                           
  6788                           ;mtouch_sensor.c: 611: }
  6789                           ;mtouch_sensor.c: 612: }
  6790  0042' 0008               	return
  6791  0043'                    l5035:	
  6792                           
  6793                           ;mtouch_sensor.c: 613: else
  6794                           ;mtouch_sensor.c: 614: {
  6795                           ;mtouch_sensor.c: 615: if(abs(packet_sample[adcIndex] - sensor->rawSample) < (mtouch_sen
      +                          sor_packetsample_t)(sensor->oversampling)<<1)
  6796  0043' 0809'              	movf	Sensor_autoCalibration@sensor,w
  6797  0044' 3E04               	addlw	4
  6798  0045' 0086               	movwf	6
  6799  0046' 3001               	movlw	1	; select bank2/3
  6800  0047' 0087               	movwf	7
  6801  0048' 0801               	movf	1,w
  6802  0049' 0020               	movlb	0	; select bank0
  6803  004A' 0080'              	movwf	??_Sensor_autoCalibration
  6804  004B' 0181'              	clrf	??_Sensor_autoCalibration+1
  6805  004C' 3580'              	lslf	??_Sensor_autoCalibration,f
  6806  004D' 0D81'              	rlf	??_Sensor_autoCalibration+1,f
  6807  004E' 3508'              	lslf	Sensor_autoCalibration@adcIndex,w
  6808  004F' 3E00'              	addlw	(low (_packet_sample| 0))& (0+255)
  6809  0050' 0086               	movwf	6
  6810  0051' 0187               	clrf	7
  6811  0052' 0809'              	movf	Sensor_autoCalibration@sensor,w
  6812  0053' 3E06               	addlw	6
  6813  0054' 0084               	movwf	4
  6814  0055' 3001               	movlw	1	; select bank2/3
  6815  0056' 0085               	movwf	5
  6816  0057' 3F00               	moviw [0]fsr0
  6817  0058' 0082'              	movwf	??_Sensor_autoCalibration+2
  6818  0059' 3F01               	moviw [1]fsr0
  6819  005A' 0083'              	movwf	??_Sensor_autoCalibration+3
  6820  005B' 0982'              	comf	??_Sensor_autoCalibration+2,f
  6821  005C' 0983'              	comf	??_Sensor_autoCalibration+3,f
  6822  005D' 0A82'              	incf	??_Sensor_autoCalibration+2,f
  6823  005E' 1903               	skipnz
  6824  005F' 0A83'              	incf	??_Sensor_autoCalibration+3,f
  6825  0060' 3F40               	moviw [0]fsr1
  6826  0061' 0702'              	addwf	??_Sensor_autoCalibration+2,w
  6827  0062' 0082'              	movwf	abs@a
  6828  0063' 3F41               	moviw [1]fsr1
  6829  0064' 3D03'              	addwfc	??_Sensor_autoCalibration+3,w
  6830  0065' 0083'              	movwf	abs@a+1
  6831  0066' 3180' 2000' 3180'  	fcall	_abs
  6832  0069' 0020               	movlb	0	; select bank0
  6833  006A' 0801'              	movf	??_Sensor_autoCalibration+1,w
  6834  006B' 0203'              	subwf	?_abs+1,w
  6835  006C' 1D03               	skipz
  6836  006D' 2800'              	goto	u4885
  6837  006E' 0800'              	movf	??_Sensor_autoCalibration,w
  6838  006F' 0202'              	subwf	?_abs,w
  6839  0070'                    u4885:	
  6840  0070' 1803               	skipnc
  6841  0071' 2800'              	goto	l5041
  6842                           
  6843                           ;mtouch_sensor.c: 616: {
  6844                           ;mtouch_sensor.c: 617: sensor->precharge_time = (mtouch_sensor_time_t)32;
  6845  0072' 3020               	movlw	32
  6846  0073' 0080'              	movwf	??_Sensor_autoCalibration
  6847  0074' 0809'              	movf	Sensor_autoCalibration@sensor,w
  6848  0075' 3E02               	addlw	2
  6849  0076' 0086               	movwf	6
  6850  0077' 3001               	movlw	1	; select bank2/3
  6851  0078' 0087               	movwf	7
  6852  0079' 0800'              	movf	??_Sensor_autoCalibration,w
  6853  007A' 0081               	movwf	1
  6854                           
  6855                           ;mtouch_sensor.c: 618: Sensor_setCalibrated(sensor);
  6856  007B' 0809'              	movf	Sensor_autoCalibration@sensor,w
  6857  007C' 3180' 2000'        	fcall	_Sensor_setCalibrated
  6858                           
  6859                           ;mtouch_sensor.c: 619: }
  6860  007E' 0008               	return
  6861  007F'                    l5041:	
  6862                           
  6863                           ;mtouch_sensor.c: 620: else
  6864                           ;mtouch_sensor.c: 621: {
  6865                           ;mtouch_sensor.c: 622: if(++(sensor->acquisition_time)>=(mtouch_sensor_time_t)32)
  6866  007F' 3001               	movlw	1
  6867  0080' 0020               	movlb	0	; select bank0
  6868  0081' 0080'              	movwf	??_Sensor_autoCalibration
  6869  0082' 0809'              	movf	Sensor_autoCalibration@sensor,w
  6870  0083' 3E03               	addlw	3
  6871  0084' 0086               	movwf	6
  6872  0085' 3001               	movlw	1	; select bank2/3
  6873  0086' 0087               	movwf	7
  6874  0087' 0800'              	movf	??_Sensor_autoCalibration,w
  6875  0088' 0781               	addwf	1,f
  6876  0089' 3020               	movlw	32
  6877  008A' 0201               	subwf	1,w
  6878  008B' 1C03               	skipc
  6879  008C' 0008               	return
  6880                           
  6881                           ;mtouch_sensor.c: 623: {
  6882                           ;mtouch_sensor.c: 624: sensor->precharge_time = (mtouch_sensor_time_t)32;
  6883  008D' 3020               	movlw	32
  6884  008E' 0080'              	movwf	??_Sensor_autoCalibration
  6885  008F' 0809'              	movf	Sensor_autoCalibration@sensor,w
  6886  0090' 3E02               	addlw	2
  6887  0091' 0086               	movwf	6
  6888  0092' 3001               	movlw	1	; select bank2/3
  6889  0093' 0087               	movwf	7
  6890  0094' 0800'              	movf	??_Sensor_autoCalibration,w
  6891  0095' 0081               	movwf	1
  6892                           
  6893                           ;mtouch_sensor.c: 625: Sensor_setCalibrated(sensor);
  6894  0096' 0809'              	movf	Sensor_autoCalibration@sensor,w
  6895  0097' 3180' 2000'        	fcall	_Sensor_setCalibrated
  6896  0099' 0008               	return
  6897  009A'                    __end_of_Sensor_autoCalibration:	
  6898                           ;mtouch_sensor.c: 626: }
  6899                           ;mtouch_sensor.c: 627: }
  6900                           ;mtouch_sensor.c: 628: }
  6901                           ;mtouch_sensor.c: 630: return MTOUCH_SENSOR_ERROR_none;
  6902                           ;	Return value of _Sensor_autoCalibration is never used
  6903                           
  6904                           
  6905                           	psect	text33
  6906  0000'                    __ptext33:	
  6907 ;; *************** function _abs *****************
  6908 ;; Defined at:
  6909 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\abs.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;  a               2    2[COMMON] int 
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;		None
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  2    2[COMMON] int 
  6916 ;; Registers used:
  6917 ;;		wreg, status,2, status,0
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6923 ;;      Params:         2       0       0       0       0       0       0       0
  6924 ;;      Locals:         0       0       0       0       0       0       0       0
  6925 ;;      Temps:          2       0       0       0       0       0       0       0
  6926 ;;      Totals:         4       0       0       0       0       0       0       0
  6927 ;;Total ram usage:        4 bytes
  6928 ;; Hardware stack levels used:    1
  6929 ;; Hardware stack levels required when called:    2
  6930 ;; This function calls:
  6931 ;;		Nothing
  6932 ;; This function is called by:
  6933 ;;		_Sensor_postAcquisitionProcess
  6934 ;;		_Sensor_Acq_ExecutePacket
  6935 ;;		_Sensor_autoCalibration
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939                           
  6940                           ;psect for function _abs
  6941  0000'                    _abs:	
  6942                           
  6943                           ;incstack = 0
  6944                           ; Regs used in _abs: [wreg+status,2+status,0]
  6945  0000' 1F83'              	btfss	abs@a+1,7
  6946  0001' 0008               	return
  6947  0002' 0902'              	comf	abs@a,w
  6948  0003' 0084'              	movwf	??_abs
  6949  0004' 0903'              	comf	abs@a+1,w
  6950  0005' 0085'              	movwf	??_abs+1
  6951  0006' 0A84'              	incf	??_abs,f
  6952  0007' 1903               	skipnz
  6953  0008' 0A85'              	incf	??_abs+1,f
  6954  0009' 0804'              	movf	??_abs,w
  6955  000A' 0082'              	movwf	?_abs
  6956  000B' 0805'              	movf	??_abs+1,w
  6957  000C' 0083'              	movwf	?_abs+1
  6958  000D' 0008               	return
  6959  000E'                    __end_of_abs:	
  6960                           
  6961                           	psect	text34
  6962  0000'                    __ptext34:	
  6963 ;; *************** function _Sensor_setCalibrated *****************
  6964 ;; Defined at:
  6965 ;;		line 816 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  sensor          1    wreg     PTR struct .
  6968 ;;		 -> mtouch_sensor(54), 
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;  sensor          1    2[COMMON] PTR struct .
  6971 ;;		 -> mtouch_sensor(54), 
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  1    wreg      void 
  6974 ;; Registers used:
  6975 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6981 ;;      Params:         0       0       0       0       0       0       0       0
  6982 ;;      Locals:         1       0       0       0       0       0       0       0
  6983 ;;      Temps:          0       0       0       0       0       0       0       0
  6984 ;;      Totals:         1       0       0       0       0       0       0       0
  6985 ;;Total ram usage:        1 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:    2
  6988 ;; This function calls:
  6989 ;;		Nothing
  6990 ;; This function is called by:
  6991 ;;		_Sensor_autoCalibration
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           
  6996                           ;psect for function _Sensor_setCalibrated
  6997  0000'                    _Sensor_setCalibrated:	
  6998                           
  6999                           ;incstack = 0
  7000                           ; Regs used in _Sensor_setCalibrated: [wreg+fsr1l+fsr1h+status,2+status,0]
  7001                           ;Sensor_setCalibrated@sensor stored from wreg
  7002  0000' 0082'              	movwf	Sensor_setCalibrated@sensor
  7003                           
  7004                           ;mtouch_sensor.c: 818: sensor->calibrated = 1;
  7005  0001' 0802'              	movf	Sensor_setCalibrated@sensor,w
  7006  0002' 3E08               	addlw	8
  7007  0003' 0086               	movwf	6
  7008  0004' 3001               	movlw	1	; select bank2/3
  7009  0005' 0087               	movwf	7
  7010  0006' 1501               	bsf	1,2
  7011                           
  7012                           ;mtouch_sensor.c: 819: sensor->acqTime_cal = 0;
  7013  0007' 0802'              	movf	Sensor_setCalibrated@sensor,w
  7014  0008' 3E08               	addlw	8
  7015  0009' 0086               	movwf	6
  7016  000A' 3001               	movlw	1	; select bank2/3
  7017  000B' 0087               	movwf	7
  7018  000C' 1201               	bcf	1,4
  7019  000D' 0008               	return
  7020  000E'                    __end_of_Sensor_setCalibrated:	
  7021                           
  7022                           	psect	text35
  7023  0000'                    __ptext35:	
  7024 ;; *************** function _Sensor_setCalibratAcqTime *****************
  7025 ;; Defined at:
  7026 ;;		line 822 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  sensor          1    wreg     PTR struct .
  7029 ;;		 -> mtouch_sensor(54), 
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;  sensor          1    2[COMMON] PTR struct .
  7032 ;;		 -> mtouch_sensor(54), 
  7033 ;; Return value:  Size  Location     Type
  7034 ;;                  1    wreg      void 
  7035 ;; Registers used:
  7036 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7037 ;; Tracked objects:
  7038 ;;		On entry : 0/0
  7039 ;;		On exit  : 0/0
  7040 ;;		Unchanged: 0/0
  7041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7042 ;;      Params:         0       0       0       0       0       0       0       0
  7043 ;;      Locals:         1       0       0       0       0       0       0       0
  7044 ;;      Temps:          0       0       0       0       0       0       0       0
  7045 ;;      Totals:         1       0       0       0       0       0       0       0
  7046 ;;Total ram usage:        1 bytes
  7047 ;; Hardware stack levels used:    1
  7048 ;; Hardware stack levels required when called:    2
  7049 ;; This function calls:
  7050 ;;		Nothing
  7051 ;; This function is called by:
  7052 ;;		_Sensor_autoCalibration
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           
  7057                           ;psect for function _Sensor_setCalibratAcqTime
  7058  0000'                    _Sensor_setCalibratAcqTime:	
  7059                           
  7060                           ;incstack = 0
  7061                           ; Regs used in _Sensor_setCalibratAcqTime: [wreg+fsr1l+fsr1h+status,2+status,0]
  7062                           ;Sensor_setCalibratAcqTime@sensor stored from wreg
  7063  0000' 0082'              	movwf	Sensor_setCalibratAcqTime@sensor
  7064                           
  7065                           ;mtouch_sensor.c: 824: sensor->acqTime_cal = 1;
  7066  0001' 0802'              	movf	Sensor_setCalibratAcqTime@sensor,w
  7067  0002' 3E08               	addlw	8
  7068  0003' 0086               	movwf	6
  7069  0004' 3001               	movlw	1	; select bank2/3
  7070  0005' 0087               	movwf	7
  7071  0006' 1601               	bsf	1,4
  7072                           
  7073                           ;mtouch_sensor.c: 825: sensor->acquisition_time = (mtouch_sensor_time_t)1;
  7074  0007' 0802'              	movf	Sensor_setCalibratAcqTime@sensor,w
  7075  0008' 3E03               	addlw	3
  7076  0009' 0086               	movwf	6
  7077  000A' 3001               	movlw	1	; select bank2/3
  7078  000B' 0087               	movwf	7
  7079  000C' 0181               	clrf	1
  7080  000D' 0A81               	incf	1,f
  7081  000E' 0008               	return
  7082  000F'                    __end_of_Sensor_setCalibratAcqTime:	
  7083                           
  7084                           	psect	text36
  7085  0000'                    __ptext36:	
  7086 ;; *************** function _Sensor_isCalibratingAcqTime *****************
  7087 ;; Defined at:
  7088 ;;		line 828 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7089 ;; Parameters:    Size  Location     Type
  7090 ;;  sensor          1    wreg     PTR struct .
  7091 ;;		 -> mtouch_sensor(54), 
  7092 ;; Auto vars:     Size  Location     Type
  7093 ;;  sensor          1    2[COMMON] PTR struct .
  7094 ;;		 -> mtouch_sensor(54), 
  7095 ;; Return value:  Size  Location     Type
  7096 ;;                  1    wreg      unsigned char 
  7097 ;; Registers used:
  7098 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7099 ;; Tracked objects:
  7100 ;;		On entry : 0/0
  7101 ;;		On exit  : 0/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7104 ;;      Params:         0       0       0       0       0       0       0       0
  7105 ;;      Locals:         1       0       0       0       0       0       0       0
  7106 ;;      Temps:          0       0       0       0       0       0       0       0
  7107 ;;      Totals:         1       0       0       0       0       0       0       0
  7108 ;;Total ram usage:        1 bytes
  7109 ;; Hardware stack levels used:    1
  7110 ;; Hardware stack levels required when called:    2
  7111 ;; This function calls:
  7112 ;;		Nothing
  7113 ;; This function is called by:
  7114 ;;		_Sensor_Acq_ExecutePacket
  7115 ;;		_Sensor_autoCalibration
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           
  7120                           ;psect for function _Sensor_isCalibratingAcqTime
  7121  0000'                    _Sensor_isCalibratingAcqTime:	
  7122                           
  7123                           ;incstack = 0
  7124                           ; Regs used in _Sensor_isCalibratingAcqTime: [wreg+fsr1l+fsr1h+status,2+status,0]
  7125                           ;Sensor_isCalibratingAcqTime@sensor stored from wreg
  7126  0000' 0082'              	movwf	Sensor_isCalibratingAcqTime@sensor
  7127                           
  7128                           ;mtouch_sensor.c: 830: return (bool)sensor->acqTime_cal;
  7129  0001' 0802'              	movf	Sensor_isCalibratingAcqTime@sensor,w
  7130  0002' 3E08               	addlw	8
  7131  0003' 0086               	movwf	6
  7132  0004' 3001               	movlw	1	; select bank2/3
  7133  0005' 0087               	movwf	7
  7134  0006' 0E01               	swapf	1,w
  7135  0007' 3901               	andlw	1
  7136  0008' 0008               	return
  7137  0009'                    __end_of_Sensor_isCalibratingAcqTime:	
  7138                           
  7139                           	psect	text37
  7140  0000'                    __ptext37:	
  7141 ;; *************** function _Sensor_getScanGroupIndex *****************
  7142 ;; Defined at:
  7143 ;;		line 324 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;  sensor          1    wreg     PTR struct .
  7146 ;;		 -> mtouch_sensor(54), 
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;  sensor          1    6[COMMON] PTR struct .
  7149 ;;		 -> mtouch_sensor(54), 
  7150 ;;  sensorGroup     1    7[COMMON] unsigned char 
  7151 ;; Return value:  Size  Location     Type
  7152 ;;                  1    wreg      unsigned char 
  7153 ;; Registers used:
  7154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7155 ;; Tracked objects:
  7156 ;;		On entry : 0/0
  7157 ;;		On exit  : 0/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7160 ;;      Params:         0       0       0       0       0       0       0       0
  7161 ;;      Locals:         2       0       0       0       0       0       0       0
  7162 ;;      Temps:          4       0       0       0       0       0       0       0
  7163 ;;      Totals:         6       0       0       0       0       0       0       0
  7164 ;;Total ram usage:        6 bytes
  7165 ;; Hardware stack levels used:    1
  7166 ;; Hardware stack levels required when called:    2
  7167 ;; This function calls:
  7168 ;;		Nothing
  7169 ;; This function is called by:
  7170 ;;		_Sensor_postAcquisitionProcess
  7171 ;;		_Sensor_autoCalibration
  7172 ;;		_Sensor_RawSample_Update
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           
  7177                           ;psect for function _Sensor_getScanGroupIndex
  7178  0000'                    _Sensor_getScanGroupIndex:	
  7179                           
  7180                           ;incstack = 0
  7181                           ; Regs used in _Sensor_getScanGroupIndex: [wreg-fsr0h+status,2+status,0+pclath]
  7182                           ;Sensor_getScanGroupIndex@sensor stored from wreg
  7183  0000' 0086'              	movwf	Sensor_getScanGroupIndex@sensor
  7184                           
  7185                           ;mtouch_sensor.c: 326: uint8_t sensorGroup;
  7186                           ;mtouch_sensor.c: 327: for(sensorGroup = 0; sensorGroup < 3; sensorGroup++)
  7187  0001' 0187'              	clrf	Sensor_getScanGroupIndex@sensorGroup
  7188  0002' 3003               	movlw	3
  7189  0003' 0207'              	subwf	Sensor_getScanGroupIndex@sensorGroup,w
  7190  0004' 1803               	btfsc	3,0
  7191  0005' 2800'              	goto	l4967
  7192  0006'                    l4951:	
  7193                           
  7194                           ;mtouch_sensor.c: 328: {
  7195                           ;mtouch_sensor.c: 329: if(sensor_scan_group[sensorGroup].sensor_adc1 == sensor)
  7196  0006' 0807'              	movf	Sensor_getScanGroupIndex@sensorGroup,w
  7197  0007' 0082'              	movwf	??_Sensor_getScanGroupIndex
  7198  0008' 0183'              	clrf	??_Sensor_getScanGroupIndex+1
  7199  0009' 3582'              	lslf	??_Sensor_getScanGroupIndex,f
  7200  000A' 0D83'              	rlf	??_Sensor_getScanGroupIndex+1,f
  7201  000B' 3000'              	movlw	low (_sensor_scan_group| (0+32768))
  7202  000C' 0702'              	addwf	??_Sensor_getScanGroupIndex,w
  7203  000D' 0084               	movwf	4
  7204  000E' 3000'              	movlw	high (_sensor_scan_group| (0+32768))
  7205  000F' 3D03'              	addwfc	??_Sensor_getScanGroupIndex+1,w
  7206  0010' 0085               	movwf	5
  7207  0011' 0800               	movf	0,w	;code access
  7208  0012' 0606'              	xorwf	Sensor_getScanGroupIndex@sensor,w
  7209  0013' 1D03               	skipz
  7210  0014' 2800'              	goto	l4957
  7211                           
  7212                           ;mtouch_sensor.c: 330: return 0;
  7213  0015' 3000               	movlw	0
  7214  0016' 0008               	return
  7215  0017'                    l4957:	
  7216                           
  7217                           ;mtouch_sensor.c: 331: if(sensor_scan_group[sensorGroup].sensor_adc2 == sensor)
  7218  0017' 0807'              	movf	Sensor_getScanGroupIndex@sensorGroup,w
  7219  0018' 0082'              	movwf	??_Sensor_getScanGroupIndex
  7220  0019' 0183'              	clrf	??_Sensor_getScanGroupIndex+1
  7221  001A' 3582'              	lslf	??_Sensor_getScanGroupIndex,f
  7222  001B' 0D83'              	rlf	??_Sensor_getScanGroupIndex+1,f
  7223  001C' 0802'              	movf	??_Sensor_getScanGroupIndex,w
  7224  001D' 3E01               	addlw	1
  7225  001E' 0084'              	movwf	??_Sensor_getScanGroupIndex+2
  7226  001F' 3000               	movlw	0
  7227  0020' 3D03'              	addwfc	??_Sensor_getScanGroupIndex+1,w
  7228  0021' 0085'              	movwf	??_Sensor_getScanGroupIndex+3
  7229  0022' 3000'              	movlw	low (_sensor_scan_group| (0+32768))
  7230  0023' 0704'              	addwf	??_Sensor_getScanGroupIndex+2,w
  7231  0024' 0084               	movwf	4
  7232  0025' 3000'              	movlw	high (_sensor_scan_group| (0+32768))
  7233  0026' 3D05'              	addwfc	??_Sensor_getScanGroupIndex+3,w
  7234  0027' 0085               	movwf	5
  7235  0028' 0800               	movf	0,w	;code access
  7236  0029' 0606'              	xorwf	Sensor_getScanGroupIndex@sensor,w
  7237  002A' 1D03               	skipz
  7238  002B' 2800'              	goto	l4963
  7239                           
  7240                           ;mtouch_sensor.c: 332: return 1;
  7241  002C' 3001               	movlw	1
  7242  002D' 0008               	return
  7243  002E'                    l4963:	
  7244  002E' 3001               	movlw	1
  7245  002F' 0082'              	movwf	??_Sensor_getScanGroupIndex
  7246  0030' 0802'              	movf	??_Sensor_getScanGroupIndex,w
  7247  0031' 0787'              	addwf	Sensor_getScanGroupIndex@sensorGroup,f
  7248  0032' 3003               	movlw	3
  7249  0033' 0207'              	subwf	Sensor_getScanGroupIndex@sensorGroup,w
  7250  0034' 1C03               	skipc
  7251  0035' 2800'              	goto	l4951
  7252  0036'                    l4967:	
  7253                           
  7254                           ;mtouch_sensor.c: 333: }
  7255                           ;mtouch_sensor.c: 334: return 0;
  7256  0036' 3000               	movlw	0
  7257  0037' 0008               	return
  7258  0038'                    __end_of_Sensor_getScanGroupIndex:	
  7259                           
  7260                           	psect	text38
  7261  0000'                    __ptext38:	
  7262 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
  7263 ;; Defined at:
  7264 ;;		line 251 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;		None
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;		None
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  1    wreg      void 
  7271 ;; Registers used:
  7272 ;;		wreg, status,2, status,0
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7278 ;;      Params:         0       0       0       0       0       0       0       0
  7279 ;;      Locals:         0       0       0       0       0       0       0       0
  7280 ;;      Temps:          0       0       0       0       0       0       0       0
  7281 ;;      Totals:         0       0       0       0       0       0       0       0
  7282 ;;Total ram usage:        0 bytes
  7283 ;; Hardware stack levels used:    1
  7284 ;; Hardware stack levels required when called:    2
  7285 ;; This function calls:
  7286 ;;		Nothing
  7287 ;; This function is called by:
  7288 ;;		_Sensor_Acq_ExecutePacket
  7289 ;;		_MTOUCH_Initialize
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293                           
  7294                           ;psect for function _MTOUCH_Sensor_Scan_Initialize
  7295  0000'                    _MTOUCH_Sensor_Scan_Initialize:	
  7296                           
  7297                           ;mtouch_sensor.c: 253: T2CONbits.T2CKPS = 0x0;
  7298                           
  7299                           ;incstack = 0
  7300                           ; Regs used in _MTOUCH_Sensor_Scan_Initialize: [wreg+status,2+status,0]
  7301  0000' 30FC               	movlw	-4
  7302  0001' 0020               	movlb	0	; select bank0
  7303  0002' 059C               	andwf	28,f	;volatile
  7304                           
  7305                           ;mtouch_sensor.c: 255: AD1CON0 = (uint8_t)0;
  7306  0003' 002E               	movlb	14	; select bank14
  7307  0004' 0191               	clrf	17	;volatile
  7308                           
  7309                           ;mtouch_sensor.c: 256: AD2CON0 = (uint8_t)0;
  7310  0005' 002F               	movlb	15	; select bank15
  7311  0006' 0191               	clrf	17	;volatile
  7312                           
  7313                           ;mtouch_sensor.c: 257: ADCOMCON = (uint8_t)( 0x1<<7 | 0x1<<4 | 0x0 );
  7314  0007' 3090               	movlw	144
  7315  0008' 002E               	movlb	14	; select bank14
  7316  0009' 0092               	movwf	18	;volatile
  7317                           
  7318                           ;mtouch_sensor.c: 258: AD1CON3 = (uint8_t)0b01000000;
  7319  000A' 3040               	movlw	64
  7320  000B' 0094               	movwf	20	;volatile
  7321                           
  7322                           ;mtouch_sensor.c: 259: AD2CON3 = (uint8_t)0b01000000;
  7323  000C' 3040               	movlw	64
  7324  000D' 002F               	movlb	15	; select bank15
  7325  000E' 0094               	movwf	20	;volatile
  7326  000F' 0008               	return
  7327  0010'                    __end_of_MTOUCH_Sensor_Scan_Initialize:	
  7328                           
  7329                           	psect	text39
  7330  0000'                    __ptext39:	
  7331 ;; *************** function _MTOUCH_Proximity_ServiceAll *****************
  7332 ;; Defined at:
  7333 ;;		line 155 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  7334 ;; Parameters:    Size  Location     Type
  7335 ;;		None
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;		None
  7338 ;; Return value:  Size  Location     Type
  7339 ;;                  1    wreg      void 
  7340 ;; Registers used:
  7341 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7342 ;; Tracked objects:
  7343 ;;		On entry : 0/0
  7344 ;;		On exit  : 0/0
  7345 ;;		Unchanged: 0/0
  7346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7347 ;;      Params:         0       0       0       0       0       0       0       0
  7348 ;;      Locals:         0       0       0       0       0       0       0       0
  7349 ;;      Temps:          0       0       0       0       0       0       0       0
  7350 ;;      Totals:         0       0       0       0       0       0       0       0
  7351 ;;Total ram usage:        0 bytes
  7352 ;; Hardware stack levels used:    1
  7353 ;; Hardware stack levels required when called:    7
  7354 ;; This function calls:
  7355 ;;		_Proximity_Service
  7356 ;; This function is called by:
  7357 ;;		_MTOUCH_Service_Mainloop
  7358 ;; This function uses a non-reentrant model
  7359 ;;
  7360                           
  7361                           
  7362                           ;psect for function _MTOUCH_Proximity_ServiceAll
  7363  0000'                    _MTOUCH_Proximity_ServiceAll:	
  7364                           
  7365                           ;mtouch_proximity.c: 157: Proximity_Service(Proximity0);
  7366                           
  7367                           ;incstack = 0
  7368                           ; Regs used in _MTOUCH_Proximity_ServiceAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7369  0000' 3000               	movlw	0
  7370  0001' 3180' 2000'        	fcall	_Proximity_Service
  7371  0003' 0008               	return
  7372  0004'                    __end_of_MTOUCH_Proximity_ServiceAll:	
  7373                           
  7374                           	psect	text40
  7375  0000'                    __ptext40:	
  7376 ;; *************** function _Proximity_Service *****************
  7377 ;; Defined at:
  7378 ;;		line 165 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  name            1    wreg     enum E3283
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;  name            1   22[BANK0 ] enum E3283
  7383 ;;  prox            1   23[BANK0 ] PTR struct .
  7384 ;;		 -> mtouch_proximity(18), 
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  1    wreg      void 
  7387 ;; Registers used:
  7388 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7394 ;;      Params:         0       0       0       0       0       0       0       0
  7395 ;;      Locals:         0       2       0       0       0       0       0       0
  7396 ;;      Temps:          0       1       0       0       0       0       0       0
  7397 ;;      Totals:         0       3       0       0       0       0       0       0
  7398 ;;Total ram usage:        3 bytes
  7399 ;; Hardware stack levels used:    1
  7400 ;; Hardware stack levels required when called:    6
  7401 ;; This function calls:
  7402 ;;		_MTOUCH_Proximity_Initialize
  7403 ;;		_MTOUCH_Sensor_isCalibrated
  7404 ;;		_MTOUCH_Sensor_wasSampled
  7405 ;;		_Proximity_Deviation_Update
  7406 ;;		_Proximity_Reading_Update
  7407 ;;		_Proximity_State_Activated
  7408 ;;		_Proximity_State_Initializing
  7409 ;;		_Proximity_State_NotActivated
  7410 ;; This function is called by:
  7411 ;;		_MTOUCH_Proximity_ServiceAll
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414                           
  7415                           
  7416                           ;psect for function _Proximity_Service
  7417  0000'                    _Proximity_Service:	
  7418                           
  7419                           ;incstack = 0
  7420                           ; Regs used in _Proximity_Service: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7421                           ;Proximity_Service@name stored from wreg
  7422  0000' 0020               	movlb	0	; select bank0
  7423  0001' 0096'              	movwf	Proximity_Service@name
  7424                           
  7425                           ;mtouch_proximity.c: 167: mtouch_proximity_t* prox = &mtouch_proximity[name];
  7426  0002' 0E16'              	swapf	Proximity_Service@name,w
  7427  0003' 39F0               	andlw	240
  7428  0004' 0716'              	addwf	Proximity_Service@name,w
  7429  0005' 0716'              	addwf	Proximity_Service@name,w
  7430  0006' 3E00'              	addlw	(low (_mtouch_proximity| 0))& (0+255)
  7431  0007' 0095'              	movwf	??_Proximity_Service
  7432  0008' 0815'              	movf	??_Proximity_Service,w
  7433  0009' 0097'              	movwf	Proximity_Service@prox
  7434                           
  7435                           ;mtouch_proximity.c: 169: if (MTOUCH_Sensor_wasSampled(prox->sensor) && MTOUCH_Sensor_is
      +                          Calibrated(prox->sensor))
  7436  000A' 0A17'              	incf	Proximity_Service@prox,w
  7437  000B' 0086               	movwf	6
  7438  000C' 0187               	clrf	7
  7439  000D' 0801               	movf	1,w
  7440  000E' 3180' 2000' 3180'  	fcall	_MTOUCH_Sensor_wasSampled
  7441  0011' 3A00               	xorlw	0
  7442  0012' 1903               	skipnz
  7443  0013' 0008               	return
  7444  0014' 0020               	movlb	0	; select bank0
  7445  0015' 0A17'              	incf	Proximity_Service@prox,w
  7446  0016' 0086               	movwf	6
  7447  0017' 0187               	clrf	7
  7448  0018' 0801               	movf	1,w
  7449  0019' 3180' 2000' 3180'  	fcall	_MTOUCH_Sensor_isCalibrated
  7450  001C' 3A00               	xorlw	0
  7451  001D' 1903               	skipnz
  7452  001E' 0008               	return
  7453                           
  7454                           ;mtouch_proximity.c: 170: {
  7455                           ;mtouch_proximity.c: 171: Proximity_Reading_Update(prox);
  7456  001F' 0020               	movlb	0	; select bank0
  7457  0020' 0817'              	movf	Proximity_Service@prox,w
  7458  0021' 3180' 2000' 3180'  	fcall	_Proximity_Reading_Update
  7459                           
  7460                           ;mtouch_proximity.c: 172: Proximity_Deviation_Update(name);
  7461  0024' 0020               	movlb	0	; select bank0
  7462  0025' 0816'              	movf	Proximity_Service@name,w
  7463  0026' 3180' 2000' 3180'  	fcall	_Proximity_Deviation_Update
  7464                           
  7465                           ;mtouch_proximity.c: 174: if (prox->state >= (uint8_t)(sizeof(Proximity_StateMachine)/si
      +                          zeof(proximity_statemachine_state_t)))
  7466  0029' 0020               	movlb	0	; select bank0
  7467  002A' 0817'              	movf	Proximity_Service@prox,w
  7468  002B' 3E02               	addlw	2
  7469  002C' 0086               	movwf	6
  7470  002D' 0187               	clrf	7
  7471  002E' 3003               	movlw	3
  7472  002F' 0201               	subwf	1,w
  7473  0030' 1C03               	skipc
  7474  0031' 2800'              	goto	l1044
  7475                           
  7476                           ;mtouch_proximity.c: 175: {
  7477                           ;mtouch_proximity.c: 176: MTOUCH_Proximity_Initialize(prox->name);
  7478  0032' 0817'              	movf	Proximity_Service@prox,w
  7479  0033' 0086               	movwf	6
  7480  0034' 0187               	clrf	7
  7481  0035' 0801               	movf	1,w
  7482  0036' 3180' 2000' 3180'  	fcall	_MTOUCH_Proximity_Initialize
  7483  0039'                    l1044:	
  7484                           
  7485                           ;mtouch_proximity.c: 177: }
  7486                           ;mtouch_proximity.c: 178: Proximity_StateMachine[prox->state](prox);
  7487  0039' 0020               	movlb	0	; select bank0
  7488  003A' 0817'              	movf	Proximity_Service@prox,w
  7489  003B' 0095'              	movwf	??_Proximity_Service
  7490  003C' 0815'              	movf	??_Proximity_Service,w
  7491  003D' 0087'              	movwf	Proximity_State_Activated@prox
  7492  003E' 0817'              	movf	Proximity_Service@prox,w
  7493  003F' 3E02               	addlw	2
  7494  0040' 0086               	movwf	6
  7495  0041' 0187               	clrf	7
  7496  0042' 3501               	lslf	1,w
  7497  0043' 3E00'              	addlw	(low (_Proximity_StateMachine| 0))& (0+255)
  7498  0044' 0086               	movwf	6
  7499  0045' 0187               	clrf	7
  7500  0046' 3F41               	moviw [1]fsr1
  7501  0047' 008A               	movwf	10
  7502  0048' 3F40               	moviw [0]fsr1
  7503  0049' 000A               	callw
  7504  004A' 3180'              	pagesel	$
  7505  004B' 0008               	return
  7506  004C'                    __end_of_Proximity_Service:	
  7507                           
  7508                           	psect	text41
  7509  0000'                    __ptext41:	
  7510 ;; *************** function _Proximity_State_Activated *****************
  7511 ;; Defined at:
  7512 ;;		line 233 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  prox            1    7[BANK0 ] PTR struct .
  7515 ;;		 -> mtouch_proximity(18), 
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;		None
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  1    wreg      void 
  7520 ;; Registers used:
  7521 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7527 ;;      Params:         0       1       0       0       0       0       0       0
  7528 ;;      Locals:         0       0       0       0       0       0       0       0
  7529 ;;      Temps:          0       2       0       0       0       0       0       0
  7530 ;;      Totals:         0       3       0       0       0       0       0       0
  7531 ;;Total ram usage:        3 bytes
  7532 ;; Hardware stack levels used:    1
  7533 ;; Hardware stack levels required when called:    3
  7534 ;; This function calls:
  7535 ;;		_MTOUCH_Proximity_Initialize
  7536 ;;		_Proximity_DefaultCallback
  7537 ;;		_processProximityNotActivate
  7538 ;; This function is called by:
  7539 ;;		_Proximity_Service
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543                           
  7544                           ;psect for function _Proximity_State_Activated
  7545  0000'                    _Proximity_State_Activated:	
  7546                           
  7547                           ;mtouch_proximity.c: 236: if ((prox->counter) >= ((mtouch_prox_statecounter_t)1000))
  7548                           
  7549                           ;incstack = 0
  7550                           ; Regs used in _Proximity_State_Activated: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  7551  0000' 0020               	movlb	0	; select bank0
  7552  0001' 0807'              	movf	Proximity_State_Activated@prox,w
  7553  0002' 3E0C               	addlw	12
  7554  0003' 0086               	movwf	6
  7555  0004' 0187               	clrf	7
  7556  0005' 3F40               	moviw [0]fsr1
  7557  0006' 0088'              	movwf	??_Proximity_State_Activated
  7558  0007' 3F41               	moviw [1]fsr1
  7559  0008' 0089'              	movwf	??_Proximity_State_Activated+1
  7560  0009' 3003               	movlw	3
  7561  000A' 0209'              	subwf	??_Proximity_State_Activated+1,w
  7562  000B' 30E8               	movlw	232
  7563  000C' 1903               	skipnz
  7564  000D' 0208'              	subwf	??_Proximity_State_Activated,w
  7565  000E' 1C03               	skipc
  7566  000F' 2800'              	goto	l3949
  7567                           
  7568                           ;mtouch_proximity.c: 237: {
  7569                           ;mtouch_proximity.c: 238: MTOUCH_Proximity_Initialize(prox->name);
  7570  0010' 0807'              	movf	Proximity_State_Activated@prox,w
  7571  0011' 0086               	movwf	6
  7572  0012' 0187               	clrf	7
  7573  0013' 0801               	movf	1,w
  7574  0014' 3180' 2000' 3180'  	fcall	_MTOUCH_Proximity_Initialize
  7575                           
  7576                           ;mtouch_proximity.c: 239: callback_notActivated(prox->name);
  7577  0017' 0020               	movlb	0	; select bank0
  7578  0018' 0807'              	movf	Proximity_State_Activated@prox,w
  7579  0019' 0086               	movwf	6
  7580  001A' 0187               	clrf	7
  7581  001B' 0801               	movf	1,w
  7582  001C' 0088'              	movwf	??_Proximity_State_Activated
  7583  001D' 0808'              	movf	??_Proximity_State_Activated,w
  7584  001E' 0082'              	movwf	Proximity_DefaultCallback@name
  7585  001F' 080D'              	movf	_callback_notActivated+1,w
  7586  0020' 008A               	movwf	10
  7587  0021' 080C'              	movf	_callback_notActivated,w
  7588  0022' 000A               	callw
  7589  0023' 3180'              	pagesel	$
  7590                           
  7591                           ;mtouch_proximity.c: 240: }
  7592  0024' 0008               	return
  7593  0025'                    l3949:	
  7594                           
  7595                           ;mtouch_proximity.c: 243: else if ((prox->integratedDeviation) < (mtouch_prox_deviation_
      +                          t)((prox->threshold) >> 1))
  7596  0025' 0020               	movlb	0	; select bank0
  7597  0026' 0807'              	movf	Proximity_State_Activated@prox,w
  7598  0027' 3E0B               	addlw	11
  7599  0028' 0086               	movwf	6
  7600  0029' 0187               	clrf	7
  7601  002A' 0801               	movf	1,w
  7602  002B' 3A80               	xorlw	128
  7603  002C' 0088'              	movwf	??_Proximity_State_Activated
  7604  002D' 0807'              	movf	Proximity_State_Activated@prox,w
  7605  002E' 3E10               	addlw	16
  7606  002F' 0086               	movwf	6
  7607  0030' 0187               	clrf	7
  7608  0031' 3701               	asrf	1,w
  7609  0032' 3A80               	xorlw	128
  7610  0033' 0288'              	subwf	??_Proximity_State_Activated,f
  7611  0034' 1803               	skipnc
  7612  0035' 0008               	return
  7613                           
  7614                           ;mtouch_proximity.c: 244: {
  7615                           ;mtouch_proximity.c: 245: prox->state = MTOUCH_PROXIMITY_STATE_notActivated;
  7616  0036' 0807'              	movf	Proximity_State_Activated@prox,w
  7617  0037' 3E02               	addlw	2
  7618  0038' 0086               	movwf	6
  7619  0039' 0187               	clrf	7
  7620  003A' 0181               	clrf	1
  7621  003B' 0A81               	incf	1,f
  7622                           
  7623                           ;mtouch_proximity.c: 246: prox->counter = (mtouch_prox_statecounter_t)0;
  7624  003C' 0807'              	movf	Proximity_State_Activated@prox,w
  7625  003D' 3E0C               	addlw	12
  7626  003E' 0086               	movwf	6
  7627  003F' 0187               	clrf	7
  7628  0040' 3000               	movlw	0
  7629  0041' 3FC0               	movwi [0]fsr1
  7630  0042' 3FC1               	movwi [1]fsr1
  7631                           
  7632                           ;mtouch_proximity.c: 247: callback_notActivated(prox->name);
  7633  0043' 0807'              	movf	Proximity_State_Activated@prox,w
  7634  0044' 0086               	movwf	6
  7635  0045' 0187               	clrf	7
  7636  0046' 0801               	movf	1,w
  7637  0047' 0088'              	movwf	??_Proximity_State_Activated
  7638  0048' 0808'              	movf	??_Proximity_State_Activated,w
  7639  0049' 0082'              	movwf	Proximity_DefaultCallback@name
  7640  004A' 080D'              	movf	_callback_notActivated+1,w
  7641  004B' 008A               	movwf	10
  7642  004C' 080C'              	movf	_callback_notActivated,w
  7643  004D' 000A               	callw
  7644  004E' 3180'              	pagesel	$
  7645  004F' 0008               	return
  7646  0050'                    __end_of_Proximity_State_Activated:	
  7647                           
  7648                           	psect	text42
  7649  0000'                    __ptext42:	
  7650 ;; *************** function _Proximity_State_Initializing *****************
  7651 ;; Defined at:
  7652 ;;		line 181 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;  prox            1    7[BANK0 ] PTR struct .
  7655 ;;		 -> mtouch_proximity(18), 
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;		None
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  1    wreg      void 
  7660 ;; Registers used:
  7661 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7667 ;;      Params:         0       1       0       0       0       0       0       0
  7668 ;;      Locals:         0       0       0       0       0       0       0       0
  7669 ;;      Temps:          0       2       0       0       0       0       0       0
  7670 ;;      Totals:         0       3       0       0       0       0       0       0
  7671 ;;Total ram usage:        3 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; Hardware stack levels required when called:    5
  7674 ;; This function calls:
  7675 ;;		_Proximity_Baseline_Initialize
  7676 ;;		_Proximity_Baseline_Update
  7677 ;; This function is called by:
  7678 ;;		_Proximity_Service
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           
  7683                           ;psect for function _Proximity_State_Initializing
  7684  0000'                    _Proximity_State_Initializing:	
  7685                           
  7686                           ;mtouch_proximity.c: 184: if ((prox->counter) <= (mtouch_prox_statecounter_t)((mtouch_pr
      +                          ox_statecounter_t)16.0)/2)
  7687                           
  7688                           ;incstack = 0
  7689                           ; Regs used in _Proximity_State_Initializing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
  7690  0000' 0020               	movlb	0	; select bank0
  7691  0001' 0807'              	movf	Proximity_State_Initializing@prox,w
  7692  0002' 3E0C               	addlw	12
  7693  0003' 0086               	movwf	6
  7694  0004' 0187               	clrf	7
  7695  0005' 3F40               	moviw [0]fsr1
  7696  0006' 0088'              	movwf	??_Proximity_State_Initializing
  7697  0007' 3F41               	moviw [1]fsr1
  7698  0008' 0089'              	movwf	??_Proximity_State_Initializing+1
  7699  0009' 3000               	movlw	0
  7700  000A' 0209'              	subwf	??_Proximity_State_Initializing+1,w
  7701  000B' 3009               	movlw	9
  7702  000C' 1903               	skipnz
  7703  000D' 0208'              	subwf	??_Proximity_State_Initializing,w
  7704  000E' 1803               	skipnc
  7705  000F' 2800'              	goto	l5529
  7706                           
  7707                           ;mtouch_proximity.c: 185: {
  7708                           ;mtouch_proximity.c: 186: Proximity_Baseline_Initialize(prox);
  7709  0010' 0807'              	movf	Proximity_State_Initializing@prox,w
  7710  0011' 3180' 2000' 3180'  	fcall	_Proximity_Baseline_Initialize
  7711                           
  7712                           ;mtouch_proximity.c: 187: } else {
  7713  0014' 2800'              	goto	l5531
  7714  0015'                    l5529:	
  7715                           
  7716                           ;mtouch_proximity.c: 188: Proximity_Baseline_Update(prox);
  7717  0015' 0020               	movlb	0	; select bank0
  7718  0016' 0807'              	movf	Proximity_State_Initializing@prox,w
  7719  0017' 3180' 2000' 3180'  	fcall	_Proximity_Baseline_Update
  7720  001A'                    l5531:	
  7721                           
  7722                           ;mtouch_proximity.c: 189: }
  7723                           ;mtouch_proximity.c: 192: (prox->counter)++;
  7724  001A' 0020               	movlb	0	; select bank0
  7725  001B' 0807'              	movf	Proximity_State_Initializing@prox,w
  7726  001C' 3E0C               	addlw	12
  7727  001D' 0086               	movwf	6
  7728  001E' 0187               	clrf	7
  7729  001F' 3001               	movlw	1
  7730  0020' 0781               	addwf	1,f
  7731  0021' 3141               	addfsr 1,1
  7732  0022' 1803               	skipnc
  7733  0023' 0A81               	incf	1,f
  7734                           
  7735                           ;mtouch_proximity.c: 193: if ((prox->counter) >= (mtouch_prox_statecounter_t)((mtouch_pr
      +                          ox_statecounter_t)16.0))
  7736  0024' 0807'              	movf	Proximity_State_Initializing@prox,w
  7737  0025' 3E0C               	addlw	12
  7738  0026' 0086               	movwf	6
  7739  0027' 0187               	clrf	7
  7740  0028' 3F40               	moviw [0]fsr1
  7741  0029' 0088'              	movwf	??_Proximity_State_Initializing
  7742  002A' 3F41               	moviw [1]fsr1
  7743  002B' 0089'              	movwf	??_Proximity_State_Initializing+1
  7744  002C' 3000               	movlw	0
  7745  002D' 0209'              	subwf	??_Proximity_State_Initializing+1,w
  7746  002E' 3010               	movlw	16
  7747  002F' 1903               	skipnz
  7748  0030' 0208'              	subwf	??_Proximity_State_Initializing,w
  7749  0031' 1C03               	skipc
  7750  0032' 0008               	return
  7751                           
  7752                           ;mtouch_proximity.c: 194: {
  7753                           ;mtouch_proximity.c: 195: prox->state = MTOUCH_PROXIMITY_STATE_notActivated;
  7754  0033' 0807'              	movf	Proximity_State_Initializing@prox,w
  7755  0034' 3E02               	addlw	2
  7756  0035' 0086               	movwf	6
  7757  0036' 0187               	clrf	7
  7758  0037' 0181               	clrf	1
  7759  0038' 0A81               	incf	1,f
  7760                           
  7761                           ;mtouch_proximity.c: 196: prox->counter = (mtouch_prox_statecounter_t)0;
  7762  0039' 0807'              	movf	Proximity_State_Initializing@prox,w
  7763  003A' 3E0C               	addlw	12
  7764  003B' 0086               	movwf	6
  7765  003C' 0187               	clrf	7
  7766  003D' 3000               	movlw	0
  7767  003E' 3FC0               	movwi [0]fsr1
  7768  003F' 3FC1               	movwi [1]fsr1
  7769  0040' 0008               	return
  7770  0041'                    __end_of_Proximity_State_Initializing:	
  7771                           
  7772                           	psect	text43
  7773  0000'                    __ptext43:	
  7774 ;; *************** function _Proximity_State_NotActivated *****************
  7775 ;; Defined at:
  7776 ;;		line 199 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  7777 ;; Parameters:    Size  Location     Type
  7778 ;;  prox            1    7[BANK0 ] PTR struct .
  7779 ;;		 -> mtouch_proximity(18), 
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;  deviation       4   12[BANK0 ] long 
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  1    wreg      void 
  7784 ;; Registers used:
  7785 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7791 ;;      Params:         0       1       0       0       0       0       0       0
  7792 ;;      Locals:         0       4       0       0       0       0       0       0
  7793 ;;      Temps:          0       4       0       0       0       0       0       0
  7794 ;;      Totals:         0       9       0       0       0       0       0       0
  7795 ;;Total ram usage:        9 bytes
  7796 ;; Hardware stack levels used:    1
  7797 ;; Hardware stack levels required when called:    4
  7798 ;; This function calls:
  7799 ;;		_MTOUCH_Proximity_Baseline_Get
  7800 ;;		_MTOUCH_Proximity_Initialize
  7801 ;;		_MTOUCH_Proximity_Reading_Get
  7802 ;;		_Proximity_Baseline_Update
  7803 ;;		_Proximity_DefaultCallback
  7804 ;;		_processProximityActivate
  7805 ;; This function is called by:
  7806 ;;		_Proximity_Service
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810                           
  7811                           ;psect for function _Proximity_State_NotActivated
  7812  0000'                    _Proximity_State_NotActivated:	
  7813                           
  7814                           ;mtouch_proximity.c: 202: int32_t deviation = (int32_t)((uint32_t)(MTOUCH_Proximity_Read
      +                          ing_Get(prox->name)) - (uint32_t)(MTOUCH_Proximity_Baseline_Get(prox->name)));
  7815                           
  7816                           ;incstack = 0
  7817                           ; Regs used in _Proximity_State_NotActivated: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
  7818  0000' 0020               	movlb	0	; select bank0
  7819  0001' 0807'              	movf	Proximity_State_NotActivated@prox,w
  7820  0002' 0086               	movwf	6
  7821  0003' 0187               	clrf	7
  7822  0004' 0801               	movf	1,w
  7823  0005' 3180' 2000' 3180'  	fcall	_MTOUCH_Proximity_Baseline_Get
  7824  0008' 0020               	movlb	0	; select bank0
  7825  0009' 0901'              	comf	?_MTOUCH_Proximity_Baseline_Get,w
  7826  000A' 0088'              	movwf	??_Proximity_State_NotActivated
  7827  000B' 0902'              	comf	?_MTOUCH_Proximity_Baseline_Get+1,w
  7828  000C' 0089'              	movwf	??_Proximity_State_NotActivated+1
  7829  000D' 0903'              	comf	?_MTOUCH_Proximity_Baseline_Get+2,w
  7830  000E' 008A'              	movwf	??_Proximity_State_NotActivated+2
  7831  000F' 0904'              	comf	?_MTOUCH_Proximity_Baseline_Get+3,w
  7832  0010' 008B'              	movwf	??_Proximity_State_NotActivated+3
  7833  0011' 0A88'              	incf	??_Proximity_State_NotActivated,f
  7834  0012' 1903               	skipnz
  7835  0013' 0A89'              	incf	??_Proximity_State_NotActivated+1,f
  7836  0014' 1903               	skipnz
  7837  0015' 0A8A'              	incf	??_Proximity_State_NotActivated+2,f
  7838  0016' 1903               	skipnz
  7839  0017' 0A8B'              	incf	??_Proximity_State_NotActivated+3,f
  7840  0018' 0807'              	movf	Proximity_State_NotActivated@prox,w
  7841  0019' 0086               	movwf	6
  7842  001A' 0187               	clrf	7
  7843  001B' 0801               	movf	1,w
  7844  001C' 3180' 2000' 3180'  	fcall	_MTOUCH_Proximity_Reading_Get
  7845  001F' 0802'              	movf	?_MTOUCH_Proximity_Reading_Get,w
  7846  0020' 0020               	movlb	0	; select bank0
  7847  0021' 0788'              	addwf	??_Proximity_State_NotActivated,f
  7848  0022' 0803'              	movf	?_MTOUCH_Proximity_Reading_Get+1,w
  7849  0023' 3D89'              	addwfc	??_Proximity_State_NotActivated+1,f
  7850  0024' 0804'              	movf	?_MTOUCH_Proximity_Reading_Get+2,w
  7851  0025' 3D8A'              	addwfc	??_Proximity_State_NotActivated+2,f
  7852  0026' 0805'              	movf	?_MTOUCH_Proximity_Reading_Get+3,w
  7853  0027' 3D8B'              	addwfc	??_Proximity_State_NotActivated+3,f
  7854  0028' 080B'              	movf	??_Proximity_State_NotActivated+3,w
  7855  0029' 008F'              	movwf	Proximity_State_NotActivated@deviation+3
  7856  002A' 080A'              	movf	??_Proximity_State_NotActivated+2,w
  7857  002B' 008E'              	movwf	Proximity_State_NotActivated@deviation+2
  7858  002C' 0809'              	movf	??_Proximity_State_NotActivated+1,w
  7859  002D' 008D'              	movwf	Proximity_State_NotActivated@deviation+1
  7860  002E' 0808'              	movf	??_Proximity_State_NotActivated,w
  7861  002F' 008C'              	movwf	Proximity_State_NotActivated@deviation
  7862                           
  7863                           ;mtouch_proximity.c: 203: if (deviation < (int32_t)(mtouch_prox_deviation_t)-10)
  7864  0030' 1F8F'              	btfss	Proximity_State_NotActivated@deviation+3,7
  7865  0031' 2800'              	goto	l5547
  7866  0032' 30F6               	movlw	246
  7867  0033' 020C'              	subwf	Proximity_State_NotActivated@deviation,w
  7868  0034' 30FF               	movlw	255
  7869  0035' 3B0D'              	subwfb	Proximity_State_NotActivated@deviation+1,w
  7870  0036' 30FF               	movlw	255
  7871  0037' 3B0E'              	subwfb	Proximity_State_NotActivated@deviation+2,w
  7872  0038' 30FF               	movlw	255
  7873  0039' 3B0F'              	subwfb	Proximity_State_NotActivated@deviation+3,w
  7874  003A' 1803               	btfsc	3,0
  7875  003B' 2800'              	goto	l5547
  7876                           
  7877                           ;mtouch_proximity.c: 204: {
  7878                           ;mtouch_proximity.c: 205: (prox->counter)++;
  7879  003C' 0807'              	movf	Proximity_State_NotActivated@prox,w
  7880  003D' 3E0C               	addlw	12
  7881  003E' 0086               	movwf	6
  7882  003F' 0187               	clrf	7
  7883  0040' 3001               	movlw	1
  7884  0041' 0781               	addwf	1,f
  7885  0042' 3141               	addfsr 1,1
  7886  0043' 1803               	skipnc
  7887  0044' 0A81               	incf	1,f
  7888                           
  7889                           ;mtouch_proximity.c: 206: if ((prox->counter) > (mtouch_prox_statecounter_t)((mtouch_pro
      +                          x_statecounter_t)32))
  7890  0045' 0807'              	movf	Proximity_State_NotActivated@prox,w
  7891  0046' 3E0C               	addlw	12
  7892  0047' 0086               	movwf	6
  7893  0048' 0187               	clrf	7
  7894  0049' 3F40               	moviw [0]fsr1
  7895  004A' 0088'              	movwf	??_Proximity_State_NotActivated
  7896  004B' 3F41               	moviw [1]fsr1
  7897  004C' 0089'              	movwf	??_Proximity_State_NotActivated+1
  7898  004D' 3000               	movlw	0
  7899  004E' 0209'              	subwf	??_Proximity_State_NotActivated+1,w
  7900  004F' 3021               	movlw	33
  7901  0050' 1903               	skipnz
  7902  0051' 0208'              	subwf	??_Proximity_State_NotActivated,w
  7903  0052' 1C03               	skipc
  7904  0053' 2800'              	goto	l1056
  7905                           
  7906                           ;mtouch_proximity.c: 207: {
  7907                           ;mtouch_proximity.c: 208: prox->counter = (mtouch_prox_statecounter_t)0;
  7908  0054' 0807'              	movf	Proximity_State_NotActivated@prox,w
  7909  0055' 3E0C               	addlw	12
  7910  0056' 0086               	movwf	6
  7911  0057' 0187               	clrf	7
  7912  0058' 3000               	movlw	0
  7913  0059' 3FC0               	movwi [0]fsr1
  7914  005A' 3FC1               	movwi [1]fsr1
  7915                           
  7916                           ;mtouch_proximity.c: 209: MTOUCH_Proximity_Initialize(prox->name);
  7917  005B' 0807'              	movf	Proximity_State_NotActivated@prox,w
  7918  005C' 0086               	movwf	6
  7919  005D' 0187               	clrf	7
  7920  005E' 0801               	movf	1,w
  7921  005F' 3180' 2000' 3180'  	fcall	_MTOUCH_Proximity_Initialize
  7922                           
  7923                           ;mtouch_proximity.c: 210: }
  7924                           ;mtouch_proximity.c: 211: }
  7925  0062' 2800'              	goto	l1056
  7926  0063'                    l5547:	
  7927                           
  7928                           ;mtouch_proximity.c: 213: else if ((prox->integratedDeviation) > (prox->threshold))
  7929  0063' 0020               	movlb	0	; select bank0
  7930  0064' 0807'              	movf	Proximity_State_NotActivated@prox,w
  7931  0065' 3E10               	addlw	16
  7932  0066' 0086               	movwf	6
  7933  0067' 0187               	clrf	7
  7934  0068' 0801               	movf	1,w
  7935  0069' 3A80               	xorlw	128
  7936  006A' 0088'              	movwf	??_Proximity_State_NotActivated
  7937  006B' 0807'              	movf	Proximity_State_NotActivated@prox,w
  7938  006C' 3E0B               	addlw	11
  7939  006D' 0086               	movwf	6
  7940  006E' 0187               	clrf	7
  7941  006F' 0801               	movf	1,w
  7942  0070' 3A80               	xorlw	128
  7943  0071' 0288'              	subwf	??_Proximity_State_NotActivated,f
  7944  0072' 1803               	skipnc
  7945  0073' 2800'              	goto	l5553
  7946                           
  7947                           ;mtouch_proximity.c: 214: {
  7948                           ;mtouch_proximity.c: 215: prox->state = MTOUCH_PROXIMITY_STATE_activated;
  7949  0074' 3002               	movlw	2
  7950  0075' 0088'              	movwf	??_Proximity_State_NotActivated
  7951  0076' 0807'              	movf	Proximity_State_NotActivated@prox,w
  7952  0077' 3E02               	addlw	2
  7953  0078' 0086               	movwf	6
  7954  0079' 0187               	clrf	7
  7955  007A' 0808'              	movf	??_Proximity_State_NotActivated,w
  7956  007B' 0081               	movwf	1
  7957                           
  7958                           ;mtouch_proximity.c: 216: prox->counter = (mtouch_prox_statecounter_t)0;
  7959  007C' 0807'              	movf	Proximity_State_NotActivated@prox,w
  7960  007D' 3E0C               	addlw	12
  7961  007E' 0086               	movwf	6
  7962  007F' 0187               	clrf	7
  7963  0080' 3000               	movlw	0
  7964  0081' 3FC0               	movwi [0]fsr1
  7965  0082' 3FC1               	movwi [1]fsr1
  7966                           
  7967                           ;mtouch_proximity.c: 217: callback_activated(prox->name);
  7968  0083' 0807'              	movf	Proximity_State_NotActivated@prox,w
  7969  0084' 0086               	movwf	6
  7970  0085' 0187               	clrf	7
  7971  0086' 0801               	movf	1,w
  7972  0087' 0088'              	movwf	??_Proximity_State_NotActivated
  7973  0088' 0808'              	movf	??_Proximity_State_NotActivated,w
  7974  0089' 0082'              	movwf	Proximity_DefaultCallback@name
  7975  008A' 080F'              	movf	_callback_activated+1,w
  7976  008B' 008A               	movwf	10
  7977  008C' 080E'              	movf	_callback_activated,w
  7978  008D' 000A               	callw
  7979  008E' 3180'              	pagesel	$
  7980                           
  7981                           ;mtouch_proximity.c: 218: }
  7982  008F' 2800'              	goto	l1056
  7983  0090'                    l5553:	
  7984                           
  7985                           ;mtouch_proximity.c: 219: else
  7986                           ;mtouch_proximity.c: 220: {
  7987                           ;mtouch_proximity.c: 222: prox->counter = (mtouch_prox_statecounter_t)0;
  7988  0090' 0020               	movlb	0	; select bank0
  7989  0091' 0807'              	movf	Proximity_State_NotActivated@prox,w
  7990  0092' 3E0C               	addlw	12
  7991  0093' 0086               	movwf	6
  7992  0094' 0187               	clrf	7
  7993  0095' 3000               	movlw	0
  7994  0096' 3FC0               	movwi [0]fsr1
  7995  0097' 3FC1               	movwi [1]fsr1
  7996  0098'                    l1056:	
  7997                           
  7998                           ;mtouch_proximity.c: 223: }
  7999                           ;mtouch_proximity.c: 226: (prox->baseline_count)++;
  8000  0098' 0020               	movlb	0	; select bank0
  8001  0099' 0807'              	movf	Proximity_State_NotActivated@prox,w
  8002  009A' 3E0E               	addlw	14
  8003  009B' 0086               	movwf	6
  8004  009C' 0187               	clrf	7
  8005  009D' 3001               	movlw	1
  8006  009E' 0781               	addwf	1,f
  8007  009F' 3141               	addfsr 1,1
  8008  00A0' 1803               	skipnc
  8009  00A1' 0A81               	incf	1,f
  8010                           
  8011                           ;mtouch_proximity.c: 227: if ((prox->baseline_count) > ((mtouch_prox_baselinecounter_t)6
      +                          4))
  8012  00A2' 0807'              	movf	Proximity_State_NotActivated@prox,w
  8013  00A3' 3E0E               	addlw	14
  8014  00A4' 0086               	movwf	6
  8015  00A5' 0187               	clrf	7
  8016  00A6' 3F40               	moviw [0]fsr1
  8017  00A7' 0088'              	movwf	??_Proximity_State_NotActivated
  8018  00A8' 3F41               	moviw [1]fsr1
  8019  00A9' 0089'              	movwf	??_Proximity_State_NotActivated+1
  8020  00AA' 3000               	movlw	0
  8021  00AB' 0209'              	subwf	??_Proximity_State_NotActivated+1,w
  8022  00AC' 3041               	movlw	65
  8023  00AD' 1903               	skipnz
  8024  00AE' 0208'              	subwf	??_Proximity_State_NotActivated,w
  8025  00AF' 1C03               	skipc
  8026  00B0' 0008               	return
  8027                           
  8028                           ;mtouch_proximity.c: 228: {
  8029                           ;mtouch_proximity.c: 229: prox->baseline_count = (mtouch_prox_baselinecounter_t)0;
  8030  00B1' 0807'              	movf	Proximity_State_NotActivated@prox,w
  8031  00B2' 3E0E               	addlw	14
  8032  00B3' 0086               	movwf	6
  8033  00B4' 0187               	clrf	7
  8034  00B5' 3000               	movlw	0
  8035  00B6' 3FC0               	movwi [0]fsr1
  8036  00B7' 3FC1               	movwi [1]fsr1
  8037                           
  8038                           ;mtouch_proximity.c: 230: Proximity_Baseline_Update(prox);
  8039  00B8' 0807'              	movf	Proximity_State_NotActivated@prox,w
  8040  00B9' 3180' 2000'        	fcall	_Proximity_Baseline_Update
  8041  00BB' 0008               	return
  8042  00BC'                    __end_of_Proximity_State_NotActivated:	
  8043                           
  8044                           	psect	text44
  8045  0000'                    __ptext44:	
  8046 ;; *************** function _processProximityNotActivate *****************
  8047 ;; Defined at:
  8048 ;;		line 82 in file "main.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;  prox            1    2[COMMON] enum E3311
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;		None
  8053 ;; Return value:  Size  Location     Type
  8054 ;;                  1    wreg      void 
  8055 ;; Registers used:
  8056 ;;		None
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8062 ;;      Params:         1       0       0       0       0       0       0       0
  8063 ;;      Locals:         0       0       0       0       0       0       0       0
  8064 ;;      Temps:          0       0       0       0       0       0       0       0
  8065 ;;      Totals:         1       0       0       0       0       0       0       0
  8066 ;;Total ram usage:        1 bytes
  8067 ;; Hardware stack levels used:    1
  8068 ;; Hardware stack levels required when called:    2
  8069 ;; This function calls:
  8070 ;;		Nothing
  8071 ;; This function is called by:
  8072 ;;		_main
  8073 ;;		_Proximity_State_Activated
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           
  8078                           ;psect for function _processProximityNotActivate
  8079  0000'                    _processProximityNotActivate:	
  8080                           
  8081                           ;incstack = 0
  8082                           ; Regs used in _processProximityNotActivate: []
  8083  0000' 0008               	return
  8084  0001'                    __end_of_processProximityNotActivate:	
  8085                           
  8086                           	psect	text45
  8087  0000'                    __ptext45:	
  8088 ;; *************** function _Proximity_DefaultCallback *****************
  8089 ;; Defined at:
  8090 ;;		line 420 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;  name            1    2[COMMON] enum E3283
  8093 ;; Auto vars:     Size  Location     Type
  8094 ;;		None
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  1    wreg      void 
  8097 ;; Registers used:
  8098 ;;		None
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8104 ;;      Params:         1       0       0       0       0       0       0       0
  8105 ;;      Locals:         0       0       0       0       0       0       0       0
  8106 ;;      Temps:          0       0       0       0       0       0       0       0
  8107 ;;      Totals:         1       0       0       0       0       0       0       0
  8108 ;;Total ram usage:        1 bytes
  8109 ;; Hardware stack levels used:    1
  8110 ;; Hardware stack levels required when called:    2
  8111 ;; This function calls:
  8112 ;;		Nothing
  8113 ;; This function is called by:
  8114 ;;		_Proximity_State_NotActivated
  8115 ;;		_Proximity_State_Activated
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           
  8120                           ;psect for function _Proximity_DefaultCallback
  8121  0000'                    _Proximity_DefaultCallback:	
  8122                           
  8123                           ;incstack = 0
  8124                           ; Regs used in _Proximity_DefaultCallback: []
  8125  0000' 0008               	return
  8126  0001'                    __end_of_Proximity_DefaultCallback:	
  8127                           
  8128                           	psect	text46
  8129  0000'                    __ptext46:	
  8130 ;; *************** function _processProximityActivate *****************
  8131 ;; Defined at:
  8132 ;;		line 76 in file "main.c"
  8133 ;; Parameters:    Size  Location     Type
  8134 ;;  prox            1    2[COMMON] enum E3311
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;		None
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  1    wreg      void 
  8139 ;; Registers used:
  8140 ;;		None
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8146 ;;      Params:         1       0       0       0       0       0       0       0
  8147 ;;      Locals:         0       0       0       0       0       0       0       0
  8148 ;;      Temps:          0       0       0       0       0       0       0       0
  8149 ;;      Totals:         1       0       0       0       0       0       0       0
  8150 ;;Total ram usage:        1 bytes
  8151 ;; Hardware stack levels used:    1
  8152 ;; Hardware stack levels required when called:    2
  8153 ;; This function calls:
  8154 ;;		Nothing
  8155 ;; This function is called by:
  8156 ;;		_main
  8157 ;;		_Proximity_State_NotActivated
  8158 ;; This function uses a non-reentrant model
  8159 ;;
  8160                           
  8161                           
  8162                           ;psect for function _processProximityActivate
  8163  0000'                    _processProximityActivate:	
  8164                           
  8165                           ;incstack = 0
  8166                           ; Regs used in _processProximityActivate: []
  8167  0000' 0008               	return
  8168  0001'                    __end_of_processProximityActivate:	
  8169                           
  8170                           	psect	text47
  8171  0000'                    __ptext47:	
  8172 ;; *************** function _Proximity_Baseline_Update *****************
  8173 ;; Defined at:
  8174 ;;		line 385 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;  prox            1    wreg     PTR struct .
  8177 ;;		 -> mtouch_proximity(18), 
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;  prox            1    6[COMMON] PTR struct .
  8180 ;;		 -> mtouch_proximity(18), 
  8181 ;; Return value:  Size  Location     Type
  8182 ;;                  1    wreg      void 
  8183 ;; Registers used:
  8184 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8185 ;; Tracked objects:
  8186 ;;		On entry : 0/0
  8187 ;;		On exit  : 0/0
  8188 ;;		Unchanged: 0/0
  8189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8190 ;;      Params:         0       0       0       0       0       0       0       0
  8191 ;;      Locals:         1       0       0       0       0       0       0       0
  8192 ;;      Temps:          4       0       0       0       0       0       0       0
  8193 ;;      Totals:         5       0       0       0       0       0       0       0
  8194 ;;Total ram usage:        5 bytes
  8195 ;; Hardware stack levels used:    1
  8196 ;; Hardware stack levels required when called:    2
  8197 ;; This function calls:
  8198 ;;		Nothing
  8199 ;; This function is called by:
  8200 ;;		_Proximity_State_Initializing
  8201 ;;		_Proximity_State_NotActivated
  8202 ;; This function uses a non-reentrant model
  8203 ;;
  8204                           
  8205                           
  8206                           ;psect for function _Proximity_Baseline_Update
  8207  0000'                    _Proximity_Baseline_Update:	
  8208                           
  8209                           ;incstack = 0
  8210                           ; Regs used in _Proximity_Baseline_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  8211                           ;Proximity_Baseline_Update@prox stored from wreg
  8212  0000' 0086'              	movwf	Proximity_Baseline_Update@prox
  8213                           
  8214                           ;mtouch_proximity.c: 387: if (INTCONbits.GIE == (uint8_t)1)
  8215  0001' 1F8B               	btfss	11,7	;volatile
  8216  0002' 2800'              	goto	l3705
  8217                           
  8218                           ;mtouch_proximity.c: 388: {
  8219                           ;mtouch_proximity.c: 389: INTCONbits.GIE = (uint8_t)0;
  8220  0003' 138B               	bcf	11,7	;volatile
  8221                           
  8222                           ;mtouch_proximity.c: 390: prox->baseline -= (prox->baseline) >> ((uint8_t)4);
  8223  0004' 0806'              	movf	Proximity_Baseline_Update@prox,w
  8224  0005' 3E07               	addlw	7
  8225  0006' 0086               	movwf	6
  8226  0007' 0187               	clrf	7
  8227  0008' 3F40               	moviw [0]fsr1
  8228  0009' 0082'              	movwf	??_Proximity_Baseline_Update
  8229  000A' 3F41               	moviw [1]fsr1
  8230  000B' 0083'              	movwf	??_Proximity_Baseline_Update+1
  8231  000C' 3F42               	moviw [2]fsr1
  8232  000D' 0084'              	movwf	??_Proximity_Baseline_Update+2
  8233  000E' 3F43               	moviw [3]fsr1
  8234  000F' 0085'              	movwf	??_Proximity_Baseline_Update+3
  8235  0010' 3004               	movlw	4
  8236  0011'                    u2975:	
  8237  0011' 3685'              	lsrf	??_Proximity_Baseline_Update+3,f
  8238  0012' 0C84'              	rrf	??_Proximity_Baseline_Update+2,f
  8239  0013' 0C83'              	rrf	??_Proximity_Baseline_Update+1,f
  8240  0014' 0C82'              	rrf	??_Proximity_Baseline_Update,f
  8241  0015' 0B89               	decfsz	9,f
  8242  0016' 2800'              	goto	u2975
  8243  0017' 0806'              	movf	Proximity_Baseline_Update@prox,w
  8244  0018' 3E07               	addlw	7
  8245  0019' 0086               	movwf	6
  8246  001A' 0187               	clrf	7
  8247  001B' 0802'              	movf	??_Proximity_Baseline_Update,w
  8248  001C' 0281               	subwf	1,f
  8249  001D' 3141               	addfsr 1,1
  8250  001E' 0803'              	movf	??_Proximity_Baseline_Update+1,w
  8251  001F' 3B81               	subwfb	1,f
  8252  0020' 3141               	addfsr 1,1
  8253  0021' 0804'              	movf	??_Proximity_Baseline_Update+2,w
  8254  0022' 3B81               	subwfb	1,f
  8255  0023' 3141               	addfsr 1,1
  8256  0024' 0805'              	movf	??_Proximity_Baseline_Update+3,w
  8257  0025' 3B81               	subwfb	1,f
  8258  0026' 317D               	addfsr 1,-3
  8259                           
  8260                           ;mtouch_proximity.c: 391: prox->baseline += prox->reading;
  8261  0027' 0806'              	movf	Proximity_Baseline_Update@prox,w
  8262  0028' 3E03               	addlw	3
  8263  0029' 0086               	movwf	6
  8264  002A' 0187               	clrf	7
  8265  002B' 3F40               	moviw [0]fsr1
  8266  002C' 0082'              	movwf	??_Proximity_Baseline_Update
  8267  002D' 3F41               	moviw [1]fsr1
  8268  002E' 0083'              	movwf	??_Proximity_Baseline_Update+1
  8269  002F' 3F42               	moviw [2]fsr1
  8270  0030' 0084'              	movwf	??_Proximity_Baseline_Update+2
  8271  0031' 3F43               	moviw [3]fsr1
  8272  0032' 0085'              	movwf	??_Proximity_Baseline_Update+3
  8273  0033' 0806'              	movf	Proximity_Baseline_Update@prox,w
  8274  0034' 3E07               	addlw	7
  8275  0035' 0086               	movwf	6
  8276  0036' 0187               	clrf	7
  8277  0037' 0802'              	movf	??_Proximity_Baseline_Update,w
  8278  0038' 0781               	addwf	1,f
  8279  0039' 3141               	addfsr 1,1
  8280  003A' 0803'              	movf	??_Proximity_Baseline_Update+1,w
  8281  003B' 3D81               	addwfc	1,f
  8282  003C' 3141               	addfsr 1,1
  8283  003D' 0804'              	movf	??_Proximity_Baseline_Update+2,w
  8284  003E' 3D81               	addwfc	1,f
  8285  003F' 3141               	addfsr 1,1
  8286  0040' 0805'              	movf	??_Proximity_Baseline_Update+3,w
  8287  0041' 3D81               	addwfc	1,f
  8288                           
  8289                           ;mtouch_proximity.c: 392: INTCONbits.GIE = (uint8_t)1;
  8290  0042' 178B               	bsf	11,7	;volatile
  8291                           
  8292                           ;mtouch_proximity.c: 393: }
  8293  0043' 0008               	return
  8294  0044'                    l3705:	
  8295                           
  8296                           ;mtouch_proximity.c: 394: else
  8297                           ;mtouch_proximity.c: 395: {
  8298                           ;mtouch_proximity.c: 396: prox->baseline -= (prox->baseline) >> ((uint8_t)4);
  8299  0044' 0806'              	movf	Proximity_Baseline_Update@prox,w
  8300  0045' 3E07               	addlw	7
  8301  0046' 0086               	movwf	6
  8302  0047' 0187               	clrf	7
  8303  0048' 3F40               	moviw [0]fsr1
  8304  0049' 0082'              	movwf	??_Proximity_Baseline_Update
  8305  004A' 3F41               	moviw [1]fsr1
  8306  004B' 0083'              	movwf	??_Proximity_Baseline_Update+1
  8307  004C' 3F42               	moviw [2]fsr1
  8308  004D' 0084'              	movwf	??_Proximity_Baseline_Update+2
  8309  004E' 3F43               	moviw [3]fsr1
  8310  004F' 0085'              	movwf	??_Proximity_Baseline_Update+3
  8311  0050' 3004               	movlw	4
  8312  0051'                    u2985:	
  8313  0051' 3685'              	lsrf	??_Proximity_Baseline_Update+3,f
  8314  0052' 0C84'              	rrf	??_Proximity_Baseline_Update+2,f
  8315  0053' 0C83'              	rrf	??_Proximity_Baseline_Update+1,f
  8316  0054' 0C82'              	rrf	??_Proximity_Baseline_Update,f
  8317  0055' 0B89               	decfsz	9,f
  8318  0056' 2800'              	goto	u2985
  8319  0057' 0806'              	movf	Proximity_Baseline_Update@prox,w
  8320  0058' 3E07               	addlw	7
  8321  0059' 0086               	movwf	6
  8322  005A' 0187               	clrf	7
  8323  005B' 0802'              	movf	??_Proximity_Baseline_Update,w
  8324  005C' 0281               	subwf	1,f
  8325  005D' 3141               	addfsr 1,1
  8326  005E' 0803'              	movf	??_Proximity_Baseline_Update+1,w
  8327  005F' 3B81               	subwfb	1,f
  8328  0060' 3141               	addfsr 1,1
  8329  0061' 0804'              	movf	??_Proximity_Baseline_Update+2,w
  8330  0062' 3B81               	subwfb	1,f
  8331  0063' 3141               	addfsr 1,1
  8332  0064' 0805'              	movf	??_Proximity_Baseline_Update+3,w
  8333  0065' 3B81               	subwfb	1,f
  8334  0066' 317D               	addfsr 1,-3
  8335                           
  8336                           ;mtouch_proximity.c: 397: prox->baseline += prox->reading;
  8337  0067' 0806'              	movf	Proximity_Baseline_Update@prox,w
  8338  0068' 3E03               	addlw	3
  8339  0069' 0086               	movwf	6
  8340  006A' 0187               	clrf	7
  8341  006B' 3F40               	moviw [0]fsr1
  8342  006C' 0082'              	movwf	??_Proximity_Baseline_Update
  8343  006D' 3F41               	moviw [1]fsr1
  8344  006E' 0083'              	movwf	??_Proximity_Baseline_Update+1
  8345  006F' 3F42               	moviw [2]fsr1
  8346  0070' 0084'              	movwf	??_Proximity_Baseline_Update+2
  8347  0071' 3F43               	moviw [3]fsr1
  8348  0072' 0085'              	movwf	??_Proximity_Baseline_Update+3
  8349  0073' 0806'              	movf	Proximity_Baseline_Update@prox,w
  8350  0074' 3E07               	addlw	7
  8351  0075' 0086               	movwf	6
  8352  0076' 0187               	clrf	7
  8353  0077' 0802'              	movf	??_Proximity_Baseline_Update,w
  8354  0078' 0781               	addwf	1,f
  8355  0079' 3141               	addfsr 1,1
  8356  007A' 0803'              	movf	??_Proximity_Baseline_Update+1,w
  8357  007B' 3D81               	addwfc	1,f
  8358  007C' 3141               	addfsr 1,1
  8359  007D' 0804'              	movf	??_Proximity_Baseline_Update+2,w
  8360  007E' 3D81               	addwfc	1,f
  8361  007F' 3141               	addfsr 1,1
  8362  0080' 0805'              	movf	??_Proximity_Baseline_Update+3,w
  8363  0081' 3D81               	addwfc	1,f
  8364  0082' 0008               	return
  8365  0083'                    __end_of_Proximity_Baseline_Update:	
  8366                           
  8367                           	psect	text48
  8368  0000'                    __ptext48:	
  8369 ;; *************** function _Proximity_Baseline_Initialize *****************
  8370 ;; Defined at:
  8371 ;;		line 379 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;  prox            1    wreg     PTR struct .
  8374 ;;		 -> mtouch_proximity(18), 
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;  prox            1    4[BANK0 ] PTR struct .
  8377 ;;		 -> mtouch_proximity(18), 
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  1    wreg      void 
  8380 ;; Registers used:
  8381 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8387 ;;      Params:         0       0       0       0       0       0       0       0
  8388 ;;      Locals:         0       1       0       0       0       0       0       0
  8389 ;;      Temps:          0       4       0       0       0       0       0       0
  8390 ;;      Totals:         0       5       0       0       0       0       0       0
  8391 ;;Total ram usage:        5 bytes
  8392 ;; Hardware stack levels used:    1
  8393 ;; Hardware stack levels required when called:    4
  8394 ;; This function calls:
  8395 ;;		_MTOUCH_Sensor_RawSample_Get
  8396 ;; This function is called by:
  8397 ;;		_Proximity_State_Initializing
  8398 ;; This function uses a non-reentrant model
  8399 ;;
  8400                           
  8401                           
  8402                           ;psect for function _Proximity_Baseline_Initialize
  8403  0000'                    _Proximity_Baseline_Initialize:	
  8404                           
  8405                           ;incstack = 0
  8406                           ; Regs used in _Proximity_Baseline_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  8407                           ;Proximity_Baseline_Initialize@prox stored from wreg
  8408  0000' 0020               	movlb	0	; select bank0
  8409  0001' 0084'              	movwf	Proximity_Baseline_Initialize@prox
  8410                           
  8411                           ;mtouch_proximity.c: 381: prox->baseline = MTOUCH_Sensor_RawSample_Get(prox->sensor);
  8412  0002' 0A04'              	incf	Proximity_Baseline_Initialize@prox,w
  8413  0003' 0086               	movwf	6
  8414  0004' 0187               	clrf	7
  8415  0005' 0801               	movf	1,w
  8416  0006' 3180' 2000' 3180'  	fcall	_MTOUCH_Sensor_RawSample_Get
  8417  0009' 0806'              	movf	?_MTOUCH_Sensor_RawSample_Get,w
  8418  000A' 0020               	movlb	0	; select bank0
  8419  000B' 0080'              	movwf	??_Proximity_Baseline_Initialize
  8420  000C' 0807'              	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  8421  000D' 0081'              	movwf	??_Proximity_Baseline_Initialize+1
  8422  000E' 0182'              	clrf	??_Proximity_Baseline_Initialize+2
  8423  000F' 0183'              	clrf	??_Proximity_Baseline_Initialize+3
  8424  0010' 0804'              	movf	Proximity_Baseline_Initialize@prox,w
  8425  0011' 3E07               	addlw	7
  8426  0012' 0086               	movwf	6
  8427  0013' 0187               	clrf	7
  8428  0014' 0800'              	movf	??_Proximity_Baseline_Initialize,w
  8429  0015' 3FC0               	movwi [0]fsr1
  8430  0016' 0801'              	movf	??_Proximity_Baseline_Initialize+1,w
  8431  0017' 3FC1               	movwi [1]fsr1
  8432  0018' 0802'              	movf	??_Proximity_Baseline_Initialize+2,w
  8433  0019' 3FC2               	movwi [2]fsr1
  8434  001A' 0803'              	movf	??_Proximity_Baseline_Initialize+3,w
  8435  001B' 3FC3               	movwi [3]fsr1
  8436                           
  8437                           ;mtouch_proximity.c: 382: prox->baseline <<= (((uint8_t)4) + ((uint8_t)1));
  8438  001C' 0804'              	movf	Proximity_Baseline_Initialize@prox,w
  8439  001D' 3E07               	addlw	7
  8440  001E' 0086               	movwf	6
  8441  001F' 0187               	clrf	7
  8442  0020' 3005               	movlw	5
  8443  0021'                    u5325:	
  8444  0021' 3581               	lslf	1,f
  8445  0022' 3141               	addfsr 1,1
  8446  0023' 0D81               	rlf	1,f
  8447  0024' 3141               	addfsr 1,1
  8448  0025' 0D81               	rlf	1,f
  8449  0026' 3141               	addfsr 1,1
  8450  0027' 0D81               	rlf	1,f
  8451  0028' 317D               	addfsr 1,-3
  8452  0029' 0B89               	decfsz	9,f
  8453  002A' 2800'              	goto	u5325
  8454  002B' 0008               	return
  8455  002C'                    __end_of_Proximity_Baseline_Initialize:	
  8456                           
  8457                           	psect	text49
  8458  0000'                    __ptext49:	
  8459 ;; *************** function _MTOUCH_Proximity_Initialize *****************
  8460 ;; Defined at:
  8461 ;;		line 127 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  8462 ;; Parameters:    Size  Location     Type
  8463 ;;  name            1    wreg     enum E3283
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;  name            1    3[COMMON] enum E3283
  8466 ;;  prox            1    4[COMMON] PTR struct .
  8467 ;;		 -> mtouch_proximity(18), 
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  1    wreg      void 
  8470 ;; Registers used:
  8471 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/0
  8474 ;;		On exit  : 0/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8477 ;;      Params:         0       0       0       0       0       0       0       0
  8478 ;;      Locals:         2       0       0       0       0       0       0       0
  8479 ;;      Temps:          1       0       0       0       0       0       0       0
  8480 ;;      Totals:         3       0       0       0       0       0       0       0
  8481 ;;Total ram usage:        3 bytes
  8482 ;; Hardware stack levels used:    1
  8483 ;; Hardware stack levels required when called:    2
  8484 ;; This function calls:
  8485 ;;		Nothing
  8486 ;; This function is called by:
  8487 ;;		_Proximity_Service
  8488 ;;		_Proximity_State_NotActivated
  8489 ;;		_Proximity_State_Activated
  8490 ;;		_MTOUCH_proximity_Recalibrate
  8491 ;;		_MTOUCH_Proximity_InitializeAll
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           
  8496                           ;psect for function _MTOUCH_Proximity_Initialize
  8497  0000'                    _MTOUCH_Proximity_Initialize:	
  8498                           
  8499                           ;incstack = 0
  8500                           ; Regs used in _MTOUCH_Proximity_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0]
  8501                           ;MTOUCH_Proximity_Initialize@name stored from wreg
  8502  0000' 0083'              	movwf	MTOUCH_Proximity_Initialize@name
  8503                           
  8504                           ;mtouch_proximity.c: 129: mtouch_proximity_t* prox = &mtouch_proximity[name];
  8505  0001' 0E03'              	swapf	MTOUCH_Proximity_Initialize@name,w
  8506  0002' 39F0               	andlw	240
  8507  0003' 0703'              	addwf	MTOUCH_Proximity_Initialize@name,w
  8508  0004' 0703'              	addwf	MTOUCH_Proximity_Initialize@name,w
  8509  0005' 3E00'              	addlw	(low (_mtouch_proximity| 0))& (0+255)
  8510  0006' 0082'              	movwf	??_MTOUCH_Proximity_Initialize
  8511  0007' 0802'              	movf	??_MTOUCH_Proximity_Initialize,w
  8512  0008' 0084'              	movwf	MTOUCH_Proximity_Initialize@prox
  8513                           
  8514                           ;mtouch_proximity.c: 131: prox->state = MTOUCH_PROXIMITY_STATE_initializing;
  8515  0009' 0804'              	movf	MTOUCH_Proximity_Initialize@prox,w
  8516  000A' 3E02               	addlw	2
  8517  000B' 0086               	movwf	6
  8518  000C' 0187               	clrf	7
  8519  000D' 0181               	clrf	1
  8520                           
  8521                           ;mtouch_proximity.c: 132: prox->baseline = (mtouch_prox_baseline_t)0;
  8522  000E' 0804'              	movf	MTOUCH_Proximity_Initialize@prox,w
  8523  000F' 3E07               	addlw	7
  8524  0010' 0086               	movwf	6
  8525  0011' 0187               	clrf	7
  8526  0012' 3000               	movlw	0
  8527  0013' 3FC0               	movwi [0]fsr1
  8528  0014' 3000               	movlw	0
  8529  0015' 3FC1               	movwi [1]fsr1
  8530  0016' 3FC2               	movwi [2]fsr1
  8531  0017' 3FC3               	movwi [3]fsr1
  8532                           
  8533                           ;mtouch_proximity.c: 133: prox->counter = (mtouch_prox_statecounter_t)0;
  8534  0018' 0804'              	movf	MTOUCH_Proximity_Initialize@prox,w
  8535  0019' 3E0C               	addlw	12
  8536  001A' 0086               	movwf	6
  8537  001B' 0187               	clrf	7
  8538  001C' 3000               	movlw	0
  8539  001D' 3FC0               	movwi [0]fsr1
  8540  001E' 3FC1               	movwi [1]fsr1
  8541                           
  8542                           ;mtouch_proximity.c: 134: prox->baseline_count = (mtouch_prox_baselinecounter_t)0;
  8543  001F' 0804'              	movf	MTOUCH_Proximity_Initialize@prox,w
  8544  0020' 3E0E               	addlw	14
  8545  0021' 0086               	movwf	6
  8546  0022' 0187               	clrf	7
  8547  0023' 3000               	movlw	0
  8548  0024' 3FC0               	movwi [0]fsr1
  8549  0025' 3FC1               	movwi [1]fsr1
  8550  0026' 0008               	return
  8551  0027'                    __end_of_MTOUCH_Proximity_Initialize:	
  8552                           
  8553                           	psect	text50
  8554  0000'                    __ptext50:	
  8555 ;; *************** function _Proximity_Reading_Update *****************
  8556 ;; Defined at:
  8557 ;;		line 363 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;  prox            1    wreg     PTR struct .
  8560 ;;		 -> mtouch_proximity(18), 
  8561 ;; Auto vars:     Size  Location     Type
  8562 ;;  prox            1    4[BANK0 ] PTR struct .
  8563 ;;		 -> mtouch_proximity(18), 
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  1    wreg      void 
  8566 ;; Registers used:
  8567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8573 ;;      Params:         0       0       0       0       0       0       0       0
  8574 ;;      Locals:         0       1       0       0       0       0       0       0
  8575 ;;      Temps:          0       4       0       0       0       0       0       0
  8576 ;;      Totals:         0       5       0       0       0       0       0       0
  8577 ;;Total ram usage:        5 bytes
  8578 ;; Hardware stack levels used:    1
  8579 ;; Hardware stack levels required when called:    4
  8580 ;; This function calls:
  8581 ;;		_MTOUCH_Sensor_RawSample_Get
  8582 ;; This function is called by:
  8583 ;;		_Proximity_Service
  8584 ;; This function uses a non-reentrant model
  8585 ;;
  8586                           
  8587                           
  8588                           ;psect for function _Proximity_Reading_Update
  8589  0000'                    _Proximity_Reading_Update:	
  8590                           
  8591                           ;incstack = 0
  8592                           ; Regs used in _Proximity_Reading_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  8593                           ;Proximity_Reading_Update@prox stored from wreg
  8594  0000' 0020               	movlb	0	; select bank0
  8595  0001' 0084'              	movwf	Proximity_Reading_Update@prox
  8596                           
  8597                           ;mtouch_proximity.c: 365: if (INTCONbits.GIE == (uint8_t)1)
  8598  0002' 1F8B               	btfss	11,7	;volatile
  8599  0003' 2800'              	goto	l5493
  8600                           
  8601                           ;mtouch_proximity.c: 366: {
  8602                           ;mtouch_proximity.c: 367: INTCONbits.GIE = (uint8_t)0;
  8603  0004' 138B               	bcf	11,7	;volatile
  8604                           
  8605                           ;mtouch_proximity.c: 368: prox->reading -= prox->reading >> ((uint8_t)1);
  8606  0005' 0804'              	movf	Proximity_Reading_Update@prox,w
  8607  0006' 3E03               	addlw	3
  8608  0007' 0086               	movwf	6
  8609  0008' 0187               	clrf	7
  8610  0009' 3F40               	moviw [0]fsr1
  8611  000A' 0080'              	movwf	??_Proximity_Reading_Update
  8612  000B' 3F41               	moviw [1]fsr1
  8613  000C' 0081'              	movwf	??_Proximity_Reading_Update+1
  8614  000D' 3F42               	moviw [2]fsr1
  8615  000E' 0082'              	movwf	??_Proximity_Reading_Update+2
  8616  000F' 3F43               	moviw [3]fsr1
  8617  0010' 0083'              	movwf	??_Proximity_Reading_Update+3
  8618  0011' 3001               	movlw	1
  8619  0012'                    u5595:	
  8620  0012' 3683'              	lsrf	??_Proximity_Reading_Update+3,f
  8621  0013' 0C82'              	rrf	??_Proximity_Reading_Update+2,f
  8622  0014' 0C81'              	rrf	??_Proximity_Reading_Update+1,f
  8623  0015' 0C80'              	rrf	??_Proximity_Reading_Update,f
  8624  0016' 0B89               	decfsz	9,f
  8625  0017' 2800'              	goto	u5595
  8626  0018' 0804'              	movf	Proximity_Reading_Update@prox,w
  8627  0019' 3E03               	addlw	3
  8628  001A' 0086               	movwf	6
  8629  001B' 0187               	clrf	7
  8630  001C' 0800'              	movf	??_Proximity_Reading_Update,w
  8631  001D' 0281               	subwf	1,f
  8632  001E' 3141               	addfsr 1,1
  8633  001F' 0801'              	movf	??_Proximity_Reading_Update+1,w
  8634  0020' 3B81               	subwfb	1,f
  8635  0021' 3141               	addfsr 1,1
  8636  0022' 0802'              	movf	??_Proximity_Reading_Update+2,w
  8637  0023' 3B81               	subwfb	1,f
  8638  0024' 3141               	addfsr 1,1
  8639  0025' 0803'              	movf	??_Proximity_Reading_Update+3,w
  8640  0026' 3B81               	subwfb	1,f
  8641  0027' 317D               	addfsr 1,-3
  8642                           
  8643                           ;mtouch_proximity.c: 369: prox->reading += MTOUCH_Sensor_RawSample_Get(prox->sensor);
  8644  0028' 0A04'              	incf	Proximity_Reading_Update@prox,w
  8645  0029' 0086               	movwf	6
  8646  002A' 0187               	clrf	7
  8647  002B' 0801               	movf	1,w
  8648  002C' 3180' 2000'        	fcall	_MTOUCH_Sensor_RawSample_Get
  8649  002E' 0806'              	movf	?_MTOUCH_Sensor_RawSample_Get,w
  8650  002F' 0020               	movlb	0	; select bank0
  8651  0030' 0080'              	movwf	??_Proximity_Reading_Update
  8652  0031' 0807'              	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  8653  0032' 0081'              	movwf	??_Proximity_Reading_Update+1
  8654  0033' 0182'              	clrf	??_Proximity_Reading_Update+2
  8655  0034' 0183'              	clrf	??_Proximity_Reading_Update+3
  8656  0035' 0804'              	movf	Proximity_Reading_Update@prox,w
  8657  0036' 3E03               	addlw	3
  8658  0037' 0086               	movwf	6
  8659  0038' 0187               	clrf	7
  8660  0039' 0800'              	movf	??_Proximity_Reading_Update,w
  8661  003A' 0781               	addwf	1,f
  8662  003B' 3141               	addfsr 1,1
  8663  003C' 0801'              	movf	??_Proximity_Reading_Update+1,w
  8664  003D' 3D81               	addwfc	1,f
  8665  003E' 3141               	addfsr 1,1
  8666  003F' 0802'              	movf	??_Proximity_Reading_Update+2,w
  8667  0040' 3D81               	addwfc	1,f
  8668  0041' 3141               	addfsr 1,1
  8669  0042' 0803'              	movf	??_Proximity_Reading_Update+3,w
  8670  0043' 3D81               	addwfc	1,f
  8671                           
  8672                           ;mtouch_proximity.c: 370: INTCONbits.GIE = (uint8_t)1;
  8673  0044' 178B               	bsf	11,7	;volatile
  8674                           
  8675                           ;mtouch_proximity.c: 371: }
  8676  0045' 0008               	return
  8677  0046'                    l5493:	
  8678                           
  8679                           ;mtouch_proximity.c: 372: else
  8680                           ;mtouch_proximity.c: 373: {
  8681                           ;mtouch_proximity.c: 374: prox->reading -= prox->reading >> ((uint8_t)1);
  8682  0046' 0804'              	movf	Proximity_Reading_Update@prox,w
  8683  0047' 3E03               	addlw	3
  8684  0048' 0086               	movwf	6
  8685  0049' 0187               	clrf	7
  8686  004A' 3F40               	moviw [0]fsr1
  8687  004B' 0080'              	movwf	??_Proximity_Reading_Update
  8688  004C' 3F41               	moviw [1]fsr1
  8689  004D' 0081'              	movwf	??_Proximity_Reading_Update+1
  8690  004E' 3F42               	moviw [2]fsr1
  8691  004F' 0082'              	movwf	??_Proximity_Reading_Update+2
  8692  0050' 3F43               	moviw [3]fsr1
  8693  0051' 0083'              	movwf	??_Proximity_Reading_Update+3
  8694  0052' 3001               	movlw	1
  8695  0053'                    u5605:	
  8696  0053' 3683'              	lsrf	??_Proximity_Reading_Update+3,f
  8697  0054' 0C82'              	rrf	??_Proximity_Reading_Update+2,f
  8698  0055' 0C81'              	rrf	??_Proximity_Reading_Update+1,f
  8699  0056' 0C80'              	rrf	??_Proximity_Reading_Update,f
  8700  0057' 0B89               	decfsz	9,f
  8701  0058' 2800'              	goto	u5605
  8702  0059' 0804'              	movf	Proximity_Reading_Update@prox,w
  8703  005A' 3E03               	addlw	3
  8704  005B' 0086               	movwf	6
  8705  005C' 0187               	clrf	7
  8706  005D' 0800'              	movf	??_Proximity_Reading_Update,w
  8707  005E' 0281               	subwf	1,f
  8708  005F' 3141               	addfsr 1,1
  8709  0060' 0801'              	movf	??_Proximity_Reading_Update+1,w
  8710  0061' 3B81               	subwfb	1,f
  8711  0062' 3141               	addfsr 1,1
  8712  0063' 0802'              	movf	??_Proximity_Reading_Update+2,w
  8713  0064' 3B81               	subwfb	1,f
  8714  0065' 3141               	addfsr 1,1
  8715  0066' 0803'              	movf	??_Proximity_Reading_Update+3,w
  8716  0067' 3B81               	subwfb	1,f
  8717  0068' 317D               	addfsr 1,-3
  8718                           
  8719                           ;mtouch_proximity.c: 375: prox->reading += MTOUCH_Sensor_RawSample_Get(prox->sensor);
  8720  0069' 0A04'              	incf	Proximity_Reading_Update@prox,w
  8721  006A' 0086               	movwf	6
  8722  006B' 0187               	clrf	7
  8723  006C' 0801               	movf	1,w
  8724  006D' 3180' 2000'        	fcall	_MTOUCH_Sensor_RawSample_Get
  8725  006F' 0806'              	movf	?_MTOUCH_Sensor_RawSample_Get,w
  8726  0070' 0020               	movlb	0	; select bank0
  8727  0071' 0080'              	movwf	??_Proximity_Reading_Update
  8728  0072' 0807'              	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  8729  0073' 0081'              	movwf	??_Proximity_Reading_Update+1
  8730  0074' 0182'              	clrf	??_Proximity_Reading_Update+2
  8731  0075' 0183'              	clrf	??_Proximity_Reading_Update+3
  8732  0076' 0804'              	movf	Proximity_Reading_Update@prox,w
  8733  0077' 3E03               	addlw	3
  8734  0078' 0086               	movwf	6
  8735  0079' 0187               	clrf	7
  8736  007A' 0800'              	movf	??_Proximity_Reading_Update,w
  8737  007B' 0781               	addwf	1,f
  8738  007C' 3141               	addfsr 1,1
  8739  007D' 0801'              	movf	??_Proximity_Reading_Update+1,w
  8740  007E' 3D81               	addwfc	1,f
  8741  007F' 3141               	addfsr 1,1
  8742  0080' 0802'              	movf	??_Proximity_Reading_Update+2,w
  8743  0081' 3D81               	addwfc	1,f
  8744  0082' 3141               	addfsr 1,1
  8745  0083' 0803'              	movf	??_Proximity_Reading_Update+3,w
  8746  0084' 3D81               	addwfc	1,f
  8747  0085' 0008               	return
  8748  0086'                    __end_of_Proximity_Reading_Update:	
  8749                           
  8750                           	psect	text51
  8751  0000'                    __ptext51:	
  8752 ;; *************** function _Proximity_Deviation_Update *****************
  8753 ;; Defined at:
  8754 ;;		line 311 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  8755 ;; Parameters:    Size  Location     Type
  8756 ;;  name            1    wreg     enum E3283
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;  name            1   20[BANK0 ] enum E3283
  8759 ;;  deviation       4   16[BANK0 ] long 
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  1    wreg      void 
  8762 ;; Registers used:
  8763 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8769 ;;      Params:         0       0       0       0       0       0       0       0
  8770 ;;      Locals:         0       5       0       0       0       0       0       0
  8771 ;;      Temps:          0       9       0       0       0       0       0       0
  8772 ;;      Totals:         0      14       0       0       0       0       0       0
  8773 ;;Total ram usage:       14 bytes
  8774 ;; Hardware stack levels used:    1
  8775 ;; Hardware stack levels required when called:    4
  8776 ;; This function calls:
  8777 ;;		_MTOUCH_Proximity_Baseline_Get
  8778 ;;		_MTOUCH_Proximity_Reading_Get
  8779 ;; This function is called by:
  8780 ;;		_Proximity_Service
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           
  8785                           ;psect for function _Proximity_Deviation_Update
  8786  0000'                    _Proximity_Deviation_Update:	
  8787                           
  8788                           ;incstack = 0
  8789                           ; Regs used in _Proximity_Deviation_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  8790                           ;Proximity_Deviation_Update@name stored from wreg
  8791  0000' 0020               	movlb	0	; select bank0
  8792  0001' 0094'              	movwf	Proximity_Deviation_Update@name
  8793                           
  8794                           ;mtouch_proximity.c: 313: int32_t deviation;
  8795                           ;mtouch_proximity.c: 315: deviation = (int32_t)((uint32_t)(MTOUCH_Proximity_Reading_Get(
      +                          name)) - (uint32_t)(MTOUCH_Proximity_Baseline_Get(name)));
  8796  0002' 0814'              	movf	Proximity_Deviation_Update@name,w
  8797  0003' 3180' 2000' 3180'  	fcall	_MTOUCH_Proximity_Baseline_Get
  8798  0006' 0020               	movlb	0	; select bank0
  8799  0007' 0901'              	comf	?_MTOUCH_Proximity_Baseline_Get,w
  8800  0008' 0087'              	movwf	??_Proximity_Deviation_Update
  8801  0009' 0902'              	comf	?_MTOUCH_Proximity_Baseline_Get+1,w
  8802  000A' 0088'              	movwf	??_Proximity_Deviation_Update+1
  8803  000B' 0903'              	comf	?_MTOUCH_Proximity_Baseline_Get+2,w
  8804  000C' 0089'              	movwf	??_Proximity_Deviation_Update+2
  8805  000D' 0904'              	comf	?_MTOUCH_Proximity_Baseline_Get+3,w
  8806  000E' 008A'              	movwf	??_Proximity_Deviation_Update+3
  8807  000F' 0A87'              	incf	??_Proximity_Deviation_Update,f
  8808  0010' 1903               	skipnz
  8809  0011' 0A88'              	incf	??_Proximity_Deviation_Update+1,f
  8810  0012' 1903               	skipnz
  8811  0013' 0A89'              	incf	??_Proximity_Deviation_Update+2,f
  8812  0014' 1903               	skipnz
  8813  0015' 0A8A'              	incf	??_Proximity_Deviation_Update+3,f
  8814  0016' 0814'              	movf	Proximity_Deviation_Update@name,w
  8815  0017' 3180' 2000' 3180'  	fcall	_MTOUCH_Proximity_Reading_Get
  8816  001A' 0802'              	movf	?_MTOUCH_Proximity_Reading_Get,w
  8817  001B' 0020               	movlb	0	; select bank0
  8818  001C' 0787'              	addwf	??_Proximity_Deviation_Update,f
  8819  001D' 0803'              	movf	?_MTOUCH_Proximity_Reading_Get+1,w
  8820  001E' 3D88'              	addwfc	??_Proximity_Deviation_Update+1,f
  8821  001F' 0804'              	movf	?_MTOUCH_Proximity_Reading_Get+2,w
  8822  0020' 3D89'              	addwfc	??_Proximity_Deviation_Update+2,f
  8823  0021' 0805'              	movf	?_MTOUCH_Proximity_Reading_Get+3,w
  8824  0022' 3D8A'              	addwfc	??_Proximity_Deviation_Update+3,f
  8825  0023' 080A'              	movf	??_Proximity_Deviation_Update+3,w
  8826  0024' 0093'              	movwf	Proximity_Deviation_Update@deviation+3
  8827  0025' 0809'              	movf	??_Proximity_Deviation_Update+2,w
  8828  0026' 0092'              	movwf	Proximity_Deviation_Update@deviation+2
  8829  0027' 0808'              	movf	??_Proximity_Deviation_Update+1,w
  8830  0028' 0091'              	movwf	Proximity_Deviation_Update@deviation+1
  8831  0029' 0807'              	movf	??_Proximity_Deviation_Update,w
  8832  002A' 0090'              	movwf	Proximity_Deviation_Update@deviation
  8833                           
  8834                           ;mtouch_proximity.c: 318: deviation = deviation >> (mtouch_proximity[name].scaling);
  8835  002B' 0810'              	movf	Proximity_Deviation_Update@deviation,w
  8836  002C' 0087'              	movwf	??_Proximity_Deviation_Update
  8837  002D' 0811'              	movf	Proximity_Deviation_Update@deviation+1,w
  8838  002E' 0088'              	movwf	??_Proximity_Deviation_Update+1
  8839  002F' 0812'              	movf	Proximity_Deviation_Update@deviation+2,w
  8840  0030' 0089'              	movwf	??_Proximity_Deviation_Update+2
  8841  0031' 0813'              	movf	Proximity_Deviation_Update@deviation+3,w
  8842  0032' 008A'              	movwf	??_Proximity_Deviation_Update+3
  8843  0033' 0E14'              	swapf	Proximity_Deviation_Update@name,w
  8844  0034' 39F0               	andlw	240
  8845  0035' 0714'              	addwf	Proximity_Deviation_Update@name,w
  8846  0036' 0714'              	addwf	Proximity_Deviation_Update@name,w
  8847  0037' 3E11               	addlw	17
  8848  0038' 3E00'              	addlw	(low (_mtouch_proximity| 0))& (0+255)
  8849  0039' 0086               	movwf	6
  8850  003A' 0187               	clrf	7
  8851  003B' 0A01               	incf	1,w
  8852  003C' 2800'              	goto	u5610
  8853  003D'                    u5615:	
  8854  003D' 378A'              	asrf	??_Proximity_Deviation_Update+3,f
  8855  003E' 0C89'              	rrf	??_Proximity_Deviation_Update+2,f
  8856  003F' 0C88'              	rrf	??_Proximity_Deviation_Update+1,f
  8857  0040' 0C87'              	rrf	??_Proximity_Deviation_Update,f
  8858  0041'                    u5610:	
  8859  0041' 0B89               	decfsz	9,f
  8860  0042' 2800'              	goto	u5615
  8861  0043' 080A'              	movf	??_Proximity_Deviation_Update+3,w
  8862  0044' 0093'              	movwf	Proximity_Deviation_Update@deviation+3
  8863  0045' 0809'              	movf	??_Proximity_Deviation_Update+2,w
  8864  0046' 0092'              	movwf	Proximity_Deviation_Update@deviation+2
  8865  0047' 0808'              	movf	??_Proximity_Deviation_Update+1,w
  8866  0048' 0091'              	movwf	Proximity_Deviation_Update@deviation+1
  8867  0049' 0807'              	movf	??_Proximity_Deviation_Update,w
  8868  004A' 0090'              	movwf	Proximity_Deviation_Update@deviation
  8869                           
  8870                           ;mtouch_proximity.c: 321: if (deviation > (mtouch_prox_deviation_t)((127)))
  8871  004B' 1B93'              	btfsc	Proximity_Deviation_Update@deviation+3,7
  8872  004C' 2800'              	goto	l5505
  8873  004D' 0813'              	movf	Proximity_Deviation_Update@deviation+3,w
  8874  004E' 1D03               	btfss	3,2
  8875  004F' 2800'              	goto	l5503
  8876  0050' 0812'              	movf	Proximity_Deviation_Update@deviation+2,w
  8877  0051' 1D03               	btfss	3,2
  8878  0052' 2800'              	goto	l5503
  8879  0053' 0811'              	movf	Proximity_Deviation_Update@deviation+1,w
  8880  0054' 1D03               	btfss	3,2
  8881  0055' 2800'              	goto	l5503
  8882  0056' 3080               	movlw	128
  8883  0057' 0210'              	subwf	Proximity_Deviation_Update@deviation,w
  8884  0058' 1C03               	btfss	3,0
  8885  0059' 2800'              	goto	l5505
  8886  005A'                    l5503:	
  8887                           
  8888                           ;mtouch_proximity.c: 322: {
  8889                           ;mtouch_proximity.c: 323: deviation = (mtouch_prox_deviation_t)((127));
  8890  005A' 3000               	movlw	0
  8891  005B' 0093'              	movwf	Proximity_Deviation_Update@deviation+3
  8892  005C' 3000               	movlw	0
  8893  005D' 0092'              	movwf	Proximity_Deviation_Update@deviation+2
  8894  005E' 3000               	movlw	0
  8895  005F' 0091'              	movwf	Proximity_Deviation_Update@deviation+1
  8896  0060' 307F               	movlw	127
  8897  0061' 0090'              	movwf	Proximity_Deviation_Update@deviation
  8898  0062'                    l5505:	
  8899                           
  8900                           ;mtouch_proximity.c: 324: }
  8901                           ;mtouch_proximity.c: 325: if (deviation < (mtouch_prox_deviation_t)((-128)))
  8902  0062' 1F93'              	btfss	Proximity_Deviation_Update@deviation+3,7
  8903  0063' 2800'              	goto	l5509
  8904  0064' 3080               	movlw	128
  8905  0065' 0210'              	subwf	Proximity_Deviation_Update@deviation,w
  8906  0066' 30FF               	movlw	255
  8907  0067' 3B11'              	subwfb	Proximity_Deviation_Update@deviation+1,w
  8908  0068' 30FF               	movlw	255
  8909  0069' 3B12'              	subwfb	Proximity_Deviation_Update@deviation+2,w
  8910  006A' 30FF               	movlw	255
  8911  006B' 3B13'              	subwfb	Proximity_Deviation_Update@deviation+3,w
  8912  006C' 1803               	btfsc	3,0
  8913  006D' 2800'              	goto	l5509
  8914                           
  8915                           ;mtouch_proximity.c: 326: {
  8916                           ;mtouch_proximity.c: 327: deviation = (mtouch_prox_deviation_t)((-128));
  8917  006E' 30FF               	movlw	255
  8918  006F' 0093'              	movwf	Proximity_Deviation_Update@deviation+3
  8919  0070' 30FF               	movlw	255
  8920  0071' 0092'              	movwf	Proximity_Deviation_Update@deviation+2
  8921  0072' 30FF               	movlw	255
  8922  0073' 0091'              	movwf	Proximity_Deviation_Update@deviation+1
  8923  0074' 3080               	movlw	128
  8924  0075' 0090'              	movwf	Proximity_Deviation_Update@deviation
  8925  0076'                    l5509:	
  8926                           
  8927                           ;mtouch_proximity.c: 328: }
  8928                           ;mtouch_proximity.c: 330: if(deviation < 0)
  8929  0076' 1F93'              	btfss	Proximity_Deviation_Update@deviation+3,7
  8930  0077' 2800'              	goto	l5513
  8931                           
  8932                           ;mtouch_proximity.c: 331: {
  8933                           ;mtouch_proximity.c: 332: mtouch_proximity[name].integratedDeviation = 0;
  8934  0078' 0E14'              	swapf	Proximity_Deviation_Update@name,w
  8935  0079' 39F0               	andlw	240
  8936  007A' 0714'              	addwf	Proximity_Deviation_Update@name,w
  8937  007B' 0714'              	addwf	Proximity_Deviation_Update@name,w
  8938  007C' 3E0B               	addlw	11
  8939  007D' 3E00'              	addlw	(low (_mtouch_proximity| 0))& (0+255)
  8940  007E' 0086               	movwf	6
  8941  007F' 0187               	clrf	7
  8942  0080' 0181               	clrf	1
  8943                           
  8944                           ;mtouch_proximity.c: 333: }
  8945  0081' 0008               	return
  8946  0082'                    l5513:	
  8947                           
  8948                           ;mtouch_proximity.c: 334: else if((mtouch_prox_deviation_t)deviation < (mtouch_prox_devi
      +                          ation_t)(mtouch_proximity[name].threshold << 3))
  8949  0082' 0810'              	movf	Proximity_Deviation_Update@deviation,w
  8950  0083' 3A80               	xorlw	128
  8951  0084' 0087'              	movwf	??_Proximity_Deviation_Update
  8952  0085' 0E14'              	swapf	Proximity_Deviation_Update@name,w
  8953  0086' 39F0               	andlw	240
  8954  0087' 0714'              	addwf	Proximity_Deviation_Update@name,w
  8955  0088' 0714'              	addwf	Proximity_Deviation_Update@name,w
  8956  0089' 3E10               	addlw	16
  8957  008A' 3E00'              	addlw	(low (_mtouch_proximity| 0))& (0+255)
  8958  008B' 0086               	movwf	6
  8959  008C' 0187               	clrf	7
  8960  008D' 0801               	movf	1,w
  8961  008E' 0088'              	movwf	??_Proximity_Deviation_Update+1
  8962  008F' 3002               	movlw	2
  8963  0090'                    u5655:	
  8964  0090' 3588'              	lslf	??_Proximity_Deviation_Update+1,f
  8965  0091' 3EFF               	addlw	-1
  8966  0092' 1D03               	skipz
  8967  0093' 2800'              	goto	u5655
  8968  0094' 3508'              	lslf	??_Proximity_Deviation_Update+1,w
  8969  0095' 3A80               	xorlw	128
  8970  0096' 0287'              	subwf	??_Proximity_Deviation_Update,f
  8971  0097' 1803               	skipnc
  8972  0098' 2800'              	goto	l5519
  8973                           
  8974                           ;mtouch_proximity.c: 335: {
  8975                           ;mtouch_proximity.c: 337: if(mtouch_proximity[name].integratedDeviation >0 )
  8976  0099' 0E14'              	swapf	Proximity_Deviation_Update@name,w
  8977  009A' 39F0               	andlw	240
  8978  009B' 0714'              	addwf	Proximity_Deviation_Update@name,w
  8979  009C' 0714'              	addwf	Proximity_Deviation_Update@name,w
  8980  009D' 3E0B               	addlw	11
  8981  009E' 3E00'              	addlw	(low (_mtouch_proximity| 0))& (0+255)
  8982  009F' 0086               	movwf	6
  8983  00A0' 0187               	clrf	7
  8984  00A1' 0801               	movf	1,w
  8985  00A2' 3A80               	xorlw	128
  8986  00A3' 3E7F               	addlw	-129
  8987  00A4' 1C03               	skipc
  8988  00A5' 0008               	return
  8989                           
  8990                           ;mtouch_proximity.c: 338: mtouch_proximity[name].integratedDeviation--;
  8991  00A6' 30FF               	movlw	255
  8992  00A7' 0087'              	movwf	??_Proximity_Deviation_Update
  8993  00A8' 0E14'              	swapf	Proximity_Deviation_Update@name,w
  8994  00A9' 39F0               	andlw	240
  8995  00AA' 0714'              	addwf	Proximity_Deviation_Update@name,w
  8996  00AB' 0714'              	addwf	Proximity_Deviation_Update@name,w
  8997  00AC' 3E0B               	addlw	11
  8998  00AD' 3E00'              	addlw	(low (_mtouch_proximity| 0))& (0+255)
  8999  00AE' 0086               	movwf	6
  9000  00AF' 0187               	clrf	7
  9001  00B0' 0807'              	movf	??_Proximity_Deviation_Update,w
  9002  00B1' 0781               	addwf	1,f
  9003                           
  9004                           ;mtouch_proximity.c: 339: }
  9005  00B2' 0008               	return
  9006  00B3'                    l5519:	
  9007                           
  9008                           ;mtouch_proximity.c: 340: else
  9009                           ;mtouch_proximity.c: 341: {
  9010                           ;mtouch_proximity.c: 342: mtouch_proximity[name].integratedDeviation -= mtouch_proximity
      +                          [name].integratedDeviation >> ((uint8_t)2);;
  9011  00B3' 0E14'              	swapf	Proximity_Deviation_Update@name,w
  9012  00B4' 39F0               	andlw	240
  9013  00B5' 0714'              	addwf	Proximity_Deviation_Update@name,w
  9014  00B6' 0714'              	addwf	Proximity_Deviation_Update@name,w
  9015  00B7' 3E0B               	addlw	11
  9016  00B8' 3E00'              	addlw	(low (_mtouch_proximity| 0))& (0+255)
  9017  00B9' 0086               	movwf	6
  9018  00BA' 0187               	clrf	7
  9019  00BB' 0801               	movf	1,w
  9020  00BC' 0087'              	movwf	??_Proximity_Deviation_Update
  9021  00BD' 3002               	movlw	2
  9022  00BE'                    u5685:	
  9023  00BE' 1003               	clrc
  9024  00BF' 1B87'              	btfsc	??_Proximity_Deviation_Update,7
  9025  00C0' 1403               	setc
  9026  00C1' 0C87'              	rrf	??_Proximity_Deviation_Update,f
  9027  00C2' 0B89               	decfsz	9,f
  9028  00C3' 2800'              	goto	u5685
  9029  00C4' 0E14'              	swapf	Proximity_Deviation_Update@name,w
  9030  00C5' 39F0               	andlw	240
  9031  00C6' 0714'              	addwf	Proximity_Deviation_Update@name,w
  9032  00C7' 0714'              	addwf	Proximity_Deviation_Update@name,w
  9033  00C8' 3E0B               	addlw	11
  9034  00C9' 3E00'              	addlw	(low (_mtouch_proximity| 0))& (0+255)
  9035  00CA' 0086               	movwf	6
  9036  00CB' 0187               	clrf	7
  9037  00CC' 0807'              	movf	??_Proximity_Deviation_Update,w
  9038  00CD' 0281               	subwf	1,f
  9039                           
  9040                           ;mtouch_proximity.c: 343: if((mtouch_prox_deviation_t)((127)) - mtouch_proximity[name].i
      +                          ntegratedDeviation > deviation)
  9041  00CE' 0E14'              	swapf	Proximity_Deviation_Update@name,w
  9042  00CF' 39F0               	andlw	240
  9043  00D0' 0714'              	addwf	Proximity_Deviation_Update@name,w
  9044  00D1' 0714'              	addwf	Proximity_Deviation_Update@name,w
  9045  00D2' 3E0B               	addlw	11
  9046  00D3' 3E00'              	addlw	(low (_mtouch_proximity| 0))& (0+255)
  9047  00D4' 0086               	movwf	6
  9048  00D5' 0187               	clrf	7
  9049  00D6' 0801               	movf	1,w
  9050  00D7' 0087'              	movwf	??_Proximity_Deviation_Update
  9051  00D8' 0188'              	clrf	??_Proximity_Deviation_Update+1
  9052  00D9' 1B87'              	btfsc	??_Proximity_Deviation_Update,7
  9053  00DA' 0388'              	decf	??_Proximity_Deviation_Update+1,f
  9054  00DB' 0987'              	comf	??_Proximity_Deviation_Update,f
  9055  00DC' 0988'              	comf	??_Proximity_Deviation_Update+1,f
  9056  00DD' 0A87'              	incf	??_Proximity_Deviation_Update,f
  9057  00DE' 1903               	skipnz
  9058  00DF' 0A88'              	incf	??_Proximity_Deviation_Update+1,f
  9059  00E0' 0807'              	movf	??_Proximity_Deviation_Update,w
  9060  00E1' 3E7F               	addlw	127
  9061  00E2' 0089'              	movwf	??_Proximity_Deviation_Update+2
  9062  00E3' 3000               	movlw	0
  9063  00E4' 3D08'              	addwfc	??_Proximity_Deviation_Update+1,w
  9064  00E5' 008A'              	movwf	??_Proximity_Deviation_Update+3
  9065  00E6' 0809'              	movf	??_Proximity_Deviation_Update+2,w
  9066  00E7' 008B'              	movwf	??_Proximity_Deviation_Update+4
  9067  00E8' 080A'              	movf	??_Proximity_Deviation_Update+3,w
  9068  00E9' 008C'              	movwf	??_Proximity_Deviation_Update+5
  9069  00EA' 3000               	movlw	0
  9070  00EB' 1B8C'              	btfsc	??_Proximity_Deviation_Update+5,7
  9071  00EC' 30FF               	movlw	255
  9072  00ED' 008D'              	movwf	??_Proximity_Deviation_Update+6
  9073  00EE' 008E'              	movwf	??_Proximity_Deviation_Update+7
  9074  00EF' 0813'              	movf	Proximity_Deviation_Update@deviation+3,w
  9075  00F0' 3A80               	xorlw	128
  9076  00F1' 008F'              	movwf	??_Proximity_Deviation_Update+8
  9077  00F2' 080E'              	movf	??_Proximity_Deviation_Update+7,w
  9078  00F3' 3A80               	xorlw	128
  9079  00F4' 020F'              	subwf	??_Proximity_Deviation_Update+8,w
  9080  00F5' 1D03               	skipz
  9081  00F6' 2800'              	goto	u5693
  9082  00F7' 080D'              	movf	??_Proximity_Deviation_Update+6,w
  9083  00F8' 0212'              	subwf	Proximity_Deviation_Update@deviation+2,w
  9084  00F9' 1D03               	skipz
  9085  00FA' 2800'              	goto	u5693
  9086  00FB' 080C'              	movf	??_Proximity_Deviation_Update+5,w
  9087  00FC' 0211'              	subwf	Proximity_Deviation_Update@deviation+1,w
  9088  00FD' 1D03               	skipz
  9089  00FE' 2800'              	goto	u5693
  9090  00FF' 080B'              	movf	??_Proximity_Deviation_Update+4,w
  9091  0100' 0210'              	subwf	Proximity_Deviation_Update@deviation,w
  9092  0101'                    u5693:	
  9093  0101' 1803               	skipnc
  9094  0102' 2800'              	goto	l5523
  9095                           
  9096                           ;mtouch_proximity.c: 344: mtouch_proximity[name].integratedDeviation += deviation;
  9097  0103' 0810'              	movf	Proximity_Deviation_Update@deviation,w
  9098  0104' 0087'              	movwf	??_Proximity_Deviation_Update
  9099  0105' 0E14'              	swapf	Proximity_Deviation_Update@name,w
  9100  0106' 39F0               	andlw	240
  9101  0107' 0714'              	addwf	Proximity_Deviation_Update@name,w
  9102  0108' 0714'              	addwf	Proximity_Deviation_Update@name,w
  9103  0109' 3E0B               	addlw	11
  9104  010A' 3E00'              	addlw	(low (_mtouch_proximity| 0))& (0+255)
  9105  010B' 0086               	movwf	6
  9106  010C' 0187               	clrf	7
  9107  010D' 0807'              	movf	??_Proximity_Deviation_Update,w
  9108  010E' 0781               	addwf	1,f
  9109  010F' 0008               	return
  9110  0110'                    l5523:	
  9111                           
  9112                           ;mtouch_proximity.c: 345: else
  9113                           ;mtouch_proximity.c: 346: mtouch_proximity[name].integratedDeviation = (mtouch_prox_devi
      +                          ation_t)((127));
  9114  0110' 307F               	movlw	127
  9115  0111' 0087'              	movwf	??_Proximity_Deviation_Update
  9116  0112' 0E14'              	swapf	Proximity_Deviation_Update@name,w
  9117  0113' 39F0               	andlw	240
  9118  0114' 0714'              	addwf	Proximity_Deviation_Update@name,w
  9119  0115' 0714'              	addwf	Proximity_Deviation_Update@name,w
  9120  0116' 3E0B               	addlw	11
  9121  0117' 3E00'              	addlw	(low (_mtouch_proximity| 0))& (0+255)
  9122  0118' 0086               	movwf	6
  9123  0119' 0187               	clrf	7
  9124  011A' 0807'              	movf	??_Proximity_Deviation_Update,w
  9125  011B' 0081               	movwf	1
  9126  011C' 0008               	return
  9127  011D'                    __end_of_Proximity_Deviation_Update:	
  9128                           
  9129                           	psect	text52
  9130  0000'                    __ptext52:	
  9131 ;; *************** function _MTOUCH_Proximity_Reading_Get *****************
  9132 ;; Defined at:
  9133 ;;		line 355 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  9134 ;; Parameters:    Size  Location     Type
  9135 ;;  name            1    wreg     enum E3283
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;  name            1    7[COMMON] enum E3283
  9138 ;; Return value:  Size  Location     Type
  9139 ;;                  4    2[COMMON] unsigned long 
  9140 ;; Registers used:
  9141 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9142 ;; Tracked objects:
  9143 ;;		On entry : 0/0
  9144 ;;		On exit  : 0/0
  9145 ;;		Unchanged: 0/0
  9146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9147 ;;      Params:         5       0       0       0       0       0       0       0
  9148 ;;      Locals:         1       0       0       0       0       0       0       0
  9149 ;;      Temps:          0       0       0       0       0       0       0       0
  9150 ;;      Totals:         6       0       0       0       0       0       0       0
  9151 ;;Total ram usage:        6 bytes
  9152 ;; Hardware stack levels used:    1
  9153 ;; Hardware stack levels required when called:    2
  9154 ;; This function calls:
  9155 ;;		Nothing
  9156 ;; This function is called by:
  9157 ;;		_Proximity_State_NotActivated
  9158 ;;		_Proximity_Deviation_Update
  9159 ;; This function uses a non-reentrant model
  9160 ;;
  9161                           
  9162                           
  9163                           ;psect for function _MTOUCH_Proximity_Reading_Get
  9164  0000'                    _MTOUCH_Proximity_Reading_Get:	
  9165                           
  9166                           ;incstack = 0
  9167                           ; Regs used in _MTOUCH_Proximity_Reading_Get: [wreg+fsr1l+fsr1h+status,2+status,0]
  9168                           ;MTOUCH_Proximity_Reading_Get@name stored from wreg
  9169  0000' 0087'              	movwf	MTOUCH_Proximity_Reading_Get@name
  9170                           
  9171                           ;mtouch_proximity.c: 357: if (name < 1)
  9172  0001' 0807'              	movf	MTOUCH_Proximity_Reading_Get@name,w
  9173  0002' 1D03               	btfss	3,2
  9174  0003' 2800'              	goto	l3715
  9175                           
  9176                           ;mtouch_proximity.c: 358: return mtouch_proximity[name].reading;
  9177  0004' 0E07'              	swapf	MTOUCH_Proximity_Reading_Get@name,w
  9178  0005' 39F0               	andlw	240
  9179  0006' 0707'              	addwf	MTOUCH_Proximity_Reading_Get@name,w
  9180  0007' 0707'              	addwf	MTOUCH_Proximity_Reading_Get@name,w
  9181  0008' 3E03               	addlw	3
  9182  0009' 3E00'              	addlw	(low (_mtouch_proximity| 0))& (0+255)
  9183  000A' 0086               	movwf	6
  9184  000B' 0187               	clrf	7
  9185  000C' 3F40               	moviw [0]fsr1
  9186  000D' 0082'              	movwf	?_MTOUCH_Proximity_Reading_Get
  9187  000E' 3F41               	moviw [1]fsr1
  9188  000F' 0083'              	movwf	?_MTOUCH_Proximity_Reading_Get+1
  9189  0010' 3F42               	moviw [2]fsr1
  9190  0011' 0084'              	movwf	?_MTOUCH_Proximity_Reading_Get+2
  9191  0012' 3F43               	moviw [3]fsr1
  9192  0013' 0085'              	movwf	?_MTOUCH_Proximity_Reading_Get+3
  9193  0014' 0008               	return
  9194  0015'                    l3715:	
  9195                           
  9196                           ;mtouch_proximity.c: 359: else
  9197                           ;mtouch_proximity.c: 360: return 0;
  9198  0015' 3000               	movlw	0
  9199  0016' 0085'              	movwf	?_MTOUCH_Proximity_Reading_Get+3
  9200  0017' 3000               	movlw	0
  9201  0018' 0084'              	movwf	?_MTOUCH_Proximity_Reading_Get+2
  9202  0019' 3000               	movlw	0
  9203  001A' 0083'              	movwf	?_MTOUCH_Proximity_Reading_Get+1
  9204  001B' 3000               	movlw	0
  9205  001C' 0082'              	movwf	?_MTOUCH_Proximity_Reading_Get
  9206  001D' 0008               	return
  9207  001E'                    __end_of_MTOUCH_Proximity_Reading_Get:	
  9208                           
  9209                           	psect	text53
  9210  0000'                    __ptext53:	
  9211 ;; *************** function _MTOUCH_Proximity_Baseline_Get *****************
  9212 ;; Defined at:
  9213 ;;		line 401 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  9214 ;; Parameters:    Size  Location     Type
  9215 ;;  name            1    wreg     enum E3283
  9216 ;; Auto vars:     Size  Location     Type
  9217 ;;  name            1    6[BANK0 ] enum E3283
  9218 ;; Return value:  Size  Location     Type
  9219 ;;                  4    1[BANK0 ] unsigned long 
  9220 ;; Registers used:
  9221 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9227 ;;      Params:         0       5       0       0       0       0       0       0
  9228 ;;      Locals:         0       1       0       0       0       0       0       0
  9229 ;;      Temps:          0       0       0       0       0       0       0       0
  9230 ;;      Totals:         0       6       0       0       0       0       0       0
  9231 ;;Total ram usage:        6 bytes
  9232 ;; Hardware stack levels used:    1
  9233 ;; Hardware stack levels required when called:    3
  9234 ;; This function calls:
  9235 ;;		_Proximity_Baseline_Get_helper
  9236 ;; This function is called by:
  9237 ;;		_Proximity_State_NotActivated
  9238 ;;		_Proximity_Deviation_Update
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242                           
  9243                           ;psect for function _MTOUCH_Proximity_Baseline_Get
  9244  0000'                    _MTOUCH_Proximity_Baseline_Get:	
  9245                           
  9246                           ;incstack = 0
  9247                           ; Regs used in _MTOUCH_Proximity_Baseline_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  9248                           ;MTOUCH_Proximity_Baseline_Get@name stored from wreg
  9249  0000' 0020               	movlb	0	; select bank0
  9250  0001' 0086'              	movwf	MTOUCH_Proximity_Baseline_Get@name
  9251                           
  9252                           ;mtouch_proximity.c: 403: if (name < 1)
  9253  0002' 0806'              	movf	MTOUCH_Proximity_Baseline_Get@name,w
  9254  0003' 1D03               	btfss	3,2
  9255  0004' 2800'              	goto	l5347
  9256                           
  9257                           ;mtouch_proximity.c: 404: return Proximity_Baseline_Get_helper(name);
  9258  0005' 0806'              	movf	MTOUCH_Proximity_Baseline_Get@name,w
  9259  0006' 3180' 2000'        	fcall	_Proximity_Baseline_Get_helper
  9260  0008' 0805'              	movf	?_Proximity_Baseline_Get_helper+3,w
  9261  0009' 0020               	movlb	0	; select bank0
  9262  000A' 0084'              	movwf	?_MTOUCH_Proximity_Baseline_Get+3
  9263  000B' 0804'              	movf	?_Proximity_Baseline_Get_helper+2,w
  9264  000C' 0083'              	movwf	?_MTOUCH_Proximity_Baseline_Get+2
  9265  000D' 0803'              	movf	?_Proximity_Baseline_Get_helper+1,w
  9266  000E' 0082'              	movwf	?_MTOUCH_Proximity_Baseline_Get+1
  9267  000F' 0802'              	movf	?_Proximity_Baseline_Get_helper,w
  9268  0010' 0081'              	movwf	?_MTOUCH_Proximity_Baseline_Get
  9269  0011' 0008               	return
  9270  0012'                    l5347:	
  9271                           
  9272                           ;mtouch_proximity.c: 405: else
  9273                           ;mtouch_proximity.c: 406: return 0;
  9274  0012' 3000               	movlw	0
  9275  0013' 0084'              	movwf	?_MTOUCH_Proximity_Baseline_Get+3
  9276  0014' 3000               	movlw	0
  9277  0015' 0083'              	movwf	?_MTOUCH_Proximity_Baseline_Get+2
  9278  0016' 3000               	movlw	0
  9279  0017' 0082'              	movwf	?_MTOUCH_Proximity_Baseline_Get+1
  9280  0018' 3000               	movlw	0
  9281  0019' 0081'              	movwf	?_MTOUCH_Proximity_Baseline_Get
  9282  001A' 0008               	return
  9283  001B'                    __end_of_MTOUCH_Proximity_Baseline_Get:	
  9284                           
  9285                           	psect	text54
  9286  0000'                    __ptext54:	
  9287 ;; *************** function _Proximity_Baseline_Get_helper *****************
  9288 ;; Defined at:
  9289 ;;		line 410 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  9290 ;; Parameters:    Size  Location     Type
  9291 ;;  name            1    wreg     enum E3283
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;  name            1    0[BANK0 ] enum E3283
  9294 ;; Return value:  Size  Location     Type
  9295 ;;                  4    2[COMMON] unsigned long 
  9296 ;; Registers used:
  9297 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9298 ;; Tracked objects:
  9299 ;;		On entry : 0/0
  9300 ;;		On exit  : 0/0
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9303 ;;      Params:         4       0       0       0       0       0       0       0
  9304 ;;      Locals:         0       1       0       0       0       0       0       0
  9305 ;;      Temps:          4       0       0       0       0       0       0       0
  9306 ;;      Totals:         8       1       0       0       0       0       0       0
  9307 ;;Total ram usage:        9 bytes
  9308 ;; Hardware stack levels used:    1
  9309 ;; Hardware stack levels required when called:    2
  9310 ;; This function calls:
  9311 ;;		Nothing
  9312 ;; This function is called by:
  9313 ;;		_MTOUCH_Proximity_Baseline_Get
  9314 ;; This function uses a non-reentrant model
  9315 ;;
  9316                           
  9317                           
  9318                           ;psect for function _Proximity_Baseline_Get_helper
  9319  0000'                    _Proximity_Baseline_Get_helper:	
  9320                           
  9321                           ;incstack = 0
  9322                           ; Regs used in _Proximity_Baseline_Get_helper: [wreg+fsr1l+fsr1h+status,2+status,0]
  9323                           ;Proximity_Baseline_Get_helper@name stored from wreg
  9324  0000' 0020               	movlb	0	; select bank0
  9325  0001' 0080'              	movwf	Proximity_Baseline_Get_helper@name
  9326                           
  9327                           ;mtouch_proximity.c: 412: return (mtouch_prox_reading_t)(mtouch_proximity[name].baseline
      +                           >> ((uint8_t)4));
  9328  0002' 0E00'              	swapf	Proximity_Baseline_Get_helper@name,w
  9329  0003' 39F0               	andlw	240
  9330  0004' 0700'              	addwf	Proximity_Baseline_Get_helper@name,w
  9331  0005' 0700'              	addwf	Proximity_Baseline_Get_helper@name,w
  9332  0006' 3E07               	addlw	7
  9333  0007' 3E00'              	addlw	(low (_mtouch_proximity| 0))& (0+255)
  9334  0008' 0086               	movwf	6
  9335  0009' 0187               	clrf	7
  9336  000A' 3F40               	moviw [0]fsr1
  9337  000B' 0086'              	movwf	??_Proximity_Baseline_Get_helper
  9338  000C' 3F41               	moviw [1]fsr1
  9339  000D' 0087'              	movwf	??_Proximity_Baseline_Get_helper+1
  9340  000E' 3F42               	moviw [2]fsr1
  9341  000F' 0088'              	movwf	??_Proximity_Baseline_Get_helper+2
  9342  0010' 3F43               	moviw [3]fsr1
  9343  0011' 0089'              	movwf	??_Proximity_Baseline_Get_helper+3
  9344  0012' 3004               	movlw	4
  9345  0013'                    u5205:	
  9346  0013' 3689'              	lsrf	??_Proximity_Baseline_Get_helper+3,f
  9347  0014' 0C88'              	rrf	??_Proximity_Baseline_Get_helper+2,f
  9348  0015' 0C87'              	rrf	??_Proximity_Baseline_Get_helper+1,f
  9349  0016' 0C86'              	rrf	??_Proximity_Baseline_Get_helper,f
  9350  0017' 0B89               	decfsz	9,f
  9351  0018' 2800'              	goto	u5205
  9352  0019' 0809'              	movf	??_Proximity_Baseline_Get_helper+3,w
  9353  001A' 0085'              	movwf	?_Proximity_Baseline_Get_helper+3
  9354  001B' 0808'              	movf	??_Proximity_Baseline_Get_helper+2,w
  9355  001C' 0084'              	movwf	?_Proximity_Baseline_Get_helper+2
  9356  001D' 0807'              	movf	??_Proximity_Baseline_Get_helper+1,w
  9357  001E' 0083'              	movwf	?_Proximity_Baseline_Get_helper+1
  9358  001F' 0806'              	movf	??_Proximity_Baseline_Get_helper,w
  9359  0020' 0082'              	movwf	?_Proximity_Baseline_Get_helper
  9360  0021' 0008               	return
  9361  0022'                    __end_of_Proximity_Baseline_Get_helper:	
  9362                           
  9363                           	psect	text55
  9364  0000'                    __ptext55:	
  9365 ;; *************** function _MTOUCH_Button_ServiceAll *****************
  9366 ;; Defined at:
  9367 ;;		line 187 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9368 ;; Parameters:    Size  Location     Type
  9369 ;;		None
  9370 ;; Auto vars:     Size  Location     Type
  9371 ;;  button          1   15[BANK0 ] enum E3231
  9372 ;; Return value:  Size  Location     Type
  9373 ;;                  1    wreg      void 
  9374 ;; Registers used:
  9375 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9376 ;; Tracked objects:
  9377 ;;		On entry : 0/0
  9378 ;;		On exit  : 0/0
  9379 ;;		Unchanged: 0/0
  9380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9381 ;;      Params:         0       0       0       0       0       0       0       0
  9382 ;;      Locals:         0       1       0       0       0       0       0       0
  9383 ;;      Temps:          0       1       0       0       0       0       0       0
  9384 ;;      Totals:         0       2       0       0       0       0       0       0
  9385 ;;Total ram usage:        2 bytes
  9386 ;; Hardware stack levels used:    1
  9387 ;; Hardware stack levels required when called:    7
  9388 ;; This function calls:
  9389 ;;		_Button_Service
  9390 ;; This function is called by:
  9391 ;;		_MTOUCH_Service_Mainloop
  9392 ;; This function uses a non-reentrant model
  9393 ;;
  9394                           
  9395                           
  9396                           ;psect for function _MTOUCH_Button_ServiceAll
  9397  0000'                    _MTOUCH_Button_ServiceAll:	
  9398                           
  9399                           ;mtouch_button.c: 189: enum mtouch_button_names button;
  9400                           ;mtouch_button.c: 190: for (button = 0; button < 5; button++)
  9401                           
  9402                           ;incstack = 0
  9403                           ; Regs used in _MTOUCH_Button_ServiceAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  9404  0000' 0020               	movlb	0	; select bank0
  9405  0001' 018F'              	clrf	MTOUCH_Button_ServiceAll@button
  9406  0002'                    L10:	
  9407  0002' 3005               	movlw	5
  9408  0003' 020F'              	subwf	MTOUCH_Button_ServiceAll@button,w
  9409  0004' 1803               	btfsc	3,0
  9410  0005' 0008               	return
  9411                           
  9412                           ;mtouch_button.c: 191: {
  9413                           ;mtouch_button.c: 192: Button_Service(button);
  9414  0006' 080F'              	movf	MTOUCH_Button_ServiceAll@button,w
  9415  0007' 3180' 2000' 3180'  	fcall	_Button_Service
  9416  000A' 3001               	movlw	1
  9417  000B' 0020               	movlb	0	; select bank0
  9418  000C' 008E'              	movwf	??_MTOUCH_Button_ServiceAll
  9419  000D' 080E'              	movf	??_MTOUCH_Button_ServiceAll,w
  9420  000E' 078F'              	addwf	MTOUCH_Button_ServiceAll@button,f
  9421  000F' 2800'              	goto	L10
  9422  0010'                    __end_of_MTOUCH_Button_ServiceAll:	
  9423                           
  9424                           	psect	text56
  9425  0000'                    __ptext56:	
  9426 ;; *************** function _Button_Service *****************
  9427 ;; Defined at:
  9428 ;;		line 196 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;  name            1    wreg     enum E3231
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;  name            1   12[BANK0 ] enum E3231
  9433 ;;  button          1   13[BANK0 ] PTR struct .
  9434 ;;		 -> mtouch_button(80), 
  9435 ;; Return value:  Size  Location     Type
  9436 ;;                  1    wreg      void 
  9437 ;; Registers used:
  9438 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 0/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9444 ;;      Params:         0       0       0       0       0       0       0       0
  9445 ;;      Locals:         0       2       0       0       0       0       0       0
  9446 ;;      Temps:          0       2       0       0       0       0       0       0
  9447 ;;      Totals:         0       4       0       0       0       0       0       0
  9448 ;;Total ram usage:        4 bytes
  9449 ;; Hardware stack levels used:    1
  9450 ;; Hardware stack levels required when called:    6
  9451 ;; This function calls:
  9452 ;;		_Button_Deviation_Update
  9453 ;;		_Button_Reading_Update
  9454 ;;		_Button_State_Initializing
  9455 ;;		_Button_State_NotPressed
  9456 ;;		_Button_State_Pressed
  9457 ;;		_MTOUCH_Button_Initialize
  9458 ;;		_MTOUCH_Sensor_isCalibrated
  9459 ;;		_MTOUCH_Sensor_wasSampled
  9460 ;; This function is called by:
  9461 ;;		_MTOUCH_Button_ServiceAll
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           
  9466                           ;psect for function _Button_Service
  9467  0000'                    _Button_Service:	
  9468                           
  9469                           ;incstack = 0
  9470                           ; Regs used in _Button_Service: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9471                           ;Button_Service@name stored from wreg
  9472  0000' 0020               	movlb	0	; select bank0
  9473  0001' 008C'              	movwf	Button_Service@name
  9474                           
  9475                           ;mtouch_button.c: 198: mtouch_button_t* button = &mtouch_button[name];
  9476  0002' 080C'              	movf	Button_Service@name,w
  9477  0003' 008A'              	movwf	??_Button_Service
  9478  0004' 3003               	movlw	3
  9479  0005'                    u5785:	
  9480  0005' 358A'              	lslf	??_Button_Service,f
  9481  0006' 3EFF               	addlw	-1
  9482  0007' 1D03               	skipz
  9483  0008' 2800'              	goto	u5785
  9484  0009' 350A'              	lslf	??_Button_Service,w
  9485  000A' 3E00'              	addlw	(low (_mtouch_button| (0+256)))& (0+255)
  9486  000B' 008B'              	movwf	??_Button_Service+1
  9487  000C' 080B'              	movf	??_Button_Service+1,w
  9488  000D' 008D'              	movwf	Button_Service@button
  9489                           
  9490                           ;mtouch_button.c: 200: if (MTOUCH_Sensor_wasSampled(button->sensor) && MTOUCH_Sensor_isC
      +                          alibrated(button->sensor))
  9491  000E' 0A0D'              	incf	Button_Service@button,w
  9492  000F' 0086               	movwf	6
  9493  0010' 3001               	movlw	1	; select bank2/3
  9494  0011' 0087               	movwf	7
  9495  0012' 0801               	movf	1,w
  9496  0013' 3180' 2000' 3180'  	fcall	_MTOUCH_Sensor_wasSampled
  9497  0016' 3A00               	xorlw	0
  9498  0017' 1903               	skipnz
  9499  0018' 0008               	return
  9500  0019' 0020               	movlb	0	; select bank0
  9501  001A' 0A0D'              	incf	Button_Service@button,w
  9502  001B' 0086               	movwf	6
  9503  001C' 3001               	movlw	1	; select bank2/3
  9504  001D' 0087               	movwf	7
  9505  001E' 0801               	movf	1,w
  9506  001F' 3180' 2000' 3180'  	fcall	_MTOUCH_Sensor_isCalibrated
  9507  0022' 3A00               	xorlw	0
  9508  0023' 1903               	skipnz
  9509  0024' 0008               	return
  9510                           
  9511                           ;mtouch_button.c: 201: {
  9512                           ;mtouch_button.c: 202: Button_Reading_Update(button);
  9513  0025' 0020               	movlb	0	; select bank0
  9514  0026' 080D'              	movf	Button_Service@button,w
  9515  0027' 3180' 2000' 3180'  	fcall	_Button_Reading_Update
  9516                           
  9517                           ;mtouch_button.c: 203: Button_Deviation_Update(button);
  9518  002A' 0020               	movlb	0	; select bank0
  9519  002B' 080D'              	movf	Button_Service@button,w
  9520  002C' 3180' 2000' 3180'  	fcall	_Button_Deviation_Update
  9521                           
  9522                           ;mtouch_button.c: 205: if (button->state >= (uint8_t)(sizeof(Button_StateMachine)/sizeof
      +                          (button_statemachine_state_t)))
  9523  002F' 0020               	movlb	0	; select bank0
  9524  0030' 080D'              	movf	Button_Service@button,w
  9525  0031' 3E02               	addlw	2
  9526  0032' 0086               	movwf	6
  9527  0033' 3001               	movlw	1	; select bank2/3
  9528  0034' 0087               	movwf	7
  9529  0035' 3003               	movlw	3
  9530  0036' 0201               	subwf	1,w
  9531  0037' 1C03               	skipc
  9532  0038' 2800'              	goto	l867
  9533                           
  9534                           ;mtouch_button.c: 206: {
  9535                           ;mtouch_button.c: 207: MTOUCH_Button_Initialize(button->name);
  9536  0039' 080D'              	movf	Button_Service@button,w
  9537  003A' 0086               	movwf	6
  9538  003B' 3001               	movlw	1	; select bank2/3
  9539  003C' 0087               	movwf	7
  9540  003D' 0801               	movf	1,w
  9541  003E' 3180' 2000' 3180'  	fcall	_MTOUCH_Button_Initialize
  9542  0041'                    l867:	
  9543                           
  9544                           ;mtouch_button.c: 208: }
  9545                           ;mtouch_button.c: 209: Button_StateMachine[button->state](button);
  9546  0041' 0020               	movlb	0	; select bank0
  9547  0042' 080D'              	movf	Button_Service@button,w
  9548  0043' 008A'              	movwf	??_Button_Service
  9549  0044' 080A'              	movf	??_Button_Service,w
  9550  0045' 0087'              	movwf	Button_State_Pressed@button
  9551  0046' 080D'              	movf	Button_Service@button,w
  9552  0047' 3E02               	addlw	2
  9553  0048' 0086               	movwf	6
  9554  0049' 3001               	movlw	1	; select bank2/3
  9555  004A' 0087               	movwf	7
  9556  004B' 3501               	lslf	1,w
  9557  004C' 3E00'              	addlw	(low (_Button_StateMachine| 0))& (0+255)
  9558  004D' 0086               	movwf	6
  9559  004E' 0187               	clrf	7
  9560  004F' 3F41               	moviw [1]fsr1
  9561  0050' 008A               	movwf	10
  9562  0051' 3F40               	moviw [0]fsr1
  9563  0052' 000A               	callw
  9564  0053' 3180'              	pagesel	$
  9565  0054' 0008               	return
  9566  0055'                    __end_of_Button_Service:	
  9567                           
  9568                           	psect	text57
  9569  0000'                    __ptext57:	
  9570 ;; *************** function _MTOUCH_Sensor_wasSampled *****************
  9571 ;; Defined at:
  9572 ;;		line 850 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9573 ;; Parameters:    Size  Location     Type
  9574 ;;  sensor          1    wreg     enum E3328
  9575 ;; Auto vars:     Size  Location     Type
  9576 ;;  sensor          1    7[COMMON] enum E3328
  9577 ;; Return value:  Size  Location     Type
  9578 ;;                  1    wreg      unsigned char 
  9579 ;; Registers used:
  9580 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9581 ;; Tracked objects:
  9582 ;;		On entry : 0/0
  9583 ;;		On exit  : 0/0
  9584 ;;		Unchanged: 0/0
  9585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9586 ;;      Params:         0       0       0       0       0       0       0       0
  9587 ;;      Locals:         1       0       0       0       0       0       0       0
  9588 ;;      Temps:          1       0       0       0       0       0       0       0
  9589 ;;      Totals:         2       0       0       0       0       0       0       0
  9590 ;;Total ram usage:        2 bytes
  9591 ;; Hardware stack levels used:    1
  9592 ;; Hardware stack levels required when called:    3
  9593 ;; This function calls:
  9594 ;;		___bmul
  9595 ;; This function is called by:
  9596 ;;		_Button_Service
  9597 ;;		_Proximity_Service
  9598 ;; This function uses a non-reentrant model
  9599 ;;
  9600                           
  9601                           
  9602                           ;psect for function _MTOUCH_Sensor_wasSampled
  9603  0000'                    _MTOUCH_Sensor_wasSampled:	
  9604                           
  9605                           ;incstack = 0
  9606                           ; Regs used in _MTOUCH_Sensor_wasSampled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  9607                           ;MTOUCH_Sensor_wasSampled@sensor stored from wreg
  9608  0000' 0087'              	movwf	MTOUCH_Sensor_wasSampled@sensor
  9609                           
  9610                           ;mtouch_sensor.c: 852: return (bool)mtouch_sensor[sensor].sampled;
  9611  0001' 3009               	movlw	9
  9612  0002' 0086'              	movwf	??_MTOUCH_Sensor_wasSampled
  9613  0003' 0806'              	movf	??_MTOUCH_Sensor_wasSampled,w
  9614  0004' 0082'              	movwf	___bmul@multiplicand
  9615  0005' 0807'              	movf	MTOUCH_Sensor_wasSampled@sensor,w
  9616  0006' 3180' 2000'        	fcall	___bmul
  9617  0008' 3E08               	addlw	8
  9618  0009' 3E00'              	addlw	(low (_mtouch_sensor| (0+256)))& (0+255)
  9619  000A' 0086               	movwf	6
  9620  000B' 3001               	movlw	1	; select bank2/3
  9621  000C' 0087               	movwf	7
  9622  000D' 0801               	movf	1,w
  9623  000E' 3901               	andlw	1
  9624  000F' 0008               	return
  9625  0010'                    __end_of_MTOUCH_Sensor_wasSampled:	
  9626                           
  9627                           	psect	text58
  9628  0000'                    __ptext58:	
  9629 ;; *************** function _MTOUCH_Sensor_isCalibrated *****************
  9630 ;; Defined at:
  9631 ;;		line 803 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9632 ;; Parameters:    Size  Location     Type
  9633 ;;  sensor          1    wreg     enum E3328
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;  sensor          1    7[COMMON] enum E3328
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  1    wreg      unsigned char 
  9638 ;; Registers used:
  9639 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9645 ;;      Params:         0       0       0       0       0       0       0       0
  9646 ;;      Locals:         1       0       0       0       0       0       0       0
  9647 ;;      Temps:          1       0       0       0       0       0       0       0
  9648 ;;      Totals:         2       0       0       0       0       0       0       0
  9649 ;;Total ram usage:        2 bytes
  9650 ;; Hardware stack levels used:    1
  9651 ;; Hardware stack levels required when called:    3
  9652 ;; This function calls:
  9653 ;;		___bmul
  9654 ;; This function is called by:
  9655 ;;		_Button_Service
  9656 ;;		_Proximity_Service
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           
  9660                           
  9661                           ;psect for function _MTOUCH_Sensor_isCalibrated
  9662  0000'                    _MTOUCH_Sensor_isCalibrated:	
  9663                           
  9664                           ;incstack = 0
  9665                           ; Regs used in _MTOUCH_Sensor_isCalibrated: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  9666                           ;MTOUCH_Sensor_isCalibrated@sensor stored from wreg
  9667  0000' 0087'              	movwf	MTOUCH_Sensor_isCalibrated@sensor
  9668                           
  9669                           ;mtouch_sensor.c: 805: if(sensor < 6)
  9670  0001' 3006               	movlw	6
  9671  0002' 0207'              	subwf	MTOUCH_Sensor_isCalibrated@sensor,w
  9672  0003' 1803               	skipnc
  9673  0004' 2800'              	goto	l5407
  9674                           
  9675                           ;mtouch_sensor.c: 806: return (bool)mtouch_sensor[sensor].calibrated;
  9676  0005' 3009               	movlw	9
  9677  0006' 0086'              	movwf	??_MTOUCH_Sensor_isCalibrated
  9678  0007' 0806'              	movf	??_MTOUCH_Sensor_isCalibrated,w
  9679  0008' 0082'              	movwf	___bmul@multiplicand
  9680  0009' 0807'              	movf	MTOUCH_Sensor_isCalibrated@sensor,w
  9681  000A' 3180' 2000'        	fcall	___bmul
  9682  000C' 3E08               	addlw	8
  9683  000D' 3E00'              	addlw	(low (_mtouch_sensor| (0+256)))& (0+255)
  9684  000E' 0086               	movwf	6
  9685  000F' 3001               	movlw	1	; select bank2/3
  9686  0010' 0087               	movwf	7
  9687  0011' 0C01               	rrf	1,w
  9688  0012' 0C89               	rrf	9,f
  9689  0013' 3901               	andlw	1
  9690  0014' 0008               	return
  9691  0015'                    l5407:	
  9692                           
  9693                           ;mtouch_sensor.c: 807: else
  9694                           ;mtouch_sensor.c: 808: return 0;
  9695  0015' 3000               	movlw	0
  9696  0016' 0008               	return
  9697  0017'                    __end_of_MTOUCH_Sensor_isCalibrated:	
  9698                           
  9699                           	psect	text59
  9700  0000'                    __ptext59:	
  9701 ;; *************** function _Button_State_NotPressed *****************
  9702 ;; Defined at:
  9703 ;;		line 231 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9704 ;; Parameters:    Size  Location     Type
  9705 ;;  button          1    7[BANK0 ] PTR struct .
  9706 ;;		 -> mtouch_button(80), 
  9707 ;; Auto vars:     Size  Location     Type
  9708 ;;		None
  9709 ;; Return value:  Size  Location     Type
  9710 ;;                  1    wreg      void 
  9711 ;; Registers used:
  9712 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/0
  9715 ;;		On exit  : 0/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9718 ;;      Params:         0       1       0       0       0       0       0       0
  9719 ;;      Locals:         0       0       0       0       0       0       0       0
  9720 ;;      Temps:          0       2       0       0       0       0       0       0
  9721 ;;      Totals:         0       3       0       0       0       0       0       0
  9722 ;;Total ram usage:        3 bytes
  9723 ;; Hardware stack levels used:    1
  9724 ;; Hardware stack levels required when called:    5
  9725 ;; This function calls:
  9726 ;;		_Button_Baseline_Update
  9727 ;;		_Button_DefaultCallback
  9728 ;;		_MTOUCH_Button_Initialize
  9729 ;;		_processButtonTouch
  9730 ;; This function is called by:
  9731 ;;		_Button_Service
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           
  9735                           
  9736                           ;psect for function _Button_State_NotPressed
  9737  0000'                    _Button_State_NotPressed:	
  9738                           
  9739                           ;mtouch_button.c: 234: if ((button->deviation) < (mtouch_button_deviation_t)(mtouch_butt
      +                          on_deviation_t)-10)
  9740                           
  9741                           ;incstack = 0
  9742                           ; Regs used in _Button_State_NotPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  9743  0000' 0020               	movlb	0	; select bank0
  9744  0001' 0807'              	movf	Button_State_NotPressed@button,w
  9745  0002' 3E09               	addlw	9
  9746  0003' 0086               	movwf	6
  9747  0004' 3001               	movlw	1	; select bank2/3
  9748  0005' 0087               	movwf	7
  9749  0006' 0801               	movf	1,w
  9750  0007' 3A80               	xorlw	128
  9751  0008' 3E8A               	addlw	138
  9752  0009' 1803               	skipnc
  9753  000A' 2800'              	goto	l5461
  9754                           
  9755                           ;mtouch_button.c: 235: {
  9756                           ;mtouch_button.c: 236: (button->counter)++;
  9757  000B' 0807'              	movf	Button_State_NotPressed@button,w
  9758  000C' 3E0A               	addlw	10
  9759  000D' 0086               	movwf	6
  9760  000E' 3001               	movlw	1	; select bank2/3
  9761  000F' 0087               	movwf	7
  9762  0010' 3001               	movlw	1
  9763  0011' 0781               	addwf	1,f
  9764  0012' 3141               	addfsr 1,1
  9765  0013' 1803               	skipnc
  9766  0014' 0A81               	incf	1,f
  9767                           
  9768                           ;mtouch_button.c: 237: if ((button->counter) > (mtouch_button_statecounter_t)((mtouch_bu
      +                          tton_statecounter_t)32))
  9769  0015' 0807'              	movf	Button_State_NotPressed@button,w
  9770  0016' 3E0A               	addlw	10
  9771  0017' 0086               	movwf	6
  9772  0018' 3001               	movlw	1	; select bank2/3
  9773  0019' 0087               	movwf	7
  9774  001A' 3F40               	moviw [0]fsr1
  9775  001B' 0088'              	movwf	??_Button_State_NotPressed
  9776  001C' 3F41               	moviw [1]fsr1
  9777  001D' 0089'              	movwf	??_Button_State_NotPressed+1
  9778  001E' 3000               	movlw	0
  9779  001F' 0209'              	subwf	??_Button_State_NotPressed+1,w
  9780  0020' 3021               	movlw	33
  9781  0021' 1903               	skipnz
  9782  0022' 0208'              	subwf	??_Button_State_NotPressed,w
  9783  0023' 1C03               	skipc
  9784  0024' 2800'              	goto	l879
  9785                           
  9786                           ;mtouch_button.c: 238: {
  9787                           ;mtouch_button.c: 239: button->counter = (mtouch_button_statecounter_t)0;
  9788  0025' 0807'              	movf	Button_State_NotPressed@button,w
  9789  0026' 3E0A               	addlw	10
  9790  0027' 0086               	movwf	6
  9791  0028' 3001               	movlw	1	; select bank2/3
  9792  0029' 0087               	movwf	7
  9793  002A' 3000               	movlw	0
  9794  002B' 3FC0               	movwi [0]fsr1
  9795  002C' 3FC1               	movwi [1]fsr1
  9796                           
  9797                           ;mtouch_button.c: 240: MTOUCH_Button_Initialize(button->name);
  9798  002D' 0807'              	movf	Button_State_NotPressed@button,w
  9799  002E' 0086               	movwf	6
  9800  002F' 3001               	movlw	1	; select bank2/3
  9801  0030' 0087               	movwf	7
  9802  0031' 0801               	movf	1,w
  9803  0032' 3180' 2000' 3180'  	fcall	_MTOUCH_Button_Initialize
  9804                           
  9805                           ;mtouch_button.c: 241: }
  9806                           ;mtouch_button.c: 242: }
  9807  0035' 2800'              	goto	l879
  9808  0036'                    l5461:	
  9809                           
  9810                           ;mtouch_button.c: 244: else if ((button->deviation) > (button->threshold))
  9811  0036' 0020               	movlb	0	; select bank0
  9812  0037' 0807'              	movf	Button_State_NotPressed@button,w
  9813  0038' 3E0E               	addlw	14
  9814  0039' 0086               	movwf	6
  9815  003A' 3001               	movlw	1	; select bank2/3
  9816  003B' 0087               	movwf	7
  9817  003C' 0801               	movf	1,w
  9818  003D' 3A80               	xorlw	128
  9819  003E' 0088'              	movwf	??_Button_State_NotPressed
  9820  003F' 0807'              	movf	Button_State_NotPressed@button,w
  9821  0040' 3E09               	addlw	9
  9822  0041' 0086               	movwf	6
  9823  0042' 3001               	movlw	1	; select bank2/3
  9824  0043' 0087               	movwf	7
  9825  0044' 0801               	movf	1,w
  9826  0045' 3A80               	xorlw	128
  9827  0046' 0288'              	subwf	??_Button_State_NotPressed,f
  9828  0047' 1803               	skipnc
  9829  0048' 2800'              	goto	l5467
  9830                           
  9831                           ;mtouch_button.c: 245: {
  9832                           ;mtouch_button.c: 246: button->state = MTOUCH_BUTTON_STATE_pressed;
  9833  0049' 3002               	movlw	2
  9834  004A' 0088'              	movwf	??_Button_State_NotPressed
  9835  004B' 0807'              	movf	Button_State_NotPressed@button,w
  9836  004C' 3E02               	addlw	2
  9837  004D' 0086               	movwf	6
  9838  004E' 3001               	movlw	1	; select bank2/3
  9839  004F' 0087               	movwf	7
  9840  0050' 0808'              	movf	??_Button_State_NotPressed,w
  9841  0051' 0081               	movwf	1
  9842                           
  9843                           ;mtouch_button.c: 247: button->counter = (mtouch_button_statecounter_t)0;
  9844  0052' 0807'              	movf	Button_State_NotPressed@button,w
  9845  0053' 3E0A               	addlw	10
  9846  0054' 0086               	movwf	6
  9847  0055' 3001               	movlw	1	; select bank2/3
  9848  0056' 0087               	movwf	7
  9849  0057' 3000               	movlw	0
  9850  0058' 3FC0               	movwi [0]fsr1
  9851  0059' 3FC1               	movwi [1]fsr1
  9852                           
  9853                           ;mtouch_button.c: 248: callback_pressed(button->name);
  9854  005A' 0807'              	movf	Button_State_NotPressed@button,w
  9855  005B' 0086               	movwf	6
  9856  005C' 3001               	movlw	1	; select bank2/3
  9857  005D' 0087               	movwf	7
  9858  005E' 0801               	movf	1,w
  9859  005F' 0088'              	movwf	??_Button_State_NotPressed
  9860  0060' 0808'              	movf	??_Button_State_NotPressed,w
  9861  0061' 0082'              	movwf	Button_DefaultCallback@button
  9862  0062' 0813'              	movf	_callback_pressed+1,w
  9863  0063' 008A               	movwf	10
  9864  0064' 0812'              	movf	_callback_pressed,w
  9865  0065' 000A               	callw
  9866  0066' 3180'              	pagesel	$
  9867                           
  9868                           ;mtouch_button.c: 249: }
  9869  0067' 2800'              	goto	l879
  9870  0068'                    l5467:	
  9871                           
  9872                           ;mtouch_button.c: 250: else
  9873                           ;mtouch_button.c: 251: {
  9874                           ;mtouch_button.c: 253: button->counter = (mtouch_button_statecounter_t)0;
  9875  0068' 0020               	movlb	0	; select bank0
  9876  0069' 0807'              	movf	Button_State_NotPressed@button,w
  9877  006A' 3E0A               	addlw	10
  9878  006B' 0086               	movwf	6
  9879  006C' 3001               	movlw	1	; select bank2/3
  9880  006D' 0087               	movwf	7
  9881  006E' 3000               	movlw	0
  9882  006F' 3FC0               	movwi [0]fsr1
  9883  0070' 3FC1               	movwi [1]fsr1
  9884  0071'                    l879:	
  9885                           
  9886                           ;mtouch_button.c: 254: }
  9887                           ;mtouch_button.c: 257: (button->baseline_count)++;
  9888  0071' 0020               	movlb	0	; select bank0
  9889  0072' 0807'              	movf	Button_State_NotPressed@button,w
  9890  0073' 3E0C               	addlw	12
  9891  0074' 0086               	movwf	6
  9892  0075' 3001               	movlw	1	; select bank2/3
  9893  0076' 0087               	movwf	7
  9894  0077' 3001               	movlw	1
  9895  0078' 0781               	addwf	1,f
  9896  0079' 3141               	addfsr 1,1
  9897  007A' 1803               	skipnc
  9898  007B' 0A81               	incf	1,f
  9899                           
  9900                           ;mtouch_button.c: 258: if ((button->baseline_count) > ((mtouch_button_baselinecounter_t)
      +                          32))
  9901  007C' 0807'              	movf	Button_State_NotPressed@button,w
  9902  007D' 3E0C               	addlw	12
  9903  007E' 0086               	movwf	6
  9904  007F' 3001               	movlw	1	; select bank2/3
  9905  0080' 0087               	movwf	7
  9906  0081' 3F40               	moviw [0]fsr1
  9907  0082' 0088'              	movwf	??_Button_State_NotPressed
  9908  0083' 3F41               	moviw [1]fsr1
  9909  0084' 0089'              	movwf	??_Button_State_NotPressed+1
  9910  0085' 3000               	movlw	0
  9911  0086' 0209'              	subwf	??_Button_State_NotPressed+1,w
  9912  0087' 3021               	movlw	33
  9913  0088' 1903               	skipnz
  9914  0089' 0208'              	subwf	??_Button_State_NotPressed,w
  9915  008A' 1C03               	skipc
  9916  008B' 0008               	return
  9917                           
  9918                           ;mtouch_button.c: 259: {
  9919                           ;mtouch_button.c: 260: button->baseline_count = (mtouch_button_baselinecounter_t)0;
  9920  008C' 0807'              	movf	Button_State_NotPressed@button,w
  9921  008D' 3E0C               	addlw	12
  9922  008E' 0086               	movwf	6
  9923  008F' 3001               	movlw	1	; select bank2/3
  9924  0090' 0087               	movwf	7
  9925  0091' 3000               	movlw	0
  9926  0092' 3FC0               	movwi [0]fsr1
  9927  0093' 3FC1               	movwi [1]fsr1
  9928                           
  9929                           ;mtouch_button.c: 261: Button_Baseline_Update(button);
  9930  0094' 0807'              	movf	Button_State_NotPressed@button,w
  9931  0095' 3180' 2000'        	fcall	_Button_Baseline_Update
  9932  0097' 0008               	return
  9933  0098'                    __end_of_Button_State_NotPressed:	
  9934                           
  9935                           	psect	text60
  9936  0000'                    __ptext60:	
  9937 ;; *************** function _Button_State_Initializing *****************
  9938 ;; Defined at:
  9939 ;;		line 213 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9940 ;; Parameters:    Size  Location     Type
  9941 ;;  button          1    7[BANK0 ] PTR struct .
  9942 ;;		 -> mtouch_button(80), 
  9943 ;; Auto vars:     Size  Location     Type
  9944 ;;		None
  9945 ;; Return value:  Size  Location     Type
  9946 ;;                  1    wreg      void 
  9947 ;; Registers used:
  9948 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9949 ;; Tracked objects:
  9950 ;;		On entry : 0/0
  9951 ;;		On exit  : 0/0
  9952 ;;		Unchanged: 0/0
  9953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9954 ;;      Params:         0       1       0       0       0       0       0       0
  9955 ;;      Locals:         0       0       0       0       0       0       0       0
  9956 ;;      Temps:          0       2       0       0       0       0       0       0
  9957 ;;      Totals:         0       3       0       0       0       0       0       0
  9958 ;;Total ram usage:        3 bytes
  9959 ;; Hardware stack levels used:    1
  9960 ;; Hardware stack levels required when called:    5
  9961 ;; This function calls:
  9962 ;;		_Button_Baseline_Initialize
  9963 ;;		_Button_Baseline_Update
  9964 ;; This function is called by:
  9965 ;;		_Button_Service
  9966 ;; This function uses a non-reentrant model
  9967 ;;
  9968                           
  9969                           
  9970                           ;psect for function _Button_State_Initializing
  9971  0000'                    _Button_State_Initializing:	
  9972                           
  9973                           ;mtouch_button.c: 216: if ((button->counter) <= (mtouch_button_statecounter_t)((mtouch_b
      +                          utton_statecounter_t)16)/2)
  9974                           
  9975                           ;incstack = 0
  9976                           ; Regs used in _Button_State_Initializing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  9977  0000' 0020               	movlb	0	; select bank0
  9978  0001' 0807'              	movf	Button_State_Initializing@button,w
  9979  0002' 3E0A               	addlw	10
  9980  0003' 0086               	movwf	6
  9981  0004' 3001               	movlw	1	; select bank2/3
  9982  0005' 0087               	movwf	7
  9983  0006' 3F40               	moviw [0]fsr1
  9984  0007' 0088'              	movwf	??_Button_State_Initializing
  9985  0008' 3F41               	moviw [1]fsr1
  9986  0009' 0089'              	movwf	??_Button_State_Initializing+1
  9987  000A' 3000               	movlw	0
  9988  000B' 0209'              	subwf	??_Button_State_Initializing+1,w
  9989  000C' 3009               	movlw	9
  9990  000D' 1903               	skipnz
  9991  000E' 0208'              	subwf	??_Button_State_Initializing,w
  9992  000F' 1803               	skipnc
  9993  0010' 2800'              	goto	l5445
  9994                           
  9995                           ;mtouch_button.c: 217: {
  9996                           ;mtouch_button.c: 218: Button_Baseline_Initialize(button);
  9997  0011' 0807'              	movf	Button_State_Initializing@button,w
  9998  0012' 3180' 2000' 3180'  	fcall	_Button_Baseline_Initialize
  9999                           
 10000                           ;mtouch_button.c: 219: } else {
 10001  0015' 2800'              	goto	l5447
 10002  0016'                    l5445:	
 10003                           
 10004                           ;mtouch_button.c: 220: Button_Baseline_Update(button);
 10005  0016' 0020               	movlb	0	; select bank0
 10006  0017' 0807'              	movf	Button_State_Initializing@button,w
 10007  0018' 3180' 2000' 3180'  	fcall	_Button_Baseline_Update
 10008  001B'                    l5447:	
 10009                           
 10010                           ;mtouch_button.c: 221: }
 10011                           ;mtouch_button.c: 224: (button->counter)++;
 10012  001B' 0020               	movlb	0	; select bank0
 10013  001C' 0807'              	movf	Button_State_Initializing@button,w
 10014  001D' 3E0A               	addlw	10
 10015  001E' 0086               	movwf	6
 10016  001F' 3001               	movlw	1	; select bank2/3
 10017  0020' 0087               	movwf	7
 10018  0021' 3001               	movlw	1
 10019  0022' 0781               	addwf	1,f
 10020  0023' 3141               	addfsr 1,1
 10021  0024' 1803               	skipnc
 10022  0025' 0A81               	incf	1,f
 10023                           
 10024                           ;mtouch_button.c: 225: if ((button->counter) >= (mtouch_button_statecounter_t)((mtouch_b
      +                          utton_statecounter_t)16))
 10025  0026' 0807'              	movf	Button_State_Initializing@button,w
 10026  0027' 3E0A               	addlw	10
 10027  0028' 0086               	movwf	6
 10028  0029' 3001               	movlw	1	; select bank2/3
 10029  002A' 0087               	movwf	7
 10030  002B' 3F40               	moviw [0]fsr1
 10031  002C' 0088'              	movwf	??_Button_State_Initializing
 10032  002D' 3F41               	moviw [1]fsr1
 10033  002E' 0089'              	movwf	??_Button_State_Initializing+1
 10034  002F' 3000               	movlw	0
 10035  0030' 0209'              	subwf	??_Button_State_Initializing+1,w
 10036  0031' 3010               	movlw	16
 10037  0032' 1903               	skipnz
 10038  0033' 0208'              	subwf	??_Button_State_Initializing,w
 10039  0034' 1C03               	skipc
 10040  0035' 0008               	return
 10041                           
 10042                           ;mtouch_button.c: 226: {
 10043                           ;mtouch_button.c: 227: button->state = MTOUCH_BUTTON_STATE_notPressed;
 10044  0036' 0807'              	movf	Button_State_Initializing@button,w
 10045  0037' 3E02               	addlw	2
 10046  0038' 0086               	movwf	6
 10047  0039' 3001               	movlw	1	; select bank2/3
 10048  003A' 0087               	movwf	7
 10049  003B' 0181               	clrf	1
 10050  003C' 0A81               	incf	1,f
 10051                           
 10052                           ;mtouch_button.c: 228: button->counter = (mtouch_button_statecounter_t)0;
 10053  003D' 0807'              	movf	Button_State_Initializing@button,w
 10054  003E' 3E0A               	addlw	10
 10055  003F' 0086               	movwf	6
 10056  0040' 3001               	movlw	1	; select bank2/3
 10057  0041' 0087               	movwf	7
 10058  0042' 3000               	movlw	0
 10059  0043' 3FC0               	movwi [0]fsr1
 10060  0044' 3FC1               	movwi [1]fsr1
 10061  0045' 0008               	return
 10062  0046'                    __end_of_Button_State_Initializing:	
 10063                           
 10064                           	psect	text61
 10065  0000'                    __ptext61:	
 10066 ;; *************** function _Button_State_Pressed *****************
 10067 ;; Defined at:
 10068 ;;		line 264 in file "mcc_generated_files/mtouch/mtouch_button.c"
 10069 ;; Parameters:    Size  Location     Type
 10070 ;;  button          1    7[BANK0 ] PTR struct .
 10071 ;;		 -> mtouch_button(80), 
 10072 ;; Auto vars:     Size  Location     Type
 10073 ;;		None
 10074 ;; Return value:  Size  Location     Type
 10075 ;;                  1    wreg      void 
 10076 ;; Registers used:
 10077 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10078 ;; Tracked objects:
 10079 ;;		On entry : 0/0
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10083 ;;      Params:         0       1       0       0       0       0       0       0
 10084 ;;      Locals:         0       0       0       0       0       0       0       0
 10085 ;;      Temps:          0       2       0       0       0       0       0       0
 10086 ;;      Totals:         0       3       0       0       0       0       0       0
 10087 ;;Total ram usage:        3 bytes
 10088 ;; Hardware stack levels used:    1
 10089 ;; Hardware stack levels required when called:    5
 10090 ;; This function calls:
 10091 ;;		_Button_DefaultCallback
 10092 ;;		_MTOUCH_Button_Initialize
 10093 ;;		_processButtonRelease
 10094 ;; This function is called by:
 10095 ;;		_Button_Service
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           
 10099                           
 10100                           ;psect for function _Button_State_Pressed
 10101  0000'                    _Button_State_Pressed:	
 10102                           
 10103                           ;mtouch_button.c: 267: if ((button->counter) >= ((mtouch_button_statecounter_t)1000))
 10104                           
 10105                           ;incstack = 0
 10106                           ; Regs used in _Button_State_Pressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10107  0000' 0020               	movlb	0	; select bank0
 10108  0001' 0807'              	movf	Button_State_Pressed@button,w
 10109  0002' 3E0A               	addlw	10
 10110  0003' 0086               	movwf	6
 10111  0004' 3001               	movlw	1	; select bank2/3
 10112  0005' 0087               	movwf	7
 10113  0006' 3F40               	moviw [0]fsr1
 10114  0007' 0088'              	movwf	??_Button_State_Pressed
 10115  0008' 3F41               	moviw [1]fsr1
 10116  0009' 0089'              	movwf	??_Button_State_Pressed+1
 10117  000A' 3003               	movlw	3
 10118  000B' 0209'              	subwf	??_Button_State_Pressed+1,w
 10119  000C' 30E8               	movlw	232
 10120  000D' 1903               	skipnz
 10121  000E' 0208'              	subwf	??_Button_State_Pressed,w
 10122  000F' 1C03               	skipc
 10123  0010' 2800'              	goto	l5477
 10124                           
 10125                           ;mtouch_button.c: 268: {
 10126                           ;mtouch_button.c: 269: MTOUCH_Button_Initialize(button->name);
 10127  0011' 0807'              	movf	Button_State_Pressed@button,w
 10128  0012' 0086               	movwf	6
 10129  0013' 3001               	movlw	1	; select bank2/3
 10130  0014' 0087               	movwf	7
 10131  0015' 0801               	movf	1,w
 10132  0016' 3180' 2000' 3180'  	fcall	_MTOUCH_Button_Initialize
 10133                           
 10134                           ;mtouch_button.c: 270: callback_notPressed(button->name);
 10135  0019' 0020               	movlb	0	; select bank0
 10136  001A' 0807'              	movf	Button_State_Pressed@button,w
 10137  001B' 0086               	movwf	6
 10138  001C' 3001               	movlw	1	; select bank2/3
 10139  001D' 0087               	movwf	7
 10140  001E' 0801               	movf	1,w
 10141  001F' 0088'              	movwf	??_Button_State_Pressed
 10142  0020' 0808'              	movf	??_Button_State_Pressed,w
 10143  0021' 0082'              	movwf	Button_DefaultCallback@button
 10144  0022' 0811'              	movf	_callback_notPressed+1,w
 10145  0023' 008A               	movwf	10
 10146  0024' 0810'              	movf	_callback_notPressed,w
 10147  0025' 000A               	callw
 10148  0026' 3180'              	pagesel	$
 10149                           
 10150                           ;mtouch_button.c: 271: }
 10151  0027' 0008               	return
 10152  0028'                    l5477:	
 10153                           
 10154                           ;mtouch_button.c: 274: else if ((button->deviation) < (mtouch_button_deviation_t)((butto
      +                          n->threshold) >> 1))
 10155  0028' 0020               	movlb	0	; select bank0
 10156  0029' 0807'              	movf	Button_State_Pressed@button,w
 10157  002A' 3E09               	addlw	9
 10158  002B' 0086               	movwf	6
 10159  002C' 3001               	movlw	1	; select bank2/3
 10160  002D' 0087               	movwf	7
 10161  002E' 0801               	movf	1,w
 10162  002F' 3A80               	xorlw	128
 10163  0030' 0088'              	movwf	??_Button_State_Pressed
 10164  0031' 0807'              	movf	Button_State_Pressed@button,w
 10165  0032' 3E0E               	addlw	14
 10166  0033' 0086               	movwf	6
 10167  0034' 3001               	movlw	1	; select bank2/3
 10168  0035' 0087               	movwf	7
 10169  0036' 3701               	asrf	1,w
 10170  0037' 3A80               	xorlw	128
 10171  0038' 0288'              	subwf	??_Button_State_Pressed,f
 10172  0039' 1803               	skipnc
 10173  003A' 0008               	return
 10174                           
 10175                           ;mtouch_button.c: 275: {
 10176                           ;mtouch_button.c: 276: button->state = MTOUCH_BUTTON_STATE_notPressed;
 10177  003B' 0807'              	movf	Button_State_Pressed@button,w
 10178  003C' 3E02               	addlw	2
 10179  003D' 0086               	movwf	6
 10180  003E' 3001               	movlw	1	; select bank2/3
 10181  003F' 0087               	movwf	7
 10182  0040' 0181               	clrf	1
 10183  0041' 0A81               	incf	1,f
 10184                           
 10185                           ;mtouch_button.c: 277: button->counter = (mtouch_button_statecounter_t)0;
 10186  0042' 0807'              	movf	Button_State_Pressed@button,w
 10187  0043' 3E0A               	addlw	10
 10188  0044' 0086               	movwf	6
 10189  0045' 3001               	movlw	1	; select bank2/3
 10190  0046' 0087               	movwf	7
 10191  0047' 3000               	movlw	0
 10192  0048' 3FC0               	movwi [0]fsr1
 10193  0049' 3FC1               	movwi [1]fsr1
 10194                           
 10195                           ;mtouch_button.c: 278: callback_notPressed(button->name);
 10196  004A' 0807'              	movf	Button_State_Pressed@button,w
 10197  004B' 0086               	movwf	6
 10198  004C' 3001               	movlw	1	; select bank2/3
 10199  004D' 0087               	movwf	7
 10200  004E' 0801               	movf	1,w
 10201  004F' 0088'              	movwf	??_Button_State_Pressed
 10202  0050' 0808'              	movf	??_Button_State_Pressed,w
 10203  0051' 0082'              	movwf	Button_DefaultCallback@button
 10204  0052' 0811'              	movf	_callback_notPressed+1,w
 10205  0053' 008A               	movwf	10
 10206  0054' 0810'              	movf	_callback_notPressed,w
 10207  0055' 000A               	callw
 10208  0056' 3180'              	pagesel	$
 10209  0057' 0008               	return
 10210  0058'                    __end_of_Button_State_Pressed:	
 10211                           
 10212                           	psect	text62
 10213  0000'                    __ptext62:	
 10214 ;; *************** function _processButtonTouch *****************
 10215 ;; Defined at:
 10216 ;;		line 50 in file "main.c"
 10217 ;; Parameters:    Size  Location     Type
 10218 ;;  button          1    2[COMMON] enum E3259
 10219 ;; Auto vars:     Size  Location     Type
 10220 ;;		None
 10221 ;; Return value:  Size  Location     Type
 10222 ;;                  1    wreg      void 
 10223 ;; Registers used:
 10224 ;;		None
 10225 ;; Tracked objects:
 10226 ;;		On entry : 0/0
 10227 ;;		On exit  : 0/0
 10228 ;;		Unchanged: 0/0
 10229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10230 ;;      Params:         1       0       0       0       0       0       0       0
 10231 ;;      Locals:         0       0       0       0       0       0       0       0
 10232 ;;      Temps:          0       0       0       0       0       0       0       0
 10233 ;;      Totals:         1       0       0       0       0       0       0       0
 10234 ;;Total ram usage:        1 bytes
 10235 ;; Hardware stack levels used:    1
 10236 ;; Hardware stack levels required when called:    2
 10237 ;; This function calls:
 10238 ;;		Nothing
 10239 ;; This function is called by:
 10240 ;;		_main
 10241 ;;		_Button_State_NotPressed
 10242 ;; This function uses a non-reentrant model
 10243 ;;
 10244                           
 10245                           
 10246                           ;psect for function _processButtonTouch
 10247  0000'                    _processButtonTouch:	
 10248                           
 10249                           ;main.c: 60: }
 10250                           
 10251                           ;main.c: 53: {
 10252                           ;main.c: 59: default: break;
 10253                           
 10254                           ;main.c: 52: switch(button)
 10255                           
 10256                           ;incstack = 0
 10257                           ; Regs used in _processButtonTouch: []
 10258  0000' 0008               	return
 10259  0001'                    __end_of_processButtonTouch:	
 10260                           
 10261                           	psect	text63
 10262  0000'                    __ptext63:	
 10263 ;; *************** function _Button_DefaultCallback *****************
 10264 ;; Defined at:
 10265 ;;		line 477 in file "mcc_generated_files/mtouch/mtouch_button.c"
 10266 ;; Parameters:    Size  Location     Type
 10267 ;;  button          1    2[COMMON] enum E3231
 10268 ;; Auto vars:     Size  Location     Type
 10269 ;;		None
 10270 ;; Return value:  Size  Location     Type
 10271 ;;                  1    wreg      void 
 10272 ;; Registers used:
 10273 ;;		None
 10274 ;; Tracked objects:
 10275 ;;		On entry : 0/0
 10276 ;;		On exit  : 0/0
 10277 ;;		Unchanged: 0/0
 10278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10279 ;;      Params:         1       0       0       0       0       0       0       0
 10280 ;;      Locals:         0       0       0       0       0       0       0       0
 10281 ;;      Temps:          0       0       0       0       0       0       0       0
 10282 ;;      Totals:         1       0       0       0       0       0       0       0
 10283 ;;Total ram usage:        1 bytes
 10284 ;; Hardware stack levels used:    1
 10285 ;; Hardware stack levels required when called:    2
 10286 ;; This function calls:
 10287 ;;		Nothing
 10288 ;; This function is called by:
 10289 ;;		_Button_State_NotPressed
 10290 ;;		_Button_State_Pressed
 10291 ;; This function uses a non-reentrant model
 10292 ;;
 10293                           
 10294                           
 10295                           ;psect for function _Button_DefaultCallback
 10296  0000'                    _Button_DefaultCallback:	
 10297                           
 10298                           ;incstack = 0
 10299                           ; Regs used in _Button_DefaultCallback: []
 10300  0000' 0008               	return
 10301  0001'                    __end_of_Button_DefaultCallback:	
 10302                           
 10303                           	psect	text64
 10304  0000'                    __ptext64:	
 10305 ;; *************** function _processButtonRelease *****************
 10306 ;; Defined at:
 10307 ;;		line 63 in file "main.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;  button          1    2[COMMON] enum E3259
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;		None
 10312 ;; Return value:  Size  Location     Type
 10313 ;;                  1    wreg      void 
 10314 ;; Registers used:
 10315 ;;		None
 10316 ;; Tracked objects:
 10317 ;;		On entry : 0/0
 10318 ;;		On exit  : 0/0
 10319 ;;		Unchanged: 0/0
 10320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10321 ;;      Params:         1       0       0       0       0       0       0       0
 10322 ;;      Locals:         0       0       0       0       0       0       0       0
 10323 ;;      Temps:          0       0       0       0       0       0       0       0
 10324 ;;      Totals:         1       0       0       0       0       0       0       0
 10325 ;;Total ram usage:        1 bytes
 10326 ;; Hardware stack levels used:    1
 10327 ;; Hardware stack levels required when called:    2
 10328 ;; This function calls:
 10329 ;;		Nothing
 10330 ;; This function is called by:
 10331 ;;		_main
 10332 ;;		_Button_State_Pressed
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           
 10337                           ;psect for function _processButtonRelease
 10338  0000'                    _processButtonRelease:	
 10339                           
 10340                           ;main.c: 73: }
 10341                           
 10342                           ;main.c: 66: {
 10343                           ;main.c: 72: default: break;
 10344                           
 10345                           ;main.c: 65: switch(button)
 10346                           
 10347                           ;incstack = 0
 10348                           ; Regs used in _processButtonRelease: []
 10349  0000' 0008               	return
 10350  0001'                    __end_of_processButtonRelease:	
 10351                           
 10352                           	psect	text65
 10353  0000'                    __ptext65:	
 10354 ;; *************** function _MTOUCH_Button_Initialize *****************
 10355 ;; Defined at:
 10356 ;;		line 157 in file "mcc_generated_files/mtouch/mtouch_button.c"
 10357 ;; Parameters:    Size  Location     Type
 10358 ;;  name            1    wreg     enum E3231
 10359 ;; Auto vars:     Size  Location     Type
 10360 ;;  name            1    0[BANK0 ] enum E3231
 10361 ;;  button          1    1[BANK0 ] PTR struct .
 10362 ;;		 -> mtouch_button(80), 
 10363 ;; Return value:  Size  Location     Type
 10364 ;;                  1    wreg      void 
 10365 ;; Registers used:
 10366 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10367 ;; Tracked objects:
 10368 ;;		On entry : 0/0
 10369 ;;		On exit  : 0/0
 10370 ;;		Unchanged: 0/0
 10371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10372 ;;      Params:         0       0       0       0       0       0       0       0
 10373 ;;      Locals:         0       2       0       0       0       0       0       0
 10374 ;;      Temps:          2       0       0       0       0       0       0       0
 10375 ;;      Totals:         2       2       0       0       0       0       0       0
 10376 ;;Total ram usage:        4 bytes
 10377 ;; Hardware stack levels used:    1
 10378 ;; Hardware stack levels required when called:    4
 10379 ;; This function calls:
 10380 ;;		_MTOUCH_Sensor_Calibrate
 10381 ;; This function is called by:
 10382 ;;		_Button_Service
 10383 ;;		_Button_State_NotPressed
 10384 ;;		_Button_State_Pressed
 10385 ;;		_MTOUCH_Button_InitializeAll
 10386 ;; This function uses a non-reentrant model
 10387 ;;
 10388                           
 10389                           
 10390                           ;psect for function _MTOUCH_Button_Initialize
 10391  0000'                    _MTOUCH_Button_Initialize:	
 10392                           
 10393                           ;incstack = 0
 10394                           ; Regs used in _MTOUCH_Button_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 10395                           ;MTOUCH_Button_Initialize@name stored from wreg
 10396  0000' 0020               	movlb	0	; select bank0
 10397  0001' 0080'              	movwf	MTOUCH_Button_Initialize@name
 10398                           
 10399                           ;mtouch_button.c: 159: mtouch_button_t* button = &mtouch_button[name];
 10400  0002' 0800'              	movf	MTOUCH_Button_Initialize@name,w
 10401  0003' 0088'              	movwf	??_MTOUCH_Button_Initialize
 10402  0004' 3003               	movlw	3
 10403  0005'                    u5275:	
 10404  0005' 3588'              	lslf	??_MTOUCH_Button_Initialize,f
 10405  0006' 3EFF               	addlw	-1
 10406  0007' 1D03               	skipz
 10407  0008' 2800'              	goto	u5275
 10408  0009' 3508'              	lslf	??_MTOUCH_Button_Initialize,w
 10409  000A' 3E00'              	addlw	(low (_mtouch_button| (0+256)))& (0+255)
 10410  000B' 0089'              	movwf	??_MTOUCH_Button_Initialize+1
 10411  000C' 0809'              	movf	??_MTOUCH_Button_Initialize+1,w
 10412  000D' 0081'              	movwf	MTOUCH_Button_Initialize@button
 10413                           
 10414                           ;mtouch_button.c: 161: button->state = MTOUCH_BUTTON_STATE_initializing;
 10415  000E' 0801'              	movf	MTOUCH_Button_Initialize@button,w
 10416  000F' 3E02               	addlw	2
 10417  0010' 0086               	movwf	6
 10418  0011' 3001               	movlw	1	; select bank2/3
 10419  0012' 0087               	movwf	7
 10420  0013' 0181               	clrf	1
 10421                           
 10422                           ;mtouch_button.c: 162: button->baseline = (mtouch_button_baseline_t)0;
 10423  0014' 0801'              	movf	MTOUCH_Button_Initialize@button,w
 10424  0015' 3E05               	addlw	5
 10425  0016' 0086               	movwf	6
 10426  0017' 3001               	movlw	1	; select bank2/3
 10427  0018' 0087               	movwf	7
 10428  0019' 3000               	movlw	0
 10429  001A' 3FC0               	movwi [0]fsr1
 10430  001B' 3000               	movlw	0
 10431  001C' 3FC1               	movwi [1]fsr1
 10432  001D' 3FC2               	movwi [2]fsr1
 10433  001E' 3FC3               	movwi [3]fsr1
 10434                           
 10435                           ;mtouch_button.c: 163: button->counter = (mtouch_button_statecounter_t)0;
 10436  001F' 0801'              	movf	MTOUCH_Button_Initialize@button,w
 10437  0020' 3E0A               	addlw	10
 10438  0021' 0086               	movwf	6
 10439  0022' 3001               	movlw	1	; select bank2/3
 10440  0023' 0087               	movwf	7
 10441  0024' 3000               	movlw	0
 10442  0025' 3FC0               	movwi [0]fsr1
 10443  0026' 3FC1               	movwi [1]fsr1
 10444                           
 10445                           ;mtouch_button.c: 164: button->baseline_count = (mtouch_button_baselinecounter_t)0;
 10446  0027' 0801'              	movf	MTOUCH_Button_Initialize@button,w
 10447  0028' 3E0C               	addlw	12
 10448  0029' 0086               	movwf	6
 10449  002A' 3001               	movlw	1	; select bank2/3
 10450  002B' 0087               	movwf	7
 10451  002C' 3000               	movlw	0
 10452  002D' 3FC0               	movwi [0]fsr1
 10453  002E' 3FC1               	movwi [1]fsr1
 10454                           
 10455                           ;mtouch_button.c: 166: MTOUCH_Sensor_Calibrate(button->sensor);
 10456  002F' 0A01'              	incf	MTOUCH_Button_Initialize@button,w
 10457  0030' 0086               	movwf	6
 10458  0031' 3001               	movlw	1	; select bank2/3
 10459  0032' 0087               	movwf	7
 10460  0033' 0801               	movf	1,w
 10461  0034' 3180' 2000'        	fcall	_MTOUCH_Sensor_Calibrate
 10462  0036' 0008               	return
 10463  0037'                    __end_of_MTOUCH_Button_Initialize:	
 10464                           
 10465                           	psect	text66
 10466  0000'                    __ptext66:	
 10467 ;; *************** function _MTOUCH_Sensor_Calibrate *****************
 10468 ;; Defined at:
 10469 ;;		line 794 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10470 ;; Parameters:    Size  Location     Type
 10471 ;;  sensor          1    wreg     enum E3328
 10472 ;; Auto vars:     Size  Location     Type
 10473 ;;  sensor          1    7[COMMON] enum E3328
 10474 ;; Return value:  Size  Location     Type
 10475 ;;                  1    wreg      void 
 10476 ;; Registers used:
 10477 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10478 ;; Tracked objects:
 10479 ;;		On entry : 0/0
 10480 ;;		On exit  : 0/0
 10481 ;;		Unchanged: 0/0
 10482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10483 ;;      Params:         0       0       0       0       0       0       0       0
 10484 ;;      Locals:         1       0       0       0       0       0       0       0
 10485 ;;      Temps:          1       0       0       0       0       0       0       0
 10486 ;;      Totals:         2       0       0       0       0       0       0       0
 10487 ;;Total ram usage:        2 bytes
 10488 ;; Hardware stack levels used:    1
 10489 ;; Hardware stack levels required when called:    3
 10490 ;; This function calls:
 10491 ;;		___bmul
 10492 ;; This function is called by:
 10493 ;;		_MTOUCH_Button_Initialize
 10494 ;;		_MTOUCH_Sensor_Initialize
 10495 ;; This function uses a non-reentrant model
 10496 ;;
 10497                           
 10498                           
 10499                           ;psect for function _MTOUCH_Sensor_Calibrate
 10500  0000'                    _MTOUCH_Sensor_Calibrate:	
 10501                           
 10502                           ;incstack = 0
 10503                           ; Regs used in _MTOUCH_Sensor_Calibrate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10504                           ;MTOUCH_Sensor_Calibrate@sensor stored from wreg
 10505  0000' 0087'              	movwf	MTOUCH_Sensor_Calibrate@sensor
 10506                           
 10507                           ;mtouch_sensor.c: 796: if(sensor < 6)
 10508  0001' 3006               	movlw	6
 10509  0002' 0207'              	subwf	MTOUCH_Sensor_Calibrate@sensor,w
 10510  0003' 1803               	skipnc
 10511  0004' 0008               	return
 10512                           
 10513                           ;mtouch_sensor.c: 797: {
 10514                           ;mtouch_sensor.c: 798: mtouch_sensor[sensor].calibrated = 0;
 10515  0005' 3009               	movlw	9
 10516  0006' 0086'              	movwf	??_MTOUCH_Sensor_Calibrate
 10517  0007' 0806'              	movf	??_MTOUCH_Sensor_Calibrate,w
 10518  0008' 0082'              	movwf	___bmul@multiplicand
 10519  0009' 0807'              	movf	MTOUCH_Sensor_Calibrate@sensor,w
 10520  000A' 3180' 2000' 3180'  	fcall	___bmul
 10521  000D' 3E08               	addlw	8
 10522  000E' 3E00'              	addlw	(low (_mtouch_sensor| (0+256)))& (0+255)
 10523  000F' 0086               	movwf	6
 10524  0010' 3001               	movlw	1	; select bank2/3
 10525  0011' 0087               	movwf	7
 10526  0012' 1101               	bcf	1,2
 10527                           
 10528                           ;mtouch_sensor.c: 799: mtouch_sensor[sensor].addcap = 0;
 10529  0013' 3009               	movlw	9
 10530  0014' 0086'              	movwf	??_MTOUCH_Sensor_Calibrate
 10531  0015' 0806'              	movf	??_MTOUCH_Sensor_Calibrate,w
 10532  0016' 0082'              	movwf	___bmul@multiplicand
 10533  0017' 0807'              	movf	MTOUCH_Sensor_Calibrate@sensor,w
 10534  0018' 3180' 2000'        	fcall	___bmul
 10535  001A' 3E05               	addlw	5
 10536  001B' 3E00'              	addlw	(low (_mtouch_sensor| (0+256)))& (0+255)
 10537  001C' 0086               	movwf	6
 10538  001D' 3001               	movlw	1	; select bank2/3
 10539  001E' 0087               	movwf	7
 10540  001F' 0181               	clrf	1
 10541  0020' 0008               	return
 10542  0021'                    __end_of_MTOUCH_Sensor_Calibrate:	
 10543                           
 10544                           	psect	text67
 10545  0000'                    __ptext67:	
 10546 ;; *************** function _Button_Baseline_Update *****************
 10547 ;; Defined at:
 10548 ;;		line 443 in file "mcc_generated_files/mtouch/mtouch_button.c"
 10549 ;; Parameters:    Size  Location     Type
 10550 ;;  button          1    wreg     PTR struct .
 10551 ;;		 -> mtouch_button(80), 
 10552 ;; Auto vars:     Size  Location     Type
 10553 ;;  button          1    6[BANK0 ] PTR struct .
 10554 ;;		 -> mtouch_button(80), 
 10555 ;; Return value:  Size  Location     Type
 10556 ;;                  1    wreg      void 
 10557 ;; Registers used:
 10558 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10559 ;; Tracked objects:
 10560 ;;		On entry : 0/0
 10561 ;;		On exit  : 0/0
 10562 ;;		Unchanged: 0/0
 10563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10564 ;;      Params:         0       0       0       0       0       0       0       0
 10565 ;;      Locals:         0       1       0       0       0       0       0       0
 10566 ;;      Temps:          0       6       0       0       0       0       0       0
 10567 ;;      Totals:         0       7       0       0       0       0       0       0
 10568 ;;Total ram usage:        7 bytes
 10569 ;; Hardware stack levels used:    1
 10570 ;; Hardware stack levels required when called:    4
 10571 ;; This function calls:
 10572 ;;		_MTOUCH_Sensor_RawSample_Get
 10573 ;; This function is called by:
 10574 ;;		_Button_State_Initializing
 10575 ;;		_Button_State_NotPressed
 10576 ;; This function uses a non-reentrant model
 10577 ;;
 10578                           
 10579                           
 10580                           ;psect for function _Button_Baseline_Update
 10581  0000'                    _Button_Baseline_Update:	
 10582                           
 10583                           ;incstack = 0
 10584                           ; Regs used in _Button_Baseline_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 10585                           ;Button_Baseline_Update@button stored from wreg
 10586  0000' 0020               	movlb	0	; select bank0
 10587  0001' 0086'              	movwf	Button_Baseline_Update@button
 10588                           
 10589                           ;mtouch_button.c: 445: if (INTCONbits.GIE == (uint8_t)1)
 10590  0002' 1F8B               	btfss	11,7	;volatile
 10591  0003' 2800'              	goto	l5331
 10592                           
 10593                           ;mtouch_button.c: 446: {
 10594                           ;mtouch_button.c: 447: INTCONbits.GIE = (uint8_t)0;
 10595  0004' 138B               	bcf	11,7	;volatile
 10596                           
 10597                           ;mtouch_button.c: 448: button->baseline -= (button->baseline) >> ((uint8_t)4);
 10598  0005' 0806'              	movf	Button_Baseline_Update@button,w
 10599  0006' 3E05               	addlw	5
 10600  0007' 0086               	movwf	6
 10601  0008' 3001               	movlw	1	; select bank2/3
 10602  0009' 0087               	movwf	7
 10603  000A' 3F40               	moviw [0]fsr1
 10604  000B' 0080'              	movwf	??_Button_Baseline_Update
 10605  000C' 3F41               	moviw [1]fsr1
 10606  000D' 0081'              	movwf	??_Button_Baseline_Update+1
 10607  000E' 3F42               	moviw [2]fsr1
 10608  000F' 0082'              	movwf	??_Button_Baseline_Update+2
 10609  0010' 3F43               	moviw [3]fsr1
 10610  0011' 0083'              	movwf	??_Button_Baseline_Update+3
 10611  0012' 3004               	movlw	4
 10612  0013'                    u5305:	
 10613  0013' 3683'              	lsrf	??_Button_Baseline_Update+3,f
 10614  0014' 0C82'              	rrf	??_Button_Baseline_Update+2,f
 10615  0015' 0C81'              	rrf	??_Button_Baseline_Update+1,f
 10616  0016' 0C80'              	rrf	??_Button_Baseline_Update,f
 10617  0017' 0B89               	decfsz	9,f
 10618  0018' 2800'              	goto	u5305
 10619  0019' 0806'              	movf	Button_Baseline_Update@button,w
 10620  001A' 3E05               	addlw	5
 10621  001B' 0086               	movwf	6
 10622  001C' 3001               	movlw	1	; select bank2/3
 10623  001D' 0087               	movwf	7
 10624  001E' 0800'              	movf	??_Button_Baseline_Update,w
 10625  001F' 0281               	subwf	1,f
 10626  0020' 3141               	addfsr 1,1
 10627  0021' 0801'              	movf	??_Button_Baseline_Update+1,w
 10628  0022' 3B81               	subwfb	1,f
 10629  0023' 3141               	addfsr 1,1
 10630  0024' 0802'              	movf	??_Button_Baseline_Update+2,w
 10631  0025' 3B81               	subwfb	1,f
 10632  0026' 3141               	addfsr 1,1
 10633  0027' 0803'              	movf	??_Button_Baseline_Update+3,w
 10634  0028' 3B81               	subwfb	1,f
 10635  0029' 317D               	addfsr 1,-3
 10636                           
 10637                           ;mtouch_button.c: 449: button->baseline += button->reading;
 10638  002A' 0806'              	movf	Button_Baseline_Update@button,w
 10639  002B' 3E03               	addlw	3
 10640  002C' 0086               	movwf	6
 10641  002D' 3001               	movlw	1	; select bank2/3
 10642  002E' 0087               	movwf	7
 10643  002F' 3F40               	moviw [0]fsr1
 10644  0030' 0080'              	movwf	??_Button_Baseline_Update
 10645  0031' 3F41               	moviw [1]fsr1
 10646  0032' 0081'              	movwf	??_Button_Baseline_Update+1
 10647  0033' 0800'              	movf	??_Button_Baseline_Update,w
 10648  0034' 0082'              	movwf	??_Button_Baseline_Update+2
 10649  0035' 0801'              	movf	??_Button_Baseline_Update+1,w
 10650  0036' 0083'              	movwf	??_Button_Baseline_Update+3
 10651  0037' 0184'              	clrf	??_Button_Baseline_Update+4
 10652  0038' 0185'              	clrf	??_Button_Baseline_Update+5
 10653  0039' 0806'              	movf	Button_Baseline_Update@button,w
 10654  003A' 3E05               	addlw	5
 10655  003B' 0086               	movwf	6
 10656  003C' 3001               	movlw	1	; select bank2/3
 10657  003D' 0087               	movwf	7
 10658  003E' 0802'              	movf	??_Button_Baseline_Update+2,w
 10659  003F' 0781               	addwf	1,f
 10660  0040' 3141               	addfsr 1,1
 10661  0041' 0803'              	movf	??_Button_Baseline_Update+3,w
 10662  0042' 3D81               	addwfc	1,f
 10663  0043' 3141               	addfsr 1,1
 10664  0044' 0804'              	movf	??_Button_Baseline_Update+4,w
 10665  0045' 3D81               	addwfc	1,f
 10666  0046' 3141               	addfsr 1,1
 10667  0047' 0805'              	movf	??_Button_Baseline_Update+5,w
 10668  0048' 3D81               	addwfc	1,f
 10669                           
 10670                           ;mtouch_button.c: 450: INTCONbits.GIE = (uint8_t)1;
 10671  0049' 178B               	bsf	11,7	;volatile
 10672                           
 10673                           ;mtouch_button.c: 451: }
 10674  004A' 0008               	return
 10675  004B'                    l5331:	
 10676                           
 10677                           ;mtouch_button.c: 452: else
 10678                           ;mtouch_button.c: 453: {
 10679                           ;mtouch_button.c: 454: button->baseline -= (button->baseline) >> ((uint8_t)4);
 10680  004B' 0806'              	movf	Button_Baseline_Update@button,w
 10681  004C' 3E05               	addlw	5
 10682  004D' 0086               	movwf	6
 10683  004E' 3001               	movlw	1	; select bank2/3
 10684  004F' 0087               	movwf	7
 10685  0050' 3F40               	moviw [0]fsr1
 10686  0051' 0080'              	movwf	??_Button_Baseline_Update
 10687  0052' 3F41               	moviw [1]fsr1
 10688  0053' 0081'              	movwf	??_Button_Baseline_Update+1
 10689  0054' 3F42               	moviw [2]fsr1
 10690  0055' 0082'              	movwf	??_Button_Baseline_Update+2
 10691  0056' 3F43               	moviw [3]fsr1
 10692  0057' 0083'              	movwf	??_Button_Baseline_Update+3
 10693  0058' 3004               	movlw	4
 10694  0059'                    u5315:	
 10695  0059' 3683'              	lsrf	??_Button_Baseline_Update+3,f
 10696  005A' 0C82'              	rrf	??_Button_Baseline_Update+2,f
 10697  005B' 0C81'              	rrf	??_Button_Baseline_Update+1,f
 10698  005C' 0C80'              	rrf	??_Button_Baseline_Update,f
 10699  005D' 0B89               	decfsz	9,f
 10700  005E' 2800'              	goto	u5315
 10701  005F' 0806'              	movf	Button_Baseline_Update@button,w
 10702  0060' 3E05               	addlw	5
 10703  0061' 0086               	movwf	6
 10704  0062' 3001               	movlw	1	; select bank2/3
 10705  0063' 0087               	movwf	7
 10706  0064' 0800'              	movf	??_Button_Baseline_Update,w
 10707  0065' 0281               	subwf	1,f
 10708  0066' 3141               	addfsr 1,1
 10709  0067' 0801'              	movf	??_Button_Baseline_Update+1,w
 10710  0068' 3B81               	subwfb	1,f
 10711  0069' 3141               	addfsr 1,1
 10712  006A' 0802'              	movf	??_Button_Baseline_Update+2,w
 10713  006B' 3B81               	subwfb	1,f
 10714  006C' 3141               	addfsr 1,1
 10715  006D' 0803'              	movf	??_Button_Baseline_Update+3,w
 10716  006E' 3B81               	subwfb	1,f
 10717  006F' 317D               	addfsr 1,-3
 10718                           
 10719                           ;mtouch_button.c: 455: button->baseline += MTOUCH_Sensor_RawSample_Get(button->sensor);
 10720  0070' 0A06'              	incf	Button_Baseline_Update@button,w
 10721  0071' 0086               	movwf	6
 10722  0072' 3001               	movlw	1	; select bank2/3
 10723  0073' 0087               	movwf	7
 10724  0074' 0801               	movf	1,w
 10725  0075' 3180' 2000'        	fcall	_MTOUCH_Sensor_RawSample_Get
 10726  0077' 0806'              	movf	?_MTOUCH_Sensor_RawSample_Get,w
 10727  0078' 0020               	movlb	0	; select bank0
 10728  0079' 0080'              	movwf	??_Button_Baseline_Update
 10729  007A' 0807'              	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 10730  007B' 0081'              	movwf	??_Button_Baseline_Update+1
 10731  007C' 0182'              	clrf	??_Button_Baseline_Update+2
 10732  007D' 0183'              	clrf	??_Button_Baseline_Update+3
 10733  007E' 0806'              	movf	Button_Baseline_Update@button,w
 10734  007F' 3E05               	addlw	5
 10735  0080' 0086               	movwf	6
 10736  0081' 3001               	movlw	1	; select bank2/3
 10737  0082' 0087               	movwf	7
 10738  0083' 0800'              	movf	??_Button_Baseline_Update,w
 10739  0084' 0781               	addwf	1,f
 10740  0085' 3141               	addfsr 1,1
 10741  0086' 0801'              	movf	??_Button_Baseline_Update+1,w
 10742  0087' 3D81               	addwfc	1,f
 10743  0088' 3141               	addfsr 1,1
 10744  0089' 0802'              	movf	??_Button_Baseline_Update+2,w
 10745  008A' 3D81               	addwfc	1,f
 10746  008B' 3141               	addfsr 1,1
 10747  008C' 0803'              	movf	??_Button_Baseline_Update+3,w
 10748  008D' 3D81               	addwfc	1,f
 10749  008E' 0008               	return
 10750  008F'                    __end_of_Button_Baseline_Update:	
 10751                           
 10752                           	psect	text68
 10753  0000'                    __ptext68:	
 10754 ;; *************** function _Button_Baseline_Initialize *****************
 10755 ;; Defined at:
 10756 ;;		line 437 in file "mcc_generated_files/mtouch/mtouch_button.c"
 10757 ;; Parameters:    Size  Location     Type
 10758 ;;  button          1    wreg     PTR struct .
 10759 ;;		 -> mtouch_button(80), 
 10760 ;; Auto vars:     Size  Location     Type
 10761 ;;  button          1    4[BANK0 ] PTR struct .
 10762 ;;		 -> mtouch_button(80), 
 10763 ;; Return value:  Size  Location     Type
 10764 ;;                  1    wreg      void 
 10765 ;; Registers used:
 10766 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10767 ;; Tracked objects:
 10768 ;;		On entry : 0/0
 10769 ;;		On exit  : 0/0
 10770 ;;		Unchanged: 0/0
 10771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10772 ;;      Params:         0       0       0       0       0       0       0       0
 10773 ;;      Locals:         0       1       0       0       0       0       0       0
 10774 ;;      Temps:          0       4       0       0       0       0       0       0
 10775 ;;      Totals:         0       5       0       0       0       0       0       0
 10776 ;;Total ram usage:        5 bytes
 10777 ;; Hardware stack levels used:    1
 10778 ;; Hardware stack levels required when called:    4
 10779 ;; This function calls:
 10780 ;;		_MTOUCH_Sensor_RawSample_Get
 10781 ;; This function is called by:
 10782 ;;		_Button_State_Initializing
 10783 ;; This function uses a non-reentrant model
 10784 ;;
 10785                           
 10786                           
 10787                           ;psect for function _Button_Baseline_Initialize
 10788  0000'                    _Button_Baseline_Initialize:	
 10789                           
 10790                           ;incstack = 0
 10791                           ; Regs used in _Button_Baseline_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 10792                           ;Button_Baseline_Initialize@button stored from wreg
 10793  0000' 0020               	movlb	0	; select bank0
 10794  0001' 0084'              	movwf	Button_Baseline_Initialize@button
 10795                           
 10796                           ;mtouch_button.c: 439: button->baseline = MTOUCH_Sensor_RawSample_Get(button->sensor);
 10797  0002' 0A04'              	incf	Button_Baseline_Initialize@button,w
 10798  0003' 0086               	movwf	6
 10799  0004' 3001               	movlw	1	; select bank2/3
 10800  0005' 0087               	movwf	7
 10801  0006' 0801               	movf	1,w
 10802  0007' 3180' 2000' 3180'  	fcall	_MTOUCH_Sensor_RawSample_Get
 10803  000A' 0806'              	movf	?_MTOUCH_Sensor_RawSample_Get,w
 10804  000B' 0020               	movlb	0	; select bank0
 10805  000C' 0080'              	movwf	??_Button_Baseline_Initialize
 10806  000D' 0807'              	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 10807  000E' 0081'              	movwf	??_Button_Baseline_Initialize+1
 10808  000F' 0182'              	clrf	??_Button_Baseline_Initialize+2
 10809  0010' 0183'              	clrf	??_Button_Baseline_Initialize+3
 10810  0011' 0804'              	movf	Button_Baseline_Initialize@button,w
 10811  0012' 3E05               	addlw	5
 10812  0013' 0086               	movwf	6
 10813  0014' 3001               	movlw	1	; select bank2/3
 10814  0015' 0087               	movwf	7
 10815  0016' 0800'              	movf	??_Button_Baseline_Initialize,w
 10816  0017' 3FC0               	movwi [0]fsr1
 10817  0018' 0801'              	movf	??_Button_Baseline_Initialize+1,w
 10818  0019' 3FC1               	movwi [1]fsr1
 10819  001A' 0802'              	movf	??_Button_Baseline_Initialize+2,w
 10820  001B' 3FC2               	movwi [2]fsr1
 10821  001C' 0803'              	movf	??_Button_Baseline_Initialize+3,w
 10822  001D' 3FC3               	movwi [3]fsr1
 10823                           
 10824                           ;mtouch_button.c: 440: button->baseline <<= ((uint8_t)4);
 10825  001E' 0804'              	movf	Button_Baseline_Initialize@button,w
 10826  001F' 3E05               	addlw	5
 10827  0020' 0086               	movwf	6
 10828  0021' 3001               	movlw	1	; select bank2/3
 10829  0022' 0087               	movwf	7
 10830  0023' 3004               	movlw	4
 10831  0024'                    u5285:	
 10832  0024' 3581               	lslf	1,f
 10833  0025' 3141               	addfsr 1,1
 10834  0026' 0D81               	rlf	1,f
 10835  0027' 3141               	addfsr 1,1
 10836  0028' 0D81               	rlf	1,f
 10837  0029' 3141               	addfsr 1,1
 10838  002A' 0D81               	rlf	1,f
 10839  002B' 317D               	addfsr 1,-3
 10840  002C' 0B89               	decfsz	9,f
 10841  002D' 2800'              	goto	u5285
 10842  002E' 0008               	return
 10843  002F'                    __end_of_Button_Baseline_Initialize:	
 10844                           
 10845                           	psect	text69
 10846  0000'                    __ptext69:	
 10847 ;; *************** function _Button_Reading_Update *****************
 10848 ;; Defined at:
 10849 ;;		line 421 in file "mcc_generated_files/mtouch/mtouch_button.c"
 10850 ;; Parameters:    Size  Location     Type
 10851 ;;  button          1    wreg     PTR struct .
 10852 ;;		 -> mtouch_button(80), 
 10853 ;; Auto vars:     Size  Location     Type
 10854 ;;  button          1    2[BANK0 ] PTR struct .
 10855 ;;		 -> mtouch_button(80), 
 10856 ;; Return value:  Size  Location     Type
 10857 ;;                  1    wreg      void 
 10858 ;; Registers used:
 10859 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10860 ;; Tracked objects:
 10861 ;;		On entry : 0/0
 10862 ;;		On exit  : 0/0
 10863 ;;		Unchanged: 0/0
 10864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10865 ;;      Params:         0       0       0       0       0       0       0       0
 10866 ;;      Locals:         0       1       0       0       0       0       0       0
 10867 ;;      Temps:          0       2       0       0       0       0       0       0
 10868 ;;      Totals:         0       3       0       0       0       0       0       0
 10869 ;;Total ram usage:        3 bytes
 10870 ;; Hardware stack levels used:    1
 10871 ;; Hardware stack levels required when called:    4
 10872 ;; This function calls:
 10873 ;;		_MTOUCH_Sensor_RawSample_Get
 10874 ;; This function is called by:
 10875 ;;		_Button_Service
 10876 ;; This function uses a non-reentrant model
 10877 ;;
 10878                           
 10879                           
 10880                           ;psect for function _Button_Reading_Update
 10881  0000'                    _Button_Reading_Update:	
 10882                           
 10883                           ;incstack = 0
 10884                           ; Regs used in _Button_Reading_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10885                           ;Button_Reading_Update@button stored from wreg
 10886  0000' 0020               	movlb	0	; select bank0
 10887  0001' 0082'              	movwf	Button_Reading_Update@button
 10888                           
 10889                           ;mtouch_button.c: 423: if (INTCONbits.GIE == (uint8_t)1)
 10890  0002' 1F8B               	btfss	11,7	;volatile
 10891  0003' 2800'              	goto	l5425
 10892                           
 10893                           ;mtouch_button.c: 424: {
 10894                           ;mtouch_button.c: 425: INTCONbits.GIE = (uint8_t)0;
 10895  0004' 138B               	bcf	11,7	;volatile
 10896                           
 10897                           ;mtouch_button.c: 426: button->reading -= button->reading>>(uint8_t)2;
 10898  0005' 0802'              	movf	Button_Reading_Update@button,w
 10899  0006' 3E03               	addlw	3
 10900  0007' 0086               	movwf	6
 10901  0008' 3001               	movlw	1	; select bank2/3
 10902  0009' 0087               	movwf	7
 10903  000A' 3F40               	moviw [0]fsr1
 10904  000B' 0080'              	movwf	??_Button_Reading_Update
 10905  000C' 3F41               	moviw [1]fsr1
 10906  000D' 0081'              	movwf	??_Button_Reading_Update+1
 10907  000E' 3681'              	lsrf	??_Button_Reading_Update+1,f
 10908  000F' 0C80'              	rrf	??_Button_Reading_Update,f
 10909  0010' 3681'              	lsrf	??_Button_Reading_Update+1,f
 10910  0011' 0C80'              	rrf	??_Button_Reading_Update,f
 10911  0012' 0802'              	movf	Button_Reading_Update@button,w
 10912  0013' 3E03               	addlw	3
 10913  0014' 0086               	movwf	6
 10914  0015' 3001               	movlw	1	; select bank2/3
 10915  0016' 0087               	movwf	7
 10916  0017' 0800'              	movf	??_Button_Reading_Update,w
 10917  0018' 0281               	subwf	1,f
 10918  0019' 3141               	addfsr 1,1
 10919  001A' 0801'              	movf	??_Button_Reading_Update+1,w
 10920  001B' 3B81               	subwfb	1,f
 10921  001C' 317F               	addfsr 1,-1
 10922                           
 10923                           ;mtouch_button.c: 427: button->reading += MTOUCH_Sensor_RawSample_Get(button->sensor)>>(
      +                          uint8_t)2;
 10924  001D' 0A02'              	incf	Button_Reading_Update@button,w
 10925  001E' 0086               	movwf	6
 10926  001F' 3001               	movlw	1	; select bank2/3
 10927  0020' 0087               	movwf	7
 10928  0021' 0801               	movf	1,w
 10929  0022' 3180' 2000'        	fcall	_MTOUCH_Sensor_RawSample_Get
 10930  0024' 0806'              	movf	?_MTOUCH_Sensor_RawSample_Get,w
 10931  0025' 0020               	movlb	0	; select bank0
 10932  0026' 0080'              	movwf	??_Button_Reading_Update
 10933  0027' 0807'              	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 10934  0028' 0081'              	movwf	??_Button_Reading_Update+1
 10935  0029' 3681'              	lsrf	??_Button_Reading_Update+1,f
 10936  002A' 0C80'              	rrf	??_Button_Reading_Update,f
 10937  002B' 3681'              	lsrf	??_Button_Reading_Update+1,f
 10938  002C' 0C80'              	rrf	??_Button_Reading_Update,f
 10939  002D' 0802'              	movf	Button_Reading_Update@button,w
 10940  002E' 3E03               	addlw	3
 10941  002F' 0086               	movwf	6
 10942  0030' 3001               	movlw	1	; select bank2/3
 10943  0031' 0087               	movwf	7
 10944  0032' 0800'              	movf	??_Button_Reading_Update,w
 10945  0033' 0781               	addwf	1,f
 10946  0034' 3141               	addfsr 1,1
 10947  0035' 0801'              	movf	??_Button_Reading_Update+1,w
 10948  0036' 3D81               	addwfc	1,f
 10949  0037' 317F               	addfsr 1,-1
 10950                           
 10951                           ;mtouch_button.c: 428: INTCONbits.GIE = (uint8_t)1;
 10952  0038' 178B               	bsf	11,7	;volatile
 10953                           
 10954                           ;mtouch_button.c: 429: }
 10955  0039' 0008               	return
 10956  003A'                    l5425:	
 10957                           
 10958                           ;mtouch_button.c: 430: else
 10959                           ;mtouch_button.c: 431: {
 10960                           ;mtouch_button.c: 432: button->reading -= button->reading>>(uint8_t)2;
 10961  003A' 0802'              	movf	Button_Reading_Update@button,w
 10962  003B' 3E03               	addlw	3
 10963  003C' 0086               	movwf	6
 10964  003D' 3001               	movlw	1	; select bank2/3
 10965  003E' 0087               	movwf	7
 10966  003F' 3F40               	moviw [0]fsr1
 10967  0040' 0080'              	movwf	??_Button_Reading_Update
 10968  0041' 3F41               	moviw [1]fsr1
 10969  0042' 0081'              	movwf	??_Button_Reading_Update+1
 10970  0043' 3681'              	lsrf	??_Button_Reading_Update+1,f
 10971  0044' 0C80'              	rrf	??_Button_Reading_Update,f
 10972  0045' 3681'              	lsrf	??_Button_Reading_Update+1,f
 10973  0046' 0C80'              	rrf	??_Button_Reading_Update,f
 10974  0047' 0802'              	movf	Button_Reading_Update@button,w
 10975  0048' 3E03               	addlw	3
 10976  0049' 0086               	movwf	6
 10977  004A' 3001               	movlw	1	; select bank2/3
 10978  004B' 0087               	movwf	7
 10979  004C' 0800'              	movf	??_Button_Reading_Update,w
 10980  004D' 0281               	subwf	1,f
 10981  004E' 3141               	addfsr 1,1
 10982  004F' 0801'              	movf	??_Button_Reading_Update+1,w
 10983  0050' 3B81               	subwfb	1,f
 10984  0051' 317F               	addfsr 1,-1
 10985                           
 10986                           ;mtouch_button.c: 433: button->reading += MTOUCH_Sensor_RawSample_Get(button->sensor)>>(
      +                          uint8_t)2;
 10987  0052' 0A02'              	incf	Button_Reading_Update@button,w
 10988  0053' 0086               	movwf	6
 10989  0054' 3001               	movlw	1	; select bank2/3
 10990  0055' 0087               	movwf	7
 10991  0056' 0801               	movf	1,w
 10992  0057' 3180' 2000'        	fcall	_MTOUCH_Sensor_RawSample_Get
 10993  0059' 0806'              	movf	?_MTOUCH_Sensor_RawSample_Get,w
 10994  005A' 0020               	movlb	0	; select bank0
 10995  005B' 0080'              	movwf	??_Button_Reading_Update
 10996  005C' 0807'              	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 10997  005D' 0081'              	movwf	??_Button_Reading_Update+1
 10998  005E' 3681'              	lsrf	??_Button_Reading_Update+1,f
 10999  005F' 0C80'              	rrf	??_Button_Reading_Update,f
 11000  0060' 3681'              	lsrf	??_Button_Reading_Update+1,f
 11001  0061' 0C80'              	rrf	??_Button_Reading_Update,f
 11002  0062' 0802'              	movf	Button_Reading_Update@button,w
 11003  0063' 3E03               	addlw	3
 11004  0064' 0086               	movwf	6
 11005  0065' 3001               	movlw	1	; select bank2/3
 11006  0066' 0087               	movwf	7
 11007  0067' 0800'              	movf	??_Button_Reading_Update,w
 11008  0068' 0781               	addwf	1,f
 11009  0069' 3141               	addfsr 1,1
 11010  006A' 0801'              	movf	??_Button_Reading_Update+1,w
 11011  006B' 3D81               	addwfc	1,f
 11012  006C' 317F               	addfsr 1,-1
 11013  006D' 0008               	return
 11014  006E'                    __end_of_Button_Reading_Update:	
 11015                           
 11016                           	psect	text70
 11017  0000'                    __ptext70:	
 11018 ;; *************** function _MTOUCH_Sensor_RawSample_Get *****************
 11019 ;; Defined at:
 11020 ;;		line 685 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11021 ;; Parameters:    Size  Location     Type
 11022 ;;  name            1    wreg     enum E3328
 11023 ;; Auto vars:     Size  Location     Type
 11024 ;;  name            1    9[COMMON] enum E3328
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  2    6[COMMON] unsigned int 
 11027 ;; Registers used:
 11028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11034 ;;      Params:         2       0       0       0       0       0       0       0
 11035 ;;      Locals:         1       0       0       0       0       0       0       0
 11036 ;;      Temps:          1       0       0       0       0       0       0       0
 11037 ;;      Totals:         4       0       0       0       0       0       0       0
 11038 ;;Total ram usage:        4 bytes
 11039 ;; Hardware stack levels used:    1
 11040 ;; Hardware stack levels required when called:    3
 11041 ;; This function calls:
 11042 ;;		___bmul
 11043 ;; This function is called by:
 11044 ;;		_Button_Reading_Update
 11045 ;;		_Button_Baseline_Initialize
 11046 ;;		_Button_Baseline_Update
 11047 ;;		_Proximity_Reading_Update
 11048 ;;		_Proximity_Baseline_Initialize
 11049 ;; This function uses a non-reentrant model
 11050 ;;
 11051                           
 11052                           
 11053                           ;psect for function _MTOUCH_Sensor_RawSample_Get
 11054  0000'                    _MTOUCH_Sensor_RawSample_Get:	
 11055                           
 11056                           ;incstack = 0
 11057                           ; Regs used in _MTOUCH_Sensor_RawSample_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 11058                           ;MTOUCH_Sensor_RawSample_Get@name stored from wreg
 11059  0000' 0089'              	movwf	MTOUCH_Sensor_RawSample_Get@name
 11060                           
 11061                           ;mtouch_sensor.c: 687: if (name < 6)
 11062  0001' 3006               	movlw	6
 11063  0002' 0209'              	subwf	MTOUCH_Sensor_RawSample_Get@name,w
 11064  0003' 1803               	skipnc
 11065  0004' 2800'              	goto	l5249
 11066                           
 11067                           ;mtouch_sensor.c: 688: {
 11068                           ;mtouch_sensor.c: 689: return mtouch_sensor[name].rawSample;
 11069  0005' 3009               	movlw	9
 11070  0006' 0088'              	movwf	??_MTOUCH_Sensor_RawSample_Get
 11071  0007' 0808'              	movf	??_MTOUCH_Sensor_RawSample_Get,w
 11072  0008' 0082'              	movwf	___bmul@multiplicand
 11073  0009' 0809'              	movf	MTOUCH_Sensor_RawSample_Get@name,w
 11074  000A' 3180' 2000'        	fcall	___bmul
 11075  000C' 3E06               	addlw	6
 11076  000D' 3E00'              	addlw	(low (_mtouch_sensor| (0+256)))& (0+255)
 11077  000E' 0086               	movwf	6
 11078  000F' 3001               	movlw	1	; select bank2/3
 11079  0010' 0087               	movwf	7
 11080  0011' 3F40               	moviw [0]fsr1
 11081  0012' 0086'              	movwf	?_MTOUCH_Sensor_RawSample_Get
 11082  0013' 3F41               	moviw [1]fsr1
 11083  0014' 0087'              	movwf	?_MTOUCH_Sensor_RawSample_Get+1
 11084                           
 11085                           ;mtouch_sensor.c: 690: }
 11086  0015' 0008               	return
 11087  0016'                    l5249:	
 11088                           
 11089                           ;mtouch_sensor.c: 691: else
 11090                           ;mtouch_sensor.c: 692: return (mtouch_sensor_sample_t)0;
 11091  0016' 0186'              	clrf	?_MTOUCH_Sensor_RawSample_Get
 11092  0017' 0187'              	clrf	?_MTOUCH_Sensor_RawSample_Get+1
 11093  0018' 0008               	return
 11094  0019'                    __end_of_MTOUCH_Sensor_RawSample_Get:	
 11095                           
 11096                           	psect	text71
 11097  0000'                    __ptext71:	
 11098 ;; *************** function ___bmul *****************
 11099 ;; Defined at:
 11100 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul8.c"
 11101 ;; Parameters:    Size  Location     Type
 11102 ;;  multiplier      1    wreg     unsigned char 
 11103 ;;  multiplicand    1    2[COMMON] unsigned char 
 11104 ;; Auto vars:     Size  Location     Type
 11105 ;;  multiplier      1    5[COMMON] unsigned char 
 11106 ;;  product         1    4[COMMON] unsigned char 
 11107 ;; Return value:  Size  Location     Type
 11108 ;;                  1    wreg      unsigned char 
 11109 ;; Registers used:
 11110 ;;		wreg, status,2, status,0
 11111 ;; Tracked objects:
 11112 ;;		On entry : 0/0
 11113 ;;		On exit  : 0/0
 11114 ;;		Unchanged: 0/0
 11115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11116 ;;      Params:         1       0       0       0       0       0       0       0
 11117 ;;      Locals:         2       0       0       0       0       0       0       0
 11118 ;;      Temps:          1       0       0       0       0       0       0       0
 11119 ;;      Totals:         4       0       0       0       0       0       0       0
 11120 ;;Total ram usage:        4 bytes
 11121 ;; Hardware stack levels used:    1
 11122 ;; Hardware stack levels required when called:    2
 11123 ;; This function calls:
 11124 ;;		Nothing
 11125 ;; This function is called by:
 11126 ;;		_MTOUCH_Sensor_RawSample_Get
 11127 ;;		_MTOUCH_Sensor_Calibrate
 11128 ;;		_MTOUCH_Sensor_isCalibrated
 11129 ;;		_MTOUCH_Sensor_wasSampled
 11130 ;;		_MTOUCH_Sensor_Initialize
 11131 ;;		_MTOUCH_Sensor_Disable
 11132 ;;		_MTOUCH_Sensor_Enable
 11133 ;;		_MTOUCH_Sensor_isEnabled
 11134 ;;		_MTOUCH_Sensor_isActive
 11135 ;;		_MTOUCH_Sensor_AdditionalCap_Get
 11136 ;;		_MTOUCH_Sensor_AcquisitionTime_Get
 11137 ;;		_MTOUCH_Sensor_PreChargeTime_Get
 11138 ;; This function uses a non-reentrant model
 11139 ;;
 11140                           
 11141                           
 11142                           ;psect for function ___bmul
 11143  0000'                    ___bmul:	
 11144                           
 11145                           ;incstack = 0
 11146                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 11147                           ;___bmul@multiplier stored from wreg
 11148  0000' 0085'              	movwf	___bmul@multiplier
 11149  0001' 0184'              	clrf	___bmul@product
 11150  0002'                    l5051:	
 11151  0002' 1C05'              	btfss	___bmul@multiplier,0
 11152  0003' 2800'              	goto	l5055
 11153  0004' 0802'              	movf	___bmul@multiplicand,w
 11154  0005' 0083'              	movwf	??___bmul
 11155  0006' 0803'              	movf	??___bmul,w
 11156  0007' 0784'              	addwf	___bmul@product,f
 11157  0008'                    l5055:	
 11158  0008' 1003               	clrc
 11159  0009' 0D82'              	rlf	___bmul@multiplicand,f
 11160  000A' 1003               	clrc
 11161  000B' 0C85'              	rrf	___bmul@multiplier,f
 11162  000C' 0805'              	movf	___bmul@multiplier,w
 11163  000D' 1D03               	btfss	3,2
 11164  000E' 2800'              	goto	l5051
 11165  000F' 0804'              	movf	___bmul@product,w
 11166  0010' 0008               	return
 11167  0011'                    __end_of___bmul:	
 11168                           
 11169                           	psect	text72
 11170  0000'                    __ptext72:	
 11171 ;; *************** function _Button_Deviation_Update *****************
 11172 ;; Defined at:
 11173 ;;		line 372 in file "mcc_generated_files/mtouch/mtouch_button.c"
 11174 ;; Parameters:    Size  Location     Type
 11175 ;;  button          1    wreg     PTR struct .
 11176 ;;		 -> mtouch_button(80), 
 11177 ;; Auto vars:     Size  Location     Type
 11178 ;;  button          1    2[COMMON] PTR struct .
 11179 ;;		 -> mtouch_button(80), 
 11180 ;;  deviation       4    3[COMMON] long 
 11181 ;; Return value:  Size  Location     Type
 11182 ;;                  1    wreg      void 
 11183 ;; Registers used:
 11184 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11185 ;; Tracked objects:
 11186 ;;		On entry : 0/0
 11187 ;;		On exit  : 0/0
 11188 ;;		Unchanged: 0/0
 11189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11190 ;;      Params:         0       0       0       0       0       0       0       0
 11191 ;;      Locals:         5       0       0       0       0       0       0       0
 11192 ;;      Temps:          0      10       0       0       0       0       0       0
 11193 ;;      Totals:         5      10       0       0       0       0       0       0
 11194 ;;Total ram usage:       15 bytes
 11195 ;; Hardware stack levels used:    1
 11196 ;; Hardware stack levels required when called:    2
 11197 ;; This function calls:
 11198 ;;		Nothing
 11199 ;; This function is called by:
 11200 ;;		_Button_Service
 11201 ;; This function uses a non-reentrant model
 11202 ;;
 11203                           
 11204                           
 11205                           ;psect for function _Button_Deviation_Update
 11206  0000'                    _Button_Deviation_Update:	
 11207                           
 11208                           ;incstack = 0
 11209                           ; Regs used in _Button_Deviation_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
 11210                           ;Button_Deviation_Update@button stored from wreg
 11211  0000' 0082'              	movwf	Button_Deviation_Update@button
 11212                           
 11213                           ;mtouch_button.c: 374: int32_t deviation;
 11214                           ;mtouch_button.c: 376: deviation = (int32_t)((int32_t)(button->reading) - (int32_t)((but
      +                          ton->baseline)>>((uint8_t)4)));
 11215  0001' 0802'              	movf	Button_Deviation_Update@button,w
 11216  0002' 3E05               	addlw	5
 11217  0003' 0086               	movwf	6
 11218  0004' 3001               	movlw	1	; select bank2/3
 11219  0005' 0087               	movwf	7
 11220  0006' 3F40               	moviw [0]fsr1
 11221  0007' 0020               	movlb	0	; select bank0
 11222  0008' 0080'              	movwf	??_Button_Deviation_Update
 11223  0009' 3F41               	moviw [1]fsr1
 11224  000A' 0081'              	movwf	??_Button_Deviation_Update+1
 11225  000B' 3F42               	moviw [2]fsr1
 11226  000C' 0082'              	movwf	??_Button_Deviation_Update+2
 11227  000D' 3F43               	moviw [3]fsr1
 11228  000E' 0083'              	movwf	??_Button_Deviation_Update+3
 11229  000F' 3004               	movlw	4
 11230  0010'                    u5465:	
 11231  0010' 3683'              	lsrf	??_Button_Deviation_Update+3,f
 11232  0011' 0C82'              	rrf	??_Button_Deviation_Update+2,f
 11233  0012' 0C81'              	rrf	??_Button_Deviation_Update+1,f
 11234  0013' 0C80'              	rrf	??_Button_Deviation_Update,f
 11235  0014' 0B89               	decfsz	9,f
 11236  0015' 2800'              	goto	u5465
 11237  0016' 0980'              	comf	??_Button_Deviation_Update,f
 11238  0017' 0981'              	comf	??_Button_Deviation_Update+1,f
 11239  0018' 0982'              	comf	??_Button_Deviation_Update+2,f
 11240  0019' 0983'              	comf	??_Button_Deviation_Update+3,f
 11241  001A' 0A80'              	incf	??_Button_Deviation_Update,f
 11242  001B' 1903               	skipnz
 11243  001C' 0A81'              	incf	??_Button_Deviation_Update+1,f
 11244  001D' 1903               	skipnz
 11245  001E' 0A82'              	incf	??_Button_Deviation_Update+2,f
 11246  001F' 1903               	skipnz
 11247  0020' 0A83'              	incf	??_Button_Deviation_Update+3,f
 11248  0021' 0802'              	movf	Button_Deviation_Update@button,w
 11249  0022' 3E03               	addlw	3
 11250  0023' 0086               	movwf	6
 11251  0024' 3001               	movlw	1	; select bank2/3
 11252  0025' 0087               	movwf	7
 11253  0026' 3F40               	moviw [0]fsr1
 11254  0027' 0084'              	movwf	??_Button_Deviation_Update+4
 11255  0028' 3F41               	moviw [1]fsr1
 11256  0029' 0085'              	movwf	??_Button_Deviation_Update+5
 11257  002A' 0804'              	movf	??_Button_Deviation_Update+4,w
 11258  002B' 0086'              	movwf	??_Button_Deviation_Update+6
 11259  002C' 0805'              	movf	??_Button_Deviation_Update+5,w
 11260  002D' 0087'              	movwf	??_Button_Deviation_Update+7
 11261  002E' 0188'              	clrf	??_Button_Deviation_Update+8
 11262  002F' 0189'              	clrf	??_Button_Deviation_Update+9
 11263  0030' 0806'              	movf	??_Button_Deviation_Update+6,w
 11264  0031' 0780'              	addwf	??_Button_Deviation_Update,f
 11265  0032' 0807'              	movf	??_Button_Deviation_Update+7,w
 11266  0033' 3D81'              	addwfc	??_Button_Deviation_Update+1,f
 11267  0034' 0808'              	movf	??_Button_Deviation_Update+8,w
 11268  0035' 3D82'              	addwfc	??_Button_Deviation_Update+2,f
 11269  0036' 0809'              	movf	??_Button_Deviation_Update+9,w
 11270  0037' 3D83'              	addwfc	??_Button_Deviation_Update+3,f
 11271  0038' 0803'              	movf	??_Button_Deviation_Update+3,w
 11272  0039' 0086'              	movwf	Button_Deviation_Update@deviation+3
 11273  003A' 0802'              	movf	??_Button_Deviation_Update+2,w
 11274  003B' 0085'              	movwf	Button_Deviation_Update@deviation+2
 11275  003C' 0801'              	movf	??_Button_Deviation_Update+1,w
 11276  003D' 0084'              	movwf	Button_Deviation_Update@deviation+1
 11277  003E' 0800'              	movf	??_Button_Deviation_Update,w
 11278  003F' 0083'              	movwf	Button_Deviation_Update@deviation
 11279                           
 11280                           ;mtouch_button.c: 379: deviation = deviation >> (button->scaling);
 11281  0040' 0803'              	movf	Button_Deviation_Update@deviation,w
 11282  0041' 0080'              	movwf	??_Button_Deviation_Update
 11283  0042' 0804'              	movf	Button_Deviation_Update@deviation+1,w
 11284  0043' 0081'              	movwf	??_Button_Deviation_Update+1
 11285  0044' 0805'              	movf	Button_Deviation_Update@deviation+2,w
 11286  0045' 0082'              	movwf	??_Button_Deviation_Update+2
 11287  0046' 0806'              	movf	Button_Deviation_Update@deviation+3,w
 11288  0047' 0083'              	movwf	??_Button_Deviation_Update+3
 11289  0048' 0802'              	movf	Button_Deviation_Update@button,w
 11290  0049' 3E0F               	addlw	15
 11291  004A' 0086               	movwf	6
 11292  004B' 3001               	movlw	1	; select bank2/3
 11293  004C' 0087               	movwf	7
 11294  004D' 0A01               	incf	1,w
 11295  004E' 2800'              	goto	u5470
 11296  004F'                    u5475:	
 11297  004F' 3783'              	asrf	??_Button_Deviation_Update+3,f
 11298  0050' 0C82'              	rrf	??_Button_Deviation_Update+2,f
 11299  0051' 0C81'              	rrf	??_Button_Deviation_Update+1,f
 11300  0052' 0C80'              	rrf	??_Button_Deviation_Update,f
 11301  0053'                    u5470:	
 11302  0053' 0B89               	decfsz	9,f
 11303  0054' 2800'              	goto	u5475
 11304  0055' 0803'              	movf	??_Button_Deviation_Update+3,w
 11305  0056' 0086'              	movwf	Button_Deviation_Update@deviation+3
 11306  0057' 0802'              	movf	??_Button_Deviation_Update+2,w
 11307  0058' 0085'              	movwf	Button_Deviation_Update@deviation+2
 11308  0059' 0801'              	movf	??_Button_Deviation_Update+1,w
 11309  005A' 0084'              	movwf	Button_Deviation_Update@deviation+1
 11310  005B' 0800'              	movf	??_Button_Deviation_Update,w
 11311  005C' 0083'              	movwf	Button_Deviation_Update@deviation
 11312                           
 11313                           ;mtouch_button.c: 382: if (deviation > (mtouch_button_deviation_t)((127)))
 11314  005D' 1B86'              	btfsc	Button_Deviation_Update@deviation+3,7
 11315  005E' 2800'              	goto	l5435
 11316  005F' 0806'              	movf	Button_Deviation_Update@deviation+3,w
 11317  0060' 1D03               	btfss	3,2
 11318  0061' 2800'              	goto	l5433
 11319  0062' 0805'              	movf	Button_Deviation_Update@deviation+2,w
 11320  0063' 1D03               	btfss	3,2
 11321  0064' 2800'              	goto	l5433
 11322  0065' 0804'              	movf	Button_Deviation_Update@deviation+1,w
 11323  0066' 1D03               	btfss	3,2
 11324  0067' 2800'              	goto	l5433
 11325  0068' 3080               	movlw	128
 11326  0069' 0203'              	subwf	Button_Deviation_Update@deviation,w
 11327  006A' 1C03               	btfss	3,0
 11328  006B' 2800'              	goto	l5435
 11329  006C'                    l5433:	
 11330                           
 11331                           ;mtouch_button.c: 383: {
 11332                           ;mtouch_button.c: 384: deviation = (mtouch_button_deviation_t)((127));
 11333  006C' 3000               	movlw	0
 11334  006D' 0086'              	movwf	Button_Deviation_Update@deviation+3
 11335  006E' 3000               	movlw	0
 11336  006F' 0085'              	movwf	Button_Deviation_Update@deviation+2
 11337  0070' 3000               	movlw	0
 11338  0071' 0084'              	movwf	Button_Deviation_Update@deviation+1
 11339  0072' 307F               	movlw	127
 11340  0073' 0083'              	movwf	Button_Deviation_Update@deviation
 11341  0074'                    l5435:	
 11342                           
 11343                           ;mtouch_button.c: 385: }
 11344                           ;mtouch_button.c: 386: if (deviation < (mtouch_button_deviation_t)((-128)))
 11345  0074' 1F86'              	btfss	Button_Deviation_Update@deviation+3,7
 11346  0075' 2800'              	goto	l5439
 11347  0076' 3080               	movlw	128
 11348  0077' 0203'              	subwf	Button_Deviation_Update@deviation,w
 11349  0078' 30FF               	movlw	255
 11350  0079' 3B04'              	subwfb	Button_Deviation_Update@deviation+1,w
 11351  007A' 30FF               	movlw	255
 11352  007B' 3B05'              	subwfb	Button_Deviation_Update@deviation+2,w
 11353  007C' 30FF               	movlw	255
 11354  007D' 3B06'              	subwfb	Button_Deviation_Update@deviation+3,w
 11355  007E' 1803               	btfsc	3,0
 11356  007F' 2800'              	goto	l5439
 11357                           
 11358                           ;mtouch_button.c: 387: {
 11359                           ;mtouch_button.c: 388: deviation = (mtouch_button_deviation_t)((-128));
 11360  0080' 30FF               	movlw	255
 11361  0081' 0086'              	movwf	Button_Deviation_Update@deviation+3
 11362  0082' 30FF               	movlw	255
 11363  0083' 0085'              	movwf	Button_Deviation_Update@deviation+2
 11364  0084' 30FF               	movlw	255
 11365  0085' 0084'              	movwf	Button_Deviation_Update@deviation+1
 11366  0086' 3080               	movlw	128
 11367  0087' 0083'              	movwf	Button_Deviation_Update@deviation
 11368  0088'                    l5439:	
 11369                           
 11370                           ;mtouch_button.c: 389: }
 11371                           ;mtouch_button.c: 391: button->deviation = (mtouch_button_deviation_t)deviation;
 11372  0088' 0803'              	movf	Button_Deviation_Update@deviation,w
 11373  0089' 0080'              	movwf	??_Button_Deviation_Update
 11374  008A' 0802'              	movf	Button_Deviation_Update@button,w
 11375  008B' 3E09               	addlw	9
 11376  008C' 0086               	movwf	6
 11377  008D' 3001               	movlw	1	; select bank2/3
 11378  008E' 0087               	movwf	7
 11379  008F' 0800'              	movf	??_Button_Deviation_Update,w
 11380  0090' 0081               	movwf	1
 11381  0091' 0008               	return
 11382  0092'                    __end_of_Button_Deviation_Update:	
 11383                           
 11384                           	psect	text73
 11385  0000'                    __ptext73:	
 11386 ;; *************** function _MTOUCH_Proximity_SetNotActivatedCallback *****************
 11387 ;; Defined at:
 11388 ;;		line 425 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
 11389 ;; Parameters:    Size  Location     Type
 11390 ;;  callback        2    2[COMMON] PTR FTN(enum E3283,)void
 11391 ;;		 -> processProximityNotActivate(1), 
 11392 ;; Auto vars:     Size  Location     Type
 11393 ;;		None
 11394 ;; Return value:  Size  Location     Type
 11395 ;;                  1    wreg      void 
 11396 ;; Registers used:
 11397 ;;		wreg
 11398 ;; Tracked objects:
 11399 ;;		On entry : 0/0
 11400 ;;		On exit  : 0/0
 11401 ;;		Unchanged: 0/0
 11402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11403 ;;      Params:         2       0       0       0       0       0       0       0
 11404 ;;      Locals:         0       0       0       0       0       0       0       0
 11405 ;;      Temps:          0       0       0       0       0       0       0       0
 11406 ;;      Totals:         2       0       0       0       0       0       0       0
 11407 ;;Total ram usage:        2 bytes
 11408 ;; Hardware stack levels used:    1
 11409 ;; Hardware stack levels required when called:    2
 11410 ;; This function calls:
 11411 ;;		Nothing
 11412 ;; This function is called by:
 11413 ;;		_main
 11414 ;; This function uses a non-reentrant model
 11415 ;;
 11416                           
 11417                           
 11418                           ;psect for function _MTOUCH_Proximity_SetNotActivatedCallback
 11419  0000'                    _MTOUCH_Proximity_SetNotActivatedCallback:	
 11420                           
 11421                           ;mtouch_proximity.c: 427: callback_notActivated = callback;
 11422                           
 11423                           ;incstack = 0
 11424                           ; Regs used in _MTOUCH_Proximity_SetNotActivatedCallback: [wreg]
 11425  0000' 0803'              	movf	MTOUCH_Proximity_SetNotActivatedCallback@callback+1,w
 11426  0001' 0020               	movlb	0	; select bank0
 11427  0002' 008D'              	movwf	_callback_notActivated+1
 11428  0003' 0802'              	movf	MTOUCH_Proximity_SetNotActivatedCallback@callback,w
 11429  0004' 008C'              	movwf	_callback_notActivated
 11430  0005' 0008               	return
 11431  0006'                    __end_of_MTOUCH_Proximity_SetNotActivatedCallback:	
 11432                           
 11433                           	psect	text74
 11434  0000'                    __ptext74:	
 11435 ;; *************** function _MTOUCH_Proximity_SetActivatedCallback *****************
 11436 ;; Defined at:
 11437 ;;		line 421 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
 11438 ;; Parameters:    Size  Location     Type
 11439 ;;  callback        2    2[COMMON] PTR FTN(enum E3283,)void
 11440 ;;		 -> processProximityActivate(1), 
 11441 ;; Auto vars:     Size  Location     Type
 11442 ;;		None
 11443 ;; Return value:  Size  Location     Type
 11444 ;;                  1    wreg      void 
 11445 ;; Registers used:
 11446 ;;		wreg
 11447 ;; Tracked objects:
 11448 ;;		On entry : 0/0
 11449 ;;		On exit  : 0/0
 11450 ;;		Unchanged: 0/0
 11451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11452 ;;      Params:         2       0       0       0       0       0       0       0
 11453 ;;      Locals:         0       0       0       0       0       0       0       0
 11454 ;;      Temps:          0       0       0       0       0       0       0       0
 11455 ;;      Totals:         2       0       0       0       0       0       0       0
 11456 ;;Total ram usage:        2 bytes
 11457 ;; Hardware stack levels used:    1
 11458 ;; Hardware stack levels required when called:    2
 11459 ;; This function calls:
 11460 ;;		Nothing
 11461 ;; This function is called by:
 11462 ;;		_main
 11463 ;; This function uses a non-reentrant model
 11464 ;;
 11465                           
 11466                           
 11467                           ;psect for function _MTOUCH_Proximity_SetActivatedCallback
 11468  0000'                    _MTOUCH_Proximity_SetActivatedCallback:	
 11469                           
 11470                           ;mtouch_proximity.c: 423: callback_activated = callback;
 11471                           
 11472                           ;incstack = 0
 11473                           ; Regs used in _MTOUCH_Proximity_SetActivatedCallback: [wreg]
 11474  0000' 0803'              	movf	MTOUCH_Proximity_SetActivatedCallback@callback+1,w
 11475  0001' 0020               	movlb	0	; select bank0
 11476  0002' 008F'              	movwf	_callback_activated+1
 11477  0003' 0802'              	movf	MTOUCH_Proximity_SetActivatedCallback@callback,w
 11478  0004' 008E'              	movwf	_callback_activated
 11479  0005' 0008               	return
 11480  0006'                    __end_of_MTOUCH_Proximity_SetActivatedCallback:	
 11481                           
 11482                           	psect	text75
 11483  0000'                    __ptext75:	
 11484 ;; *************** function _MTOUCH_Button_SetPressedCallback *****************
 11485 ;; Defined at:
 11486 ;;		line 478 in file "mcc_generated_files/mtouch/mtouch_button.c"
 11487 ;; Parameters:    Size  Location     Type
 11488 ;;  callback        2    2[COMMON] PTR FTN(enum E3231,)void
 11489 ;;		 -> processButtonTouch(1), 
 11490 ;; Auto vars:     Size  Location     Type
 11491 ;;		None
 11492 ;; Return value:  Size  Location     Type
 11493 ;;                  1    wreg      void 
 11494 ;; Registers used:
 11495 ;;		wreg
 11496 ;; Tracked objects:
 11497 ;;		On entry : 0/0
 11498 ;;		On exit  : 0/0
 11499 ;;		Unchanged: 0/0
 11500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11501 ;;      Params:         2       0       0       0       0       0       0       0
 11502 ;;      Locals:         0       0       0       0       0       0       0       0
 11503 ;;      Temps:          0       0       0       0       0       0       0       0
 11504 ;;      Totals:         2       0       0       0       0       0       0       0
 11505 ;;Total ram usage:        2 bytes
 11506 ;; Hardware stack levels used:    1
 11507 ;; Hardware stack levels required when called:    2
 11508 ;; This function calls:
 11509 ;;		Nothing
 11510 ;; This function is called by:
 11511 ;;		_main
 11512 ;; This function uses a non-reentrant model
 11513 ;;
 11514                           
 11515                           
 11516                           ;psect for function _MTOUCH_Button_SetPressedCallback
 11517  0000'                    _MTOUCH_Button_SetPressedCallback:	
 11518                           
 11519                           ;mtouch_button.c: 480: callback_pressed = callback;
 11520                           
 11521                           ;incstack = 0
 11522                           ; Regs used in _MTOUCH_Button_SetPressedCallback: [wreg]
 11523  0000' 0803'              	movf	MTOUCH_Button_SetPressedCallback@callback+1,w
 11524  0001' 0020               	movlb	0	; select bank0
 11525  0002' 0093'              	movwf	_callback_pressed+1
 11526  0003' 0802'              	movf	MTOUCH_Button_SetPressedCallback@callback,w
 11527  0004' 0092'              	movwf	_callback_pressed
 11528  0005' 0008               	return
 11529  0006'                    __end_of_MTOUCH_Button_SetPressedCallback:	
 11530                           
 11531                           	psect	text76
 11532  0000'                    __ptext76:	
 11533 ;; *************** function _MTOUCH_Button_SetNotPressedCallback *****************
 11534 ;; Defined at:
 11535 ;;		line 482 in file "mcc_generated_files/mtouch/mtouch_button.c"
 11536 ;; Parameters:    Size  Location     Type
 11537 ;;  callback        2    2[COMMON] PTR FTN(enum E3231,)void
 11538 ;;		 -> processButtonRelease(1), 
 11539 ;; Auto vars:     Size  Location     Type
 11540 ;;		None
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  1    wreg      void 
 11543 ;; Registers used:
 11544 ;;		wreg
 11545 ;; Tracked objects:
 11546 ;;		On entry : 0/0
 11547 ;;		On exit  : 0/0
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11550 ;;      Params:         2       0       0       0       0       0       0       0
 11551 ;;      Locals:         0       0       0       0       0       0       0       0
 11552 ;;      Temps:          0       0       0       0       0       0       0       0
 11553 ;;      Totals:         2       0       0       0       0       0       0       0
 11554 ;;Total ram usage:        2 bytes
 11555 ;; Hardware stack levels used:    1
 11556 ;; Hardware stack levels required when called:    2
 11557 ;; This function calls:
 11558 ;;		Nothing
 11559 ;; This function is called by:
 11560 ;;		_main
 11561 ;; This function uses a non-reentrant model
 11562 ;;
 11563                           
 11564                           
 11565                           ;psect for function _MTOUCH_Button_SetNotPressedCallback
 11566  0000'                    _MTOUCH_Button_SetNotPressedCallback:	
 11567                           
 11568                           ;mtouch_button.c: 484: callback_notPressed = callback;
 11569                           
 11570                           ;incstack = 0
 11571                           ; Regs used in _MTOUCH_Button_SetNotPressedCallback: [wreg]
 11572  0000' 0803'              	movf	MTOUCH_Button_SetNotPressedCallback@callback+1,w
 11573  0001' 0020               	movlb	0	; select bank0
 11574  0002' 0091'              	movwf	_callback_notPressed+1
 11575  0003' 0802'              	movf	MTOUCH_Button_SetNotPressedCallback@callback,w
 11576  0004' 0090'              	movwf	_callback_notPressed
 11577  0005' 0008               	return
 11578  0006'                    __end_of_MTOUCH_Button_SetNotPressedCallback:	
 11579                           
 11580                           	psect	intentry
 11581  0000'                    __pintentry:	
 11582 ;; *************** function _INTERRUPT_InterruptManager *****************
 11583 ;; Defined at:
 11584 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 11585 ;; Parameters:    Size  Location     Type
 11586 ;;		None
 11587 ;; Auto vars:     Size  Location     Type
 11588 ;;		None
 11589 ;; Return value:  Size  Location     Type
 11590 ;;                  1    wreg      void 
 11591 ;; Registers used:
 11592 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11593 ;; Tracked objects:
 11594 ;;		On entry : 0/0
 11595 ;;		On exit  : 0/0
 11596 ;;		Unchanged: 0/0
 11597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11598 ;;      Params:         0       0       0       0       0       0       0       0
 11599 ;;      Locals:         0       0       0       0       0       0       0       0
 11600 ;;      Temps:          1       0       0       0       0       0       0       0
 11601 ;;      Totals:         1       0       0       0       0       0       0       0
 11602 ;;Total ram usage:        1 bytes
 11603 ;; Hardware stack levels used:    1
 11604 ;; Hardware stack levels required when called:    1
 11605 ;; This function calls:
 11606 ;;		_EUSART_Receive_ISR
 11607 ;;		_EUSART_Transmit_ISR
 11608 ;; This function is called by:
 11609 ;;		Interrupt level 1
 11610 ;; This function uses a non-reentrant model
 11611 ;;
 11612                           
 11613  0000'                    _INTERRUPT_InterruptManager:	
 11614                           
 11615                           ;incstack = 0
 11616  0000' 147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 11617                           
 11618                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 11619  0001' 3180'              	pagesel	$
 11620  0002' 0020               	movlb	0	; select bank0
 11621  0003' 087F               	movf	127,w
 11622  0004' 0081'              	movwf	??_INTERRUPT_InterruptManager
 11623                           
 11624                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.TXIE == 1 && PIR1bits.TXIF
      +                           == 1)
 11625  0005' 1F0B               	btfss	11,6	;volatile
 11626  0006' 2800'              	goto	i1l416
 11627  0007' 0021               	movlb	1	; select bank1
 11628  0008' 1E11               	btfss	17,4	;volatile
 11629  0009' 2800'              	goto	i1l416
 11630  000A' 0020               	movlb	0	; select bank0
 11631  000B' 1E11               	btfss	17,4	;volatile
 11632  000C' 2800'              	goto	i1l416
 11633                           
 11634                           ;interrupt_manager.c: 55: {
 11635                           ;interrupt_manager.c: 56: EUSART_Transmit_ISR();
 11636  000D' 3180' 2000' 3180'  	fcall	_EUSART_Transmit_ISR
 11637                           
 11638                           ;interrupt_manager.c: 57: }
 11639  0010' 2800'              	goto	i1l420
 11640  0011'                    i1l416:	
 11641                           
 11642                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits
      +                          .RCIF == 1)
 11643  0011' 1F0B               	btfss	11,6	;volatile
 11644  0012' 2800'              	goto	i1l420
 11645  0013' 0021               	movlb	1	; select bank1
 11646  0014' 1E91               	btfss	17,5	;volatile
 11647  0015' 2800'              	goto	i1l420
 11648  0016' 0020               	movlb	0	; select bank0
 11649  0017' 1E91               	btfss	17,5	;volatile
 11650  0018' 2800'              	goto	i1l420
 11651                           
 11652                           ;interrupt_manager.c: 59: {
 11653                           ;interrupt_manager.c: 60: EUSART_Receive_ISR();
 11654  0019' 3180' 2000'        	fcall	_EUSART_Receive_ISR
 11655  001B'                    i1l420:	
 11656                           ;interrupt_manager.c: 62: else
 11657                           ;interrupt_manager.c: 63: {
 11658                           
 11659                           ;interrupt_manager.c: 61: }
 11660                           
 11661  001B' 0801'              	movf	??_INTERRUPT_InterruptManager,w
 11662  001C' 0020               	movlb	0	; select bank0
 11663  001D' 00FF               	movwf	127
 11664  001E' 107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 11665  001F' 0009               	retfie
 11666  0020'                    __end_of_INTERRUPT_InterruptManager:	
 11667                           
 11668                           	psect	text78
 11669  0000'                    __ptext78:	
 11670 ;; *************** function _EUSART_Transmit_ISR *****************
 11671 ;; Defined at:
 11672 ;;		line 165 in file "mcc_generated_files/eusart.c"
 11673 ;; Parameters:    Size  Location     Type
 11674 ;;		None
 11675 ;; Auto vars:     Size  Location     Type
 11676 ;;		None
 11677 ;; Return value:  Size  Location     Type
 11678 ;;                  1    wreg      void 
 11679 ;; Registers used:
 11680 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11681 ;; Tracked objects:
 11682 ;;		On entry : 0/0
 11683 ;;		On exit  : 0/0
 11684 ;;		Unchanged: 0/0
 11685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11686 ;;      Params:         0       0       0       0       0       0       0       0
 11687 ;;      Locals:         0       0       0       0       0       0       0       0
 11688 ;;      Temps:          1       0       0       0       0       0       0       0
 11689 ;;      Totals:         1       0       0       0       0       0       0       0
 11690 ;;Total ram usage:        1 bytes
 11691 ;; Hardware stack levels used:    1
 11692 ;; This function calls:
 11693 ;;		Nothing
 11694 ;; This function is called by:
 11695 ;;		_INTERRUPT_InterruptManager
 11696 ;; This function uses a non-reentrant model
 11697 ;;
 11698                           
 11699                           
 11700                           ;psect for function _EUSART_Transmit_ISR
 11701  0000'                    _EUSART_Transmit_ISR:	
 11702                           
 11703                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 11704                           
 11705                           ;incstack = 0
 11706                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 11707  0000' 3010               	movlw	16
 11708  0001' 0020               	movlb	0	; select bank0
 11709  0002' 0200'              	subwf	_eusartTxBufferRemaining,w	;volatile
 11710  0003' 1803               	skipnc
 11711  0004' 2800'              	goto	i1l159
 11712                           
 11713                           ;eusart.c: 170: {
 11714                           ;eusart.c: 171: TXREG = eusartTxBuffer[eusartTxTail++];
 11715  0005' 0800'              	movf	_eusartTxTail,w
 11716  0006' 3E00'              	addlw	(low (_eusartTxBuffer| 0))& (0+255)
 11717  0007' 0086               	movwf	6
 11718  0008' 0187               	clrf	7
 11719  0009' 0801               	movf	1,w
 11720  000A' 0023               	movlb	3	; select bank3
 11721  000B' 009A               	movwf	26	;volatile
 11722  000C' 3001               	movlw	1
 11723  000D' 0080'              	movwf	??_EUSART_Transmit_ISR
 11724  000E' 0800'              	movf	??_EUSART_Transmit_ISR,w
 11725  000F' 0780'              	addwf	_eusartTxTail,f	;volatile
 11726                           
 11727                           ;eusart.c: 172: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 11728  0010' 3010               	movlw	16
 11729  0011' 0200'              	subwf	_eusartTxTail,w	;volatile
 11730  0012' 1803               	btfsc	3,0
 11731                           
 11732                           ;eusart.c: 173: {
 11733                           ;eusart.c: 174: eusartTxTail = 0;
 11734  0013' 0180'              	clrf	_eusartTxTail	;volatile
 11735                           
 11736                           ;eusart.c: 175: }
 11737                           ;eusart.c: 176: eusartTxBufferRemaining++;
 11738  0014' 3001               	movlw	1
 11739  0015' 0080'              	movwf	??_EUSART_Transmit_ISR
 11740  0016' 0800'              	movf	??_EUSART_Transmit_ISR,w
 11741  0017' 0020               	movlb	0	; select bank0
 11742  0018' 0780'              	addwf	_eusartTxBufferRemaining,f	;volatile
 11743                           
 11744                           ;eusart.c: 177: }
 11745  0019' 0008               	return
 11746  001A'                    i1l159:	
 11747                           
 11748                           ;eusart.c: 178: else
 11749                           ;eusart.c: 179: {
 11750                           ;eusart.c: 180: PIE1bits.TXIE = 0;
 11751  001A' 0021               	movlb	1	; select bank1
 11752  001B' 1211               	bcf	17,4	;volatile
 11753  001C' 0008               	return
 11754  001D'                    __end_of_EUSART_Transmit_ISR:	
 11755                           
 11756                           	psect	text79
 11757  0000'                    __ptext79:	
 11758 ;; *************** function _EUSART_Receive_ISR *****************
 11759 ;; Defined at:
 11760 ;;		line 184 in file "mcc_generated_files/eusart.c"
 11761 ;; Parameters:    Size  Location     Type
 11762 ;;		None
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;		None
 11765 ;; Return value:  Size  Location     Type
 11766 ;;                  1    wreg      void 
 11767 ;; Registers used:
 11768 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11769 ;; Tracked objects:
 11770 ;;		On entry : 0/0
 11771 ;;		On exit  : 0/0
 11772 ;;		Unchanged: 0/0
 11773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11774 ;;      Params:         0       0       0       0       0       0       0       0
 11775 ;;      Locals:         0       0       0       0       0       0       0       0
 11776 ;;      Temps:          1       0       0       0       0       0       0       0
 11777 ;;      Totals:         1       0       0       0       0       0       0       0
 11778 ;;Total ram usage:        1 bytes
 11779 ;; Hardware stack levels used:    1
 11780 ;; This function calls:
 11781 ;;		Nothing
 11782 ;; This function is called by:
 11783 ;;		_INTERRUPT_InterruptManager
 11784 ;; This function uses a non-reentrant model
 11785 ;;
 11786                           
 11787                           
 11788                           ;psect for function _EUSART_Receive_ISR
 11789  0000'                    _EUSART_Receive_ISR:	
 11790                           
 11791                           ;eusart.c: 187: if(1 == RCSTAbits.OERR)
 11792                           
 11793                           ;incstack = 0
 11794                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 11795  0000' 0023               	movlb	3	; select bank3
 11796  0001' 1C9D               	btfss	29,1	;volatile
 11797  0002' 2800'              	goto	i1l4177
 11798                           
 11799                           ;eusart.c: 188: {
 11800                           ;eusart.c: 191: RCSTAbits.CREN = 0;
 11801  0003' 121D               	bcf	29,4	;volatile
 11802                           
 11803                           ;eusart.c: 192: RCSTAbits.CREN = 1;
 11804  0004' 161D               	bsf	29,4	;volatile
 11805  0005'                    i1l4177:	
 11806                           
 11807                           ;eusart.c: 193: }
 11808                           ;eusart.c: 196: eusartRxBuffer[eusartRxHead++] = RCREG;
 11809  0005' 0819               	movf	25,w	;volatile
 11810  0006' 0080'              	movwf	??_EUSART_Receive_ISR
 11811  0007' 0020               	movlb	0	; select bank0
 11812  0008' 0808'              	movf	_eusartRxHead,w
 11813  0009' 3E00'              	addlw	(low (_eusartRxBuffer| 0))& (0+255)
 11814  000A' 0086               	movwf	6
 11815  000B' 0187               	clrf	7
 11816  000C' 0800'              	movf	??_EUSART_Receive_ISR,w
 11817  000D' 0081               	movwf	1
 11818  000E' 3001               	movlw	1
 11819  000F' 0080'              	movwf	??_EUSART_Receive_ISR
 11820  0010' 0800'              	movf	??_EUSART_Receive_ISR,w
 11821  0011' 0788'              	addwf	_eusartRxHead,f	;volatile
 11822                           
 11823                           ;eusart.c: 197: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 11824  0012' 3010               	movlw	16
 11825  0013' 0208'              	subwf	_eusartRxHead,w	;volatile
 11826  0014' 1803               	btfsc	3,0
 11827                           
 11828                           ;eusart.c: 198: {
 11829                           ;eusart.c: 199: eusartRxHead = 0;
 11830  0015' 0188'              	clrf	_eusartRxHead	;volatile
 11831                           
 11832                           ;eusart.c: 200: }
 11833                           ;eusart.c: 201: eusartRxCount++;
 11834  0016' 3001               	movlw	1
 11835  0017' 0080'              	movwf	??_EUSART_Receive_ISR
 11836  0018' 0800'              	movf	??_EUSART_Receive_ISR,w
 11837  0019' 0786'              	addwf	_eusartRxCount,f	;volatile
 11838  001A' 0008               	return
 11839  001B'                    __end_of_EUSART_Receive_ISR:	
 11840  007E                     btemp	set	126	;btemp
 11841  007E                     int$flags	set	126
 11842  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    109
    Data        77
    BSS         141
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     47      80
    BANK1            80      1      51
    BANK2            80      0      54
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    Button_Service$2522$0	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Proximity_Service$2527$0	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Proximity_Service$2527	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
		 -> Proximity_State_Activated(), Proximity_State_NotActivated(), Proximity_State_Initializing(), 

    Button_Service$2522	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    Proximity_StateMachine$0	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Button_StateMachine$0	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 80
		 -> mtouch_proximity_init(CODE[18]), mtouch_button_init(CODE[80]), 

    __builtin_memcpy$0	PTR void  size(2) Largest target is 80
		 -> mtouch_proximity(BANK1[18]), mtouch_button(BANK3[80]), 

    MTOUCH_Proximity_SetNotActivatedCallback@callback	PTR FTN(enum E3283,)void  size(2) Largest target is 1
		 -> processProximityNotActivate(), 

    MTOUCH_Proximity_SetActivatedCallback@callback	PTR FTN(enum E3283,)void  size(2) Largest target is 1
		 -> processProximityActivate(), 

    Proximity_Baseline_Update@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Proximity_Baseline_Initialize@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Proximity_Reading_Update@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Proximity_Tick_helper@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Proximity_State_Activated@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Proximity_State_NotActivated@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Proximity_State_Initializing@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Proximity_Service@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    MTOUCH_Proximity_Initialize@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Proximity_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
		 -> Proximity_State_Activated(), Proximity_State_NotActivated(), Proximity_State_Initializing(), 

    callback_notActivated	PTR FTN(enum E3283,)void  size(2) Largest target is 1
		 -> Proximity_DefaultCallback(), processProximityNotActivate(), 

    callback_activated	PTR FTN(enum E3283,)void  size(2) Largest target is 1
		 -> Proximity_DefaultCallback(), processProximityActivate(), 

    MTOUCH_Button_SetNotPressedCallback@callback	PTR FTN(enum E3231,)void  size(2) Largest target is 1
		 -> processButtonRelease(), 

    MTOUCH_Button_SetPressedCallback@callback	PTR FTN(enum E3231,)void  size(2) Largest target is 1
		 -> processButtonTouch(), 

    Button_Baseline_Update@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Button_Baseline_Initialize@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Button_Reading_Update@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Button_Deviation_Update@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Button_Tick_helper@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Button_State_Pressed@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Button_State_NotPressed@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Button_State_Initializing@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Button_Service@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    MTOUCH_Button_Initialize@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    callback_notPressed	PTR FTN(enum E3231,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), processButtonRelease(), 

    callback_pressed	PTR FTN(enum E3231,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), processButtonTouch(), 

    Sensor_setSampled@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_isCalibratingAcqTime@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_setCalibratAcqTime@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_setCalibrated@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_isCalibrated@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_isActive@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_setInactive@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_setActive@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_isEnabled@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_RawSample_Update@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_Scanfrequency_Evaluation@sensor_adc2	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_Scanfrequency_Evaluation@sensor_adc1	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_autoCalibration@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_Acq_ExecutePacket@sensor_adc2	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_Acq_ExecutePacket@sensor_adc1	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_postAcquisitionProcess@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_Acquisition@sensor_adc2	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_Acquisition@sensor_adc1	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_getScanGroupIndex@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_Service@sensor_adc2	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_Service@sensor_adc1	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    S516$sensor_adc2	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    sensor_scan_group.sensor_adc2	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    S516$sensor_adc1	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    sensor_scan_group.sensor_adc1	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    callback_sampled	PTR FTN(enum E3328,)void  size(2) Largest target is 1
		 -> Sensor_DefaultCallback(), 


Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_EUSART_Initialize
    _MTOUCH_Tick->_MTOUCH_Button_Tick
    _MTOUCH_Proximity_Tick->_Proximity_Tick_helper
    _MTOUCH_Button_Tick->_Button_Tick_helper
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _Sensor_RawSample_Update->_Sensor_getScanGroupIndex
    _Sensor_Acquisition->_Sensor_postAcquisitionProcess
    _Sensor_postAcquisitionProcess->_Sensor_getScanGroupIndex
    _Sensor_Acq_ExecutePacket->_Sensor_autoCalibration
    _Sensor_autoCalibration->_Sensor_getScanGroupIndex
    _Proximity_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Proximity_Reading_Update->_MTOUCH_Sensor_RawSample_Get
    _MTOUCH_Proximity_Baseline_Get->_Proximity_Baseline_Get_helper
    _Button_Service->_MTOUCH_Button_Initialize
    _MTOUCH_Sensor_wasSampled->___bmul
    _MTOUCH_Sensor_isCalibrated->___bmul
    _Button_State_Pressed->_MTOUCH_Button_Initialize
    _Button_State_NotPressed->_MTOUCH_Button_Initialize
    _MTOUCH_Button_Initialize->_MTOUCH_Sensor_Calibrate
    _MTOUCH_Sensor_Calibrate->___bmul
    _Button_Baseline_Update->_MTOUCH_Sensor_RawSample_Get
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update->_MTOUCH_Sensor_RawSample_Get
    _MTOUCH_Sensor_RawSample_Get->___bmul

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _MTOUCH_Service_Mainloop->_MTOUCH_Sensor_SampleAll
    _MTOUCH_Sensor_SampleAll->_Sensor_Service
    _Sensor_Service->_Sensor_Acquisition
    _Sensor_Acquisition->_Sensor_Scanfrequency_Evaluation
    _Sensor_Scanfrequency_Evaluation->_Sensor_Acq_ExecutePacket
    _Sensor_Acq_ExecutePacket->_Sensor_autoCalibration
    _MTOUCH_Proximity_ServiceAll->_Proximity_Service
    _Proximity_Service->_Proximity_Deviation_Update
    _Proximity_State_NotActivated->_MTOUCH_Proximity_Baseline_Get
    _Proximity_Deviation_Update->_MTOUCH_Proximity_Baseline_Get
    _MTOUCH_Proximity_Baseline_Get->_Proximity_Baseline_Get_helper
    _MTOUCH_Button_ServiceAll->_Button_Service
    _Button_Service->_Button_Deviation_Update
    _Button_Service->_Button_State_Initializing
    _Button_Service->_Button_State_NotPressed
    _Button_Service->_Button_State_Pressed
    _Button_State_NotPressed->_Button_Baseline_Update
    _Button_State_Initializing->_Button_Baseline_Update

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _MTOUCH_Service_Mainloop->_MTOUCH_Sensor_SampleAll

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   32109
_MTOUCH_Button_SetNotPressedCallback
   _MTOUCH_Button_SetPressedCallback
_MTOUCH_Proximity_SetActivatedCallba
_MTOUCH_Proximity_SetNotActivatedCal
            _MTOUCH_Service_Mainloop
                  _SYSTEM_Initialize
                     _USART_SendChar
 ---------------------------------------------------------------------------------
 (1) _USART_SendChar                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Service_Mainloop                              0     0      0   31717
           _MTOUCH_Button_ServiceAll
        _MTOUCH_Proximity_ServiceAll
            _MTOUCH_Sensor_SampleAll
     _MTOUCH_Sensor_Sampled_ResetAll
                        _MTOUCH_Tick
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Tick                                          0     0      0     310
                 _MTOUCH_Button_Tick
              _MTOUCH_Proximity_Tick
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Proximity_Tick                                0     0      0     121
              _Proximity_Tick_helper
 ---------------------------------------------------------------------------------
 (4) _Proximity_Tick_helper                                3     3      0     121
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Tick                                   2     2      0     189
                                              5 COMMON     2     2      0
                 _Button_Tick_helper
 ---------------------------------------------------------------------------------
 (4) _Button_Tick_helper                                   3     3      0     121
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Sensor_Sampled_ResetAll                       2     2      0     156
                                              3 COMMON     2     2      0
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (3) _Sensor_Sampled_Reset                                 1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Sensor_SampleAll                              2     2      0   15344
                                             46 BANK0      1     1      0
                                              0 BANK1      1     1      0
                     _Sensor_Service
 ---------------------------------------------------------------------------------
 (3) _Sensor_Service                                       9     9      0   15245
                                             37 BANK0      9     9      0
                 _Sensor_Acquisition
             _Sensor_DefaultCallback *
            _Sensor_RawSample_Update
                   _Sensor_isEnabled
                  _Sensor_setSampled
 ---------------------------------------------------------------------------------
 (4) _Sensor_setSampled                                    1     1      0     103
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Sensor_RawSample_Update                              3     3      0     530
                                              8 COMMON     1     1      0
                                              0 BANK0      2     2      0
           _Sensor_getScanGroupIndex
 ---------------------------------------------------------------------------------
 (4) _Sensor_DefaultCallback                               1     0      1     130
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _Sensor_Acquisition                                   5     4      1   13653
                                             32 BANK0      5     4      1
           _Sensor_Acq_ExecutePacket
    _Sensor_Scanfrequency_Evaluation
                    _Sensor_isActive
                _Sensor_isCalibrated
      _Sensor_postAcquisitionProcess
 ---------------------------------------------------------------------------------
 (5) _Sensor_postAcquisitionProcess                        6     6      0    1782
                                              8 COMMON     2     2      0
                                              0 BANK0      4     4      0
           _Sensor_getScanGroupIndex
                   _Sensor_isEnabled
                   _Sensor_setActive
                 _Sensor_setInactive
                                _abs
 ---------------------------------------------------------------------------------
 (6) _Sensor_setInactive                                   1     1      0      67
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Sensor_setActive                                     1     1      0      67
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_Scanfrequency_Evaluation                     12    11      1    5680
                                             20 BANK0     12    11      1
           _Sensor_Acq_ExecutePacket
 ---------------------------------------------------------------------------------
 (6) _Sensor_Acq_ExecutePacket                            16    15      1    5174
                                              4 BANK0     16    15      1
      _MTOUCH_Sensor_Scan_Initialize
             _Sensor_autoCalibration
                    _Sensor_isActive
                _Sensor_isCalibrated
        _Sensor_isCalibratingAcqTime
                   _Sensor_isEnabled
            _TMR2_LoadPeriodRegister
                    _TMR2_StartTimer
                     _TMR2_StopTimer
                                _abs
 ---------------------------------------------------------------------------------
 (7) _TMR2_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_LoadPeriodRegister                              1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Sensor_isEnabled                                     2     2      0     386
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_isCalibrated                                  1     1      0     247
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_isActive                                      1     1      0     139
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Sensor_autoCalibration                               6     6      0    1880
                                              8 COMMON     2     2      0
                                              0 BANK0      4     4      0
           _Sensor_getScanGroupIndex
        _Sensor_isCalibratingAcqTime
          _Sensor_setCalibratAcqTime
               _Sensor_setCalibrated
                                _abs
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     633
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _Sensor_setCalibrated                                 1     1      0     134
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Sensor_setCalibratAcqTime                            1     1      0     134
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Sensor_isCalibratingAcqTime                          1     1      0     139
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_getScanGroupIndex                             6     6      0     300
                                              2 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Proximity_ServiceAll                          0     0      0    6308
                  _Proximity_Service
 ---------------------------------------------------------------------------------
 (3) _Proximity_Service                                    3     3      0    6308
                                             21 BANK0      3     3      0
        _MTOUCH_Proximity_Initialize
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
         _Proximity_Deviation_Update
           _Proximity_Reading_Update
          _Proximity_State_Activated *
       _Proximity_State_Initializing *
       _Proximity_State_NotActivated *
 ---------------------------------------------------------------------------------
 (4) _Proximity_State_NotActivated                         9     8      1    1197
                                              7 BANK0      9     8      1
      _MTOUCH_Proximity_Baseline_Get
        _MTOUCH_Proximity_Initialize
       _MTOUCH_Proximity_Reading_Get
          _Proximity_Baseline_Update
          _Proximity_DefaultCallback *
           _processProximityActivate *
 ---------------------------------------------------------------------------------
 (5) _processProximityActivate                             1     0      1       0
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _Proximity_State_Initializing                         3     2      1    1269
                                              7 BANK0      3     2      1
      _Proximity_Baseline_Initialize
          _Proximity_Baseline_Update
 ---------------------------------------------------------------------------------
 (5) _Proximity_Baseline_Update                            5     5      0     260
                                              2 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (5) _Proximity_Baseline_Initialize                        5     5      0     792
                                              0 BANK0      5     5      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (4) _Proximity_State_Activated                            3     2      1     499
                                              7 BANK0      3     2      1
        _MTOUCH_Proximity_Initialize
          _Proximity_DefaultCallback *
        _processProximityNotActivate *
 ---------------------------------------------------------------------------------
 (5) _processProximityNotActivate                          1     0      1       0
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (5) _Proximity_DefaultCallback                            1     0      1     159
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Proximity_Initialize                          3     3      0     111
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _Proximity_Reading_Update                             5     5      0     937
                                              0 BANK0      5     5      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (4) _Proximity_Deviation_Update                          14    14      0     738
                                              7 BANK0     14    14      0
      _MTOUCH_Proximity_Baseline_Get
       _MTOUCH_Proximity_Reading_Get
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Proximity_Reading_Get                         6     1      5      44
                                              2 COMMON     6     1      5
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Proximity_Baseline_Get                        6     1      5      93
                                              1 BANK0      6     1      5
      _Proximity_Baseline_Get_helper
 ---------------------------------------------------------------------------------
 (6) _Proximity_Baseline_Get_helper                        9     5      4      31
                                              2 COMMON     8     4      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Button_ServiceAll                             2     2      0    9599
                                             14 BANK0      2     2      0
                     _Button_Service
 ---------------------------------------------------------------------------------
 (3) _Button_Service                                       4     4      0    9500
                                             10 BANK0      4     4      0
            _Button_Deviation_Update
              _Button_Reading_Update
          _Button_State_Initializing *
            _Button_State_NotPressed *
               _Button_State_Pressed *
           _MTOUCH_Button_Initialize
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_wasSampled                             2     2      0     622
                                              6 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_isCalibrated                           2     2      0     653
                                              6 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Button_State_Pressed                                 3     2      1    1345
                                              7 BANK0      3     2      1
             _Button_DefaultCallback *
           _MTOUCH_Button_Initialize
               _processButtonRelease *
 ---------------------------------------------------------------------------------
 (5) _processButtonRelease                                 1     0      1       0
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _Button_State_NotPressed                              3     2      1    2490
                                              7 BANK0      3     2      1
             _Button_Baseline_Update
             _Button_DefaultCallback *
           _MTOUCH_Button_Initialize
                 _processButtonTouch *
 ---------------------------------------------------------------------------------
 (5) _processButtonTouch                                   1     0      1       0
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_Initialize                             4     4      0     873
                                              8 COMMON     2     2      0
                                              0 BANK0      2     2      0
            _MTOUCH_Sensor_Calibrate
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Calibrate                              2     2      0     684
                                              6 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) _Button_DefaultCallback                               1     0      1     159
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _Button_State_Initializing                            3     2      1    2002
                                              7 BANK0      3     2      1
         _Button_Baseline_Initialize
             _Button_Baseline_Update
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Update                               7     7      0     993
                                              0 BANK0      7     7      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Initialize                           5     5      0     792
                                              0 BANK0      5     5      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (4) _Button_Reading_Update                                3     3      0     937
                                              0 BANK0      3     3      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_RawSample_Get                          4     2      2     653
                                              6 COMMON     4     2      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (7) ___bmul                                               4     3      1     591
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _Button_Deviation_Update                             15    15      0     296
                                              2 COMMON     5     5      0
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Proximity_SetNotActivatedCallback             2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Proximity_SetActivatedCallback                2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Button_SetPressedCallback                     2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Button_SetNotPressedCallback                  2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
 ---------------------------------------------------------------------------------
 (10) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EUSART_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MTOUCH_Button_SetNotPressedCallback
   _MTOUCH_Button_SetPressedCallback
   _MTOUCH_Proximity_SetActivatedCallback
   _MTOUCH_Proximity_SetNotActivatedCallback
   _MTOUCH_Service_Mainloop
     _MTOUCH_Button_ServiceAll
       _Button_Service
         _Button_Deviation_Update
         _Button_Reading_Update
           _MTOUCH_Sensor_RawSample_Get
             ___bmul
         _Button_State_Initializing *
           _Button_Baseline_Initialize
             _MTOUCH_Sensor_RawSample_Get
               ___bmul
           _Button_Baseline_Update
             _MTOUCH_Sensor_RawSample_Get
               ___bmul
         _Button_State_NotPressed *
           _Button_Baseline_Update
             _MTOUCH_Sensor_RawSample_Get
               ___bmul
           _Button_DefaultCallback *
           _MTOUCH_Button_Initialize *
             _MTOUCH_Sensor_Calibrate
               ___bmul
           _processButtonTouch *
         _Button_State_Pressed *
           _Button_DefaultCallback *
           _MTOUCH_Button_Initialize *
             _MTOUCH_Sensor_Calibrate
               ___bmul
           _processButtonRelease *
         _MTOUCH_Button_Initialize *
           _MTOUCH_Sensor_Calibrate
             ___bmul
         _MTOUCH_Sensor_isCalibrated *
           ___bmul
         _MTOUCH_Sensor_wasSampled *
           ___bmul
     _MTOUCH_Proximity_ServiceAll
       _Proximity_Service
         _MTOUCH_Proximity_Initialize
         _MTOUCH_Sensor_isCalibrated
           ___bmul
         _MTOUCH_Sensor_wasSampled
           ___bmul
         _Proximity_Deviation_Update
           _MTOUCH_Proximity_Baseline_Get
             _Proximity_Baseline_Get_helper
           _MTOUCH_Proximity_Reading_Get
         _Proximity_Reading_Update
           _MTOUCH_Sensor_RawSample_Get
             ___bmul
         _Proximity_State_Activated *
           _MTOUCH_Proximity_Initialize
           _Proximity_DefaultCallback *
           _processProximityNotActivate *
         _Proximity_State_Initializing *
           _Proximity_Baseline_Initialize
             _MTOUCH_Sensor_RawSample_Get
               ___bmul
           _Proximity_Baseline_Update
         _Proximity_State_NotActivated *
           _MTOUCH_Proximity_Baseline_Get
             _Proximity_Baseline_Get_helper
           _MTOUCH_Proximity_Initialize
           _MTOUCH_Proximity_Reading_Get
           _Proximity_Baseline_Update
           _Proximity_DefaultCallback *
           _processProximityActivate *
     _MTOUCH_Sensor_SampleAll
       _Sensor_Service
         _Sensor_Acquisition
           _Sensor_Acq_ExecutePacket
             _MTOUCH_Sensor_Scan_Initialize
             _Sensor_autoCalibration
               _Sensor_getScanGroupIndex
               _Sensor_isCalibratingAcqTime
               _Sensor_setCalibratAcqTime
               _Sensor_setCalibrated
               _abs
             _Sensor_isActive
             _Sensor_isCalibrated
             _Sensor_isCalibratingAcqTime
             _Sensor_isEnabled
             _TMR2_LoadPeriodRegister
             _TMR2_StartTimer
             _TMR2_StopTimer
             _abs
           _Sensor_Scanfrequency_Evaluation
             _Sensor_Acq_ExecutePacket
               _MTOUCH_Sensor_Scan_Initialize
               _Sensor_autoCalibration
                 _Sensor_getScanGroupIndex
                 _Sensor_isCalibratingAcqTime
                 _Sensor_setCalibratAcqTime
                 _Sensor_setCalibrated
                 _abs
               _Sensor_isActive
               _Sensor_isCalibrated
               _Sensor_isCalibratingAcqTime
               _Sensor_isEnabled
               _TMR2_LoadPeriodRegister
               _TMR2_StartTimer
               _TMR2_StopTimer
               _abs
           _Sensor_isActive
           _Sensor_isCalibrated
           _Sensor_postAcquisitionProcess
             _Sensor_getScanGroupIndex
             _Sensor_isEnabled
             _Sensor_setActive
             _Sensor_setInactive
             _abs
         _Sensor_DefaultCallback *
         _Sensor_RawSample_Update *
           _Sensor_getScanGroupIndex
         _Sensor_isEnabled *
         _Sensor_setSampled *
     _MTOUCH_Sensor_Sampled_ResetAll
       _Sensor_Sampled_Reset
     _MTOUCH_Tick
       _MTOUCH_Button_Tick
         _Button_Tick_helper
       _MTOUCH_Proximity_Tick
         _Proximity_Tick_helper
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
     _WDT_Initialize
   _USART_SendChar

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     115       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2F      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      1      33       8       63.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      36      10       67.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      50      12      100.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     115      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Tue Sep 26 22:59:42 2017

                        ?_MTOUCH_Sensor_RawSample_Get 0006                                        ___bmul@product 0004  
                                         __CFG_CP$OFF 0000                 Proximity_State_NotActivated@deviation 000C  
                             ?_Sensor_autoCalibration 0000                            __end_of_Sensor_setInactive 0008  
                            _Proximity_Reading_Update 0000                             _Sensor_setCalibratAcqTime 0000  
                                         __CFG_LVP$ON 0000                        Proximity_Deviation_Update@name 0014  
                                                 l674 013D                                                   l667 013A  
                                                 l684 01EB                                                   l669 0132  
                                                 l867 0041                                                   l879 0071  
                                                 _PR2 001B                                                   _abs 0000  
                                     _TMR2_Initialize 0000                                          __CFG_BORV$LO 0000  
                                                 wreg 0009                      ??_MTOUCH_Sensor_Sampled_ResetAll 0003  
                     ?_MTOUCH_Sensor_Sampled_ResetAll 0000                      __size_of_MTOUCH_Sensor_SampleAll 001B  
                      Sensor_getScanGroupIndex@sensor 0006                                                  ?_abs 0002  
                                                l1044 0039                                                  l1056 0098  
                                                l5011 000F                                                  l5101 0085  
                                                l5041 007F                                                  l5033 003F  
                                                l5113 00AD                                                  l5051 0002  
                                                l5035 0043                                                  l5123 00C1  
                                                l5221 0226                                                  l5133 00F8  
                                                l5301 0055                                                  l5055 0008  
                                                l5215 0212                                                  l3705 0044  
                                                l5153 012D                                                  l5145 0121  
                                                l5081 0026                                                  l5305 005D  
                                                l5331 004B                                                  l3715 0015  
                                                l5139 010B                                                  l5077 001B  
                                                l5407 0015                                                  l5503 005A  
                                                l5191 01E2                                                  l5175 0186  
                                                l5095 0072                                                  l5263 0033  
                                                l5433 006C                                                  l5249 0016  
                                                l5425 003A                                                  l5513 0082  
                                                l5505 0062                                                  l5265 0036  
                                                l5435 0074                                                  l5347 0012  
                                                l5523 0110                                                  l5531 001A  
                                                l5187 01C1                                                  l5179 01A8  
                                                l5371 0029                                                  l5363 001A  
                                                l5445 0016                                                  l5461 0036  
                                                l5509 0076                                                  l5269 004E  
                                                l5381 0051                                                  l5439 0088  
                                                l5447 001B                                                  l5519 00B3  
                                                l5295 0034                                                  l5287 0021  
                                                l5375 0039                                                  l5367 0021  
                                                l5359 000B                                                  l5553 0090  
                                                l5529 0015                                                  l5633 000F  
                                                l5467 0068                                                  l5547 0063  
                                                l5379 0049                                                  l5395 001C  
                                                l5571 0052                                                  l5563 0033  
                                                l5627 0006                                                  l5477 0028  
                                                l5493 0046                                                  l3949 0025  
                                                l5581 0073                                                  l5637 0019  
                                                l4951 0006                                                  l5583 0082  
                                                l5681 001F                                                  l4963 002E  
                                                l4957 0017                                                  l4967 0036  
                                                _LATA 010C                                                  _LATB 010D  
                                                _LATC 010E                                                  u3505 0008  
                                                u5035 0118                                                  u5205 0013  
                                                u5305 0013                                                  u5225 0048  
                                                u5315 0059                                                  u5325 0021  
                                                u5255 0043                                                  u5610 0041  
                                                u5275 0005                                                  u5285 0024  
                                                u5605 0053                                                  u5470 0053  
                                                u5615 003D                                                  u2975 0011  
                                                u5465 0010                                                  u2985 0051  
                                                u5475 004F                                                  u5655 0090  
                                                u4855 0022                                                  u4865 002C  
                                                u5595 0012                                                  u5693 0101  
                                                u5685 00BE                                                  u4885 0070  
                                                u5785 0005                                                  u4995 009C  
                      ?_Proximity_Baseline_Initialize 0000                            Button_State_Pressed@button 0007  
                                                _TMR2 001A                                     _Proximity_Service 0000  
                                                _WPUA 020C                                                  _WPUB 020D  
                   __size_of_Sensor_Acq_ExecutePacket 0235                              _Sensor_getScanGroupIndex 0000  
                           ?_Sensor_Acq_ExecutePacket 0004                                          __CFG_WRT$OFF 0000  
                                                abs@a 0002                                                  _main 0000  
                           _Proximity_Baseline_Update 0000                                                  fsr0h 0005  
                                                fsr1h 0007                                                  indf0 0000  
                                                fsr0l 0004                                                  indf1 0001  
                                                fsr1l 0006                                    ?_Proximity_Service 0000  
                                                btemp 007E                                         __CFG_BOREN$ON 0000  
                         ??_Proximity_State_Activated 0008                                                  start 0000* 
                         ?_Proximity_Deviation_Update 0000                                     ___bmul@multiplier 0005  
                                       __CFG_MCLRE$ON 0000                                   ??_Proximity_Service 0015  
                      __end_of_Sensor_autoCalibration 009A  __end_ofSensor_Scanfrequency_Evaluation@frequency_hop 0005  
        Sensor_Scanfrequency_Evaluation@frequency_hop 0000                              ?_MTOUCH_Service_Mainloop 0000  
                       __size_of_Button_State_Pressed 0058                                                 ??_abs 0004  
                         ?_Button_Baseline_Initialize 0000                                       ?_USART_SendChar 0000  
               Sensor_postAcquisitionProcess@adcIndex 0000                         ??_MTOUCH_Sensor_RawSample_Get 0008  
                       Sensor_RawSample_Update@sensor 0001                                ??_processButtonRelease 0003  
                           __size_of_Sensor_isEnabled 0011                        __size_of_OSCILLATOR_Initialize 0004  
                       __end_of_OSCILLATOR_Initialize 0004     Sensor_Scanfrequency_Evaluation@best_packet_sample 001B  
                 __end_of_Sensor_isCalibratingAcqTime 0009                           _Sensor_isCalibratingAcqTime 0000  
                                               ?_main 0000                                         __CFG_WDTE$OFF 0000  
                                               _T2CON 001C                               __size_of_Button_Service 0055  
                                               i1l420 001B                                                 i1l159 001A  
                                               i1l416 0011                               ??_Proximity_Tick_helper 0002  
                                               _RCREG 0199                                                 _RCSTA 019D  
                                               _TRISA 008C                                                 _TRISB 008D  
                                               _TRISC 008E                                                 _TXREG 019A  
                                               _TXSTA 019E                       __size_of_Button_DefaultCallback 0001  
                     __size_of_Sensor_DefaultCallback 0001                             __end_of_Proximity_Service 004C  
                             __size_of_Sensor_Service 0085                 __end_of_MTOUCH_Sensor_Scan_Initialize 0010  
              __size_of_MTOUCH_Sensor_Scan_Initialize 0010                         _MTOUCH_Sensor_Scan_Initialize 0000  
                                      _WDT_Initialize 0000                               Sensor_setSampled@sensor 0002  
                    __size_of_Button_State_NotPressed 0098                                                 pclath 000A  
                                _Sensor_Sampled_Reset 0000                                                 status 0003  
                                               wtemp0 007E                                       _TMR2_StartTimer 0000  
                    __size_of_TMR2_LoadPeriodRegister 0005                             __size_of_Sensor_setActive 0008  
                              Sensor_isEnabled@sensor 0003                                       __initialization 0000  
                                        __end_of_main 0027                                 _MTOUCH_Proximity_Tick 0000  
                                _Sensor_setCalibrated 0000                               __end_of_TMR2_Initialize 0009  
                                      __CFG_LPBOR$OFF 0000                           ?_INTERRUPT_InterruptManager 0000  
                    __end_of_MTOUCH_Button_Initialize 0037                                                ??_main 000A  
                           _Proximity_State_Activated 0000                               _MTOUCH_Sensor_Calibrate 0000  
                           Sensor_Service@sensor_adc1 002C                             Sensor_Service@sensor_adc2 002D  
                             ??_Button_Reading_Update 0000                  MTOUCH_Sensor_Sampled_ResetAll@sensor 0004  
                            ?_Button_Deviation_Update 0000                                __end_of_WDT_Initialize 0004  
                       __end_of_mtouch_proximity_init 0012                           ??_Proximity_DefaultCallback 0003  
                                        ?_MTOUCH_Tick 0000                          Button_Baseline_Update@button 0006  
                __size_of_MTOUCH_Sensor_RawSample_Get 0019                                                _APFCON 011D  
                                              _ANSELA 018C                                                _ANSELB 018D  
                                              _ANSELC 018E                                                i1l4177 0005  
                               ?_Sensor_Sampled_Reset 0000                                                _OSCCON 0099  
                                              _SPBRGH 019C                                                _SPBRGL 019B  
                                              _WDTCON 0097                                _Button_DefaultCallback 0000  
                     __end_of_MTOUCH_Service_Mainloop 0012                                        __CFG_PWRTE$OFF 0000  
                                 _Sensor_isCalibrated 0000                                _Sensor_DefaultCallback 0000  
                                       _packet_sample 0000                                      _mtouch_proximity 0020  
                                              ___bmul 0000                                 ?_Sensor_setCalibrated 0000  
                        Sensor_DefaultCallback@sensor 0002                                        __CFG_STVREN$ON 0000  
                                 _EUSART_Transmit_ISR 0000                      __end_of_MTOUCH_Button_ServiceAll 0010  
                        Sensor_autoCalibration@sensor 0009                                    _processButtonTouch 0000  
                             _MTOUCH_Sensor_SampleAll 0000                          Button_DefaultCallback@button 0002  
                                ?_Sensor_isCalibrated 0000                                       ?_WDT_Initialize 0000  
                            ?_Sensor_RawSample_Update 0000                            __end_of_Sensor_Acquisition 0054  
                             ?_Button_Baseline_Update 0000                   __size_of_Proximity_Deviation_Update 011D  
                          __size_of_Proximity_Service 004C                   Sensor_postAcquisitionProcess@sensor 0003  
                             __end_of_TMR2_StartTimer 0003                    __size_of_Sensor_setCalibratAcqTime 000F  
                                 ?_processButtonTouch 0002              __end_of_MTOUCH_Button_SetPressedCallback 0006  
           __size_of_MTOUCH_Button_SetPressedCallback 0006                    ??_MTOUCH_Button_SetPressedCallback 0004  
                   ?_MTOUCH_Button_SetPressedCallback 0002                      _MTOUCH_Button_SetPressedCallback 0000  
                            __size_of_Sensor_isActive 0009                                  ?_EUSART_Transmit_ISR 0000  
                     MTOUCH_Sensor_RawSample_Get@name 0009                            ??_processProximityActivate 0003  
                 Sensor_getScanGroupIndex@sensorGroup 0007                                     _SYSTEM_Initialize 0000  
                             __end_of__initialization 0031                   __size_of_Button_Baseline_Initialize 002F  
                     MTOUCH_Proximity_Initialize@name 0003                        ?_MTOUCH_Sensor_Scan_Initialize 0000  
                     ??_Sensor_postAcquisitionProcess 0008                       MTOUCH_Proximity_Initialize@prox 0004  
                                  ?_SYSTEM_Initialize 0000                                   _Button_StateMachine 0006  
                          __end_of_Button_Tick_helper 0027                         MTOUCH_Sensor_Calibrate@sensor 0007  
                                 ___bmul@multiplicand 0002                            ??_Proximity_Reading_Update 0000  
                           _Proximity_DefaultCallback 0000                                ?_MTOUCH_Proximity_Tick 0000  
                                      __pcstackCOMMON 0000                                          __pidataBANK0 0000  
                                        __pidataBANK2 0000           __end_of_MTOUCH_Button_SetNotPressedCallback 0006  
        __size_of_MTOUCH_Button_SetNotPressedCallback 0006                 ??_MTOUCH_Button_SetNotPressedCallback 0004  
                ?_MTOUCH_Button_SetNotPressedCallback 0002                   _MTOUCH_Button_SetNotPressedCallback 0000  
                                ??_processButtonTouch 0003                                   ??_SYSTEM_Initialize 0003  
                  __size_of_Proximity_Baseline_Update 0083                            __end_of_MTOUCH_Button_Tick 0016  
                    Proximity_State_Initializing@prox 0007                             ??_MTOUCH_Sensor_Calibrate 0006  
                                    _Sensor_isEnabled 0000                                      ?_TMR2_Initialize 0000  
                     __end_of_Button_Deviation_Update 0092                              Sensor_setInactive@sensor 0002  
                                      _Button_Service 0000                       ??_Proximity_Baseline_Get_helper 0006  
                    __end_of_Sensor_Acq_ExecutePacket 0235                            ?_Button_State_Initializing 0007  
                                Button_Service@button 000D                                        _OPTION_REGbits 0095  
                               ??_Sensor_isCalibrated 0002                            ??_Sensor_getScanGroupIndex 0002  
                       Proximity_State_Activated@prox 0007                        __end_of_Button_Baseline_Update 008F  
                 Sensor_Acq_ExecutePacket@sensor_adc1 0013                   Sensor_Acq_ExecutePacket@sensor_adc2 0004  
                        ?_processProximityNotActivate 0002                              _MTOUCH_Button_Initialize 0000  
                                      _Sensor_Service 0000                               _Button_State_NotPressed 0000  
                                  _Sensor_setInactive 0000                                     _sensor_scan_group 0000  
                           __end_of_SYSTEM_Initialize 000F                                 ??_EUSART_Transmit_ISR 0000  
                    MTOUCH_Sensor_isCalibrated@sensor 0007                                ??_Sensor_Sampled_Reset 0002  
                                          __pbssBANK0 0000                                            __pbssBANK1 0000  
                                          __pbssBANK3 0000                               _TMR2_LoadPeriodRegister 0000  
                                 ?_Sensor_setInactive 0000                                      _Sensor_setActive 0000  
                         __size_of_EUSART_Receive_ISR 001B                            __end_of_mtouch_button_init 0050  
                                    ??_USART_SendChar 0000                                ??_Sensor_setCalibrated 0002  
                                          __pmaintext 0000                                               ?___bmul 0002  
                                             _AD1CON0 0711                                               _AD1CON2 0713  
                                             _AD1CON3 0714                                               _AD2CON0 0791  
                                             _AD2CON2 0793                                               _AD2CON3 0794  
                                             _AAD1CAP 0719                                               _AAD2CAP 0799  
                                             _AAD1GRD 0718                                               _AAD2GRD 0798  
                     ??_Proximity_Baseline_Initialize 0000                        MTOUCH_Sensor_wasSampled@sensor 0007  
                                          __pintentry 0000                   Proximity_Deviation_Update@deviation 0010  
                              __end_of_Button_Service 0055                                               _BAUDCON 019F  
                                           _AD1ACQCON 0717                                             _AD2ACQCON 0797  
                        ?_MTOUCH_Proximity_Initialize 0000                             ??_MTOUCH_Sensor_SampleAll 002E  
                     __end_of_Sensor_RawSample_Update 002A                                  ??_Sensor_setInactive 0002  
                   __size_of_MTOUCH_Sensor_wasSampled 0010                             ?_MTOUCH_Sensor_wasSampled 0000  
                                       _eusartRxCount 0006                                             _AD1PRECON 0716  
                           Sensor_isCalibrated@sensor 0002                                             _AD2PRECON 0796  
                   __end_of_Button_State_Initializing 0046                                __end_of_Sensor_Service 0085  
                             Sensor_Service@scanGroup 002A                        __size_of_Proximity_Tick_helper 0023  
                            _MTOUCH_Button_ServiceAll 0000                         __end_of_Proximity_Tick_helper 0023  
                           __end_of_sensor_scan_group 0006                      __size_of_MTOUCH_Service_Mainloop 0012  
                        __end_of_Button_State_Pressed 0058                               __size_of_TMR2_StopTimer 0003  
                       ??_processProximityNotActivate 0003                                      ?_TMR2_StartTimer 0000  
                    Button_Baseline_Initialize@button 0004                       Sensor_setCalibratAcqTime@sensor 0002  
                  __size_of_Proximity_State_Activated 0050                                  __size_of_MTOUCH_Tick 0006  
                __size_of_Sensor_isCalibratingAcqTime 0009                 Sensor_Acq_ExecutePacket@ADCOMCON_temp 0007  
       __end_of_MTOUCH_Proximity_SetActivatedCallback 0006        __size_of_MTOUCH_Proximity_SetActivatedCallback 0006  
             ??_MTOUCH_Proximity_SetActivatedCallback 0004                ?_MTOUCH_Proximity_SetActivatedCallback 0002  
               _MTOUCH_Proximity_SetActivatedCallback 0000      MTOUCH_Proximity_SetNotActivatedCallback@callback 0002  
                                   ??_Sensor_isActive 0002                 __end_of_Sensor_postAcquisitionProcess 0053  
              __size_of_Sensor_postAcquisitionProcess 0053                         _Sensor_postAcquisitionProcess 0000  
                             Sensor_Acquisition@error 0023                                       __size_of___bmul 0011  
                __end_of_Proximity_State_Initializing 0041                 __size_of_Proximity_State_Initializing 0041  
                        _Proximity_State_Initializing 0000                                           _AD1CON0bits 0711  
                                         _AD1CON2bits 0713                        MTOUCH_Button_Initialize@button 0001  
                                         _AD2CON0bits 0791                                           _AD2CON2bits 0793  
                                     ?_Button_Service 0000                 __end_of_MTOUCH_Proximity_Baseline_Get 001B  
              __size_of_MTOUCH_Proximity_Baseline_Get 001B                         _MTOUCH_Proximity_Baseline_Get 0000  
                        ?_MTOUCH_Proximity_ServiceAll 0000            Sensor_Scanfrequency_Evaluation@sensor_adc1 0017  
          Sensor_Scanfrequency_Evaluation@sensor_adc2 0014                                               __ptext1 0000  
                                             __ptext2 0000                                               __ptext3 0000  
                                             __ptext4 0000                                               __ptext5 0000  
                                             __ptext6 0000                                               __ptext7 0000  
                                             __ptext8 0000                                               __ptext9 0000  
                         Button_Reading_Update@button 0002                         __size_of_processButtonRelease 0001  
                       ??_MTOUCH_Proximity_Initialize 0002                                 _OSCILLATOR_Initialize 0000  
                                           _T2CONbits 001C                                          __size_of_abs 000E  
                           ??_Button_State_NotPressed 0008                                       ?_Sensor_Service 0000  
                            ??_PIN_MANAGER_Initialize 0002                        __size_of_Button_Reading_Update 006E  
                       __end_of_Button_Reading_Update 006E                              _Sensor_Acq_ExecutePacket 0000  
                                    _callback_sampled 0014                             ??_TMR2_LoadPeriodRegister 0002  
                     Sensor_RawSample_Update@adcIndex 0000                            __size_of_SYSTEM_Initialize 000F  
                                             clrloop0 0001                      __end_of_processProximityActivate 0001  
                                    _callback_pressed 0012                                  end_of_initialization 0031  
                             ?_Button_DefaultCallback 0002                                               init_ram 0000  
                                             initloop 0001                     Proximity_Baseline_Initialize@prox 0004  
                             ?_Sensor_DefaultCallback 0002                         Sensor_Acquisition@sensor_adc1 0024  
                       Sensor_Acquisition@sensor_adc2 0020                      __size_of_Button_Deviation_Update 0092  
                                   _EUSART_Initialize 0000                          ??_MTOUCH_Sensor_isCalibrated 0006  
       MTOUCH_Proximity_SetActivatedCallback@callback 0002                                    ?_EUSART_Initialize 0000  
                           Proximity_Tick_helper@prox 0004                  __size_of_processProximityNotActivate 0001  
                 __end_of_MTOUCH_Sensor_RawSample_Get 0019                           _MTOUCH_Sensor_RawSample_Get 0000  
                                           _RCSTAbits 019D                  __end_of_Proximity_State_NotActivated 00BC  
               __size_of_Proximity_State_NotActivated 00BC                          _Proximity_State_NotActivated 0000  
                       ?_Proximity_State_Initializing 0007                                   ??_EUSART_Initialize 0002  
                                    ??_WDT_Initialize 0002                    __size_of_Proximity_DefaultCallback 0001  
                       ??_MTOUCH_Proximity_ServiceAll 000A                                Sensor_setActive@sensor 0002  
                                    __CFG_FOSC$INTOSC 0000     Sensor_Scanfrequency_Evaluation@best_sample_period 001A  
                       Button_Deviation_Update@button 0002                                             _TRISAbits 008C  
                Sensor_Acq_ExecutePacket@AD1CON2_temp 0008                                             _TRISBbits 008D  
                                           _TRISCbits 008E              MTOUCH_Button_SetPressedCallback@callback 0002  
                Sensor_Acq_ExecutePacket@AD2CON2_temp 0009                                   _callback_notPressed 0010  
                               _mtouch_proximity_init 0000                   __size_of_MTOUCH_Sensor_isCalibrated 0017  
                      __end_of_Button_DefaultCallback 0001       Sensor_Scanfrequency_Evaluation@packet_noise_Max 0018  
                    Proximity_State_NotActivated@prox 0007                              __end_of_Sensor_isEnabled 0011  
                          Sensor_setCalibrated@sensor 0002                        __end_of_Sensor_DefaultCallback 0001  
                __size_of_MTOUCH_Proximity_Initialize 0027                             __end_of_EUSART_Initialize 001B  
                            ??_Sensor_autoCalibration 0000                               ??_MTOUCH_Proximity_Tick 0005  
                    __size_of_Sensor_RawSample_Update 002A                                    _Sensor_Acquisition 0000  
                                _Button_State_Pressed 0000                                        __end_of___bmul 0011  
                                 ?_Sensor_Acquisition 0020                            ??_MTOUCH_Button_Initialize 0008  
         MTOUCH_Button_SetNotPressedCallback@callback 0002                       ??_MTOUCH_Sensor_Scan_Initialize 0002  
                      ?_Sensor_postAcquisitionProcess 0000                         ?_Proximity_State_NotActivated 0007  
                       Sensor_Acq_ExecutePacket@error 000B                                    _Button_Tick_helper 0000  
                              ?_OSCILLATOR_Initialize 0000                                   MTOUCH_Button_Tick@i 0006  
                            __end_of_Sensor_setActive 0008                      TMR2_LoadPeriodRegister@periodVal 0002  
                         ??_Button_State_Initializing 0008                        ?_MTOUCH_Proximity_Baseline_Get 0001  
                                 start_initialization 0000                               _MTOUCH_Service_Mainloop 0000  
                              _Proximity_StateMachine 0000                       __size_of_PIN_MANAGER_Initialize 001C  
                                  _MTOUCH_Button_Tick 0000                                   ?_Button_Tick_helper 0000  
                                         __end_of_abs 000E                                        _TMR2_StopTimer 0000  
                                ??_Sensor_Acquisition 0021                  __size_of_MTOUCH_Proximity_ServiceAll 0004  
                                 ?_MTOUCH_Button_Tick 0000                       Button_State_Initializing@button 0007  
                      Sensor_autoCalibration@adcIndex 0008                      __end_of_MTOUCH_Sensor_wasSampled 0010  
                                ??_Button_Tick_helper 0002                          ??_Proximity_Deviation_Update 0007  
                                        _packet_noise 0004                                              ??___bmul 0003  
                               ?_Button_State_Pressed 0007                           __size_of_processButtonTouch 0001  
                   __size_of_processProximityActivate 0001                            ??_MTOUCH_Button_ServiceAll 000E  
                                         __pdataBANK0 0000                                           __pdataBANK2 0000  
                           ?_processProximityActivate 0002                           __end_of_Sensor_isCalibrated 000A  
                        ??_Button_Baseline_Initialize 0000                                         _sample_period 0016  
                                ??_MTOUCH_Button_Tick 0005                                    _mtouch_button_init 0000  
                          Sensor_Sampled_Reset@sensor 0002                          ?_Sensor_isCalibratingAcqTime 0000  
                         __end_of_EUSART_Transmit_ISR 001D                        ??_Proximity_State_Initializing 0008  
                              __end_of_TMR2_StopTimer 0003                     __size_of_Proximity_Reading_Update 0086  
                                         __pbssCOMMON 0000                             ?_Proximity_Reading_Update 0000  
                                           ___latbits 0002                                 Proximity_Service@name 0016  
                                       __pcstackBANK0 0000                                         __pcstackBANK1 0000  
                               Proximity_Service@prox 0017                              __size_of_TMR2_Initialize 0009  
                __end_of_MTOUCH_Proximity_Reading_Get 001E                 __size_of_MTOUCH_Proximity_Reading_Get 001E  
                        _MTOUCH_Proximity_Reading_Get 0000                                       _Sensor_isActive 0000  
                      MTOUCH_Button_ServiceAll@button 000F                                   Sensor_Service@error 002B  
                          __end_of_EUSART_Receive_ISR 001B                         __size_of_Sensor_Sampled_Reset 0008  
                          __size_of_EUSART_Initialize 001B                       processProximityNotActivate@prox 0002  
                             _Button_Deviation_Update 0000                            ?_Sensor_setCalibratAcqTime 0000  
                        processProximityActivate@prox 0002                          Proximity_Reading_Update@prox 0004  
                           _Button_State_Initializing 0000                    __end_of_MTOUCH_Sensor_isCalibrated 0017  
                          _MTOUCH_Sensor_isCalibrated 0000                                             __pnvBANK0 0000  
                     __size_of_Sensor_autoCalibration 009A                     __size_of_Sensor_getScanGroupIndex 0038  
                                   _Sensor_setSampled 0000                             ?_Sensor_getScanGroupIndex 0000  
                              _PIN_MANAGER_Initialize 0000                                      ??_Button_Service 000A  
                            ?_MTOUCH_Sensor_Calibrate 0000                                    ?_Sensor_setSampled 0000  
                       __size_of_Sensor_setCalibrated 000E                                              _AAD1CON3 0714  
                                            _AAD2CON3 0794                                              _AAD1RES0 071A  
                                        _eusartRxHead 0008                                              _AAD2RES0 079A  
                                        _eusartTxHead 0001                                          _eusartRxTail 0007  
                                        _eusartTxTail 0000                                      ??_Sensor_Service 0025  
                          ??_Sensor_Acq_ExecutePacket 0005                          ??_INTERRUPT_InterruptManager 0001  
                                 ??_Sensor_setSampled 0002                             ??_MTOUCH_Service_Mainloop 000A  
                                  _callback_activated 000E                            ?_Proximity_Baseline_Update 0000  
                                            _ADCOMCON 0712                               _eusartTxBufferRemaining 0000  
                         __size_of_Sensor_setInactive 0008                        Sensor_Acq_ExecutePacket@last_a 000D  
                      Sensor_Acq_ExecutePacket@last_b 000F                                       ?_TMR2_StopTimer 0000  
                       ??_Sensor_isCalibratingAcqTime 0002                        ??_Proximity_State_NotActivated 0008  
                                       ??_MTOUCH_Tick 0007                                 _Proximity_Tick_helper 0000  
                       ?_MTOUCH_Proximity_Reading_Get 0002                                        _eusartRxBuffer 0000  
          Sensor_Acq_ExecutePacket@sensor_globalFlags 0012                          __end_of_processButtonRelease 0001  
                                      _eusartTxBuffer 0010                             __end_of_Sensor_setSampled 0008  
                             _Sensor_RawSample_Update 0000                     __end_of_Sensor_setCalibratAcqTime 000F  
                                           clear_ram0 0000                                              _PIE1bits 0091  
                            __size_of_TMR2_StartTimer 0003                   __size_of_INTERRUPT_InterruptManager 0020  
                                            _PIR1bits 0011                Sensor_Acq_ExecutePacket@packet_counter 0011  
                                            _PIR2bits 0012                                ??_Button_State_Pressed 0008  
              __end_of_MTOUCH_Sensor_Sampled_ResetAll 0013               __size_of_MTOUCH_Sensor_Sampled_ResetAll 0013  
                      _MTOUCH_Sensor_Sampled_ResetAll 0000                              ?_MTOUCH_Sensor_SampleAll 0000  
                   Proximity_Baseline_Get_helper@name 0000                    Sensor_Acq_ExecutePacket@ADxIF_flag 000A  
                            _MTOUCH_Sensor_wasSampled 0000                              ??_Button_Baseline_Update 0000  
                       Proximity_DefaultCallback@name 0002                               __end_of_Sensor_isActive 0009  
                              _Sensor_autoCalibration 0000                     __end_of_Proximity_Baseline_Update 0083  
                                            _WPUAbits 020C                                              _WPUBbits 020D  
                 __end_of_processProximityNotActivate 0001                           _processProximityNotActivate 0000  
    __end_of_MTOUCH_Proximity_SetNotActivatedCallback 0006     __size_of_MTOUCH_Proximity_SetNotActivatedCallback 0006  
          ??_MTOUCH_Proximity_SetNotActivatedCallback 0004             ?_MTOUCH_Proximity_SetNotActivatedCallback 0002  
            _MTOUCH_Proximity_SetNotActivatedCallback 0000                              Button_Tick_helper@button 0004  
                           ??_Button_Deviation_Update 0000                                 _Button_Reading_Update 0000  
                                   ?_Sensor_isEnabled 0000                                     ??_TMR2_Initialize 0002  
                                 __end_of_MTOUCH_Tick 0006                       __end_of_MTOUCH_Sensor_Calibrate 0021  
                          ?_Proximity_State_Activated 0007                                    ??_Sensor_isEnabled 0002  
                  __end_of_Proximity_Deviation_Update 011D                            _Proximity_Deviation_Update 0000  
                      __size_of_MTOUCH_Proximity_Tick 0004                         __end_of_MTOUCH_Proximity_Tick 0004  
              Sensor_postAcquisitionProcess@deviation 0001                                            _APFCONbits 011D  
                             ??_OSCILLATOR_Initialize 0002                    __end_of_Button_Baseline_Initialize 002F  
                          _Button_Baseline_Initialize 0000                   __end_of_MTOUCH_Proximity_Initialize 0027  
                         _MTOUCH_Proximity_Initialize 0000                              processButtonTouch@button 0002  
                            ?_Button_State_NotPressed 0007                      MTOUCH_Proximity_Reading_Get@name 0007  
                                          _ANSELAbits 018C                                            _ANSELBbits 018D  
                                          _ANSELCbits 018E                                    Button_Service@name 000C  
                                   ?_Sensor_setActive 0000                              ?_TMR2_LoadPeriodRegister 0000  
                               Sensor_isActive@sensor 0002                                    ??_Sensor_setActive 0002  
                              ?_Proximity_Tick_helper 0000                                              __ptext10 0000  
                                            __ptext11 0000                                              __ptext20 0000  
                                            __ptext12 0000                                              __ptext21 0000  
                                            __ptext13 0000                                              __ptext30 0000  
                                            __ptext22 0000                                              __ptext14 0000  
                                            __ptext31 0000                                              __ptext23 0000  
                                            __ptext15 0000                                              __ptext40 0000  
                                            __ptext32 0000                                              __ptext24 0000  
                                            __ptext16 0000                                              __ptext41 0000  
                                            __ptext33 0000                                              __ptext25 0000  
                                            __ptext17 0000                                              __ptext50 0000  
                                            __ptext42 0000                                              __ptext34 0000  
                                            __ptext26 0000                                              __ptext18 0000  
                                            __ptext51 0000                                              __ptext43 0000  
                                            __ptext35 0000                                              __ptext27 0000  
                                            __ptext19 0000                                              __ptext60 0000  
                                            __ptext52 0000                                              __ptext44 0000  
                                            __ptext36 0000                                              __ptext28 0000  
                                            __ptext61 0000                                              __ptext53 0000  
                                            __ptext45 0000                                              __ptext37 0000  
                                            __ptext29 0000                                              __ptext70 0000  
                                            __ptext62 0000                                              __ptext54 0000  
                                            __ptext46 0000                                              __ptext38 0000  
                                            __ptext71 0000                                              __ptext63 0000  
                                            __ptext55 0000                                              __ptext47 0000  
                                            __ptext39 0000                                              __ptext72 0000  
                                            __ptext64 0000                                              __ptext56 0000  
                                            __ptext48 0000                                              __ptext73 0000  
                                            __ptext65 0000                                              __ptext57 0000  
                                            __ptext49 0000                                              __ptext74 0000  
                                            __ptext66 0000                                              __ptext58 0000  
                                            __ptext75 0000                                              __ptext67 0000  
                                            __ptext59 0000                                              __ptext76 0000  
                                            __ptext68 0000                                              __ptext69 0000  
                                            __ptext78 0000                                              __ptext79 0000  
               __end_of_Proximity_Baseline_Get_helper 0022                __size_of_Proximity_Baseline_Get_helper 0022  
                       _Proximity_Baseline_Get_helper 0000                             ??_Sensor_RawSample_Update 0008  
                          __size_of_Sensor_setSampled 0008                                         __size_of_main 0027  
                      ??_MTOUCH_Proximity_Reading_Get 0007                       ??_MTOUCH_Proximity_Baseline_Get 000A  
                     __end_of_MTOUCH_Sensor_SampleAll 001B                      Sensor_Scanfrequency_Evaluation@i 001F  
                   __end_of_Proximity_State_Activated 0050                      __end_of_Proximity_Reading_Update 0086  
                                            int$flags 007E                   __end_of_MTOUCH_Proximity_ServiceAll 0004  
                         _MTOUCH_Proximity_ServiceAll 0000                    __size_of_Button_State_Initializing 0046  
                                   ??_TMR2_StartTimer 0002                    __end_of_INTERRUPT_InterruptManager 0020  
                          _INTERRUPT_InterruptManager 0000                       __size_of_Button_Baseline_Update 008F  
                        MTOUCH_Sensor_SampleAll@group 0000                                  _processButtonRelease 0000  
                                    ?_Sensor_isActive 0000                                         _mtouch_button 0000  
                                          _INTCONbits 000B                                         _mtouch_sensor 0000  
               __end_of_Proximity_Baseline_Initialize 002C                __size_of_Proximity_Baseline_Initialize 002C  
                       _Proximity_Baseline_Initialize 0000                            ?_Proximity_DefaultCallback 0002  
                    __end_of_Sensor_getScanGroupIndex 0038                                           _MTOUCH_Tick 0000  
                              ?_Button_Reading_Update 0000                      Button_Deviation_Update@deviation 0003  
                             __size_of_WDT_Initialize 0004                            processButtonRelease@button 0002  
                        MTOUCH_Button_Initialize@name 0000                     __size_of_MTOUCH_Button_Initialize 0037  
                                            intlevel1 0000*                            ?_MTOUCH_Button_Initialize 0000  
                         __size_of_Sensor_Acquisition 0054               __end_of_Sensor_Scanfrequency_Evaluation 006A  
            __size_of_Sensor_Scanfrequency_Evaluation 006A                     ??_Sensor_Scanfrequency_Evaluation 0015  
                    ?_Sensor_Scanfrequency_Evaluation 0014                       _Sensor_Scanfrequency_Evaluation 0000  
                             ?_PIN_MANAGER_Initialize 0000                           ??_Sensor_setCalibratAcqTime 0002  
                                   __CFG_CLKOUTEN$OFF 0000                           ?_MTOUCH_Sensor_isCalibrated 0000  
                          __end_of_processButtonTouch 0001                           __size_of_Button_Tick_helper 0027  
                     __end_of_Button_State_NotPressed 0098                                    _EUSART_Receive_ISR 0000  
                        __end_of_Sensor_Sampled_Reset 0008                                 _callback_notActivated 000C  
                                    ??_TMR2_StopTimer 0002                       __end_of_TMR2_LoadPeriodRegister 0005  
                         __size_of_MTOUCH_Button_Tick 0016                                         __pstringtext1 0000  
                                       __pstringtext2 0000                                         __pstringtext3 0000  
                                       __pstringtext4 0000                                        _USART_SendChar 0000* 
                               ?_processButtonRelease 0002                           ??_Proximity_Baseline_Update 0002  
                                 ?_EUSART_Receive_ISR 0000                              ??_Button_DefaultCallback 0003  
                Sensor_Acq_ExecutePacket@activeSensor 000C                      __size_of_MTOUCH_Sensor_Calibrate 0021  
                   Sensor_isCalibratingAcqTime@sensor 0002                          __size_of_Sensor_isCalibrated 000A  
                            ??_Sensor_DefaultCallback 0003                          __end_of_Sensor_setCalibrated 000E  
                   __end_of_Proximity_DefaultCallback 0001                     __size_of_MTOUCH_Button_ServiceAll 0010  
                           ?_MTOUCH_Button_ServiceAll 0000                         Button_State_NotPressed@button 0007  
                        __size_of_EUSART_Transmit_ISR 001D                        __end_of_PIN_MANAGER_Initialize 001C  
                              _Button_Baseline_Update 0000                     MTOUCH_Proximity_Baseline_Get@name 0006  
                                ??_EUSART_Receive_ISR 0000                            ??_MTOUCH_Sensor_wasSampled 0006  
                       Proximity_Baseline_Update@prox 0006                        ?_Proximity_Baseline_Get_helper 0002  
                            _processProximityActivate 0000  
