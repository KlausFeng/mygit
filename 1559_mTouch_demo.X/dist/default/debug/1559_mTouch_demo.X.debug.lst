

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Wed Sep 27 13:38:07 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16LF1559
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	text58,local,class=CODE,merge=1,delta=2
    82                           	psect	text59,local,class=CODE,merge=1,delta=2
    83                           	psect	text60,local,class=CODE,merge=1,delta=2
    84                           	psect	text61,local,class=CODE,merge=1,delta=2
    85                           	psect	text62,local,class=CODE,merge=1,delta=2
    86                           	psect	text63,local,class=CODE,merge=1,delta=2
    87                           	psect	text64,local,class=CODE,merge=1,delta=2
    88                           	psect	text65,local,class=CODE,merge=1,delta=2
    89                           	psect	text66,local,class=CODE,merge=1,delta=2
    90                           	psect	text67,local,class=CODE,merge=1,delta=2
    91                           	psect	text68,local,class=CODE,merge=1,delta=2
    92                           	psect	text69,local,class=CODE,merge=1,delta=2
    93                           	psect	text70,local,class=CODE,merge=1,delta=2
    94                           	psect	text71,local,class=CODE,merge=1,delta=2,group=1
    95                           	psect	text72,local,class=CODE,merge=1,delta=2
    96                           	psect	text73,local,class=CODE,merge=1,delta=2
    97                           	psect	text74,local,class=CODE,merge=1,delta=2
    98                           	psect	text75,local,class=CODE,merge=1,delta=2
    99                           	psect	text76,local,class=CODE,merge=1,delta=2
   100                           	psect	intentry,global,class=CODE,delta=2
   101                           	psect	text78,local,class=CODE,merge=1,delta=2
   102                           	psect	text79,local,class=CODE,merge=1,delta=2
   103                           	dabs	1,0x7E,2
   104  0000                     
   105                           ; Version 1.43
   106                           ; Generated 25/07/2017 GMT
   107                           ; 
   108                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   109                           ; All rights reserved.
   110                           ; 
   111                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   112                           ; 
   113                           ; Redistribution and use in source and binary forms, with or without modification, are
   114                           ; permitted provided that the following conditions are met:
   115                           ; 
   116                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   117                           ;        conditions and the following disclaimer.
   118                           ; 
   119                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   120                           ;        of conditions and the following disclaimer in the documentation and/or other
   121                           ;        materials provided with the distribution.
   122                           ; 
   123                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   124                           ;        software without specific prior written permission.
   125                           ; 
   126                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   127                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   128                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   129                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   130                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   131                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   132                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   133                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   134                           ; 
   135                           ; 
   136                           ; Code-generator required, PIC16LF1559 Definitions
   137                           ; 
   138                           ; SFR Addresses
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0095                     	;# 
   171  0096                     	;# 
   172  0097                     	;# 
   173  0099                     	;# 
   174  009A                     	;# 
   175  009B                     	;# 
   176  009B                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009E                     	;# 
   180  009F                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  0116                     	;# 
   185  0117                     	;# 
   186  011D                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189  018E                     	;# 
   190  0191                     	;# 
   191  0191                     	;# 
   192  0192                     	;# 
   193  0193                     	;# 
   194  0193                     	;# 
   195  0194                     	;# 
   196  0195                     	;# 
   197  0196                     	;# 
   198  0199                     	;# 
   199  019A                     	;# 
   200  019B                     	;# 
   201  019B                     	;# 
   202  019C                     	;# 
   203  019D                     	;# 
   204  019E                     	;# 
   205  019F                     	;# 
   206  020C                     	;# 
   207  020D                     	;# 
   208  0211                     	;# 
   209  0211                     	;# 
   210  0212                     	;# 
   211  0212                     	;# 
   212  0213                     	;# 
   213  0213                     	;# 
   214  0214                     	;# 
   215  0214                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0215                     	;# 
   219  0216                     	;# 
   220  0216                     	;# 
   221  0217                     	;# 
   222  0217                     	;# 
   223  0391                     	;# 
   224  0392                     	;# 
   225  0393                     	;# 
   226  0394                     	;# 
   227  0395                     	;# 
   228  0396                     	;# 
   229  0611                     	;# 
   230  0612                     	;# 
   231  0613                     	;# 
   232  0613                     	;# 
   233  0614                     	;# 
   234  0615                     	;# 
   235  0616                     	;# 
   236  0616                     	;# 
   237  0711                     	;# 
   238  0711                     	;# 
   239  0711                     	;# 
   240  0712                     	;# 
   241  0712                     	;# 
   242  0713                     	;# 
   243  0713                     	;# 
   244  0713                     	;# 
   245  0714                     	;# 
   246  0714                     	;# 
   247  0714                     	;# 
   248  0715                     	;# 
   249  0715                     	;# 
   250  0716                     	;# 
   251  0716                     	;# 
   252  0716                     	;# 
   253  0716                     	;# 
   254  0717                     	;# 
   255  0717                     	;# 
   256  0717                     	;# 
   257  0717                     	;# 
   258  0718                     	;# 
   259  0718                     	;# 
   260  0718                     	;# 
   261  0719                     	;# 
   262  0719                     	;# 
   263  0719                     	;# 
   264  0719                     	;# 
   265  071A                     	;# 
   266  071A                     	;# 
   267  071A                     	;# 
   268  071A                     	;# 
   269  071A                     	;# 
   270  071B                     	;# 
   271  071B                     	;# 
   272  071C                     	;# 
   273  071C                     	;# 
   274  071C                     	;# 
   275  071C                     	;# 
   276  071C                     	;# 
   277  071D                     	;# 
   278  071D                     	;# 
   279  071E                     	;# 
   280  071E                     	;# 
   281  0791                     	;# 
   282  0791                     	;# 
   283  0793                     	;# 
   284  0793                     	;# 
   285  0794                     	;# 
   286  0794                     	;# 
   287  0796                     	;# 
   288  0796                     	;# 
   289  0796                     	;# 
   290  0797                     	;# 
   291  0797                     	;# 
   292  0797                     	;# 
   293  0798                     	;# 
   294  0798                     	;# 
   295  0799                     	;# 
   296  0799                     	;# 
   297  0799                     	;# 
   298  079A                     	;# 
   299  079A                     	;# 
   300  079A                     	;# 
   301  079B                     	;# 
   302  079C                     	;# 
   303  079C                     	;# 
   304  079C                     	;# 
   305  079D                     	;# 
   306  079E                     	;# 
   307  079E                     	;# 
   308  0F8C                     	;# 
   309  0F8D                     	;# 
   310  0F91                     	;# 
   311  0F96                     	;# 
   312  0F97                     	;# 
   313  0F9C                     	;# 
   314  0F9D                     	;# 
   315  0F9E                     	;# 
   316  0FE3                     	;# 
   317  0FE4                     	;# 
   318  0FE5                     	;# 
   319  0FE6                     	;# 
   320  0FE7                     	;# 
   321  0FE8                     	;# 
   322  0FE9                     	;# 
   323  0FEA                     	;# 
   324  0FEB                     	;# 
   325  0FED                     	;# 
   326  0FEE                     	;# 
   327  0FEF                     	;# 
   328  0000                     	;# 
   329  0001                     	;# 
   330  0002                     	;# 
   331  0003                     	;# 
   332  0004                     	;# 
   333  0005                     	;# 
   334  0006                     	;# 
   335  0007                     	;# 
   336  0008                     	;# 
   337  0009                     	;# 
   338  000A                     	;# 
   339  000B                     	;# 
   340  000C                     	;# 
   341  000D                     	;# 
   342  000E                     	;# 
   343  0011                     	;# 
   344  0012                     	;# 
   345  0015                     	;# 
   346  0016                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001C                     	;# 
   354  008C                     	;# 
   355  008D                     	;# 
   356  008E                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  0116                     	;# 
   374  0117                     	;# 
   375  011D                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  018E                     	;# 
   379  0191                     	;# 
   380  0191                     	;# 
   381  0192                     	;# 
   382  0193                     	;# 
   383  0193                     	;# 
   384  0194                     	;# 
   385  0195                     	;# 
   386  0196                     	;# 
   387  0199                     	;# 
   388  019A                     	;# 
   389  019B                     	;# 
   390  019B                     	;# 
   391  019C                     	;# 
   392  019D                     	;# 
   393  019E                     	;# 
   394  019F                     	;# 
   395  020C                     	;# 
   396  020D                     	;# 
   397  0211                     	;# 
   398  0211                     	;# 
   399  0212                     	;# 
   400  0212                     	;# 
   401  0213                     	;# 
   402  0213                     	;# 
   403  0214                     	;# 
   404  0214                     	;# 
   405  0215                     	;# 
   406  0215                     	;# 
   407  0215                     	;# 
   408  0216                     	;# 
   409  0216                     	;# 
   410  0217                     	;# 
   411  0217                     	;# 
   412  0391                     	;# 
   413  0392                     	;# 
   414  0393                     	;# 
   415  0394                     	;# 
   416  0395                     	;# 
   417  0396                     	;# 
   418  0611                     	;# 
   419  0612                     	;# 
   420  0613                     	;# 
   421  0613                     	;# 
   422  0614                     	;# 
   423  0615                     	;# 
   424  0616                     	;# 
   425  0616                     	;# 
   426  0711                     	;# 
   427  0711                     	;# 
   428  0711                     	;# 
   429  0712                     	;# 
   430  0712                     	;# 
   431  0713                     	;# 
   432  0713                     	;# 
   433  0713                     	;# 
   434  0714                     	;# 
   435  0714                     	;# 
   436  0714                     	;# 
   437  0715                     	;# 
   438  0715                     	;# 
   439  0716                     	;# 
   440  0716                     	;# 
   441  0716                     	;# 
   442  0716                     	;# 
   443  0717                     	;# 
   444  0717                     	;# 
   445  0717                     	;# 
   446  0717                     	;# 
   447  0718                     	;# 
   448  0718                     	;# 
   449  0718                     	;# 
   450  0719                     	;# 
   451  0719                     	;# 
   452  0719                     	;# 
   453  0719                     	;# 
   454  071A                     	;# 
   455  071A                     	;# 
   456  071A                     	;# 
   457  071A                     	;# 
   458  071A                     	;# 
   459  071B                     	;# 
   460  071B                     	;# 
   461  071C                     	;# 
   462  071C                     	;# 
   463  071C                     	;# 
   464  071C                     	;# 
   465  071C                     	;# 
   466  071D                     	;# 
   467  071D                     	;# 
   468  071E                     	;# 
   469  071E                     	;# 
   470  0791                     	;# 
   471  0791                     	;# 
   472  0793                     	;# 
   473  0793                     	;# 
   474  0794                     	;# 
   475  0794                     	;# 
   476  0796                     	;# 
   477  0796                     	;# 
   478  0796                     	;# 
   479  0797                     	;# 
   480  0797                     	;# 
   481  0797                     	;# 
   482  0798                     	;# 
   483  0798                     	;# 
   484  0799                     	;# 
   485  0799                     	;# 
   486  0799                     	;# 
   487  079A                     	;# 
   488  079A                     	;# 
   489  079A                     	;# 
   490  079B                     	;# 
   491  079C                     	;# 
   492  079C                     	;# 
   493  079C                     	;# 
   494  079D                     	;# 
   495  079E                     	;# 
   496  079E                     	;# 
   497  0F8C                     	;# 
   498  0F8D                     	;# 
   499  0F91                     	;# 
   500  0F96                     	;# 
   501  0F97                     	;# 
   502  0F9C                     	;# 
   503  0F9D                     	;# 
   504  0F9E                     	;# 
   505  0FE3                     	;# 
   506  0FE4                     	;# 
   507  0FE5                     	;# 
   508  0FE6                     	;# 
   509  0FE7                     	;# 
   510  0FE8                     	;# 
   511  0FE9                     	;# 
   512  0FEA                     	;# 
   513  0FEB                     	;# 
   514  0FED                     	;# 
   515  0FEE                     	;# 
   516  0FEF                     	;# 
   517  0000                     	;# 
   518  0001                     	;# 
   519  0002                     	;# 
   520  0003                     	;# 
   521  0004                     	;# 
   522  0005                     	;# 
   523  0006                     	;# 
   524  0007                     	;# 
   525  0008                     	;# 
   526  0009                     	;# 
   527  000A                     	;# 
   528  000B                     	;# 
   529  000C                     	;# 
   530  000D                     	;# 
   531  000E                     	;# 
   532  0011                     	;# 
   533  0012                     	;# 
   534  0015                     	;# 
   535  0016                     	;# 
   536  0016                     	;# 
   537  0017                     	;# 
   538  0018                     	;# 
   539  0019                     	;# 
   540  001A                     	;# 
   541  001B                     	;# 
   542  001C                     	;# 
   543  008C                     	;# 
   544  008D                     	;# 
   545  008E                     	;# 
   546  0091                     	;# 
   547  0092                     	;# 
   548  0095                     	;# 
   549  0096                     	;# 
   550  0097                     	;# 
   551  0099                     	;# 
   552  009A                     	;# 
   553  009B                     	;# 
   554  009B                     	;# 
   555  009C                     	;# 
   556  009D                     	;# 
   557  009E                     	;# 
   558  009F                     	;# 
   559  010C                     	;# 
   560  010D                     	;# 
   561  010E                     	;# 
   562  0116                     	;# 
   563  0117                     	;# 
   564  011D                     	;# 
   565  018C                     	;# 
   566  018D                     	;# 
   567  018E                     	;# 
   568  0191                     	;# 
   569  0191                     	;# 
   570  0192                     	;# 
   571  0193                     	;# 
   572  0193                     	;# 
   573  0194                     	;# 
   574  0195                     	;# 
   575  0196                     	;# 
   576  0199                     	;# 
   577  019A                     	;# 
   578  019B                     	;# 
   579  019B                     	;# 
   580  019C                     	;# 
   581  019D                     	;# 
   582  019E                     	;# 
   583  019F                     	;# 
   584  020C                     	;# 
   585  020D                     	;# 
   586  0211                     	;# 
   587  0211                     	;# 
   588  0212                     	;# 
   589  0212                     	;# 
   590  0213                     	;# 
   591  0213                     	;# 
   592  0214                     	;# 
   593  0214                     	;# 
   594  0215                     	;# 
   595  0215                     	;# 
   596  0215                     	;# 
   597  0216                     	;# 
   598  0216                     	;# 
   599  0217                     	;# 
   600  0217                     	;# 
   601  0391                     	;# 
   602  0392                     	;# 
   603  0393                     	;# 
   604  0394                     	;# 
   605  0395                     	;# 
   606  0396                     	;# 
   607  0611                     	;# 
   608  0612                     	;# 
   609  0613                     	;# 
   610  0613                     	;# 
   611  0614                     	;# 
   612  0615                     	;# 
   613  0616                     	;# 
   614  0616                     	;# 
   615  0711                     	;# 
   616  0711                     	;# 
   617  0711                     	;# 
   618  0712                     	;# 
   619  0712                     	;# 
   620  0713                     	;# 
   621  0713                     	;# 
   622  0713                     	;# 
   623  0714                     	;# 
   624  0714                     	;# 
   625  0714                     	;# 
   626  0715                     	;# 
   627  0715                     	;# 
   628  0716                     	;# 
   629  0716                     	;# 
   630  0716                     	;# 
   631  0716                     	;# 
   632  0717                     	;# 
   633  0717                     	;# 
   634  0717                     	;# 
   635  0717                     	;# 
   636  0718                     	;# 
   637  0718                     	;# 
   638  0718                     	;# 
   639  0719                     	;# 
   640  0719                     	;# 
   641  0719                     	;# 
   642  0719                     	;# 
   643  071A                     	;# 
   644  071A                     	;# 
   645  071A                     	;# 
   646  071A                     	;# 
   647  071A                     	;# 
   648  071B                     	;# 
   649  071B                     	;# 
   650  071C                     	;# 
   651  071C                     	;# 
   652  071C                     	;# 
   653  071C                     	;# 
   654  071C                     	;# 
   655  071D                     	;# 
   656  071D                     	;# 
   657  071E                     	;# 
   658  071E                     	;# 
   659  0791                     	;# 
   660  0791                     	;# 
   661  0793                     	;# 
   662  0793                     	;# 
   663  0794                     	;# 
   664  0794                     	;# 
   665  0796                     	;# 
   666  0796                     	;# 
   667  0796                     	;# 
   668  0797                     	;# 
   669  0797                     	;# 
   670  0797                     	;# 
   671  0798                     	;# 
   672  0798                     	;# 
   673  0799                     	;# 
   674  0799                     	;# 
   675  0799                     	;# 
   676  079A                     	;# 
   677  079A                     	;# 
   678  079A                     	;# 
   679  079B                     	;# 
   680  079C                     	;# 
   681  079C                     	;# 
   682  079C                     	;# 
   683  079D                     	;# 
   684  079E                     	;# 
   685  079E                     	;# 
   686  0F8C                     	;# 
   687  0F8D                     	;# 
   688  0F91                     	;# 
   689  0F96                     	;# 
   690  0F97                     	;# 
   691  0F9C                     	;# 
   692  0F9D                     	;# 
   693  0F9E                     	;# 
   694  0FE3                     	;# 
   695  0FE4                     	;# 
   696  0FE5                     	;# 
   697  0FE6                     	;# 
   698  0FE7                     	;# 
   699  0FE8                     	;# 
   700  0FE9                     	;# 
   701  0FEA                     	;# 
   702  0FEB                     	;# 
   703  0FED                     	;# 
   704  0FEE                     	;# 
   705  0FEF                     	;# 
   706  0000                     	;# 
   707  0001                     	;# 
   708  0002                     	;# 
   709  0003                     	;# 
   710  0004                     	;# 
   711  0005                     	;# 
   712  0006                     	;# 
   713  0007                     	;# 
   714  0008                     	;# 
   715  0009                     	;# 
   716  000A                     	;# 
   717  000B                     	;# 
   718  000C                     	;# 
   719  000D                     	;# 
   720  000E                     	;# 
   721  0011                     	;# 
   722  0012                     	;# 
   723  0015                     	;# 
   724  0016                     	;# 
   725  0016                     	;# 
   726  0017                     	;# 
   727  0018                     	;# 
   728  0019                     	;# 
   729  001A                     	;# 
   730  001B                     	;# 
   731  001C                     	;# 
   732  008C                     	;# 
   733  008D                     	;# 
   734  008E                     	;# 
   735  0091                     	;# 
   736  0092                     	;# 
   737  0095                     	;# 
   738  0096                     	;# 
   739  0097                     	;# 
   740  0099                     	;# 
   741  009A                     	;# 
   742  009B                     	;# 
   743  009B                     	;# 
   744  009C                     	;# 
   745  009D                     	;# 
   746  009E                     	;# 
   747  009F                     	;# 
   748  010C                     	;# 
   749  010D                     	;# 
   750  010E                     	;# 
   751  0116                     	;# 
   752  0117                     	;# 
   753  011D                     	;# 
   754  018C                     	;# 
   755  018D                     	;# 
   756  018E                     	;# 
   757  0191                     	;# 
   758  0191                     	;# 
   759  0192                     	;# 
   760  0193                     	;# 
   761  0193                     	;# 
   762  0194                     	;# 
   763  0195                     	;# 
   764  0196                     	;# 
   765  0199                     	;# 
   766  019A                     	;# 
   767  019B                     	;# 
   768  019B                     	;# 
   769  019C                     	;# 
   770  019D                     	;# 
   771  019E                     	;# 
   772  019F                     	;# 
   773  020C                     	;# 
   774  020D                     	;# 
   775  0211                     	;# 
   776  0211                     	;# 
   777  0212                     	;# 
   778  0212                     	;# 
   779  0213                     	;# 
   780  0213                     	;# 
   781  0214                     	;# 
   782  0214                     	;# 
   783  0215                     	;# 
   784  0215                     	;# 
   785  0215                     	;# 
   786  0216                     	;# 
   787  0216                     	;# 
   788  0217                     	;# 
   789  0217                     	;# 
   790  0391                     	;# 
   791  0392                     	;# 
   792  0393                     	;# 
   793  0394                     	;# 
   794  0395                     	;# 
   795  0396                     	;# 
   796  0611                     	;# 
   797  0612                     	;# 
   798  0613                     	;# 
   799  0613                     	;# 
   800  0614                     	;# 
   801  0615                     	;# 
   802  0616                     	;# 
   803  0616                     	;# 
   804  0711                     	;# 
   805  0711                     	;# 
   806  0711                     	;# 
   807  0712                     	;# 
   808  0712                     	;# 
   809  0713                     	;# 
   810  0713                     	;# 
   811  0713                     	;# 
   812  0714                     	;# 
   813  0714                     	;# 
   814  0714                     	;# 
   815  0715                     	;# 
   816  0715                     	;# 
   817  0716                     	;# 
   818  0716                     	;# 
   819  0716                     	;# 
   820  0716                     	;# 
   821  0717                     	;# 
   822  0717                     	;# 
   823  0717                     	;# 
   824  0717                     	;# 
   825  0718                     	;# 
   826  0718                     	;# 
   827  0718                     	;# 
   828  0719                     	;# 
   829  0719                     	;# 
   830  0719                     	;# 
   831  0719                     	;# 
   832  071A                     	;# 
   833  071A                     	;# 
   834  071A                     	;# 
   835  071A                     	;# 
   836  071A                     	;# 
   837  071B                     	;# 
   838  071B                     	;# 
   839  071C                     	;# 
   840  071C                     	;# 
   841  071C                     	;# 
   842  071C                     	;# 
   843  071C                     	;# 
   844  071D                     	;# 
   845  071D                     	;# 
   846  071E                     	;# 
   847  071E                     	;# 
   848  0791                     	;# 
   849  0791                     	;# 
   850  0793                     	;# 
   851  0793                     	;# 
   852  0794                     	;# 
   853  0794                     	;# 
   854  0796                     	;# 
   855  0796                     	;# 
   856  0796                     	;# 
   857  0797                     	;# 
   858  0797                     	;# 
   859  0797                     	;# 
   860  0798                     	;# 
   861  0798                     	;# 
   862  0799                     	;# 
   863  0799                     	;# 
   864  0799                     	;# 
   865  079A                     	;# 
   866  079A                     	;# 
   867  079A                     	;# 
   868  079B                     	;# 
   869  079C                     	;# 
   870  079C                     	;# 
   871  079C                     	;# 
   872  079D                     	;# 
   873  079E                     	;# 
   874  079E                     	;# 
   875  0F8C                     	;# 
   876  0F8D                     	;# 
   877  0F91                     	;# 
   878  0F96                     	;# 
   879  0F97                     	;# 
   880  0F9C                     	;# 
   881  0F9D                     	;# 
   882  0F9E                     	;# 
   883  0FE3                     	;# 
   884  0FE4                     	;# 
   885  0FE5                     	;# 
   886  0FE6                     	;# 
   887  0FE7                     	;# 
   888  0FE8                     	;# 
   889  0FE9                     	;# 
   890  0FEA                     	;# 
   891  0FEB                     	;# 
   892  0FED                     	;# 
   893  0FEE                     	;# 
   894  0FEF                     	;# 
   895  0000                     	;# 
   896  0001                     	;# 
   897  0002                     	;# 
   898  0003                     	;# 
   899  0004                     	;# 
   900  0005                     	;# 
   901  0006                     	;# 
   902  0007                     	;# 
   903  0008                     	;# 
   904  0009                     	;# 
   905  000A                     	;# 
   906  000B                     	;# 
   907  000C                     	;# 
   908  000D                     	;# 
   909  000E                     	;# 
   910  0011                     	;# 
   911  0012                     	;# 
   912  0015                     	;# 
   913  0016                     	;# 
   914  0016                     	;# 
   915  0017                     	;# 
   916  0018                     	;# 
   917  0019                     	;# 
   918  001A                     	;# 
   919  001B                     	;# 
   920  001C                     	;# 
   921  008C                     	;# 
   922  008D                     	;# 
   923  008E                     	;# 
   924  0091                     	;# 
   925  0092                     	;# 
   926  0095                     	;# 
   927  0096                     	;# 
   928  0097                     	;# 
   929  0099                     	;# 
   930  009A                     	;# 
   931  009B                     	;# 
   932  009B                     	;# 
   933  009C                     	;# 
   934  009D                     	;# 
   935  009E                     	;# 
   936  009F                     	;# 
   937  010C                     	;# 
   938  010D                     	;# 
   939  010E                     	;# 
   940  0116                     	;# 
   941  0117                     	;# 
   942  011D                     	;# 
   943  018C                     	;# 
   944  018D                     	;# 
   945  018E                     	;# 
   946  0191                     	;# 
   947  0191                     	;# 
   948  0192                     	;# 
   949  0193                     	;# 
   950  0193                     	;# 
   951  0194                     	;# 
   952  0195                     	;# 
   953  0196                     	;# 
   954  0199                     	;# 
   955  019A                     	;# 
   956  019B                     	;# 
   957  019B                     	;# 
   958  019C                     	;# 
   959  019D                     	;# 
   960  019E                     	;# 
   961  019F                     	;# 
   962  020C                     	;# 
   963  020D                     	;# 
   964  0211                     	;# 
   965  0211                     	;# 
   966  0212                     	;# 
   967  0212                     	;# 
   968  0213                     	;# 
   969  0213                     	;# 
   970  0214                     	;# 
   971  0214                     	;# 
   972  0215                     	;# 
   973  0215                     	;# 
   974  0215                     	;# 
   975  0216                     	;# 
   976  0216                     	;# 
   977  0217                     	;# 
   978  0217                     	;# 
   979  0391                     	;# 
   980  0392                     	;# 
   981  0393                     	;# 
   982  0394                     	;# 
   983  0395                     	;# 
   984  0396                     	;# 
   985  0611                     	;# 
   986  0612                     	;# 
   987  0613                     	;# 
   988  0613                     	;# 
   989  0614                     	;# 
   990  0615                     	;# 
   991  0616                     	;# 
   992  0616                     	;# 
   993  0711                     	;# 
   994  0711                     	;# 
   995  0711                     	;# 
   996  0712                     	;# 
   997  0712                     	;# 
   998  0713                     	;# 
   999  0713                     	;# 
  1000  0713                     	;# 
  1001  0714                     	;# 
  1002  0714                     	;# 
  1003  0714                     	;# 
  1004  0715                     	;# 
  1005  0715                     	;# 
  1006  0716                     	;# 
  1007  0716                     	;# 
  1008  0716                     	;# 
  1009  0716                     	;# 
  1010  0717                     	;# 
  1011  0717                     	;# 
  1012  0717                     	;# 
  1013  0717                     	;# 
  1014  0718                     	;# 
  1015  0718                     	;# 
  1016  0718                     	;# 
  1017  0719                     	;# 
  1018  0719                     	;# 
  1019  0719                     	;# 
  1020  0719                     	;# 
  1021  071A                     	;# 
  1022  071A                     	;# 
  1023  071A                     	;# 
  1024  071A                     	;# 
  1025  071A                     	;# 
  1026  071B                     	;# 
  1027  071B                     	;# 
  1028  071C                     	;# 
  1029  071C                     	;# 
  1030  071C                     	;# 
  1031  071C                     	;# 
  1032  071C                     	;# 
  1033  071D                     	;# 
  1034  071D                     	;# 
  1035  071E                     	;# 
  1036  071E                     	;# 
  1037  0791                     	;# 
  1038  0791                     	;# 
  1039  0793                     	;# 
  1040  0793                     	;# 
  1041  0794                     	;# 
  1042  0794                     	;# 
  1043  0796                     	;# 
  1044  0796                     	;# 
  1045  0796                     	;# 
  1046  0797                     	;# 
  1047  0797                     	;# 
  1048  0797                     	;# 
  1049  0798                     	;# 
  1050  0798                     	;# 
  1051  0799                     	;# 
  1052  0799                     	;# 
  1053  0799                     	;# 
  1054  079A                     	;# 
  1055  079A                     	;# 
  1056  079A                     	;# 
  1057  079B                     	;# 
  1058  079C                     	;# 
  1059  079C                     	;# 
  1060  079C                     	;# 
  1061  079D                     	;# 
  1062  079E                     	;# 
  1063  079E                     	;# 
  1064  0F8C                     	;# 
  1065  0F8D                     	;# 
  1066  0F91                     	;# 
  1067  0F96                     	;# 
  1068  0F97                     	;# 
  1069  0F9C                     	;# 
  1070  0F9D                     	;# 
  1071  0F9E                     	;# 
  1072  0FE3                     	;# 
  1073  0FE4                     	;# 
  1074  0FE5                     	;# 
  1075  0FE6                     	;# 
  1076  0FE7                     	;# 
  1077  0FE8                     	;# 
  1078  0FE9                     	;# 
  1079  0FEA                     	;# 
  1080  0FEB                     	;# 
  1081  0FED                     	;# 
  1082  0FEE                     	;# 
  1083  0FEF                     	;# 
  1084  0000                     	;# 
  1085  0001                     	;# 
  1086  0002                     	;# 
  1087  0003                     	;# 
  1088  0004                     	;# 
  1089  0005                     	;# 
  1090  0006                     	;# 
  1091  0007                     	;# 
  1092  0008                     	;# 
  1093  0009                     	;# 
  1094  000A                     	;# 
  1095  000B                     	;# 
  1096  000C                     	;# 
  1097  000D                     	;# 
  1098  000E                     	;# 
  1099  0011                     	;# 
  1100  0012                     	;# 
  1101  0015                     	;# 
  1102  0016                     	;# 
  1103  0016                     	;# 
  1104  0017                     	;# 
  1105  0018                     	;# 
  1106  0019                     	;# 
  1107  001A                     	;# 
  1108  001B                     	;# 
  1109  001C                     	;# 
  1110  008C                     	;# 
  1111  008D                     	;# 
  1112  008E                     	;# 
  1113  0091                     	;# 
  1114  0092                     	;# 
  1115  0095                     	;# 
  1116  0096                     	;# 
  1117  0097                     	;# 
  1118  0099                     	;# 
  1119  009A                     	;# 
  1120  009B                     	;# 
  1121  009B                     	;# 
  1122  009C                     	;# 
  1123  009D                     	;# 
  1124  009E                     	;# 
  1125  009F                     	;# 
  1126  010C                     	;# 
  1127  010D                     	;# 
  1128  010E                     	;# 
  1129  0116                     	;# 
  1130  0117                     	;# 
  1131  011D                     	;# 
  1132  018C                     	;# 
  1133  018D                     	;# 
  1134  018E                     	;# 
  1135  0191                     	;# 
  1136  0191                     	;# 
  1137  0192                     	;# 
  1138  0193                     	;# 
  1139  0193                     	;# 
  1140  0194                     	;# 
  1141  0195                     	;# 
  1142  0196                     	;# 
  1143  0199                     	;# 
  1144  019A                     	;# 
  1145  019B                     	;# 
  1146  019B                     	;# 
  1147  019C                     	;# 
  1148  019D                     	;# 
  1149  019E                     	;# 
  1150  019F                     	;# 
  1151  020C                     	;# 
  1152  020D                     	;# 
  1153  0211                     	;# 
  1154  0211                     	;# 
  1155  0212                     	;# 
  1156  0212                     	;# 
  1157  0213                     	;# 
  1158  0213                     	;# 
  1159  0214                     	;# 
  1160  0214                     	;# 
  1161  0215                     	;# 
  1162  0215                     	;# 
  1163  0215                     	;# 
  1164  0216                     	;# 
  1165  0216                     	;# 
  1166  0217                     	;# 
  1167  0217                     	;# 
  1168  0391                     	;# 
  1169  0392                     	;# 
  1170  0393                     	;# 
  1171  0394                     	;# 
  1172  0395                     	;# 
  1173  0396                     	;# 
  1174  0611                     	;# 
  1175  0612                     	;# 
  1176  0613                     	;# 
  1177  0613                     	;# 
  1178  0614                     	;# 
  1179  0615                     	;# 
  1180  0616                     	;# 
  1181  0616                     	;# 
  1182  0711                     	;# 
  1183  0711                     	;# 
  1184  0711                     	;# 
  1185  0712                     	;# 
  1186  0712                     	;# 
  1187  0713                     	;# 
  1188  0713                     	;# 
  1189  0713                     	;# 
  1190  0714                     	;# 
  1191  0714                     	;# 
  1192  0714                     	;# 
  1193  0715                     	;# 
  1194  0715                     	;# 
  1195  0716                     	;# 
  1196  0716                     	;# 
  1197  0716                     	;# 
  1198  0716                     	;# 
  1199  0717                     	;# 
  1200  0717                     	;# 
  1201  0717                     	;# 
  1202  0717                     	;# 
  1203  0718                     	;# 
  1204  0718                     	;# 
  1205  0718                     	;# 
  1206  0719                     	;# 
  1207  0719                     	;# 
  1208  0719                     	;# 
  1209  0719                     	;# 
  1210  071A                     	;# 
  1211  071A                     	;# 
  1212  071A                     	;# 
  1213  071A                     	;# 
  1214  071A                     	;# 
  1215  071B                     	;# 
  1216  071B                     	;# 
  1217  071C                     	;# 
  1218  071C                     	;# 
  1219  071C                     	;# 
  1220  071C                     	;# 
  1221  071C                     	;# 
  1222  071D                     	;# 
  1223  071D                     	;# 
  1224  071E                     	;# 
  1225  071E                     	;# 
  1226  0791                     	;# 
  1227  0791                     	;# 
  1228  0793                     	;# 
  1229  0793                     	;# 
  1230  0794                     	;# 
  1231  0794                     	;# 
  1232  0796                     	;# 
  1233  0796                     	;# 
  1234  0796                     	;# 
  1235  0797                     	;# 
  1236  0797                     	;# 
  1237  0797                     	;# 
  1238  0798                     	;# 
  1239  0798                     	;# 
  1240  0799                     	;# 
  1241  0799                     	;# 
  1242  0799                     	;# 
  1243  079A                     	;# 
  1244  079A                     	;# 
  1245  079A                     	;# 
  1246  079B                     	;# 
  1247  079C                     	;# 
  1248  079C                     	;# 
  1249  079C                     	;# 
  1250  079D                     	;# 
  1251  079E                     	;# 
  1252  079E                     	;# 
  1253  0F8C                     	;# 
  1254  0F8D                     	;# 
  1255  0F91                     	;# 
  1256  0F96                     	;# 
  1257  0F97                     	;# 
  1258  0F9C                     	;# 
  1259  0F9D                     	;# 
  1260  0F9E                     	;# 
  1261  0FE3                     	;# 
  1262  0FE4                     	;# 
  1263  0FE5                     	;# 
  1264  0FE6                     	;# 
  1265  0FE7                     	;# 
  1266  0FE8                     	;# 
  1267  0FE9                     	;# 
  1268  0FEA                     	;# 
  1269  0FEB                     	;# 
  1270  0FED                     	;# 
  1271  0FEE                     	;# 
  1272  0FEF                     	;# 
  1273  0000                     	;# 
  1274  0001                     	;# 
  1275  0002                     	;# 
  1276  0003                     	;# 
  1277  0004                     	;# 
  1278  0005                     	;# 
  1279  0006                     	;# 
  1280  0007                     	;# 
  1281  0008                     	;# 
  1282  0009                     	;# 
  1283  000A                     	;# 
  1284  000B                     	;# 
  1285  000C                     	;# 
  1286  000D                     	;# 
  1287  000E                     	;# 
  1288  0011                     	;# 
  1289  0012                     	;# 
  1290  0015                     	;# 
  1291  0016                     	;# 
  1292  0016                     	;# 
  1293  0017                     	;# 
  1294  0018                     	;# 
  1295  0019                     	;# 
  1296  001A                     	;# 
  1297  001B                     	;# 
  1298  001C                     	;# 
  1299  008C                     	;# 
  1300  008D                     	;# 
  1301  008E                     	;# 
  1302  0091                     	;# 
  1303  0092                     	;# 
  1304  0095                     	;# 
  1305  0096                     	;# 
  1306  0097                     	;# 
  1307  0099                     	;# 
  1308  009A                     	;# 
  1309  009B                     	;# 
  1310  009B                     	;# 
  1311  009C                     	;# 
  1312  009D                     	;# 
  1313  009E                     	;# 
  1314  009F                     	;# 
  1315  010C                     	;# 
  1316  010D                     	;# 
  1317  010E                     	;# 
  1318  0116                     	;# 
  1319  0117                     	;# 
  1320  011D                     	;# 
  1321  018C                     	;# 
  1322  018D                     	;# 
  1323  018E                     	;# 
  1324  0191                     	;# 
  1325  0191                     	;# 
  1326  0192                     	;# 
  1327  0193                     	;# 
  1328  0193                     	;# 
  1329  0194                     	;# 
  1330  0195                     	;# 
  1331  0196                     	;# 
  1332  0199                     	;# 
  1333  019A                     	;# 
  1334  019B                     	;# 
  1335  019B                     	;# 
  1336  019C                     	;# 
  1337  019D                     	;# 
  1338  019E                     	;# 
  1339  019F                     	;# 
  1340  020C                     	;# 
  1341  020D                     	;# 
  1342  0211                     	;# 
  1343  0211                     	;# 
  1344  0212                     	;# 
  1345  0212                     	;# 
  1346  0213                     	;# 
  1347  0213                     	;# 
  1348  0214                     	;# 
  1349  0214                     	;# 
  1350  0215                     	;# 
  1351  0215                     	;# 
  1352  0215                     	;# 
  1353  0216                     	;# 
  1354  0216                     	;# 
  1355  0217                     	;# 
  1356  0217                     	;# 
  1357  0391                     	;# 
  1358  0392                     	;# 
  1359  0393                     	;# 
  1360  0394                     	;# 
  1361  0395                     	;# 
  1362  0396                     	;# 
  1363  0611                     	;# 
  1364  0612                     	;# 
  1365  0613                     	;# 
  1366  0613                     	;# 
  1367  0614                     	;# 
  1368  0615                     	;# 
  1369  0616                     	;# 
  1370  0616                     	;# 
  1371  0711                     	;# 
  1372  0711                     	;# 
  1373  0711                     	;# 
  1374  0712                     	;# 
  1375  0712                     	;# 
  1376  0713                     	;# 
  1377  0713                     	;# 
  1378  0713                     	;# 
  1379  0714                     	;# 
  1380  0714                     	;# 
  1381  0714                     	;# 
  1382  0715                     	;# 
  1383  0715                     	;# 
  1384  0716                     	;# 
  1385  0716                     	;# 
  1386  0716                     	;# 
  1387  0716                     	;# 
  1388  0717                     	;# 
  1389  0717                     	;# 
  1390  0717                     	;# 
  1391  0717                     	;# 
  1392  0718                     	;# 
  1393  0718                     	;# 
  1394  0718                     	;# 
  1395  0719                     	;# 
  1396  0719                     	;# 
  1397  0719                     	;# 
  1398  0719                     	;# 
  1399  071A                     	;# 
  1400  071A                     	;# 
  1401  071A                     	;# 
  1402  071A                     	;# 
  1403  071A                     	;# 
  1404  071B                     	;# 
  1405  071B                     	;# 
  1406  071C                     	;# 
  1407  071C                     	;# 
  1408  071C                     	;# 
  1409  071C                     	;# 
  1410  071C                     	;# 
  1411  071D                     	;# 
  1412  071D                     	;# 
  1413  071E                     	;# 
  1414  071E                     	;# 
  1415  0791                     	;# 
  1416  0791                     	;# 
  1417  0793                     	;# 
  1418  0793                     	;# 
  1419  0794                     	;# 
  1420  0794                     	;# 
  1421  0796                     	;# 
  1422  0796                     	;# 
  1423  0796                     	;# 
  1424  0797                     	;# 
  1425  0797                     	;# 
  1426  0797                     	;# 
  1427  0798                     	;# 
  1428  0798                     	;# 
  1429  0799                     	;# 
  1430  0799                     	;# 
  1431  0799                     	;# 
  1432  079A                     	;# 
  1433  079A                     	;# 
  1434  079A                     	;# 
  1435  079B                     	;# 
  1436  079C                     	;# 
  1437  079C                     	;# 
  1438  079C                     	;# 
  1439  079D                     	;# 
  1440  079E                     	;# 
  1441  079E                     	;# 
  1442  0F8C                     	;# 
  1443  0F8D                     	;# 
  1444  0F91                     	;# 
  1445  0F96                     	;# 
  1446  0F97                     	;# 
  1447  0F9C                     	;# 
  1448  0F9D                     	;# 
  1449  0F9E                     	;# 
  1450  0FE3                     	;# 
  1451  0FE4                     	;# 
  1452  0FE5                     	;# 
  1453  0FE6                     	;# 
  1454  0FE7                     	;# 
  1455  0FE8                     	;# 
  1456  0FE9                     	;# 
  1457  0FEA                     	;# 
  1458  0FEB                     	;# 
  1459  0FED                     	;# 
  1460  0FEE                     	;# 
  1461  0FEF                     	;# 
  1462  0000                     	;# 
  1463  0001                     	;# 
  1464  0002                     	;# 
  1465  0003                     	;# 
  1466  0004                     	;# 
  1467  0005                     	;# 
  1468  0006                     	;# 
  1469  0007                     	;# 
  1470  0008                     	;# 
  1471  0009                     	;# 
  1472  000A                     	;# 
  1473  000B                     	;# 
  1474  000C                     	;# 
  1475  000D                     	;# 
  1476  000E                     	;# 
  1477  0011                     	;# 
  1478  0012                     	;# 
  1479  0015                     	;# 
  1480  0016                     	;# 
  1481  0016                     	;# 
  1482  0017                     	;# 
  1483  0018                     	;# 
  1484  0019                     	;# 
  1485  001A                     	;# 
  1486  001B                     	;# 
  1487  001C                     	;# 
  1488  008C                     	;# 
  1489  008D                     	;# 
  1490  008E                     	;# 
  1491  0091                     	;# 
  1492  0092                     	;# 
  1493  0095                     	;# 
  1494  0096                     	;# 
  1495  0097                     	;# 
  1496  0099                     	;# 
  1497  009A                     	;# 
  1498  009B                     	;# 
  1499  009B                     	;# 
  1500  009C                     	;# 
  1501  009D                     	;# 
  1502  009E                     	;# 
  1503  009F                     	;# 
  1504  010C                     	;# 
  1505  010D                     	;# 
  1506  010E                     	;# 
  1507  0116                     	;# 
  1508  0117                     	;# 
  1509  011D                     	;# 
  1510  018C                     	;# 
  1511  018D                     	;# 
  1512  018E                     	;# 
  1513  0191                     	;# 
  1514  0191                     	;# 
  1515  0192                     	;# 
  1516  0193                     	;# 
  1517  0193                     	;# 
  1518  0194                     	;# 
  1519  0195                     	;# 
  1520  0196                     	;# 
  1521  0199                     	;# 
  1522  019A                     	;# 
  1523  019B                     	;# 
  1524  019B                     	;# 
  1525  019C                     	;# 
  1526  019D                     	;# 
  1527  019E                     	;# 
  1528  019F                     	;# 
  1529  020C                     	;# 
  1530  020D                     	;# 
  1531  0211                     	;# 
  1532  0211                     	;# 
  1533  0212                     	;# 
  1534  0212                     	;# 
  1535  0213                     	;# 
  1536  0213                     	;# 
  1537  0214                     	;# 
  1538  0214                     	;# 
  1539  0215                     	;# 
  1540  0215                     	;# 
  1541  0215                     	;# 
  1542  0216                     	;# 
  1543  0216                     	;# 
  1544  0217                     	;# 
  1545  0217                     	;# 
  1546  0391                     	;# 
  1547  0392                     	;# 
  1548  0393                     	;# 
  1549  0394                     	;# 
  1550  0395                     	;# 
  1551  0396                     	;# 
  1552  0611                     	;# 
  1553  0612                     	;# 
  1554  0613                     	;# 
  1555  0613                     	;# 
  1556  0614                     	;# 
  1557  0615                     	;# 
  1558  0616                     	;# 
  1559  0616                     	;# 
  1560  0711                     	;# 
  1561  0711                     	;# 
  1562  0711                     	;# 
  1563  0712                     	;# 
  1564  0712                     	;# 
  1565  0713                     	;# 
  1566  0713                     	;# 
  1567  0713                     	;# 
  1568  0714                     	;# 
  1569  0714                     	;# 
  1570  0714                     	;# 
  1571  0715                     	;# 
  1572  0715                     	;# 
  1573  0716                     	;# 
  1574  0716                     	;# 
  1575  0716                     	;# 
  1576  0716                     	;# 
  1577  0717                     	;# 
  1578  0717                     	;# 
  1579  0717                     	;# 
  1580  0717                     	;# 
  1581  0718                     	;# 
  1582  0718                     	;# 
  1583  0718                     	;# 
  1584  0719                     	;# 
  1585  0719                     	;# 
  1586  0719                     	;# 
  1587  0719                     	;# 
  1588  071A                     	;# 
  1589  071A                     	;# 
  1590  071A                     	;# 
  1591  071A                     	;# 
  1592  071A                     	;# 
  1593  071B                     	;# 
  1594  071B                     	;# 
  1595  071C                     	;# 
  1596  071C                     	;# 
  1597  071C                     	;# 
  1598  071C                     	;# 
  1599  071C                     	;# 
  1600  071D                     	;# 
  1601  071D                     	;# 
  1602  071E                     	;# 
  1603  071E                     	;# 
  1604  0791                     	;# 
  1605  0791                     	;# 
  1606  0793                     	;# 
  1607  0793                     	;# 
  1608  0794                     	;# 
  1609  0794                     	;# 
  1610  0796                     	;# 
  1611  0796                     	;# 
  1612  0796                     	;# 
  1613  0797                     	;# 
  1614  0797                     	;# 
  1615  0797                     	;# 
  1616  0798                     	;# 
  1617  0798                     	;# 
  1618  0799                     	;# 
  1619  0799                     	;# 
  1620  0799                     	;# 
  1621  079A                     	;# 
  1622  079A                     	;# 
  1623  079A                     	;# 
  1624  079B                     	;# 
  1625  079C                     	;# 
  1626  079C                     	;# 
  1627  079C                     	;# 
  1628  079D                     	;# 
  1629  079E                     	;# 
  1630  079E                     	;# 
  1631  0F8C                     	;# 
  1632  0F8D                     	;# 
  1633  0F91                     	;# 
  1634  0F96                     	;# 
  1635  0F97                     	;# 
  1636  0F9C                     	;# 
  1637  0F9D                     	;# 
  1638  0F9E                     	;# 
  1639  0FE3                     	;# 
  1640  0FE4                     	;# 
  1641  0FE5                     	;# 
  1642  0FE6                     	;# 
  1643  0FE7                     	;# 
  1644  0FE8                     	;# 
  1645  0FE9                     	;# 
  1646  0FEA                     	;# 
  1647  0FEB                     	;# 
  1648  0FED                     	;# 
  1649  0FEE                     	;# 
  1650  0FEF                     	;# 
  1651  0000                     	;# 
  1652  0001                     	;# 
  1653  0002                     	;# 
  1654  0003                     	;# 
  1655  0004                     	;# 
  1656  0005                     	;# 
  1657  0006                     	;# 
  1658  0007                     	;# 
  1659  0008                     	;# 
  1660  0009                     	;# 
  1661  000A                     	;# 
  1662  000B                     	;# 
  1663  000C                     	;# 
  1664  000D                     	;# 
  1665  000E                     	;# 
  1666  0011                     	;# 
  1667  0012                     	;# 
  1668  0015                     	;# 
  1669  0016                     	;# 
  1670  0016                     	;# 
  1671  0017                     	;# 
  1672  0018                     	;# 
  1673  0019                     	;# 
  1674  001A                     	;# 
  1675  001B                     	;# 
  1676  001C                     	;# 
  1677  008C                     	;# 
  1678  008D                     	;# 
  1679  008E                     	;# 
  1680  0091                     	;# 
  1681  0092                     	;# 
  1682  0095                     	;# 
  1683  0096                     	;# 
  1684  0097                     	;# 
  1685  0099                     	;# 
  1686  009A                     	;# 
  1687  009B                     	;# 
  1688  009B                     	;# 
  1689  009C                     	;# 
  1690  009D                     	;# 
  1691  009E                     	;# 
  1692  009F                     	;# 
  1693  010C                     	;# 
  1694  010D                     	;# 
  1695  010E                     	;# 
  1696  0116                     	;# 
  1697  0117                     	;# 
  1698  011D                     	;# 
  1699  018C                     	;# 
  1700  018D                     	;# 
  1701  018E                     	;# 
  1702  0191                     	;# 
  1703  0191                     	;# 
  1704  0192                     	;# 
  1705  0193                     	;# 
  1706  0193                     	;# 
  1707  0194                     	;# 
  1708  0195                     	;# 
  1709  0196                     	;# 
  1710  0199                     	;# 
  1711  019A                     	;# 
  1712  019B                     	;# 
  1713  019B                     	;# 
  1714  019C                     	;# 
  1715  019D                     	;# 
  1716  019E                     	;# 
  1717  019F                     	;# 
  1718  020C                     	;# 
  1719  020D                     	;# 
  1720  0211                     	;# 
  1721  0211                     	;# 
  1722  0212                     	;# 
  1723  0212                     	;# 
  1724  0213                     	;# 
  1725  0213                     	;# 
  1726  0214                     	;# 
  1727  0214                     	;# 
  1728  0215                     	;# 
  1729  0215                     	;# 
  1730  0215                     	;# 
  1731  0216                     	;# 
  1732  0216                     	;# 
  1733  0217                     	;# 
  1734  0217                     	;# 
  1735  0391                     	;# 
  1736  0392                     	;# 
  1737  0393                     	;# 
  1738  0394                     	;# 
  1739  0395                     	;# 
  1740  0396                     	;# 
  1741  0611                     	;# 
  1742  0612                     	;# 
  1743  0613                     	;# 
  1744  0613                     	;# 
  1745  0614                     	;# 
  1746  0615                     	;# 
  1747  0616                     	;# 
  1748  0616                     	;# 
  1749  0711                     	;# 
  1750  0711                     	;# 
  1751  0711                     	;# 
  1752  0712                     	;# 
  1753  0712                     	;# 
  1754  0713                     	;# 
  1755  0713                     	;# 
  1756  0713                     	;# 
  1757  0714                     	;# 
  1758  0714                     	;# 
  1759  0714                     	;# 
  1760  0715                     	;# 
  1761  0715                     	;# 
  1762  0716                     	;# 
  1763  0716                     	;# 
  1764  0716                     	;# 
  1765  0716                     	;# 
  1766  0717                     	;# 
  1767  0717                     	;# 
  1768  0717                     	;# 
  1769  0717                     	;# 
  1770  0718                     	;# 
  1771  0718                     	;# 
  1772  0718                     	;# 
  1773  0719                     	;# 
  1774  0719                     	;# 
  1775  0719                     	;# 
  1776  0719                     	;# 
  1777  071A                     	;# 
  1778  071A                     	;# 
  1779  071A                     	;# 
  1780  071A                     	;# 
  1781  071A                     	;# 
  1782  071B                     	;# 
  1783  071B                     	;# 
  1784  071C                     	;# 
  1785  071C                     	;# 
  1786  071C                     	;# 
  1787  071C                     	;# 
  1788  071C                     	;# 
  1789  071D                     	;# 
  1790  071D                     	;# 
  1791  071E                     	;# 
  1792  071E                     	;# 
  1793  0791                     	;# 
  1794  0791                     	;# 
  1795  0793                     	;# 
  1796  0793                     	;# 
  1797  0794                     	;# 
  1798  0794                     	;# 
  1799  0796                     	;# 
  1800  0796                     	;# 
  1801  0796                     	;# 
  1802  0797                     	;# 
  1803  0797                     	;# 
  1804  0797                     	;# 
  1805  0798                     	;# 
  1806  0798                     	;# 
  1807  0799                     	;# 
  1808  0799                     	;# 
  1809  0799                     	;# 
  1810  079A                     	;# 
  1811  079A                     	;# 
  1812  079A                     	;# 
  1813  079B                     	;# 
  1814  079C                     	;# 
  1815  079C                     	;# 
  1816  079C                     	;# 
  1817  079D                     	;# 
  1818  079E                     	;# 
  1819  079E                     	;# 
  1820  0F8C                     	;# 
  1821  0F8D                     	;# 
  1822  0F91                     	;# 
  1823  0F96                     	;# 
  1824  0F97                     	;# 
  1825  0F9C                     	;# 
  1826  0F9D                     	;# 
  1827  0F9E                     	;# 
  1828  0FE3                     	;# 
  1829  0FE4                     	;# 
  1830  0FE5                     	;# 
  1831  0FE6                     	;# 
  1832  0FE7                     	;# 
  1833  0FE8                     	;# 
  1834  0FE9                     	;# 
  1835  0FEA                     	;# 
  1836  0FEB                     	;# 
  1837  0FED                     	;# 
  1838  0FEE                     	;# 
  1839  0FEF                     	;# 
  1840  0000                     	;# 
  1841  0001                     	;# 
  1842  0002                     	;# 
  1843  0003                     	;# 
  1844  0004                     	;# 
  1845  0005                     	;# 
  1846  0006                     	;# 
  1847  0007                     	;# 
  1848  0008                     	;# 
  1849  0009                     	;# 
  1850  000A                     	;# 
  1851  000B                     	;# 
  1852  000C                     	;# 
  1853  000D                     	;# 
  1854  000E                     	;# 
  1855  0011                     	;# 
  1856  0012                     	;# 
  1857  0015                     	;# 
  1858  0016                     	;# 
  1859  0016                     	;# 
  1860  0017                     	;# 
  1861  0018                     	;# 
  1862  0019                     	;# 
  1863  001A                     	;# 
  1864  001B                     	;# 
  1865  001C                     	;# 
  1866  008C                     	;# 
  1867  008D                     	;# 
  1868  008E                     	;# 
  1869  0091                     	;# 
  1870  0092                     	;# 
  1871  0095                     	;# 
  1872  0096                     	;# 
  1873  0097                     	;# 
  1874  0099                     	;# 
  1875  009A                     	;# 
  1876  009B                     	;# 
  1877  009B                     	;# 
  1878  009C                     	;# 
  1879  009D                     	;# 
  1880  009E                     	;# 
  1881  009F                     	;# 
  1882  010C                     	;# 
  1883  010D                     	;# 
  1884  010E                     	;# 
  1885  0116                     	;# 
  1886  0117                     	;# 
  1887  011D                     	;# 
  1888  018C                     	;# 
  1889  018D                     	;# 
  1890  018E                     	;# 
  1891  0191                     	;# 
  1892  0191                     	;# 
  1893  0192                     	;# 
  1894  0193                     	;# 
  1895  0193                     	;# 
  1896  0194                     	;# 
  1897  0195                     	;# 
  1898  0196                     	;# 
  1899  0199                     	;# 
  1900  019A                     	;# 
  1901  019B                     	;# 
  1902  019B                     	;# 
  1903  019C                     	;# 
  1904  019D                     	;# 
  1905  019E                     	;# 
  1906  019F                     	;# 
  1907  020C                     	;# 
  1908  020D                     	;# 
  1909  0211                     	;# 
  1910  0211                     	;# 
  1911  0212                     	;# 
  1912  0212                     	;# 
  1913  0213                     	;# 
  1914  0213                     	;# 
  1915  0214                     	;# 
  1916  0214                     	;# 
  1917  0215                     	;# 
  1918  0215                     	;# 
  1919  0215                     	;# 
  1920  0216                     	;# 
  1921  0216                     	;# 
  1922  0217                     	;# 
  1923  0217                     	;# 
  1924  0391                     	;# 
  1925  0392                     	;# 
  1926  0393                     	;# 
  1927  0394                     	;# 
  1928  0395                     	;# 
  1929  0396                     	;# 
  1930  0611                     	;# 
  1931  0612                     	;# 
  1932  0613                     	;# 
  1933  0613                     	;# 
  1934  0614                     	;# 
  1935  0615                     	;# 
  1936  0616                     	;# 
  1937  0616                     	;# 
  1938  0711                     	;# 
  1939  0711                     	;# 
  1940  0711                     	;# 
  1941  0712                     	;# 
  1942  0712                     	;# 
  1943  0713                     	;# 
  1944  0713                     	;# 
  1945  0713                     	;# 
  1946  0714                     	;# 
  1947  0714                     	;# 
  1948  0714                     	;# 
  1949  0715                     	;# 
  1950  0715                     	;# 
  1951  0716                     	;# 
  1952  0716                     	;# 
  1953  0716                     	;# 
  1954  0716                     	;# 
  1955  0717                     	;# 
  1956  0717                     	;# 
  1957  0717                     	;# 
  1958  0717                     	;# 
  1959  0718                     	;# 
  1960  0718                     	;# 
  1961  0718                     	;# 
  1962  0719                     	;# 
  1963  0719                     	;# 
  1964  0719                     	;# 
  1965  0719                     	;# 
  1966  071A                     	;# 
  1967  071A                     	;# 
  1968  071A                     	;# 
  1969  071A                     	;# 
  1970  071A                     	;# 
  1971  071B                     	;# 
  1972  071B                     	;# 
  1973  071C                     	;# 
  1974  071C                     	;# 
  1975  071C                     	;# 
  1976  071C                     	;# 
  1977  071C                     	;# 
  1978  071D                     	;# 
  1979  071D                     	;# 
  1980  071E                     	;# 
  1981  071E                     	;# 
  1982  0791                     	;# 
  1983  0791                     	;# 
  1984  0793                     	;# 
  1985  0793                     	;# 
  1986  0794                     	;# 
  1987  0794                     	;# 
  1988  0796                     	;# 
  1989  0796                     	;# 
  1990  0796                     	;# 
  1991  0797                     	;# 
  1992  0797                     	;# 
  1993  0797                     	;# 
  1994  0798                     	;# 
  1995  0798                     	;# 
  1996  0799                     	;# 
  1997  0799                     	;# 
  1998  0799                     	;# 
  1999  079A                     	;# 
  2000  079A                     	;# 
  2001  079A                     	;# 
  2002  079B                     	;# 
  2003  079C                     	;# 
  2004  079C                     	;# 
  2005  079C                     	;# 
  2006  079D                     	;# 
  2007  079E                     	;# 
  2008  079E                     	;# 
  2009  0F8C                     	;# 
  2010  0F8D                     	;# 
  2011  0F91                     	;# 
  2012  0F96                     	;# 
  2013  0F97                     	;# 
  2014  0F9C                     	;# 
  2015  0F9D                     	;# 
  2016  0F9E                     	;# 
  2017  0FE3                     	;# 
  2018  0FE4                     	;# 
  2019  0FE5                     	;# 
  2020  0FE6                     	;# 
  2021  0FE7                     	;# 
  2022  0FE8                     	;# 
  2023  0FE9                     	;# 
  2024  0FEA                     	;# 
  2025  0FEB                     	;# 
  2026  0FED                     	;# 
  2027  0FEE                     	;# 
  2028  0FEF                     	;# 
  2029                           
  2030                           	psect	idataBANK0
  2031  096E                     __pidataBANK0:	
  2032                           
  2033                           ;initializer for _Proximity_StateMachine
  2034  096E  342E               	retlw	low _Proximity_State_Initializing
  2035  096F  340C               	retlw	high _Proximity_State_Initializing
  2036  0970  34BD               	retlw	low _Proximity_State_NotActivated
  2037  0971  3403               	retlw	high _Proximity_State_NotActivated
  2038  0972  3401               	retlw	low _Proximity_State_Activated
  2039  0973  340D               	retlw	high _Proximity_State_Activated
  2040                           
  2041                           ;initializer for _Button_StateMachine
  2042  0974  346F               	retlw	low _Button_State_Initializing
  2043  0975  340C               	retlw	high _Button_State_Initializing
  2044  0976  348B               	retlw	low _Button_State_NotPressed
  2045  0977  3402               	retlw	high _Button_State_NotPressed
  2046  0978  344D               	retlw	low _Button_State_Pressed
  2047  0979  340E               	retlw	high _Button_State_Pressed
  2048                           
  2049                           ;initializer for _callback_notActivated
  2050  097A  3404               	retlw	low _Proximity_DefaultCallback
  2051  097B  3408               	retlw	high _Proximity_DefaultCallback
  2052                           
  2053                           ;initializer for _callback_activated
  2054  097C  3404               	retlw	low _Proximity_DefaultCallback
  2055  097D  3408               	retlw	high _Proximity_DefaultCallback
  2056                           
  2057                           ;initializer for _callback_notPressed
  2058  097E  3401               	retlw	low _Button_DefaultCallback
  2059  097F  3408               	retlw	high _Button_DefaultCallback
  2060                           
  2061                           ;initializer for _callback_pressed
  2062  0980  3401               	retlw	low _Button_DefaultCallback
  2063  0981  3408               	retlw	high _Button_DefaultCallback
  2064                           
  2065                           ;initializer for _callback_sampled
  2066  0982  3426               	retlw	low _Sensor_DefaultCallback
  2067  0983  3400               	retlw	high _Sensor_DefaultCallback
  2068                           
  2069                           ;initializer for _sample_period
  2070  0984  34AE               	retlw	174
  2071                           
  2072                           	psect	idataBANK2
  2073  0BC1                     __pidataBANK2:	
  2074                           
  2075                           ;initializer for _mtouch_sensor
  2076  0BC1  3400               	retlw	0
  2077  0BC2  3435               	retlw	53
  2078  0BC3  340A               	retlw	10
  2079  0BC4  3405               	retlw	5
  2080  0BC5  3420               	retlw	32
  2081  0BC6  3400               	retlw	0
  2082  0BC7  3400               	retlw	0
  2083  0BC8  3400               	retlw	0
  2084  0BC9  3400               	retlw	0
  2085  0BCA  3401               	retlw	1
  2086  0BCB  345D               	retlw	93
  2087  0BCC  340A               	retlw	10
  2088  0BCD  3405               	retlw	5
  2089  0BCE  3420               	retlw	32
  2090  0BCF  3400               	retlw	0
  2091  0BD0  3400               	retlw	0
  2092  0BD1  3400               	retlw	0
  2093  0BD2  3400               	retlw	0
  2094  0BD3  3402               	retlw	2
  2095  0BD4  3439               	retlw	57
  2096  0BD5  340A               	retlw	10
  2097  0BD6  3405               	retlw	5
  2098  0BD7  3420               	retlw	32
  2099  0BD8  3400               	retlw	0
  2100  0BD9  3400               	retlw	0
  2101  0BDA  3400               	retlw	0
  2102  0BDB  3400               	retlw	0
  2103  0BDC  3403               	retlw	3
  2104  0BDD  3409               	retlw	9
  2105  0BDE  340A               	retlw	10
  2106  0BDF  3405               	retlw	5
  2107  0BE0  3420               	retlw	32
  2108  0BE1  3400               	retlw	0
  2109  0BE2  3400               	retlw	0
  2110  0BE3  3400               	retlw	0
  2111  0BE4  3400               	retlw	0
  2112  0BE5  3404               	retlw	4
  2113  0BE6  3451               	retlw	81
  2114  0BE7  340A               	retlw	10
  2115  0BE8  3405               	retlw	5
  2116  0BE9  3420               	retlw	32
  2117  0BEA  3400               	retlw	0
  2118  0BEB  3400               	retlw	0
  2119  0BEC  3400               	retlw	0
  2120  0BED  3400               	retlw	0
  2121  0BEE  3405               	retlw	5
  2122  0BEF  3469               	retlw	105
  2123  0BF0  340A               	retlw	10
  2124  0BF1  3405               	retlw	5
  2125  0BF2  3420               	retlw	32
  2126  0BF3  3400               	retlw	0
  2127  0BF4  3400               	retlw	0
  2128  0BF5  3400               	retlw	0
  2129  0BF6  3400               	retlw	0
  2130                           
  2131                           	psect	stringtext1
  2132  1062                     __pstringtext1:	
  2133  1062                     _sensor_scan_group:	
  2134  1062  3420               	retlw	low (_mtouch_sensor| (0+256))
  2135  1063  3429               	retlw	low ((_mtouch_sensor| (0+256)+9))
  2136  1064  3432               	retlw	low ((_mtouch_sensor| (0+256)+18))
  2137  1065  3444               	retlw	low ((_mtouch_sensor| (0+256)+36))
  2138  1066  343B               	retlw	low ((_mtouch_sensor| (0+256)+27))
  2139  1067  344D               	retlw	low ((_mtouch_sensor| (0+256)+45))
  2140  1068                     __end_of_sensor_scan_group:	
  2141                           
  2142                           	psect	stringtext2
  2143  1068                     __pstringtext2:	
  2144  1068                     Sensor_Scanfrequency_Evaluation@frequency_hop:	
  2145  1068  3400               	retlw	0
  2146  1069  340D               	retlw	13
  2147  106A  341C               	retlw	28
  2148  106B  341E               	retlw	30
  2149  106C  3417               	retlw	23
  2150  106D                     __end_ofSensor_Scanfrequency_Evaluation@frequency_hop:	
  2151                           
  2152                           	psect	stringtext3
  2153  1000                     __pstringtext3:	
  2154  1000                     _mtouch_button_init:	
  2155  1000  3400               	retlw	0
  2156  1001  3405               	retlw	5
  2157  1002  3400               	retlw	0
  2158  1003  3400               	retlw	0
  2159  1004  3400               	retlw	0
  2160  1005  3400               	retlw	0
  2161  1006  3400               	retlw	0
  2162  1007  3400               	retlw	0
  2163  1008  3400               	retlw	0
  2164  1009  3400               	retlw	0
  2165  100A  3400               	retlw	0
  2166  100B  3400               	retlw	0
  2167  100C  3400               	retlw	0
  2168  100D  3400               	retlw	0
  2169  100E  3464               	retlw	100
  2170  100F  3401               	retlw	1
  2171  1010  3401               	retlw	1
  2172  1011  3401               	retlw	1
  2173  1012  3400               	retlw	0
  2174  1013  3400               	retlw	0
  2175  1014  3400               	retlw	0
  2176  1015  3400               	retlw	0
  2177  1016  3400               	retlw	0
  2178  1017  3400               	retlw	0
  2179  1018  3400               	retlw	0
  2180  1019  3400               	retlw	0
  2181  101A  3400               	retlw	0
  2182  101B  3400               	retlw	0
  2183  101C  3400               	retlw	0
  2184  101D  3400               	retlw	0
  2185  101E  3464               	retlw	100
  2186  101F  3401               	retlw	1
  2187  1020  3402               	retlw	2
  2188  1021  3400               	retlw	0
  2189  1022  3400               	retlw	0
  2190  1023  3400               	retlw	0
  2191  1024  3400               	retlw	0
  2192  1025  3400               	retlw	0
  2193  1026  3400               	retlw	0
  2194  1027  3400               	retlw	0
  2195  1028  3400               	retlw	0
  2196  1029  3400               	retlw	0
  2197  102A  3400               	retlw	0
  2198  102B  3400               	retlw	0
  2199  102C  3400               	retlw	0
  2200  102D  3400               	retlw	0
  2201  102E  3464               	retlw	100
  2202  102F  3401               	retlw	1
  2203  1030  3403               	retlw	3
  2204  1031  3403               	retlw	3
  2205  1032  3400               	retlw	0
  2206  1033  3400               	retlw	0
  2207  1034  3400               	retlw	0
  2208  1035  3400               	retlw	0
  2209  1036  3400               	retlw	0
  2210  1037  3400               	retlw	0
  2211  1038  3400               	retlw	0
  2212  1039  3400               	retlw	0
  2213  103A  3400               	retlw	0
  2214  103B  3400               	retlw	0
  2215  103C  3400               	retlw	0
  2216  103D  3400               	retlw	0
  2217  103E  3464               	retlw	100
  2218  103F  3401               	retlw	1
  2219  1040  3404               	retlw	4
  2220  1041  3404               	retlw	4
  2221  1042  3400               	retlw	0
  2222  1043  3400               	retlw	0
  2223  1044  3400               	retlw	0
  2224  1045  3400               	retlw	0
  2225  1046  3400               	retlw	0
  2226  1047  3400               	retlw	0
  2227  1048  3400               	retlw	0
  2228  1049  3400               	retlw	0
  2229  104A  3400               	retlw	0
  2230  104B  3400               	retlw	0
  2231  104C  3400               	retlw	0
  2232  104D  3400               	retlw	0
  2233  104E  3464               	retlw	100
  2234  104F  3401               	retlw	1
  2235  1050                     __end_of_mtouch_button_init:	
  2236                           
  2237                           	psect	stringtext4
  2238  1050                     __pstringtext4:	
  2239  1050                     _mtouch_proximity_init:	
  2240  1050  3400               	retlw	0
  2241  1051  3402               	retlw	2
  2242  1052  3400               	retlw	0
  2243  1053  3400               	retlw	0
  2244  1054  3400               	retlw	0
  2245  1055  3400               	retlw	0
  2246  1056  3400               	retlw	0
  2247  1057  3400               	retlw	0
  2248  1058  3400               	retlw	0
  2249  1059  3400               	retlw	0
  2250  105A  3400               	retlw	0
  2251  105B  3400               	retlw	0
  2252  105C  3400               	retlw	0
  2253  105D  3400               	retlw	0
  2254  105E  3400               	retlw	0
  2255  105F  3400               	retlw	0
  2256  1060  3478               	retlw	120
  2257  1061  3400               	retlw	0
  2258  1062                     __end_of_mtouch_proximity_init:	
  2259                           
  2260                           	psect	nvBANK0
  2261  006F                     __pnvBANK0:	
  2262  006F                     _eusartTxBufferRemaining:	
  2263  006F                     	ds	1
  2264  0012                     _PIR2bits	set	18
  2265  000B                     _INTCONbits	set	11
  2266  001C                     _T2CONbits	set	28
  2267  0011                     _PIR1bits	set	17
  2268  001A                     _TMR2	set	26
  2269  001B                     _PR2	set	27
  2270  001C                     _T2CON	set	28
  2271  008D                     _TRISBbits	set	141
  2272  008C                     _TRISAbits	set	140
  2273  008E                     _TRISCbits	set	142
  2274  0095                     _OPTION_REGbits	set	149
  2275  008E                     _TRISC	set	142
  2276  008D                     _TRISB	set	141
  2277  008C                     _TRISA	set	140
  2278  0091                     _PIE1bits	set	145
  2279  0097                     _WDTCON	set	151
  2280  0099                     _OSCCON	set	153
  2281  011D                     _APFCONbits	set	285
  2282  011D                     _APFCON	set	285
  2283  010E                     _LATC	set	270
  2284  010D                     _LATB	set	269
  2285  010C                     _LATA	set	268
  2286  018D                     _ANSELBbits	set	397
  2287  018C                     _ANSELAbits	set	396
  2288  018E                     _ANSELCbits	set	398
  2289  018C                     _ANSELA	set	396
  2290  018D                     _ANSELB	set	397
  2291  018E                     _ANSELC	set	398
  2292  0199                     _RCREG	set	409
  2293  019D                     _RCSTAbits	set	413
  2294  019A                     _TXREG	set	410
  2295  019C                     _SPBRGH	set	412
  2296  019B                     _SPBRGL	set	411
  2297  019E                     _TXSTA	set	414
  2298  019D                     _RCSTA	set	413
  2299  019F                     _BAUDCON	set	415
  2300  020D                     _WPUBbits	set	525
  2301  020C                     _WPUAbits	set	524
  2302  020C                     _WPUA	set	524
  2303  020D                     _WPUB	set	525
  2304  071A                     _AAD1RES0	set	1818
  2305  0711                     _AD1CON0bits	set	1809
  2306  0714                     _AAD1CON3	set	1812
  2307  0718                     _AAD1GRD	set	1816
  2308  0717                     _AD1ACQCON	set	1815
  2309  0716                     _AD1PRECON	set	1814
  2310  0713                     _AD1CON2bits	set	1811
  2311  0719                     _AAD1CAP	set	1817
  2312  0713                     _AD1CON2	set	1811
  2313  0714                     _AD1CON3	set	1812
  2314  0712                     _ADCOMCON	set	1810
  2315  0711                     _AD1CON0	set	1809
  2316  079A                     _AAD2RES0	set	1946
  2317  0791                     _AD2CON0bits	set	1937
  2318  0794                     _AAD2CON3	set	1940
  2319  0797                     _AD2ACQCON	set	1943
  2320  0796                     _AD2PRECON	set	1942
  2321  0793                     _AD2CON2bits	set	1939
  2322  0799                     _AAD2CAP	set	1945
  2323  0798                     _AAD2GRD	set	1944
  2324  0793                     _AD2CON2	set	1939
  2325  0794                     _AD2CON3	set	1940
  2326  0791                     _AD2CON0	set	1937
  2327                           
  2328                           ; #config settings
  2329  0000                     
  2330                           	psect	cinit
  2331  07CB                     start_initialization:	
  2332  07CB                     __initialization:	
  2333                           
  2334                           ; Initialize objects allocated to BANK0
  2335  07CB  306E               	movlw	low __pidataBANK0
  2336  07CC  0084               	movwf	4
  2337  07CD  3089               	movlw	(high __pidataBANK0)| (0+128)
  2338  07CE  0085               	movwf	5
  2339  07CF  304F               	movlw	low __pdataBANK0
  2340  07D0  0086               	movwf	6
  2341  07D1  3000               	movlw	high __pdataBANK0
  2342  07D2  0087               	movwf	7
  2343  07D3  3017               	movlw	23
  2344  07D4  3188  2045  3187   	fcall	init_ram
  2345                           
  2346                           ; Initialize objects allocated to BANK2
  2347  07D7  30C1               	movlw	low __pidataBANK2
  2348  07D8  0084               	movwf	4
  2349  07D9  308B               	movlw	(high __pidataBANK2)| (0+128)
  2350  07DA  0085               	movwf	5
  2351  07DB  3020               	movlw	low __pdataBANK2
  2352  07DC  0086               	movwf	6
  2353  07DD  3001               	movlw	high __pdataBANK2
  2354  07DE  0087               	movwf	7
  2355  07DF  3036               	movlw	54
  2356  07E0  3188  2045  3187   	fcall	init_ram
  2357                           
  2358                           ; Clear objects allocated to COMMON
  2359  07E3  01FA               	clrf	__pbssCOMMON& (0+127)
  2360  07E4  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2361                           
  2362                           ; Clear objects allocated to BANK0
  2363  07E5  3066               	movlw	low __pbssBANK0
  2364  07E6  0084               	movwf	4
  2365  07E7  3000               	movlw	high __pbssBANK0
  2366  07E8  0085               	movwf	5
  2367  07E9  3009               	movlw	9
  2368  07EA  3188  203F  3187   	fcall	clear_ram0
  2369                           
  2370                           ; Clear objects allocated to BANK1
  2371  07ED  30A0               	movlw	low __pbssBANK1
  2372  07EE  0084               	movwf	4
  2373  07EF  3000               	movlw	high __pbssBANK1
  2374  07F0  0085               	movwf	5
  2375  07F1  3032               	movlw	50
  2376  07F2  3188  203F  3187   	fcall	clear_ram0
  2377                           
  2378                           ; Clear objects allocated to BANK3
  2379  07F5  30A0               	movlw	low __pbssBANK3
  2380  07F6  0084               	movwf	4
  2381  07F7  3001               	movlw	high __pbssBANK3
  2382  07F8  0085               	movwf	5
  2383  07F9  3050               	movlw	80
  2384  07FA  3188  203F         	fcall	clear_ram0
  2385  07FC                     end_of_initialization:	
  2386                           ;End of C runtime variable initialization code
  2387                           
  2388  07FC                     __end_of__initialization:	
  2389  07FC  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2390  07FD  0020               	movlb	0
  2391  07FE  318B  2B15         	ljmp	_main	;jump to C main() function
  2392                           
  2393                           	psect	bssCOMMON
  2394  007A                     __pbssCOMMON:	
  2395  007A                     _eusartTxTail:	
  2396  007A                     	ds	1
  2397  007B                     _eusartTxHead:	
  2398  007B                     	ds	1
  2399                           
  2400                           	psect	bssBANK0
  2401  0066                     __pbssBANK0:	
  2402  0066                     _packet_sample:	
  2403  0066                     	ds	4
  2404  006A                     _packet_noise:	
  2405  006A                     	ds	2
  2406  006C                     _eusartRxCount:	
  2407  006C                     	ds	1
  2408  006D                     _eusartRxTail:	
  2409  006D                     	ds	1
  2410  006E                     _eusartRxHead:	
  2411  006E                     	ds	1
  2412                           
  2413                           	psect	dataBANK0
  2414  004F                     __pdataBANK0:	
  2415  004F                     _Proximity_StateMachine:	
  2416  004F                     	ds	6
  2417  0055                     _Button_StateMachine:	
  2418  0055                     	ds	6
  2419  005B                     _callback_notActivated:	
  2420  005B                     	ds	2
  2421  005D                     _callback_activated:	
  2422  005D                     	ds	2
  2423  005F                     _callback_notPressed:	
  2424  005F                     	ds	2
  2425  0061                     _callback_pressed:	
  2426  0061                     	ds	2
  2427  0063                     _callback_sampled:	
  2428  0063                     	ds	2
  2429  0065                     _sample_period:	
  2430  0065                     	ds	1
  2431                           
  2432                           	psect	bssBANK1
  2433  00A0                     __pbssBANK1:	
  2434  00A0                     _eusartRxBuffer:	
  2435  00A0                     	ds	16
  2436  00B0                     _eusartTxBuffer:	
  2437  00B0                     	ds	16
  2438  00C0                     _mtouch_proximity:	
  2439  00C0                     	ds	18
  2440                           
  2441                           	psect	dataBANK2
  2442  0120                     __pdataBANK2:	
  2443  0120                     _mtouch_sensor:	
  2444  0120                     	ds	54
  2445                           
  2446                           	psect	bssBANK3
  2447  01A0                     __pbssBANK3:	
  2448  01A0                     _mtouch_button:	
  2449  01A0                     	ds	80
  2450                           
  2451                           	psect	inittext
  2452  0845                     init_ram:	
  2453  0845  00FE               	movwf	126
  2454  0846                     initloop:	
  2455  0846  0012               	moviw fsr0++
  2456  0847  001E               	movwi fsr1++
  2457  0848  0BFE               	decfsz	126,f
  2458  0849  2846               	goto	initloop
  2459  084A  3400               	retlw	0
  2460                           
  2461                           	psect	clrtext
  2462  083F                     clear_ram0:	
  2463                           ;	Called with FSR0 containing the base address, and
  2464                           ;	WREG with the size to clear
  2465                           
  2466  083F  0064               	clrwdt	;clear the watchdog before getting into this loop
  2467  0840                     clrloop0:	
  2468  0840  0180               	clrf	0	;clear RAM location pointed to by FSR
  2469  0841  3101               	addfsr 0,1
  2470  0842  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2471  0843  2840               	goto	clrloop0	;have we reached the end yet?
  2472  0844  3400               	retlw	0	;all done for this memory range, return
  2473                           
  2474                           	psect	cstackBANK1
  2475  00D2                     __pcstackBANK1:	
  2476  00D2                     MTOUCH_Sensor_SampleAll@group:	
  2477                           
  2478                           ; 1 bytes @ 0x0
  2479  00D2                     	ds	1
  2480                           
  2481                           	psect	cstackCOMMON
  2482  0070                     __pcstackCOMMON:	
  2483  0070                     ?_PIN_MANAGER_Initialize:	
  2484  0070                     ?_OSCILLATOR_Initialize:	
  2485                           ; 1 bytes @ 0x0
  2486                           
  2487  0070                     ?_WDT_Initialize:	
  2488                           ; 1 bytes @ 0x0
  2489                           
  2490  0070                     ?_TMR2_Initialize:	
  2491                           ; 1 bytes @ 0x0
  2492                           
  2493  0070                     ?_EUSART_Initialize:	
  2494                           ; 1 bytes @ 0x0
  2495                           
  2496  0070                     ?_TMR2_StartTimer:	
  2497                           ; 1 bytes @ 0x0
  2498                           
  2499  0070                     ?_MTOUCH_Sensor_Sampled_ResetAll:	
  2500                           ; 1 bytes @ 0x0
  2501                           
  2502  0070                     ?_MTOUCH_Sensor_Scan_Initialize:	
  2503                           ; 1 bytes @ 0x0
  2504                           
  2505  0070                     ?_MTOUCH_Sensor_SampleAll:	
  2506                           ; 1 bytes @ 0x0
  2507                           
  2508  0070                     ?_MTOUCH_Button_ServiceAll:	
  2509                           ; 1 bytes @ 0x0
  2510                           
  2511  0070                     ?_MTOUCH_Proximity_ServiceAll:	
  2512                           ; 1 bytes @ 0x0
  2513                           
  2514  0070                     ?_MTOUCH_Tick:	
  2515                           ; 1 bytes @ 0x0
  2516                           
  2517  0070                     ?_MTOUCH_Button_Tick:	
  2518                           ; 1 bytes @ 0x0
  2519                           
  2520  0070                     ?_MTOUCH_Proximity_Tick:	
  2521                           ; 1 bytes @ 0x0
  2522                           
  2523  0070                     ?_MTOUCH_Sensor_Calibrate:	
  2524                           ; 1 bytes @ 0x0
  2525                           
  2526  0070                     ?_Sensor_Sampled_Reset:	
  2527                           ; 1 bytes @ 0x0
  2528                           
  2529  0070                     ?_Sensor_Service:	
  2530                           ; 1 bytes @ 0x0
  2531                           
  2532  0070                     ?_Sensor_isEnabled:	
  2533                           ; 1 bytes @ 0x0
  2534                           
  2535  0070                     ?_Sensor_RawSample_Update:	
  2536                           ; 1 bytes @ 0x0
  2537                           
  2538  0070                     ?_Sensor_setSampled:	
  2539                           ; 1 bytes @ 0x0
  2540                           
  2541  0070                     ?_Sensor_postAcquisitionProcess:	
  2542                           ; 1 bytes @ 0x0
  2543                           
  2544  0070                     ?_Sensor_isActive:	
  2545                           ; 1 bytes @ 0x0
  2546                           
  2547  0070                     ?_Sensor_isCalibrated:	
  2548                           ; 1 bytes @ 0x0
  2549                           
  2550  0070                     ?_Sensor_setActive:	
  2551                           ; 1 bytes @ 0x0
  2552                           
  2553  0070                     ?_Sensor_setInactive:	
  2554                           ; 1 bytes @ 0x0
  2555                           
  2556  0070                     ?_Sensor_isCalibratingAcqTime:	
  2557                           ; 1 bytes @ 0x0
  2558                           
  2559  0070                     ?_Sensor_autoCalibration:	
  2560                           ; 1 bytes @ 0x0
  2561                           
  2562  0070                     ?_Sensor_setCalibratAcqTime:	
  2563                           ; 1 bytes @ 0x0
  2564                           
  2565  0070                     ?_Sensor_setCalibrated:	
  2566                           ; 1 bytes @ 0x0
  2567                           
  2568  0070                     ?_Button_Service:	
  2569                           ; 1 bytes @ 0x0
  2570                           
  2571  0070                     ?_Button_Reading_Update:	
  2572                           ; 1 bytes @ 0x0
  2573                           
  2574  0070                     ?_Button_Deviation_Update:	
  2575                           ; 1 bytes @ 0x0
  2576                           
  2577  0070                     ?_Button_Baseline_Initialize:	
  2578                           ; 1 bytes @ 0x0
  2579                           
  2580  0070                     ?_Button_Baseline_Update:	
  2581                           ; 1 bytes @ 0x0
  2582                           
  2583  0070                     ?_Button_Tick_helper:	
  2584                           ; 1 bytes @ 0x0
  2585                           
  2586  0070                     ?_Proximity_Service:	
  2587                           ; 1 bytes @ 0x0
  2588                           
  2589  0070                     ?_Proximity_Reading_Update:	
  2590                           ; 1 bytes @ 0x0
  2591                           
  2592  0070                     ?_Proximity_Deviation_Update:	
  2593                           ; 1 bytes @ 0x0
  2594                           
  2595  0070                     ?_Proximity_Baseline_Initialize:	
  2596                           ; 1 bytes @ 0x0
  2597                           
  2598  0070                     ?_Proximity_Baseline_Update:	
  2599                           ; 1 bytes @ 0x0
  2600                           
  2601  0070                     ?_Proximity_Tick_helper:	
  2602                           ; 1 bytes @ 0x0
  2603                           
  2604  0070                     ?_USART_SendChar:	
  2605                           ; 1 bytes @ 0x0
  2606                           
  2607  0070                     ??_USART_SendChar:	
  2608                           ; 1 bytes @ 0x0
  2609                           
  2610  0070                     ?_SYSTEM_Initialize:	
  2611                           ; 1 bytes @ 0x0
  2612                           
  2613  0070                     ?_TMR2_StopTimer:	
  2614                           ; 1 bytes @ 0x0
  2615                           
  2616  0070                     ?_TMR2_LoadPeriodRegister:	
  2617                           ; 1 bytes @ 0x0
  2618                           
  2619  0070                     ?_EUSART_Transmit_ISR:	
  2620                           ; 1 bytes @ 0x0
  2621                           
  2622  0070                     ??_EUSART_Transmit_ISR:	
  2623                           ; 1 bytes @ 0x0
  2624                           
  2625  0070                     ?_EUSART_Receive_ISR:	
  2626                           ; 1 bytes @ 0x0
  2627                           
  2628  0070                     ??_EUSART_Receive_ISR:	
  2629                           ; 1 bytes @ 0x0
  2630                           
  2631  0070                     ?_INTERRUPT_InterruptManager:	
  2632                           ; 1 bytes @ 0x0
  2633                           
  2634  0070                     ?_MTOUCH_Service_Mainloop:	
  2635                           ; 1 bytes @ 0x0
  2636                           
  2637  0070                     ?_Sensor_getScanGroupIndex:	
  2638                           ; 1 bytes @ 0x0
  2639                           
  2640  0070                     ?_MTOUCH_Sensor_isCalibrated:	
  2641                           ; 1 bytes @ 0x0
  2642                           
  2643  0070                     ?_MTOUCH_Sensor_wasSampled:	
  2644                           ; 1 bytes @ 0x0
  2645                           
  2646  0070                     ?_MTOUCH_Button_Initialize:	
  2647                           ; 1 bytes @ 0x0
  2648                           
  2649  0070                     ?_MTOUCH_Proximity_Initialize:	
  2650                           ; 1 bytes @ 0x0
  2651                           
  2652  0070                     ?_main:	
  2653                           ; 1 bytes @ 0x0
  2654                           
  2655                           
  2656                           ; 1 bytes @ 0x0
  2657  0070                     	ds	1
  2658  0071                     ??_INTERRUPT_InterruptManager:	
  2659                           
  2660                           ; 1 bytes @ 0x1
  2661  0071                     	ds	1
  2662  0072                     ??_PIN_MANAGER_Initialize:	
  2663  0072                     ??_OSCILLATOR_Initialize:	
  2664                           ; 1 bytes @ 0x2
  2665                           
  2666  0072                     ??_WDT_Initialize:	
  2667                           ; 1 bytes @ 0x2
  2668                           
  2669  0072                     ??_TMR2_Initialize:	
  2670                           ; 1 bytes @ 0x2
  2671                           
  2672  0072                     ??_EUSART_Initialize:	
  2673                           ; 1 bytes @ 0x2
  2674                           
  2675  0072                     ??_TMR2_StartTimer:	
  2676                           ; 1 bytes @ 0x2
  2677                           
  2678  0072                     ??_MTOUCH_Sensor_Scan_Initialize:	
  2679                           ; 1 bytes @ 0x2
  2680                           
  2681  0072                     ?_Sensor_DefaultCallback:	
  2682                           ; 1 bytes @ 0x2
  2683                           
  2684  0072                     ??_Sensor_Sampled_Reset:	
  2685                           ; 1 bytes @ 0x2
  2686                           
  2687  0072                     ??_Sensor_isEnabled:	
  2688                           ; 1 bytes @ 0x2
  2689                           
  2690  0072                     ??_Sensor_setSampled:	
  2691                           ; 1 bytes @ 0x2
  2692                           
  2693  0072                     ??_Sensor_isActive:	
  2694                           ; 1 bytes @ 0x2
  2695                           
  2696  0072                     ??_Sensor_isCalibrated:	
  2697                           ; 1 bytes @ 0x2
  2698                           
  2699  0072                     ??_Sensor_setActive:	
  2700                           ; 1 bytes @ 0x2
  2701                           
  2702  0072                     ??_Sensor_setInactive:	
  2703                           ; 1 bytes @ 0x2
  2704                           
  2705  0072                     ??_Sensor_isCalibratingAcqTime:	
  2706                           ; 1 bytes @ 0x2
  2707                           
  2708  0072                     ??_Sensor_setCalibratAcqTime:	
  2709                           ; 1 bytes @ 0x2
  2710                           
  2711  0072                     ??_Sensor_setCalibrated:	
  2712                           ; 1 bytes @ 0x2
  2713                           
  2714  0072                     ?_Button_DefaultCallback:	
  2715                           ; 1 bytes @ 0x2
  2716                           
  2717  0072                     ??_Button_Tick_helper:	
  2718                           ; 1 bytes @ 0x2
  2719                           
  2720  0072                     ?_Proximity_DefaultCallback:	
  2721                           ; 1 bytes @ 0x2
  2722                           
  2723  0072                     ??_Proximity_Baseline_Update:	
  2724                           ; 1 bytes @ 0x2
  2725                           
  2726  0072                     ??_Proximity_Tick_helper:	
  2727                           ; 1 bytes @ 0x2
  2728                           
  2729  0072                     ??_TMR2_StopTimer:	
  2730                           ; 1 bytes @ 0x2
  2731                           
  2732  0072                     ??_TMR2_LoadPeriodRegister:	
  2733                           ; 1 bytes @ 0x2
  2734                           
  2735  0072                     ??_Sensor_getScanGroupIndex:	
  2736                           ; 1 bytes @ 0x2
  2737                           
  2738  0072                     ?_MTOUCH_Button_SetPressedCallback:	
  2739                           ; 1 bytes @ 0x2
  2740                           
  2741  0072                     ?_MTOUCH_Button_SetNotPressedCallback:	
  2742                           ; 1 bytes @ 0x2
  2743                           
  2744  0072                     ??_MTOUCH_Proximity_Initialize:	
  2745                           ; 1 bytes @ 0x2
  2746                           
  2747  0072                     ?_MTOUCH_Proximity_SetActivatedCallback:	
  2748                           ; 1 bytes @ 0x2
  2749                           
  2750  0072                     ?_MTOUCH_Proximity_SetNotActivatedCallback:	
  2751                           ; 1 bytes @ 0x2
  2752                           
  2753  0072                     ?_processButtonTouch:	
  2754                           ; 1 bytes @ 0x2
  2755                           
  2756  0072                     ?_processButtonRelease:	
  2757                           ; 1 bytes @ 0x2
  2758                           
  2759  0072                     ?_processProximityActivate:	
  2760                           ; 1 bytes @ 0x2
  2761                           
  2762  0072                     ?_processProximityNotActivate:	
  2763                           ; 1 bytes @ 0x2
  2764                           
  2765  0072                     ?___bmul:	
  2766                           ; 1 bytes @ 0x2
  2767                           
  2768  0072                     ?_abs:	
  2769                           ; 1 bytes @ 0x2
  2770                           
  2771  0072                     ?_MTOUCH_Proximity_Reading_Get:	
  2772                           ; 2 bytes @ 0x2
  2773                           
  2774  0072                     ?_Proximity_Baseline_Get_helper:	
  2775                           ; 4 bytes @ 0x2
  2776                           
  2777  0072                     TMR2_LoadPeriodRegister@periodVal:	
  2778                           ; 4 bytes @ 0x2
  2779                           
  2780  0072                     Sensor_DefaultCallback@sensor:	
  2781                           ; 1 bytes @ 0x2
  2782                           
  2783  0072                     Sensor_setActive@sensor:	
  2784                           ; 1 bytes @ 0x2
  2785                           
  2786  0072                     Sensor_setInactive@sensor:	
  2787                           ; 1 bytes @ 0x2
  2788                           
  2789  0072                     Sensor_isActive@sensor:	
  2790                           ; 1 bytes @ 0x2
  2791                           
  2792  0072                     Sensor_isCalibrated@sensor:	
  2793                           ; 1 bytes @ 0x2
  2794                           
  2795  0072                     Sensor_setCalibrated@sensor:	
  2796                           ; 1 bytes @ 0x2
  2797                           
  2798  0072                     Sensor_setCalibratAcqTime@sensor:	
  2799                           ; 1 bytes @ 0x2
  2800                           
  2801  0072                     Sensor_isCalibratingAcqTime@sensor:	
  2802                           ; 1 bytes @ 0x2
  2803                           
  2804  0072                     Sensor_Sampled_Reset@sensor:	
  2805                           ; 1 bytes @ 0x2
  2806                           
  2807  0072                     Sensor_setSampled@sensor:	
  2808                           ; 1 bytes @ 0x2
  2809                           
  2810  0072                     Button_Deviation_Update@button:	
  2811                           ; 1 bytes @ 0x2
  2812                           
  2813  0072                     Button_DefaultCallback@button:	
  2814                           ; 1 bytes @ 0x2
  2815                           
  2816  0072                     Proximity_DefaultCallback@name:	
  2817                           ; 1 bytes @ 0x2
  2818                           
  2819  0072                     processButtonTouch@button:	
  2820                           ; 1 bytes @ 0x2
  2821                           
  2822  0072                     processButtonRelease@button:	
  2823                           ; 1 bytes @ 0x2
  2824                           
  2825  0072                     processProximityActivate@prox:	
  2826                           ; 1 bytes @ 0x2
  2827                           
  2828  0072                     processProximityNotActivate@prox:	
  2829                           ; 1 bytes @ 0x2
  2830                           
  2831  0072                     ___bmul@multiplicand:	
  2832                           ; 1 bytes @ 0x2
  2833                           
  2834  0072                     MTOUCH_Button_SetPressedCallback@callback:	
  2835                           ; 1 bytes @ 0x2
  2836                           
  2837  0072                     MTOUCH_Button_SetNotPressedCallback@callback:	
  2838                           ; 2 bytes @ 0x2
  2839                           
  2840  0072                     MTOUCH_Proximity_SetActivatedCallback@callback:	
  2841                           ; 2 bytes @ 0x2
  2842                           
  2843  0072                     MTOUCH_Proximity_SetNotActivatedCallback@callback:	
  2844                           ; 2 bytes @ 0x2
  2845                           
  2846  0072                     abs@a:	
  2847                           ; 2 bytes @ 0x2
  2848                           
  2849                           
  2850                           ; 2 bytes @ 0x2
  2851  0072                     	ds	1
  2852  0073                     ??_MTOUCH_Sensor_Sampled_ResetAll:	
  2853  0073                     ??_Sensor_DefaultCallback:	
  2854                           ; 1 bytes @ 0x3
  2855                           
  2856  0073                     ??_Button_DefaultCallback:	
  2857                           ; 1 bytes @ 0x3
  2858                           
  2859  0073                     ??_Proximity_DefaultCallback:	
  2860                           ; 1 bytes @ 0x3
  2861                           
  2862  0073                     ??_SYSTEM_Initialize:	
  2863                           ; 1 bytes @ 0x3
  2864                           
  2865  0073                     ??_processButtonTouch:	
  2866                           ; 1 bytes @ 0x3
  2867                           
  2868  0073                     ??_processButtonRelease:	
  2869                           ; 1 bytes @ 0x3
  2870                           
  2871  0073                     ??_processProximityActivate:	
  2872                           ; 1 bytes @ 0x3
  2873                           
  2874  0073                     ??_processProximityNotActivate:	
  2875                           ; 1 bytes @ 0x3
  2876                           
  2877  0073                     ??___bmul:	
  2878                           ; 1 bytes @ 0x3
  2879                           
  2880  0073                     Sensor_isEnabled@sensor:	
  2881                           ; 1 bytes @ 0x3
  2882                           
  2883  0073                     MTOUCH_Proximity_Initialize@name:	
  2884                           ; 1 bytes @ 0x3
  2885                           
  2886  0073                     Button_Deviation_Update@deviation:	
  2887                           ; 1 bytes @ 0x3
  2888                           
  2889                           
  2890                           ; 4 bytes @ 0x3
  2891  0073                     	ds	1
  2892  0074                     ??_abs:	
  2893  0074                     ??_MTOUCH_Button_SetPressedCallback:	
  2894                           ; 1 bytes @ 0x4
  2895                           
  2896  0074                     ??_MTOUCH_Button_SetNotPressedCallback:	
  2897                           ; 1 bytes @ 0x4
  2898                           
  2899  0074                     ??_MTOUCH_Proximity_SetActivatedCallback:	
  2900                           ; 1 bytes @ 0x4
  2901                           
  2902  0074                     ??_MTOUCH_Proximity_SetNotActivatedCallback:	
  2903                           ; 1 bytes @ 0x4
  2904                           
  2905  0074                     MTOUCH_Sensor_Sampled_ResetAll@sensor:	
  2906                           ; 1 bytes @ 0x4
  2907                           
  2908  0074                     Button_Tick_helper@button:	
  2909                           ; 1 bytes @ 0x4
  2910                           
  2911  0074                     MTOUCH_Proximity_Initialize@prox:	
  2912                           ; 1 bytes @ 0x4
  2913                           
  2914  0074                     Proximity_Tick_helper@prox:	
  2915                           ; 1 bytes @ 0x4
  2916                           
  2917  0074                     ___bmul@product:	
  2918                           ; 1 bytes @ 0x4
  2919                           
  2920                           
  2921                           ; 1 bytes @ 0x4
  2922  0074                     	ds	1
  2923  0075                     ??_MTOUCH_Button_Tick:	
  2924  0075                     ??_MTOUCH_Proximity_Tick:	
  2925                           ; 1 bytes @ 0x5
  2926                           
  2927  0075                     ___bmul@multiplier:	
  2928                           ; 1 bytes @ 0x5
  2929                           
  2930                           
  2931                           ; 1 bytes @ 0x5
  2932  0075                     	ds	1
  2933  0076                     ??_MTOUCH_Sensor_Calibrate:	
  2934  0076                     ??_Proximity_Baseline_Get_helper:	
  2935                           ; 1 bytes @ 0x6
  2936                           
  2937  0076                     ??_MTOUCH_Sensor_isCalibrated:	
  2938                           ; 1 bytes @ 0x6
  2939                           
  2940  0076                     ??_MTOUCH_Sensor_wasSampled:	
  2941                           ; 1 bytes @ 0x6
  2942                           
  2943  0076                     ?_MTOUCH_Sensor_RawSample_Get:	
  2944                           ; 1 bytes @ 0x6
  2945                           
  2946  0076                     Sensor_getScanGroupIndex@sensor:	
  2947                           ; 2 bytes @ 0x6
  2948                           
  2949  0076                     MTOUCH_Button_Tick@i:	
  2950                           ; 1 bytes @ 0x6
  2951                           
  2952  0076                     Proximity_Baseline_Update@prox:	
  2953                           ; 1 bytes @ 0x6
  2954                           
  2955                           
  2956                           ; 1 bytes @ 0x6
  2957  0076                     	ds	1
  2958  0077                     ??_MTOUCH_Tick:	
  2959  0077                     ??_MTOUCH_Proximity_Reading_Get:	
  2960                           ; 1 bytes @ 0x7
  2961                           
  2962  0077                     Sensor_getScanGroupIndex@sensorGroup:	
  2963                           ; 1 bytes @ 0x7
  2964                           
  2965  0077                     MTOUCH_Sensor_Calibrate@sensor:	
  2966                           ; 1 bytes @ 0x7
  2967                           
  2968  0077                     MTOUCH_Sensor_isCalibrated@sensor:	
  2969                           ; 1 bytes @ 0x7
  2970                           
  2971  0077                     MTOUCH_Sensor_wasSampled@sensor:	
  2972                           ; 1 bytes @ 0x7
  2973                           
  2974  0077                     MTOUCH_Proximity_Reading_Get@name:	
  2975                           ; 1 bytes @ 0x7
  2976                           
  2977                           
  2978                           ; 1 bytes @ 0x7
  2979  0077                     	ds	1
  2980  0078                     ??_Sensor_RawSample_Update:	
  2981  0078                     ??_Sensor_postAcquisitionProcess:	
  2982                           ; 1 bytes @ 0x8
  2983                           
  2984  0078                     ??_MTOUCH_Sensor_RawSample_Get:	
  2985                           ; 1 bytes @ 0x8
  2986                           
  2987  0078                     ??_MTOUCH_Button_Initialize:	
  2988                           ; 1 bytes @ 0x8
  2989                           
  2990  0078                     Sensor_autoCalibration@adcIndex:	
  2991                           ; 1 bytes @ 0x8
  2992                           
  2993                           
  2994                           ; 1 bytes @ 0x8
  2995  0078                     	ds	1
  2996  0079                     Sensor_autoCalibration@sensor:	
  2997  0079                     MTOUCH_Sensor_RawSample_Get@name:	
  2998                           ; 1 bytes @ 0x9
  2999                           
  3000                           
  3001                           ; 1 bytes @ 0x9
  3002  0079                     	ds	1
  3003  007A                     ??_MTOUCH_Proximity_ServiceAll:	
  3004  007A                     ??_MTOUCH_Proximity_Baseline_Get:	
  3005                           ; 1 bytes @ 0xA
  3006                           
  3007  007A                     ??_MTOUCH_Service_Mainloop:	
  3008                           ; 1 bytes @ 0xA
  3009                           
  3010  007A                     ??_main:	
  3011                           ; 1 bytes @ 0xA
  3012                           
  3013                           
  3014                           	psect	cstackBANK0
  3015  0020                     __pcstackBANK0:	
  3016                           ; 1 bytes @ 0xA
  3017                           
  3018  0020                     ??_Sensor_autoCalibration:	
  3019  0020                     ??_Button_Reading_Update:	
  3020                           ; 1 bytes @ 0x0
  3021                           
  3022  0020                     ??_Button_Deviation_Update:	
  3023                           ; 1 bytes @ 0x0
  3024                           
  3025  0020                     ??_Button_Baseline_Initialize:	
  3026                           ; 1 bytes @ 0x0
  3027                           
  3028  0020                     ??_Button_Baseline_Update:	
  3029                           ; 1 bytes @ 0x0
  3030                           
  3031  0020                     ??_Proximity_Reading_Update:	
  3032                           ; 1 bytes @ 0x0
  3033                           
  3034  0020                     ??_Proximity_Baseline_Initialize:	
  3035                           ; 1 bytes @ 0x0
  3036                           
  3037  0020                     Sensor_postAcquisitionProcess@adcIndex:	
  3038                           ; 1 bytes @ 0x0
  3039                           
  3040  0020                     Sensor_RawSample_Update@adcIndex:	
  3041                           ; 1 bytes @ 0x0
  3042                           
  3043  0020                     MTOUCH_Button_Initialize@name:	
  3044                           ; 1 bytes @ 0x0
  3045                           
  3046  0020                     Proximity_Baseline_Get_helper@name:	
  3047                           ; 1 bytes @ 0x0
  3048                           
  3049                           
  3050                           ; 1 bytes @ 0x0
  3051  0020                     	ds	1
  3052  0021                     ?_MTOUCH_Proximity_Baseline_Get:	
  3053  0021                     Sensor_RawSample_Update@sensor:	
  3054                           ; 4 bytes @ 0x1
  3055                           
  3056  0021                     MTOUCH_Button_Initialize@button:	
  3057                           ; 1 bytes @ 0x1
  3058                           
  3059  0021                     Sensor_postAcquisitionProcess@deviation:	
  3060                           ; 1 bytes @ 0x1
  3061                           
  3062                           
  3063                           ; 2 bytes @ 0x1
  3064  0021                     	ds	1
  3065  0022                     Button_Reading_Update@button:	
  3066                           
  3067                           ; 1 bytes @ 0x2
  3068  0022                     	ds	1
  3069  0023                     Sensor_postAcquisitionProcess@sensor:	
  3070                           
  3071                           ; 1 bytes @ 0x3
  3072  0023                     	ds	1
  3073  0024                     ?_Sensor_Acq_ExecutePacket:	
  3074  0024                     Sensor_Acq_ExecutePacket@sensor_adc2:	
  3075                           ; 1 bytes @ 0x4
  3076                           
  3077  0024                     Button_Baseline_Initialize@button:	
  3078                           ; 1 bytes @ 0x4
  3079                           
  3080  0024                     Proximity_Reading_Update@prox:	
  3081                           ; 1 bytes @ 0x4
  3082                           
  3083  0024                     Proximity_Baseline_Initialize@prox:	
  3084                           ; 1 bytes @ 0x4
  3085                           
  3086                           
  3087                           ; 1 bytes @ 0x4
  3088  0024                     	ds	1
  3089  0025                     ??_Sensor_Acq_ExecutePacket:	
  3090                           
  3091                           ; 1 bytes @ 0x5
  3092  0025                     	ds	1
  3093  0026                     Button_Baseline_Update@button:	
  3094  0026                     MTOUCH_Proximity_Baseline_Get@name:	
  3095                           ; 1 bytes @ 0x6
  3096                           
  3097                           
  3098                           ; 1 bytes @ 0x6
  3099  0026                     	ds	1
  3100  0027                     ?_Button_State_Initializing:	
  3101  0027                     ?_Button_State_NotPressed:	
  3102                           ; 1 bytes @ 0x7
  3103                           
  3104  0027                     ?_Button_State_Pressed:	
  3105                           ; 1 bytes @ 0x7
  3106                           
  3107  0027                     ?_Proximity_State_Initializing:	
  3108                           ; 1 bytes @ 0x7
  3109                           
  3110  0027                     ?_Proximity_State_NotActivated:	
  3111                           ; 1 bytes @ 0x7
  3112                           
  3113  0027                     ?_Proximity_State_Activated:	
  3114                           ; 1 bytes @ 0x7
  3115                           
  3116  0027                     ??_Proximity_Deviation_Update:	
  3117                           ; 1 bytes @ 0x7
  3118                           
  3119  0027                     Sensor_Acq_ExecutePacket@ADCOMCON_temp:	
  3120                           ; 1 bytes @ 0x7
  3121                           
  3122  0027                     Button_State_Initializing@button:	
  3123                           ; 1 bytes @ 0x7
  3124                           
  3125  0027                     Button_State_NotPressed@button:	
  3126                           ; 1 bytes @ 0x7
  3127                           
  3128  0027                     Button_State_Pressed@button:	
  3129                           ; 1 bytes @ 0x7
  3130                           
  3131  0027                     Proximity_State_Initializing@prox:	
  3132                           ; 1 bytes @ 0x7
  3133                           
  3134  0027                     Proximity_State_NotActivated@prox:	
  3135                           ; 1 bytes @ 0x7
  3136                           
  3137  0027                     Proximity_State_Activated@prox:	
  3138                           ; 1 bytes @ 0x7
  3139                           
  3140                           
  3141                           ; 1 bytes @ 0x7
  3142  0027                     	ds	1
  3143  0028                     ??_Button_State_Initializing:	
  3144  0028                     ??_Button_State_NotPressed:	
  3145                           ; 1 bytes @ 0x8
  3146                           
  3147  0028                     ??_Button_State_Pressed:	
  3148                           ; 1 bytes @ 0x8
  3149                           
  3150  0028                     ??_Proximity_State_Initializing:	
  3151                           ; 1 bytes @ 0x8
  3152                           
  3153  0028                     ??_Proximity_State_NotActivated:	
  3154                           ; 1 bytes @ 0x8
  3155                           
  3156  0028                     ??_Proximity_State_Activated:	
  3157                           ; 1 bytes @ 0x8
  3158                           
  3159  0028                     Sensor_Acq_ExecutePacket@AD1CON2_temp:	
  3160                           ; 1 bytes @ 0x8
  3161                           
  3162                           
  3163                           ; 1 bytes @ 0x8
  3164  0028                     	ds	1
  3165  0029                     Sensor_Acq_ExecutePacket@AD2CON2_temp:	
  3166                           
  3167                           ; 1 bytes @ 0x9
  3168  0029                     	ds	1
  3169  002A                     ??_Button_Service:	
  3170  002A                     Sensor_Acq_ExecutePacket@ADxIF_flag:	
  3171                           ; 1 bytes @ 0xA
  3172                           
  3173                           
  3174                           ; 1 bytes @ 0xA
  3175  002A                     	ds	1
  3176  002B                     Sensor_Acq_ExecutePacket@error:	
  3177                           
  3178                           ; 1 bytes @ 0xB
  3179  002B                     	ds	1
  3180  002C                     Sensor_Acq_ExecutePacket@activeSensor:	
  3181  002C                     Button_Service@name:	
  3182                           ; 1 bytes @ 0xC
  3183                           
  3184  002C                     Proximity_State_NotActivated@deviation:	
  3185                           ; 1 bytes @ 0xC
  3186                           
  3187                           
  3188                           ; 4 bytes @ 0xC
  3189  002C                     	ds	1
  3190  002D                     Button_Service@button:	
  3191  002D                     Sensor_Acq_ExecutePacket@last_a:	
  3192                           ; 1 bytes @ 0xD
  3193                           
  3194                           
  3195                           ; 2 bytes @ 0xD
  3196  002D                     	ds	1
  3197  002E                     ??_MTOUCH_Button_ServiceAll:	
  3198                           
  3199                           ; 1 bytes @ 0xE
  3200  002E                     	ds	1
  3201  002F                     MTOUCH_Button_ServiceAll@button:	
  3202  002F                     Sensor_Acq_ExecutePacket@last_b:	
  3203                           ; 1 bytes @ 0xF
  3204                           
  3205                           
  3206                           ; 2 bytes @ 0xF
  3207  002F                     	ds	1
  3208  0030                     Proximity_Deviation_Update@deviation:	
  3209                           
  3210                           ; 4 bytes @ 0x10
  3211  0030                     	ds	1
  3212  0031                     Sensor_Acq_ExecutePacket@packet_counter:	
  3213                           
  3214                           ; 1 bytes @ 0x11
  3215  0031                     	ds	1
  3216  0032                     Sensor_Acq_ExecutePacket@sensor_globalFlags:	
  3217                           
  3218                           ; 1 bytes @ 0x12
  3219  0032                     	ds	1
  3220  0033                     Sensor_Acq_ExecutePacket@sensor_adc1:	
  3221                           
  3222                           ; 1 bytes @ 0x13
  3223  0033                     	ds	1
  3224  0034                     ?_Sensor_Scanfrequency_Evaluation:	
  3225  0034                     Sensor_Scanfrequency_Evaluation@sensor_adc2:	
  3226                           ; 1 bytes @ 0x14
  3227                           
  3228  0034                     Proximity_Deviation_Update@name:	
  3229                           ; 1 bytes @ 0x14
  3230                           
  3231                           
  3232                           ; 1 bytes @ 0x14
  3233  0034                     	ds	1
  3234  0035                     ??_Sensor_Scanfrequency_Evaluation:	
  3235  0035                     ??_Proximity_Service:	
  3236                           ; 1 bytes @ 0x15
  3237                           
  3238                           
  3239                           ; 1 bytes @ 0x15
  3240  0035                     	ds	1
  3241  0036                     Proximity_Service@name:	
  3242                           
  3243                           ; 1 bytes @ 0x16
  3244  0036                     	ds	1
  3245  0037                     Sensor_Scanfrequency_Evaluation@sensor_adc1:	
  3246  0037                     Proximity_Service@prox:	
  3247                           ; 1 bytes @ 0x17
  3248                           
  3249                           
  3250                           ; 1 bytes @ 0x17
  3251  0037                     	ds	1
  3252  0038                     Sensor_Scanfrequency_Evaluation@packet_noise_Max:	
  3253                           
  3254                           ; 2 bytes @ 0x18
  3255  0038                     	ds	2
  3256  003A                     Sensor_Scanfrequency_Evaluation@best_sample_period:	
  3257                           
  3258                           ; 1 bytes @ 0x1A
  3259  003A                     	ds	1
  3260  003B                     Sensor_Scanfrequency_Evaluation@best_packet_sample:	
  3261                           
  3262                           ; 4 bytes @ 0x1B
  3263  003B                     	ds	4
  3264  003F                     Sensor_Scanfrequency_Evaluation@i:	
  3265                           
  3266                           ; 1 bytes @ 0x1F
  3267  003F                     	ds	1
  3268  0040                     ?_Sensor_Acquisition:	
  3269  0040                     Sensor_Acquisition@sensor_adc2:	
  3270                           ; 1 bytes @ 0x20
  3271                           
  3272                           
  3273                           ; 1 bytes @ 0x20
  3274  0040                     	ds	1
  3275  0041                     ??_Sensor_Acquisition:	
  3276                           
  3277                           ; 1 bytes @ 0x21
  3278  0041                     	ds	2
  3279  0043                     Sensor_Acquisition@error:	
  3280                           
  3281                           ; 1 bytes @ 0x23
  3282  0043                     	ds	1
  3283  0044                     Sensor_Acquisition@sensor_adc1:	
  3284                           
  3285                           ; 1 bytes @ 0x24
  3286  0044                     	ds	1
  3287  0045                     ??_Sensor_Service:	
  3288                           
  3289                           ; 1 bytes @ 0x25
  3290  0045                     	ds	5
  3291  004A                     Sensor_Service@scanGroup:	
  3292                           
  3293                           ; 1 bytes @ 0x2A
  3294  004A                     	ds	1
  3295  004B                     Sensor_Service@error:	
  3296                           
  3297                           ; 1 bytes @ 0x2B
  3298  004B                     	ds	1
  3299  004C                     Sensor_Service@sensor_adc1:	
  3300                           
  3301                           ; 1 bytes @ 0x2C
  3302  004C                     	ds	1
  3303  004D                     Sensor_Service@sensor_adc2:	
  3304                           
  3305                           ; 1 bytes @ 0x2D
  3306  004D                     	ds	1
  3307  004E                     ??_MTOUCH_Sensor_SampleAll:	
  3308                           
  3309                           ; 1 bytes @ 0x2E
  3310  004E                     	ds	1
  3311                           
  3312                           	psect	maintext
  3313  0B15                     __pmaintext:	
  3314 ;;
  3315 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3316 ;;
  3317 ;; *************** function _main *****************
  3318 ;; Defined at:
  3319 ;;		line 91 in file "main.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;		None
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : B1F/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3333 ;;      Params:         0       0       0       0       0       0       0       0
  3334 ;;      Locals:         0       0       0       0       0       0       0       0
  3335 ;;      Temps:          0       0       0       0       0       0       0       0
  3336 ;;      Totals:         0       0       0       0       0       0       0       0
  3337 ;;Total ram usage:        0 bytes
  3338 ;; Hardware stack levels required when called:   10
  3339 ;; This function calls:
  3340 ;;		_MTOUCH_Button_SetNotPressedCallback
  3341 ;;		_MTOUCH_Button_SetPressedCallback
  3342 ;;		_MTOUCH_Proximity_SetActivatedCallback
  3343 ;;		_MTOUCH_Proximity_SetNotActivatedCallback
  3344 ;;		_MTOUCH_Service_Mainloop
  3345 ;;		_SYSTEM_Initialize
  3346 ;;		_USART_SendChar
  3347 ;; This function is called by:
  3348 ;;		Startup code after reset
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _main
  3354  0B15                     _main:	
  3355                           
  3356                           ;main.c: 94: SYSTEM_Initialize();
  3357                           
  3358                           ;incstack = 0
  3359                           ; Regs used in _main: [allreg]
  3360  0B15  3188  20BB  318B   	fcall	_SYSTEM_Initialize
  3361                           
  3362                           ;main.c: 111: MTOUCH_Button_SetPressedCallback(processButtonTouch);
  3363  0B18  3002               	movlw	low _processButtonTouch
  3364  0B19  00F2               	movwf	MTOUCH_Button_SetPressedCallback@callback
  3365  0B1A  3008               	movlw	high _processButtonTouch
  3366  0B1B  00F3               	movwf	MTOUCH_Button_SetPressedCallback@callback+1
  3367  0B1C  3188  2027  318B   	fcall	_MTOUCH_Button_SetPressedCallback
  3368                           
  3369                           ;main.c: 112: MTOUCH_Button_SetNotPressedCallback(processButtonRelease);
  3370  0B1F  3000               	movlw	low _processButtonRelease
  3371  0B20  00F2               	movwf	MTOUCH_Button_SetNotPressedCallback@callback
  3372  0B21  3008               	movlw	high _processButtonRelease
  3373  0B22  00F3               	movwf	MTOUCH_Button_SetNotPressedCallback@callback+1
  3374  0B23  3188  2021  318B   	fcall	_MTOUCH_Button_SetNotPressedCallback
  3375                           
  3376                           ;main.c: 113: MTOUCH_Proximity_SetActivatedCallback(processProximityActivate);
  3377  0B26  3003               	movlw	low _processProximityActivate
  3378  0B27  00F2               	movwf	MTOUCH_Proximity_SetActivatedCallback@callback
  3379  0B28  3008               	movlw	high _processProximityActivate
  3380  0B29  00F3               	movwf	MTOUCH_Proximity_SetActivatedCallback@callback+1
  3381  0B2A  3188  202D  318B   	fcall	_MTOUCH_Proximity_SetActivatedCallback
  3382                           
  3383                           ;main.c: 114: MTOUCH_Proximity_SetNotActivatedCallback(processProximityNotActivate);
  3384  0B2D  3005               	movlw	low _processProximityNotActivate
  3385  0B2E  00F2               	movwf	MTOUCH_Proximity_SetNotActivatedCallback@callback
  3386  0B2F  3008               	movlw	high _processProximityNotActivate
  3387  0B30  00F3               	movwf	MTOUCH_Proximity_SetNotActivatedCallback@callback+1
  3388  0B31  3188  2033  318B   	fcall	_MTOUCH_Proximity_SetNotActivatedCallback
  3389  0B34                     l5759:	
  3390                           ;main.c: 116: while (1)
  3391                           
  3392                           
  3393                           ;main.c: 117: {
  3394                           ;main.c: 119: MTOUCH_Service_Mainloop();
  3395  0B34  3189  211C  318B   	fcall	_MTOUCH_Service_Mainloop
  3396                           
  3397                           ;main.c: 120: USART_SendChar(240);
  3398  0B37  30F0               	movlw	240
  3399  0B38  3180  2000  318B   	fcall	_USART_SendChar
  3400  0B3B  2B34               	goto	l5759
  3401  0B3C                     __end_of_main:	
  3402                           
  3403                           	psect	text1
  3404  08BB                     __ptext1:	
  3405 ;; *************** function _SYSTEM_Initialize *****************
  3406 ;; Defined at:
  3407 ;;		line 66 in file "mcc_generated_files/mcc.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;		None
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		wreg, status,2, status,0, pclath, cstack
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3421 ;;      Params:         0       0       0       0       0       0       0       0
  3422 ;;      Locals:         0       0       0       0       0       0       0       0
  3423 ;;      Temps:          0       0       0       0       0       0       0       0
  3424 ;;      Totals:         0       0       0       0       0       0       0       0
  3425 ;;Total ram usage:        0 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    4
  3428 ;; This function calls:
  3429 ;;		_EUSART_Initialize
  3430 ;;		_OSCILLATOR_Initialize
  3431 ;;		_PIN_MANAGER_Initialize
  3432 ;;		_TMR2_Initialize
  3433 ;;		_WDT_Initialize
  3434 ;; This function is called by:
  3435 ;;		_main
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           
  3440                           ;psect for function _SYSTEM_Initialize
  3441  08BB                     _SYSTEM_Initialize:	
  3442                           
  3443                           ;mcc.c: 69: PIN_MANAGER_Initialize();
  3444                           
  3445                           ;incstack = 0
  3446                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3447  08BB  318A  220A  3188   	fcall	_PIN_MANAGER_Initialize
  3448                           
  3449                           ;mcc.c: 70: OSCILLATOR_Initialize();
  3450  08BE  3188  2014  3188   	fcall	_OSCILLATOR_Initialize
  3451                           
  3452                           ;mcc.c: 71: WDT_Initialize();
  3453  08C1  3188  2018  3188   	fcall	_WDT_Initialize
  3454                           
  3455                           ;mcc.c: 72: TMR2_Initialize();
  3456  08C4  3188  207D  3188   	fcall	_TMR2_Initialize
  3457                           
  3458                           ;mcc.c: 73: EUSART_Initialize();
  3459  08C7  3189  21EF         	fcall	_EUSART_Initialize
  3460  08C9  0008               	return
  3461  08CA                     __end_of_SYSTEM_Initialize:	
  3462                           
  3463                           	psect	text2
  3464  0818                     __ptext2:	
  3465 ;; *************** function _WDT_Initialize *****************
  3466 ;; Defined at:
  3467 ;;		line 82 in file "mcc_generated_files/mcc.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;		None
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;		None
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3481 ;;      Params:         0       0       0       0       0       0       0       0
  3482 ;;      Locals:         0       0       0       0       0       0       0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0       0
  3484 ;;      Totals:         0       0       0       0       0       0       0       0
  3485 ;;Total ram usage:        0 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; Hardware stack levels required when called:    2
  3488 ;; This function calls:
  3489 ;;		Nothing
  3490 ;; This function is called by:
  3491 ;;		_SYSTEM_Initialize
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           
  3496                           ;psect for function _WDT_Initialize
  3497  0818                     _WDT_Initialize:	
  3498                           
  3499                           ;mcc.c: 85: WDTCON = 0x16;
  3500                           
  3501                           ;incstack = 0
  3502                           ; Regs used in _WDT_Initialize: [wreg]
  3503  0818  3016               	movlw	22
  3504  0819  0021               	movlb	1	; select bank1
  3505  081A  0097               	movwf	23	;volatile
  3506  081B  0008               	return
  3507  081C                     __end_of_WDT_Initialize:	
  3508                           
  3509                           	psect	text3
  3510  087D                     __ptext3:	
  3511 ;; *************** function _TMR2_Initialize *****************
  3512 ;; Defined at:
  3513 ;;		line 61 in file "mcc_generated_files/tmr2.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;		None
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;		None
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      void 
  3520 ;; Registers used:
  3521 ;;		wreg, status,2, status,0, pclath, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3527 ;;      Params:         0       0       0       0       0       0       0       0
  3528 ;;      Locals:         0       0       0       0       0       0       0       0
  3529 ;;      Temps:          0       0       0       0       0       0       0       0
  3530 ;;      Totals:         0       0       0       0       0       0       0       0
  3531 ;;Total ram usage:        0 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:    3
  3534 ;; This function calls:
  3535 ;;		_TMR2_StartTimer
  3536 ;; This function is called by:
  3537 ;;		_SYSTEM_Initialize
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           
  3542                           ;psect for function _TMR2_Initialize
  3543  087D                     _TMR2_Initialize:	
  3544                           
  3545                           ;tmr2.c: 66: T2CON = 0x00;
  3546                           
  3547                           ;incstack = 0
  3548                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3549  087D  0020               	movlb	0	; select bank0
  3550  087E  019C               	clrf	28	;volatile
  3551                           
  3552                           ;tmr2.c: 69: PR2 = 0xFF;
  3553  087F  30FF               	movlw	255
  3554  0880  009B               	movwf	27	;volatile
  3555                           
  3556                           ;tmr2.c: 72: TMR2 = 0x00;
  3557  0881  019A               	clrf	26	;volatile
  3558                           
  3559                           ;tmr2.c: 75: PIR1bits.TMR2IF = 0;
  3560  0882  1091               	bcf	17,1	;volatile
  3561                           
  3562                           ;tmr2.c: 78: TMR2_StartTimer();
  3563  0883  3188  2006         	fcall	_TMR2_StartTimer
  3564  0885  0008               	return
  3565  0886                     __end_of_TMR2_Initialize:	
  3566                           
  3567                           	psect	text4
  3568  0A0A                     __ptext4:	
  3569 ;; *************** function _PIN_MANAGER_Initialize *****************
  3570 ;; Defined at:
  3571 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;		None
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;		None
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      void 
  3578 ;; Registers used:
  3579 ;;		wreg, status,2
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3585 ;;      Params:         0       0       0       0       0       0       0       0
  3586 ;;      Locals:         0       0       0       0       0       0       0       0
  3587 ;;      Temps:          0       0       0       0       0       0       0       0
  3588 ;;      Totals:         0       0       0       0       0       0       0       0
  3589 ;;Total ram usage:        0 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    2
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_SYSTEM_Initialize
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           
  3600                           ;psect for function _PIN_MANAGER_Initialize
  3601  0A0A                     _PIN_MANAGER_Initialize:	
  3602                           
  3603                           ;pin_manager.c: 57: LATA = 0x00;
  3604                           
  3605                           ;incstack = 0
  3606                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3607  0A0A  0022               	movlb	2	; select bank2
  3608  0A0B  018C               	clrf	12	;volatile
  3609                           
  3610                           ;pin_manager.c: 58: LATB = 0x00;
  3611  0A0C  018D               	clrf	13	;volatile
  3612                           
  3613                           ;pin_manager.c: 59: LATC = 0x00;
  3614  0A0D  018E               	clrf	14	;volatile
  3615                           
  3616                           ;pin_manager.c: 64: TRISA = 0x3F;
  3617  0A0E  303F               	movlw	63
  3618  0A0F  0021               	movlb	1	; select bank1
  3619  0A10  008C               	movwf	12	;volatile
  3620                           
  3621                           ;pin_manager.c: 65: TRISB = 0x70;
  3622  0A11  3070               	movlw	112
  3623  0A12  008D               	movwf	13	;volatile
  3624                           
  3625                           ;pin_manager.c: 66: TRISC = 0xFF;
  3626  0A13  30FF               	movlw	255
  3627  0A14  008E               	movwf	14	;volatile
  3628                           
  3629                           ;pin_manager.c: 71: ANSELC = 0xFF;
  3630  0A15  30FF               	movlw	255
  3631  0A16  0023               	movlb	3	; select bank3
  3632  0A17  008E               	movwf	14	;volatile
  3633                           
  3634                           ;pin_manager.c: 72: ANSELB = 0x50;
  3635  0A18  3050               	movlw	80
  3636  0A19  008D               	movwf	13	;volatile
  3637                           
  3638                           ;pin_manager.c: 73: ANSELA = 0x37;
  3639  0A1A  3037               	movlw	55
  3640  0A1B  008C               	movwf	12	;volatile
  3641                           
  3642                           ;pin_manager.c: 78: WPUB = 0xF0;
  3643  0A1C  30F0               	movlw	240
  3644  0A1D  0024               	movlb	4	; select bank4
  3645  0A1E  008D               	movwf	13	;volatile
  3646                           
  3647                           ;pin_manager.c: 79: WPUA = 0x3F;
  3648  0A1F  303F               	movlw	63
  3649  0A20  008C               	movwf	12	;volatile
  3650                           
  3651                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 0;
  3652  0A21  0021               	movlb	1	; select bank1
  3653  0A22  1395               	bcf	21,7	;volatile
  3654                           
  3655                           ;pin_manager.c: 86: APFCON = 0x00;
  3656  0A23  0022               	movlb	2	; select bank2
  3657  0A24  019D               	clrf	29	;volatile
  3658  0A25  0008               	return
  3659  0A26                     __end_of_PIN_MANAGER_Initialize:	
  3660                           
  3661                           	psect	text5
  3662  0814                     __ptext5:	
  3663 ;; *************** function _OSCILLATOR_Initialize *****************
  3664 ;; Defined at:
  3665 ;;		line 76 in file "mcc_generated_files/mcc.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;		None
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3679 ;;      Params:         0       0       0       0       0       0       0       0
  3680 ;;      Locals:         0       0       0       0       0       0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0       0
  3682 ;;      Totals:         0       0       0       0       0       0       0       0
  3683 ;;Total ram usage:        0 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    2
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_SYSTEM_Initialize
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           
  3694                           ;psect for function _OSCILLATOR_Initialize
  3695  0814                     _OSCILLATOR_Initialize:	
  3696                           
  3697                           ;mcc.c: 79: OSCCON = 0xF0;
  3698                           
  3699                           ;incstack = 0
  3700                           ; Regs used in _OSCILLATOR_Initialize: [wreg]
  3701  0814  30F0               	movlw	240
  3702  0815  0021               	movlb	1	; select bank1
  3703  0816  0099               	movwf	25	;volatile
  3704  0817  0008               	return
  3705  0818                     __end_of_OSCILLATOR_Initialize:	
  3706                           
  3707                           	psect	text6
  3708  09EF                     __ptext6:	
  3709 ;; *************** function _EUSART_Initialize *****************
  3710 ;; Defined at:
  3711 ;;		line 75 in file "mcc_generated_files/eusart.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      void 
  3718 ;; Registers used:
  3719 ;;		wreg, status,2
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3725 ;;      Params:         0       0       0       0       0       0       0       0
  3726 ;;      Locals:         0       0       0       0       0       0       0       0
  3727 ;;      Temps:          1       0       0       0       0       0       0       0
  3728 ;;      Totals:         1       0       0       0       0       0       0       0
  3729 ;;Total ram usage:        1 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; Hardware stack levels required when called:    2
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_SYSTEM_Initialize
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           
  3740                           ;psect for function _EUSART_Initialize
  3741  09EF                     _EUSART_Initialize:	
  3742                           
  3743                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  3744                           
  3745                           ;incstack = 0
  3746                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  3747  09EF  0021               	movlb	1	; select bank1
  3748  09F0  1291               	bcf	17,5	;volatile
  3749                           
  3750                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  3751  09F1  1211               	bcf	17,4	;volatile
  3752                           
  3753                           ;eusart.c: 84: BAUDCON = 0x09;
  3754  09F2  3009               	movlw	9
  3755  09F3  0023               	movlb	3	; select bank3
  3756  09F4  009F               	movwf	31	;volatile
  3757                           
  3758                           ;eusart.c: 87: RCSTA = 0x90;
  3759  09F5  3090               	movlw	144
  3760  09F6  009D               	movwf	29	;volatile
  3761                           
  3762                           ;eusart.c: 90: TXSTA = 0x24;
  3763  09F7  3024               	movlw	36
  3764  09F8  009E               	movwf	30	;volatile
  3765                           
  3766                           ;eusart.c: 93: SPBRGL = 0x40;
  3767  09F9  3040               	movlw	64
  3768  09FA  009B               	movwf	27	;volatile
  3769                           
  3770                           ;eusart.c: 96: SPBRGH = 0x03;
  3771  09FB  3003               	movlw	3
  3772  09FC  009C               	movwf	28	;volatile
  3773                           
  3774                           ;eusart.c: 100: eusartTxHead = 0;
  3775  09FD  01FB               	clrf	_eusartTxHead	;volatile
  3776                           
  3777                           ;eusart.c: 101: eusartTxTail = 0;
  3778  09FE  01FA               	clrf	_eusartTxTail	;volatile
  3779                           
  3780                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  3781  09FF  3010               	movlw	16
  3782  0A00  00F2               	movwf	??_EUSART_Initialize
  3783  0A01  0872               	movf	??_EUSART_Initialize,w
  3784  0A02  0020               	movlb	0	; select bank0
  3785  0A03  00EF               	movwf	_eusartTxBufferRemaining	;volatile
  3786                           
  3787                           ;eusart.c: 104: eusartRxHead = 0;
  3788  0A04  01EE               	clrf	_eusartRxHead	;volatile
  3789                           
  3790                           ;eusart.c: 105: eusartRxTail = 0;
  3791  0A05  01ED               	clrf	_eusartRxTail	;volatile
  3792                           
  3793                           ;eusart.c: 106: eusartRxCount = 0;
  3794  0A06  01EC               	clrf	_eusartRxCount	;volatile
  3795                           
  3796                           ;eusart.c: 109: PIE1bits.RCIE = 1;
  3797  0A07  0021               	movlb	1	; select bank1
  3798  0A08  1691               	bsf	17,5	;volatile
  3799  0A09  0008               	return
  3800  0A0A                     __end_of_EUSART_Initialize:	
  3801                           
  3802                           	psect	text7
  3803  091C                     __ptext7:	
  3804 ;; *************** function _MTOUCH_Service_Mainloop *****************
  3805 ;; Defined at:
  3806 ;;		line 64 in file "mcc_generated_files/mtouch/mtouch.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;		None
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;		None
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  1    wreg      unsigned char 
  3813 ;; Registers used:
  3814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3820 ;;      Params:         0       0       0       0       0       0       0       0
  3821 ;;      Locals:         0       0       0       0       0       0       0       0
  3822 ;;      Temps:          0       0       0       0       0       0       0       0
  3823 ;;      Totals:         0       0       0       0       0       0       0       0
  3824 ;;Total ram usage:        0 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; Hardware stack levels required when called:    9
  3827 ;; This function calls:
  3828 ;;		_MTOUCH_Button_ServiceAll
  3829 ;;		_MTOUCH_Proximity_ServiceAll
  3830 ;;		_MTOUCH_Sensor_SampleAll
  3831 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  3832 ;;		_MTOUCH_Tick
  3833 ;; This function is called by:
  3834 ;;		_main
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838                           
  3839                           ;psect for function _MTOUCH_Service_Mainloop
  3840  091C                     _MTOUCH_Service_Mainloop:	
  3841                           
  3842                           ;mtouch.c: 66: if(MTOUCH_Sensor_SampleAll() == 0)
  3843                           
  3844                           ;incstack = 0
  3845                           ; Regs used in _MTOUCH_Service_Mainloop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3846  091C  3189  21D4  3189   	fcall	_MTOUCH_Sensor_SampleAll
  3847  091F  3A00               	xorlw	0
  3848  0920  1903               	btfsc	3,2
  3849  0921  0008               	return
  3850                           
  3851                           ;mtouch.c: 68: MTOUCH_Button_ServiceAll();
  3852                           
  3853                           ;mtouch.c: 67: return 0;
  3854                           ;	Return value of _MTOUCH_Service_Mainloop is never used
  3855  0922  3188  20DA  3189   	fcall	_MTOUCH_Button_ServiceAll
  3856                           
  3857                           ;mtouch.c: 69: MTOUCH_Proximity_ServiceAll();
  3858  0925  3188  200C  3189   	fcall	_MTOUCH_Proximity_ServiceAll
  3859                           
  3860                           ;mtouch.c: 70: MTOUCH_Sensor_Sampled_ResetAll();
  3861  0928  3189  212E  3189   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  3862                           
  3863                           ;mtouch.c: 71: MTOUCH_Tick();
  3864  092B  3188  2039         	fcall	_MTOUCH_Tick
  3865  092D  0008               	return
  3866  092E                     __end_of_MTOUCH_Service_Mainloop:	
  3867                           ;mtouch.c: 72: return 1;
  3868                           ;	Return value of _MTOUCH_Service_Mainloop is never used
  3869                           
  3870                           
  3871                           	psect	text8
  3872  0839                     __ptext8:	
  3873 ;; *************** function _MTOUCH_Tick *****************
  3874 ;; Defined at:
  3875 ;;		line 80 in file "mcc_generated_files/mtouch/mtouch.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;		None
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;		None
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      void 
  3882 ;; Registers used:
  3883 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3889 ;;      Params:         0       0       0       0       0       0       0       0
  3890 ;;      Locals:         0       0       0       0       0       0       0       0
  3891 ;;      Temps:          0       0       0       0       0       0       0       0
  3892 ;;      Totals:         0       0       0       0       0       0       0       0
  3893 ;;Total ram usage:        0 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    4
  3896 ;; This function calls:
  3897 ;;		_MTOUCH_Button_Tick
  3898 ;;		_MTOUCH_Proximity_Tick
  3899 ;; This function is called by:
  3900 ;;		_MTOUCH_Service_Mainloop
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           
  3905                           ;psect for function _MTOUCH_Tick
  3906  0839                     _MTOUCH_Tick:	
  3907                           
  3908                           ;mtouch.c: 82: MTOUCH_Button_Tick();
  3909                           
  3910                           ;incstack = 0
  3911                           ; Regs used in _MTOUCH_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3912  0839  3189  2141  3188   	fcall	_MTOUCH_Button_Tick
  3913                           
  3914                           ;mtouch.c: 83: MTOUCH_Proximity_Tick();
  3915  083C  3188  2010         	fcall	_MTOUCH_Proximity_Tick
  3916  083E  0008               	return
  3917  083F                     __end_of_MTOUCH_Tick:	
  3918                           
  3919                           	psect	text9
  3920  0810                     __ptext9:	
  3921 ;; *************** function _MTOUCH_Proximity_Tick *****************
  3922 ;; Defined at:
  3923 ;;		line 256 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;		None
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;		None
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      void 
  3930 ;; Registers used:
  3931 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3937 ;;      Params:         0       0       0       0       0       0       0       0
  3938 ;;      Locals:         0       0       0       0       0       0       0       0
  3939 ;;      Temps:          0       0       0       0       0       0       0       0
  3940 ;;      Totals:         0       0       0       0       0       0       0       0
  3941 ;;Total ram usage:        0 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; Hardware stack levels required when called:    3
  3944 ;; This function calls:
  3945 ;;		_Proximity_Tick_helper
  3946 ;; This function is called by:
  3947 ;;		_MTOUCH_Tick
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           
  3952                           ;psect for function _MTOUCH_Proximity_Tick
  3953  0810                     _MTOUCH_Proximity_Tick:	
  3954                           
  3955                           ;mtouch_proximity.c: 258: Proximity_Tick_helper(&mtouch_proximity[0]);
  3956                           
  3957                           ;incstack = 0
  3958                           ; Regs used in _MTOUCH_Proximity_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  3959  0810  30C0               	movlw	(low (_mtouch_proximity| 0))& (0+255)
  3960  0811  318A  22A4         	fcall	_Proximity_Tick_helper
  3961  0813  0008               	return
  3962  0814                     __end_of_MTOUCH_Proximity_Tick:	
  3963                           
  3964                           	psect	text10
  3965  0AA4                     __ptext10:	
  3966 ;; *************** function _Proximity_Tick_helper *****************
  3967 ;; Defined at:
  3968 ;;		line 260 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  prox            1    wreg     PTR struct .
  3971 ;;		 -> mtouch_proximity(18), 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  prox            1    4[COMMON] PTR struct .
  3974 ;;		 -> mtouch_proximity(18), 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3984 ;;      Params:         0       0       0       0       0       0       0       0
  3985 ;;      Locals:         1       0       0       0       0       0       0       0
  3986 ;;      Temps:          2       0       0       0       0       0       0       0
  3987 ;;      Totals:         3       0       0       0       0       0       0       0
  3988 ;;Total ram usage:        3 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:    2
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_MTOUCH_Proximity_Tick
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           
  3999                           ;psect for function _Proximity_Tick_helper
  4000  0AA4                     _Proximity_Tick_helper:	
  4001                           
  4002                           ;incstack = 0
  4003                           ; Regs used in _Proximity_Tick_helper: [wreg+fsr1l+fsr1h+status,2+status,0]
  4004                           ;Proximity_Tick_helper@prox stored from wreg
  4005  0AA4  00F4               	movwf	Proximity_Tick_helper@prox
  4006                           
  4007                           ;mtouch_proximity.c: 263: if ((prox->state) == MTOUCH_PROXIMITY_STATE_activated)
  4008  0AA5  0874               	movf	Proximity_Tick_helper@prox,w
  4009  0AA6  3E02               	addlw	2
  4010  0AA7  0086               	movwf	6
  4011  0AA8  0187               	clrf	7
  4012  0AA9  3002               	movlw	2
  4013  0AAA  0601               	xorwf	1,w
  4014  0AAB  1D03               	btfss	3,2
  4015  0AAC  0008               	return
  4016                           
  4017                           ;mtouch_proximity.c: 264: {
  4018                           ;mtouch_proximity.c: 265: (prox->counter)++;
  4019  0AAD  0874               	movf	Proximity_Tick_helper@prox,w
  4020  0AAE  3E0C               	addlw	12
  4021  0AAF  0086               	movwf	6
  4022  0AB0  0187               	clrf	7
  4023  0AB1  3001               	movlw	1
  4024  0AB2  0781               	addwf	1,f
  4025  0AB3  3141               	addfsr 1,1
  4026  0AB4  1803               	skipnc
  4027  0AB5  0A81               	incf	1,f
  4028                           
  4029                           ;mtouch_proximity.c: 266: if (prox->counter == (mtouch_prox_statecounter_t)0)
  4030  0AB6  0874               	movf	Proximity_Tick_helper@prox,w
  4031  0AB7  3E0C               	addlw	12
  4032  0AB8  0086               	movwf	6
  4033  0AB9  0187               	clrf	7
  4034  0ABA  0016               	moviw fsr1++
  4035  0ABB  0401               	iorwf	1,w
  4036  0ABC  1D03               	btfss	3,2
  4037  0ABD  0008               	return
  4038                           
  4039                           ;mtouch_proximity.c: 267: {
  4040                           ;mtouch_proximity.c: 268: prox->counter = (mtouch_prox_statecounter_t)0xFFFF;
  4041  0ABE  0874               	movf	Proximity_Tick_helper@prox,w
  4042  0ABF  3E0C               	addlw	12
  4043  0AC0  0086               	movwf	6
  4044  0AC1  0187               	clrf	7
  4045  0AC2  30FF               	movlw	255
  4046  0AC3  3FC0               	movwi [0]fsr1
  4047  0AC4  30FF               	movlw	255
  4048  0AC5  3FC1               	movwi [1]fsr1
  4049  0AC6  0008               	return
  4050  0AC7                     __end_of_Proximity_Tick_helper:	
  4051                           
  4052                           	psect	text11
  4053  0941                     __ptext11:	
  4054 ;; *************** function _MTOUCH_Button_Tick *****************
  4055 ;; Defined at:
  4056 ;;		line 287 in file "mcc_generated_files/mtouch/mtouch_button.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  i               1    6[COMMON] unsigned char 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4070 ;;      Params:         0       0       0       0       0       0       0       0
  4071 ;;      Locals:         1       0       0       0       0       0       0       0
  4072 ;;      Temps:          1       0       0       0       0       0       0       0
  4073 ;;      Totals:         2       0       0       0       0       0       0       0
  4074 ;;Total ram usage:        2 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    3
  4077 ;; This function calls:
  4078 ;;		_Button_Tick_helper
  4079 ;; This function is called by:
  4080 ;;		_MTOUCH_Tick
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           
  4085                           ;psect for function _MTOUCH_Button_Tick
  4086  0941                     _MTOUCH_Button_Tick:	
  4087                           
  4088                           ;mtouch_button.c: 289: uint8_t i;
  4089                           ;mtouch_button.c: 290: for (i = 0; i < 5; i++)
  4090                           
  4091                           ;incstack = 0
  4092                           ; Regs used in _MTOUCH_Button_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4093  0941  01F6               	clrf	MTOUCH_Button_Tick@i
  4094  0942                     L1:	
  4095  0942  3005               	movlw	5
  4096  0943  0276               	subwf	MTOUCH_Button_Tick@i,w
  4097  0944  1803               	btfsc	3,0
  4098  0945  0008               	return
  4099                           
  4100                           ;mtouch_button.c: 291: {
  4101                           ;mtouch_button.c: 292: Button_Tick_helper(&mtouch_button[i]);
  4102  0946  0876               	movf	MTOUCH_Button_Tick@i,w
  4103  0947  00F5               	movwf	??_MTOUCH_Button_Tick
  4104  0948  3003               	movlw	3
  4105  0949                     u3505:	
  4106  0949  35F5               	lslf	??_MTOUCH_Button_Tick,f
  4107  094A  3EFF               	addlw	-1
  4108  094B  1D03               	skipz
  4109  094C  2949               	goto	u3505
  4110  094D  3575               	lslf	??_MTOUCH_Button_Tick,w
  4111  094E  3EA0               	addlw	(low (_mtouch_button| (0+256)))& (0+255)
  4112  094F  318A  22EE  3189   	fcall	_Button_Tick_helper
  4113  0952  3001               	movlw	1
  4114  0953  00F5               	movwf	??_MTOUCH_Button_Tick
  4115  0954  0875               	movf	??_MTOUCH_Button_Tick,w
  4116  0955  07F6               	addwf	MTOUCH_Button_Tick@i,f
  4117  0956  2942               	goto	L1
  4118  0957                     __end_of_MTOUCH_Button_Tick:	
  4119                           
  4120                           	psect	text12
  4121  0AEE                     __ptext12:	
  4122 ;; *************** function _Button_Tick_helper *****************
  4123 ;; Defined at:
  4124 ;;		line 295 in file "mcc_generated_files/mtouch/mtouch_button.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  button          1    wreg     PTR struct .
  4127 ;;		 -> mtouch_button(80), 
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;  button          1    4[COMMON] PTR struct .
  4130 ;;		 -> mtouch_button(80), 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4140 ;;      Params:         0       0       0       0       0       0       0       0
  4141 ;;      Locals:         1       0       0       0       0       0       0       0
  4142 ;;      Temps:          2       0       0       0       0       0       0       0
  4143 ;;      Totals:         3       0       0       0       0       0       0       0
  4144 ;;Total ram usage:        3 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; Hardware stack levels required when called:    2
  4147 ;; This function calls:
  4148 ;;		Nothing
  4149 ;; This function is called by:
  4150 ;;		_MTOUCH_Button_Tick
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           
  4155                           ;psect for function _Button_Tick_helper
  4156  0AEE                     _Button_Tick_helper:	
  4157                           
  4158                           ;incstack = 0
  4159                           ; Regs used in _Button_Tick_helper: [wreg+fsr1l+fsr1h+status,2+status,0]
  4160                           ;Button_Tick_helper@button stored from wreg
  4161  0AEE  00F4               	movwf	Button_Tick_helper@button
  4162                           
  4163                           ;mtouch_button.c: 298: if ((button->state) == MTOUCH_BUTTON_STATE_pressed)
  4164  0AEF  0874               	movf	Button_Tick_helper@button,w
  4165  0AF0  3E02               	addlw	2
  4166  0AF1  0086               	movwf	6
  4167  0AF2  3001               	movlw	1	; select bank2/3
  4168  0AF3  0087               	movwf	7
  4169  0AF4  3002               	movlw	2
  4170  0AF5  0601               	xorwf	1,w
  4171  0AF6  1D03               	btfss	3,2
  4172  0AF7  0008               	return
  4173                           
  4174                           ;mtouch_button.c: 299: {
  4175                           ;mtouch_button.c: 300: (button->counter)++;
  4176  0AF8  0874               	movf	Button_Tick_helper@button,w
  4177  0AF9  3E0A               	addlw	10
  4178  0AFA  0086               	movwf	6
  4179  0AFB  3001               	movlw	1	; select bank2/3
  4180  0AFC  0087               	movwf	7
  4181  0AFD  3001               	movlw	1
  4182  0AFE  0781               	addwf	1,f
  4183  0AFF  3141               	addfsr 1,1
  4184  0B00  1803               	skipnc
  4185  0B01  0A81               	incf	1,f
  4186                           
  4187                           ;mtouch_button.c: 301: if (button->counter == (mtouch_button_statecounter_t)0)
  4188  0B02  0874               	movf	Button_Tick_helper@button,w
  4189  0B03  3E0A               	addlw	10
  4190  0B04  0086               	movwf	6
  4191  0B05  3001               	movlw	1	; select bank2/3
  4192  0B06  0087               	movwf	7
  4193  0B07  0016               	moviw fsr1++
  4194  0B08  0401               	iorwf	1,w
  4195  0B09  1D03               	btfss	3,2
  4196  0B0A  0008               	return
  4197                           
  4198                           ;mtouch_button.c: 302: {
  4199                           ;mtouch_button.c: 303: button->counter = (mtouch_button_statecounter_t)0xFFFF;
  4200  0B0B  0874               	movf	Button_Tick_helper@button,w
  4201  0B0C  3E0A               	addlw	10
  4202  0B0D  0086               	movwf	6
  4203  0B0E  3001               	movlw	1	; select bank2/3
  4204  0B0F  0087               	movwf	7
  4205  0B10  30FF               	movlw	255
  4206  0B11  3FC0               	movwi [0]fsr1
  4207  0B12  30FF               	movlw	255
  4208  0B13  3FC1               	movwi [1]fsr1
  4209  0B14  0008               	return
  4210  0B15                     __end_of_Button_Tick_helper:	
  4211                           
  4212                           	psect	text13
  4213  092E                     __ptext13:	
  4214 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
  4215 ;; Defined at:
  4216 ;;		line 841 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;		None
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  sensor          1    4[COMMON] PTR struct .
  4221 ;;		 -> mtouch_sensor(54), 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4231 ;;      Params:         0       0       0       0       0       0       0       0
  4232 ;;      Locals:         1       0       0       0       0       0       0       0
  4233 ;;      Temps:          1       0       0       0       0       0       0       0
  4234 ;;      Totals:         2       0       0       0       0       0       0       0
  4235 ;;Total ram usage:        2 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:    3
  4238 ;; This function calls:
  4239 ;;		_Sensor_Sampled_Reset
  4240 ;; This function is called by:
  4241 ;;		_MTOUCH_Service_Mainloop
  4242 ;;		_MTOUCH_Initialize
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           
  4247                           ;psect for function _MTOUCH_Sensor_Sampled_ResetAll
  4248  092E                     _MTOUCH_Sensor_Sampled_ResetAll:	
  4249                           
  4250                           ;mtouch_sensor.c: 843: mtouch_sensor_t* sensor;
  4251                           ;mtouch_sensor.c: 844: for(sensor = &mtouch_sensor[0];sensor<= &mtouch_sensor[6-1];senso
      +                          r++)
  4252                           
  4253                           ;incstack = 0
  4254                           ; Regs used in _MTOUCH_Sensor_Sampled_ResetAll: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
  4255  092E  3020               	movlw	(low (_mtouch_sensor| (0+256)))& (0+255)
  4256  092F  00F3               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  4257  0930  0873               	movf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  4258  0931  00F4               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor
  4259  0932                     L2:	
  4260  0932  304D               	movlw	(low ((_mtouch_sensor| (0+256)+45)))& (0+255)
  4261  0933  00F3               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  4262  0934  0874               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  4263  0935  0273               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  4264  0936  1C03               	btfss	3,0
  4265  0937  0008               	return
  4266                           
  4267                           ;mtouch_sensor.c: 845: {
  4268                           ;mtouch_sensor.c: 846: Sensor_Sampled_Reset(sensor);
  4269  0938  0874               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  4270  0939  3188  2063  3189   	fcall	_Sensor_Sampled_Reset
  4271  093C  3009               	movlw	9
  4272  093D  00F3               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  4273  093E  0873               	movf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  4274  093F  07F4               	addwf	MTOUCH_Sensor_Sampled_ResetAll@sensor,f
  4275  0940  2932               	goto	L2
  4276  0941                     __end_of_MTOUCH_Sensor_Sampled_ResetAll:	
  4277                           
  4278                           	psect	text14
  4279  0863                     __ptext14:	
  4280 ;; *************** function _Sensor_Sampled_Reset *****************
  4281 ;; Defined at:
  4282 ;;		line 855 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  sensor          1    wreg     PTR struct .
  4285 ;;		 -> mtouch_sensor(54), 
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;  sensor          1    2[COMMON] PTR struct .
  4288 ;;		 -> mtouch_sensor(54), 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4298 ;;      Params:         0       0       0       0       0       0       0       0
  4299 ;;      Locals:         1       0       0       0       0       0       0       0
  4300 ;;      Temps:          0       0       0       0       0       0       0       0
  4301 ;;      Totals:         1       0       0       0       0       0       0       0
  4302 ;;Total ram usage:        1 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; Hardware stack levels required when called:    2
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  4309 ;;		_MTOUCH_Sensor_Initialize
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           
  4314                           ;psect for function _Sensor_Sampled_Reset
  4315  0863                     _Sensor_Sampled_Reset:	
  4316                           
  4317                           ;incstack = 0
  4318                           ; Regs used in _Sensor_Sampled_Reset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4319                           ;Sensor_Sampled_Reset@sensor stored from wreg
  4320  0863  00F2               	movwf	Sensor_Sampled_Reset@sensor
  4321                           
  4322                           ;mtouch_sensor.c: 857: sensor->sampled = 0;
  4323  0864  0872               	movf	Sensor_Sampled_Reset@sensor,w
  4324  0865  3E08               	addlw	8
  4325  0866  0086               	movwf	6
  4326  0867  3001               	movlw	1	; select bank2/3
  4327  0868  0087               	movwf	7
  4328  0869  1001               	bcf	1,0
  4329  086A  0008               	return
  4330  086B                     __end_of_Sensor_Sampled_Reset:	
  4331                           
  4332                           	psect	text15
  4333  09D4                     __ptext15:	
  4334 ;; *************** function _MTOUCH_Sensor_SampleAll *****************
  4335 ;; Defined at:
  4336 ;;		line 269 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  group           1    0[BANK1 ] unsigned char 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      unsigned char 
  4343 ;; Registers used:
  4344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4350 ;;      Params:         0       0       0       0       0       0       0       0
  4351 ;;      Locals:         0       0       1       0       0       0       0       0
  4352 ;;      Temps:          0       1       0       0       0       0       0       0
  4353 ;;      Totals:         0       1       1       0       0       0       0       0
  4354 ;;Total ram usage:        2 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    8
  4357 ;; This function calls:
  4358 ;;		_Sensor_Service
  4359 ;; This function is called by:
  4360 ;;		_MTOUCH_Service_Mainloop
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           
  4365                           ;psect for function _MTOUCH_Sensor_SampleAll
  4366  09D4                     _MTOUCH_Sensor_SampleAll:	
  4367                           
  4368                           ;mtouch_sensor.c: 271: uint8_t group;
  4369                           ;mtouch_sensor.c: 272: for (group = 0; group < 3; group++)
  4370                           
  4371                           ;incstack = 0
  4372                           ; Regs used in _MTOUCH_Sensor_SampleAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4373  09D4  0021               	movlb	1	; select bank1
  4374  09D5  01D2               	clrf	MTOUCH_Sensor_SampleAll@group^(0+128)
  4375  09D6  3003               	movlw	3
  4376  09D7  0252               	subwf	MTOUCH_Sensor_SampleAll@group^(0+128),w
  4377  09D8  1803               	btfsc	3,0
  4378  09D9  29ED               	goto	l5637
  4379  09DA                     l5627:	
  4380                           
  4381                           ;mtouch_sensor.c: 273: {
  4382                           ;mtouch_sensor.c: 274: if(Sensor_Service(group)!= MTOUCH_SENSOR_ERROR_none)
  4383  09DA  0852               	movf	MTOUCH_Sensor_SampleAll@group^(0+128),w
  4384  09DB  3180  205F  3189   	fcall	_Sensor_Service
  4385  09DE  3A00               	xorlw	0
  4386  09DF  1903               	skipnz
  4387  09E0  29E3               	goto	l5633
  4388                           
  4389                           ;mtouch_sensor.c: 275: return 0;
  4390  09E1  3000               	movlw	0
  4391  09E2  0008               	return
  4392  09E3                     l5633:	
  4393  09E3  3001               	movlw	1
  4394  09E4  0020               	movlb	0	; select bank0
  4395  09E5  00CE               	movwf	??_MTOUCH_Sensor_SampleAll
  4396  09E6  084E               	movf	??_MTOUCH_Sensor_SampleAll,w
  4397  09E7  0021               	movlb	1	; select bank1
  4398  09E8  07D2               	addwf	MTOUCH_Sensor_SampleAll@group^(0+128),f
  4399  09E9  3003               	movlw	3
  4400  09EA  0252               	subwf	MTOUCH_Sensor_SampleAll@group^(0+128),w
  4401  09EB  1C03               	skipc
  4402  09EC  29DA               	goto	l5627
  4403  09ED                     l5637:	
  4404                           
  4405                           ;mtouch_sensor.c: 276: }
  4406                           ;mtouch_sensor.c: 277: return 1;
  4407  09ED  3001               	movlw	1
  4408  09EE  0008               	return
  4409  09EF                     __end_of_MTOUCH_Sensor_SampleAll:	
  4410                           
  4411                           	psect	text16
  4412  005F                     __ptext16:	
  4413 ;; *************** function _Sensor_Service *****************
  4414 ;; Defined at:
  4415 ;;		line 285 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  scanGroup       1    wreg     unsigned char 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  scanGroup       1   42[BANK0 ] unsigned char 
  4420 ;;  sensor_adc2     1   45[BANK0 ] PTR struct .
  4421 ;;		 -> mtouch_sensor(54), 
  4422 ;;  sensor_adc1     1   44[BANK0 ] PTR struct .
  4423 ;;		 -> mtouch_sensor(54), 
  4424 ;;  error           1   43[BANK0 ] enum E3335
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  1    wreg      enum E3335
  4427 ;; Registers used:
  4428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4434 ;;      Params:         0       0       0       0       0       0       0       0
  4435 ;;      Locals:         0       4       0       0       0       0       0       0
  4436 ;;      Temps:          0       5       0       0       0       0       0       0
  4437 ;;      Totals:         0       9       0       0       0       0       0       0
  4438 ;;Total ram usage:        9 bytes
  4439 ;; Hardware stack levels used:    1
  4440 ;; Hardware stack levels required when called:    7
  4441 ;; This function calls:
  4442 ;;		_Sensor_Acquisition
  4443 ;;		_Sensor_DefaultCallback
  4444 ;;		_Sensor_RawSample_Update
  4445 ;;		_Sensor_isEnabled
  4446 ;;		_Sensor_setSampled
  4447 ;; This function is called by:
  4448 ;;		_MTOUCH_Sensor_SampleAll
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           
  4453                           ;psect for function _Sensor_Service
  4454  005F                     _Sensor_Service:	
  4455                           
  4456                           ;incstack = 0
  4457                           ; Regs used in _Sensor_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4458                           ;Sensor_Service@scanGroup stored from wreg
  4459  005F  0020               	movlb	0	; select bank0
  4460  0060  00CA               	movwf	Sensor_Service@scanGroup
  4461                           
  4462                           ;mtouch_sensor.c: 287: mtouch_sensor_t* sensor_adc1;
  4463                           ;mtouch_sensor.c: 288: mtouch_sensor_t* sensor_adc2;
  4464                           ;mtouch_sensor.c: 290: sensor_adc1 = (mtouch_sensor_t*)sensor_scan_group[scanGroup].sens
      +                          or_adc1;
  4465  0061  084A               	movf	Sensor_Service@scanGroup,w
  4466  0062  00C5               	movwf	??_Sensor_Service
  4467  0063  01C6               	clrf	??_Sensor_Service+1
  4468  0064  35C5               	lslf	??_Sensor_Service,f
  4469  0065  0DC6               	rlf	??_Sensor_Service+1,f
  4470  0066  3062               	movlw	low (_sensor_scan_group| (0+32768))
  4471  0067  0745               	addwf	??_Sensor_Service,w
  4472  0068  0084               	movwf	4
  4473  0069  3090               	movlw	high (_sensor_scan_group| (0+32768))
  4474  006A  3D46               	addwfc	??_Sensor_Service+1,w
  4475  006B  0085               	movwf	5
  4476  006C  0800               	movf	0,w	;code access
  4477  006D  00C7               	movwf	??_Sensor_Service+2
  4478  006E  0847               	movf	??_Sensor_Service+2,w
  4479  006F  00CC               	movwf	Sensor_Service@sensor_adc1
  4480                           
  4481                           ;mtouch_sensor.c: 291: sensor_adc2 = (mtouch_sensor_t*)sensor_scan_group[scanGroup].sens
      +                          or_adc2;
  4482  0070  084A               	movf	Sensor_Service@scanGroup,w
  4483  0071  00C5               	movwf	??_Sensor_Service
  4484  0072  01C6               	clrf	??_Sensor_Service+1
  4485  0073  35C5               	lslf	??_Sensor_Service,f
  4486  0074  0DC6               	rlf	??_Sensor_Service+1,f
  4487  0075  0845               	movf	??_Sensor_Service,w
  4488  0076  3E01               	addlw	1
  4489  0077  00C7               	movwf	??_Sensor_Service+2
  4490  0078  3000               	movlw	0
  4491  0079  3D46               	addwfc	??_Sensor_Service+1,w
  4492  007A  00C8               	movwf	??_Sensor_Service+3
  4493  007B  3062               	movlw	low (_sensor_scan_group| (0+32768))
  4494  007C  0747               	addwf	??_Sensor_Service+2,w
  4495  007D  0084               	movwf	4
  4496  007E  3090               	movlw	high (_sensor_scan_group| (0+32768))
  4497  007F  3D48               	addwfc	??_Sensor_Service+3,w
  4498  0080  0085               	movwf	5
  4499  0081  0800               	movf	0,w	;code access
  4500  0082  00C9               	movwf	??_Sensor_Service+4
  4501  0083  0849               	movf	??_Sensor_Service+4,w
  4502  0084  00CD               	movwf	Sensor_Service@sensor_adc2
  4503                           
  4504                           ;mtouch_sensor.c: 293: enum mtouch_sensor_error error = Sensor_Acquisition(sensor_adc1,s
      +                          ensor_adc2);
  4505  0085  084D               	movf	Sensor_Service@sensor_adc2,w
  4506  0086  00C5               	movwf	??_Sensor_Service
  4507  0087  0845               	movf	??_Sensor_Service,w
  4508  0088  00C0               	movwf	Sensor_Acquisition@sensor_adc2
  4509  0089  084C               	movf	Sensor_Service@sensor_adc1,w
  4510  008A  318D  25A4  3180   	fcall	_Sensor_Acquisition
  4511  008D  0020               	movlb	0	; select bank0
  4512  008E  00C6               	movwf	??_Sensor_Service+1
  4513  008F  0846               	movf	??_Sensor_Service+1,w
  4514  0090  00CB               	movwf	Sensor_Service@error
  4515                           
  4516                           ;mtouch_sensor.c: 296: switch(error)
  4517  0091  28D2               	goto	l5581
  4518  0092                     l5563:	
  4519                           ;mtouch_sensor.c: 297: {
  4520                           ;mtouch_sensor.c: 298: case MTOUCH_SENSOR_ERROR_none:
  4521                           
  4522                           
  4523                           ;mtouch_sensor.c: 299: {
  4524                           ;mtouch_sensor.c: 300: if(Sensor_isEnabled(sensor_adc1))
  4525  0092  084C               	movf	Sensor_Service@sensor_adc1,w
  4526  0093  3189  210B  3180   	fcall	_Sensor_isEnabled
  4527  0096  3A00               	xorlw	0
  4528  0097  1903               	skipnz
  4529  0098  28B1               	goto	l5571
  4530                           
  4531                           ;mtouch_sensor.c: 301: {
  4532                           ;mtouch_sensor.c: 302: Sensor_RawSample_Update(sensor_adc1);
  4533  0099  0020               	movlb	0	; select bank0
  4534  009A  084C               	movf	Sensor_Service@sensor_adc1,w
  4535  009B  318B  233C  3180   	fcall	_Sensor_RawSample_Update
  4536                           
  4537                           ;mtouch_sensor.c: 303: Sensor_setSampled(sensor_adc1);
  4538  009E  0020               	movlb	0	; select bank0
  4539  009F  084C               	movf	Sensor_Service@sensor_adc1,w
  4540  00A0  3188  205B  3180   	fcall	_Sensor_setSampled
  4541                           
  4542                           ;mtouch_sensor.c: 304: callback_sampled(sensor_adc1->sensor);
  4543  00A3  0020               	movlb	0	; select bank0
  4544  00A4  084C               	movf	Sensor_Service@sensor_adc1,w
  4545  00A5  0086               	movwf	6
  4546  00A6  3001               	movlw	1	; select bank2/3
  4547  00A7  0087               	movwf	7
  4548  00A8  0801               	movf	1,w
  4549  00A9  00C5               	movwf	??_Sensor_Service
  4550  00AA  0845               	movf	??_Sensor_Service,w
  4551  00AB  00F2               	movwf	Sensor_DefaultCallback@sensor
  4552  00AC  0864               	movf	_callback_sampled+1,w
  4553  00AD  008A               	movwf	10
  4554  00AE  0863               	movf	_callback_sampled,w
  4555  00AF  000A               	callw
  4556  00B0  3180               	pagesel	$
  4557  00B1                     l5571:	
  4558                           
  4559                           ;mtouch_sensor.c: 305: }
  4560                           ;mtouch_sensor.c: 306: if(Sensor_isEnabled(sensor_adc2))
  4561  00B1  0020               	movlb	0	; select bank0
  4562  00B2  084D               	movf	Sensor_Service@sensor_adc2,w
  4563  00B3  3189  210B  3180   	fcall	_Sensor_isEnabled
  4564  00B6  3A00               	xorlw	0
  4565  00B7  1903               	skipnz
  4566  00B8  28E1               	goto	l5583
  4567                           
  4568                           ;mtouch_sensor.c: 307: {
  4569                           ;mtouch_sensor.c: 308: Sensor_RawSample_Update(sensor_adc2);
  4570  00B9  0020               	movlb	0	; select bank0
  4571  00BA  084D               	movf	Sensor_Service@sensor_adc2,w
  4572  00BB  318B  233C  3180   	fcall	_Sensor_RawSample_Update
  4573                           
  4574                           ;mtouch_sensor.c: 309: Sensor_setSampled(sensor_adc2);
  4575  00BE  0020               	movlb	0	; select bank0
  4576  00BF  084D               	movf	Sensor_Service@sensor_adc2,w
  4577  00C0  3188  205B  3180   	fcall	_Sensor_setSampled
  4578                           
  4579                           ;mtouch_sensor.c: 310: callback_sampled(sensor_adc2->sensor);
  4580  00C3  0020               	movlb	0	; select bank0
  4581  00C4  084D               	movf	Sensor_Service@sensor_adc2,w
  4582  00C5  0086               	movwf	6
  4583  00C6  3001               	movlw	1	; select bank2/3
  4584  00C7  0087               	movwf	7
  4585  00C8  0801               	movf	1,w
  4586  00C9  00C5               	movwf	??_Sensor_Service
  4587  00CA  0845               	movf	??_Sensor_Service,w
  4588  00CB  00F2               	movwf	Sensor_DefaultCallback@sensor
  4589  00CC  0864               	movf	_callback_sampled+1,w
  4590  00CD  008A               	movwf	10
  4591  00CE  0863               	movf	_callback_sampled,w
  4592  00CF  000A               	callw
  4593  00D0  3180               	pagesel	$
  4594                           
  4595                           ;mtouch_sensor.c: 319: }
  4596                           
  4597                           ;mtouch_sensor.c: 318: default: break;
  4598                           
  4599                           ;mtouch_sensor.c: 317: case MTOUCH_SENSOR_ERROR_invalid_calibrate: break;
  4600                           
  4601                           ;mtouch_sensor.c: 316: case MTOUCH_SENSOR_ERROR_interrupt_notEnabled: break;
  4602                           
  4603                           ;mtouch_sensor.c: 315: case MTOUCH_SENSOR_ERROR_invalid_index: break;
  4604                           
  4605                           ;mtouch_sensor.c: 311: }
  4606                           ;mtouch_sensor.c: 312: }
  4607                           ;mtouch_sensor.c: 313: break;
  4608  00D1  28E1               	goto	l5583
  4609  00D2                     l5581:	
  4610  00D2  0020               	movlb	0	; select bank0
  4611  00D3  084B               	movf	Sensor_Service@error,w
  4612                           
  4613                           ; Switch size 1, requested type "space"
  4614                           ; Number of cases is 4, Range of values is 0 to 255
  4615                           ; switch strategies available:
  4616                           ; Name         Instructions Cycles
  4617                           ; simple_byte           13     7 (average)
  4618                           ; jumptable            260     6 (fixed)
  4619                           ;	Chosen strategy is simple_byte
  4620  00D4  3A00               	xorlw	0	; case 0
  4621  00D5  1903               	skipnz
  4622  00D6  2892               	goto	l5563
  4623  00D7  3AFD               	xorlw	253	; case 253
  4624  00D8  1903               	skipnz
  4625  00D9  28E1               	goto	l5583
  4626  00DA  3A03               	xorlw	3	; case 254
  4627  00DB  1903               	skipnz
  4628  00DC  28E1               	goto	l5583
  4629  00DD  3A01               	xorlw	1	; case 255
  4630  00DE  1903               	skipnz
  4631  00DF  28E1               	goto	l5583
  4632  00E0  28E1               	goto	l5583
  4633  00E1                     l5583:	
  4634                           
  4635                           ;mtouch_sensor.c: 321: return error;
  4636  00E1  0020               	movlb	0	; select bank0
  4637  00E2  084B               	movf	Sensor_Service@error,w
  4638  00E3  0008               	return
  4639  00E4                     __end_of_Sensor_Service:	
  4640                           
  4641                           	psect	text17
  4642  085B                     __ptext17:	
  4643 ;; *************** function _Sensor_setSampled *****************
  4644 ;; Defined at:
  4645 ;;		line 860 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  sensor          1    wreg     PTR struct .
  4648 ;;		 -> mtouch_sensor(54), 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;  sensor          1    2[COMMON] PTR struct .
  4651 ;;		 -> mtouch_sensor(54), 
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  1    wreg      void 
  4654 ;; Registers used:
  4655 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4661 ;;      Params:         0       0       0       0       0       0       0       0
  4662 ;;      Locals:         1       0       0       0       0       0       0       0
  4663 ;;      Temps:          0       0       0       0       0       0       0       0
  4664 ;;      Totals:         1       0       0       0       0       0       0       0
  4665 ;;Total ram usage:        1 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:    2
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_Sensor_Service
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           
  4676                           ;psect for function _Sensor_setSampled
  4677  085B                     _Sensor_setSampled:	
  4678                           
  4679                           ;incstack = 0
  4680                           ; Regs used in _Sensor_setSampled: [wreg+fsr1l+fsr1h+status,2+status,0]
  4681                           ;Sensor_setSampled@sensor stored from wreg
  4682  085B  00F2               	movwf	Sensor_setSampled@sensor
  4683                           
  4684                           ;mtouch_sensor.c: 862: sensor->sampled = 1;
  4685  085C  0872               	movf	Sensor_setSampled@sensor,w
  4686  085D  3E08               	addlw	8
  4687  085E  0086               	movwf	6
  4688  085F  3001               	movlw	1	; select bank2/3
  4689  0860  0087               	movwf	7
  4690  0861  1401               	bsf	1,0
  4691  0862  0008               	return
  4692  0863                     __end_of_Sensor_setSampled:	
  4693                           
  4694                           	psect	text18
  4695  0B3C                     __ptext18:	
  4696 ;; *************** function _Sensor_RawSample_Update *****************
  4697 ;; Defined at:
  4698 ;;		line 695 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  sensor          1    wreg     PTR struct .
  4701 ;;		 -> mtouch_sensor(54), 
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;  sensor          1    1[BANK0 ] PTR struct .
  4704 ;;		 -> mtouch_sensor(54), 
  4705 ;;  adcIndex        1    0[BANK0 ] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4715 ;;      Params:         0       0       0       0       0       0       0       0
  4716 ;;      Locals:         0       2       0       0       0       0       0       0
  4717 ;;      Temps:          1       0       0       0       0       0       0       0
  4718 ;;      Totals:         1       2       0       0       0       0       0       0
  4719 ;;Total ram usage:        3 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    3
  4722 ;; This function calls:
  4723 ;;		_Sensor_getScanGroupIndex
  4724 ;; This function is called by:
  4725 ;;		_Sensor_Service
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           
  4730                           ;psect for function _Sensor_RawSample_Update
  4731  0B3C                     _Sensor_RawSample_Update:	
  4732                           
  4733                           ;incstack = 0
  4734                           ; Regs used in _Sensor_RawSample_Update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4735                           ;Sensor_RawSample_Update@sensor stored from wreg
  4736  0B3C  0020               	movlb	0	; select bank0
  4737  0B3D  00A1               	movwf	Sensor_RawSample_Update@sensor
  4738                           
  4739                           ;mtouch_sensor.c: 697: uint8_t adcIndex = Sensor_getScanGroupIndex(sensor);
  4740  0B3E  0821               	movf	Sensor_RawSample_Update@sensor,w
  4741  0B3F  3180  2027  318B   	fcall	_Sensor_getScanGroupIndex
  4742  0B42  00F8               	movwf	??_Sensor_RawSample_Update
  4743  0B43  0878               	movf	??_Sensor_RawSample_Update,w
  4744  0B44  0020               	movlb	0	; select bank0
  4745  0B45  00A0               	movwf	Sensor_RawSample_Update@adcIndex
  4746                           
  4747                           ;mtouch_sensor.c: 699: if (INTCONbits.GIE == (uint8_t)1)
  4748  0B46  1F8B               	btfss	11,7	;volatile
  4749  0B47  2B58               	goto	l5395
  4750                           
  4751                           ;mtouch_sensor.c: 700: {
  4752                           ;mtouch_sensor.c: 701: INTCONbits.GIE = (uint8_t)0;
  4753  0B48  138B               	bcf	11,7	;volatile
  4754                           
  4755                           ;mtouch_sensor.c: 702: sensor->rawSample = packet_sample[adcIndex];
  4756  0B49  3520               	lslf	Sensor_RawSample_Update@adcIndex,w
  4757  0B4A  3E66               	addlw	(low (_packet_sample| 0))& (0+255)
  4758  0B4B  0086               	movwf	6
  4759  0B4C  0187               	clrf	7
  4760  0B4D  0821               	movf	Sensor_RawSample_Update@sensor,w
  4761  0B4E  3E06               	addlw	6
  4762  0B4F  0084               	movwf	4
  4763  0B50  3001               	movlw	1	; select bank2/3
  4764  0B51  0085               	movwf	5
  4765  0B52  3F40               	moviw [0]fsr1
  4766  0B53  3F80               	movwi [0]fsr0
  4767  0B54  3F41               	moviw [1]fsr1
  4768  0B55  3F81               	movwi [1]fsr0
  4769                           
  4770                           ;mtouch_sensor.c: 703: INTCONbits.GIE = (uint8_t)1;
  4771  0B56  178B               	bsf	11,7	;volatile
  4772                           
  4773                           ;mtouch_sensor.c: 704: }
  4774  0B57  0008               	return
  4775  0B58                     l5395:	
  4776                           
  4777                           ;mtouch_sensor.c: 705: else
  4778                           ;mtouch_sensor.c: 706: {
  4779                           ;mtouch_sensor.c: 707: sensor->rawSample = packet_sample[adcIndex];
  4780  0B58  3520               	lslf	Sensor_RawSample_Update@adcIndex,w
  4781  0B59  3E66               	addlw	(low (_packet_sample| 0))& (0+255)
  4782  0B5A  0086               	movwf	6
  4783  0B5B  0187               	clrf	7
  4784  0B5C  0821               	movf	Sensor_RawSample_Update@sensor,w
  4785  0B5D  3E06               	addlw	6
  4786  0B5E  0084               	movwf	4
  4787  0B5F  3001               	movlw	1	; select bank2/3
  4788  0B60  0085               	movwf	5
  4789  0B61  3F40               	moviw [0]fsr1
  4790  0B62  3F80               	movwi [0]fsr0
  4791  0B63  3F41               	moviw [1]fsr1
  4792  0B64  3F81               	movwi [1]fsr0
  4793  0B65  0008               	return
  4794  0B66                     __end_of_Sensor_RawSample_Update:	
  4795                           
  4796                           	psect	text19
  4797  0026                     __ptext19:	
  4798 ;; *************** function _Sensor_DefaultCallback *****************
  4799 ;; Defined at:
  4800 ;;		line 716 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  sensor          1    2[COMMON] enum E3328
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;		None
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  1    wreg      void 
  4807 ;; Registers used:
  4808 ;;		None
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4814 ;;      Params:         1       0       0       0       0       0       0       0
  4815 ;;      Locals:         0       0       0       0       0       0       0       0
  4816 ;;      Temps:          0       0       0       0       0       0       0       0
  4817 ;;      Totals:         1       0       0       0       0       0       0       0
  4818 ;;Total ram usage:        1 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; Hardware stack levels required when called:    2
  4821 ;; This function calls:
  4822 ;;		Nothing
  4823 ;; This function is called by:
  4824 ;;		_Sensor_Service
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           
  4829                           ;psect for function _Sensor_DefaultCallback
  4830  0026                     _Sensor_DefaultCallback:	
  4831                           
  4832                           ;incstack = 0
  4833                           ; Regs used in _Sensor_DefaultCallback: []
  4834  0026  0008               	return
  4835  0027                     __end_of_Sensor_DefaultCallback:	
  4836                           
  4837                           	psect	text20
  4838  0DA4                     __ptext20:	
  4839 ;; *************** function _Sensor_Acquisition *****************
  4840 ;; Defined at:
  4841 ;;		line 342 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  sensor_adc1     1    wreg     PTR struct .
  4844 ;;		 -> mtouch_sensor(54), 
  4845 ;;  sensor_adc2     1   32[BANK0 ] PTR struct .
  4846 ;;		 -> mtouch_sensor(54), 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  sensor_adc1     1   36[BANK0 ] PTR struct .
  4849 ;;		 -> mtouch_sensor(54), 
  4850 ;;  error           1   35[BANK0 ] enum E3335
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  1    wreg      enum E3335
  4853 ;; Registers used:
  4854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4860 ;;      Params:         0       1       0       0       0       0       0       0
  4861 ;;      Locals:         0       2       0       0       0       0       0       0
  4862 ;;      Temps:          0       2       0       0       0       0       0       0
  4863 ;;      Totals:         0       5       0       0       0       0       0       0
  4864 ;;Total ram usage:        5 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; Hardware stack levels required when called:    6
  4867 ;; This function calls:
  4868 ;;		_Sensor_Acq_ExecutePacket
  4869 ;;		_Sensor_Scanfrequency_Evaluation
  4870 ;;		_Sensor_isActive
  4871 ;;		_Sensor_isCalibrated
  4872 ;;		_Sensor_postAcquisitionProcess
  4873 ;; This function is called by:
  4874 ;;		_Sensor_Service
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           
  4879                           ;psect for function _Sensor_Acquisition
  4880  0DA4                     _Sensor_Acquisition:	
  4881                           
  4882                           ;incstack = 0
  4883                           ; Regs used in _Sensor_Acquisition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4884                           ;Sensor_Acquisition@sensor_adc1 stored from wreg
  4885  0DA4  0020               	movlb	0	; select bank0
  4886  0DA5  00C4               	movwf	Sensor_Acquisition@sensor_adc1
  4887                           
  4888                           ;mtouch_sensor.c: 344: enum mtouch_sensor_error error = MTOUCH_SENSOR_ERROR_none;
  4889  0DA6  01C3               	clrf	Sensor_Acquisition@error
  4890                           
  4891                           ;mtouch_sensor.c: 347: if (sensor_adc1 == (0) && sensor_adc2 == (0))
  4892  0DA7  0844               	movf	Sensor_Acquisition@sensor_adc1,w
  4893  0DA8  1D03               	btfss	3,2
  4894  0DA9  2DAF               	goto	l5359
  4895  0DAA  0840               	movf	Sensor_Acquisition@sensor_adc2,w
  4896  0DAB  1D03               	btfss	3,2
  4897  0DAC  2DAF               	goto	l5359
  4898                           
  4899                           ;mtouch_sensor.c: 348: {
  4900                           ;mtouch_sensor.c: 349: error = MTOUCH_SENSOR_ERROR_invalid_index;
  4901  0DAD  01C3               	clrf	Sensor_Acquisition@error
  4902  0DAE  03C3               	decf	Sensor_Acquisition@error,f
  4903  0DAF                     l5359:	
  4904                           
  4905                           ;mtouch_sensor.c: 350: }
  4906                           ;mtouch_sensor.c: 357: if (error == MTOUCH_SENSOR_ERROR_none)
  4907  0DAF  0843               	movf	Sensor_Acquisition@error,w
  4908  0DB0  1D03               	btfss	3,2
  4909  0DB1  2DBE               	goto	l5363
  4910                           
  4911                           ;mtouch_sensor.c: 358: error = Sensor_Acq_ExecutePacket(sensor_adc1,sensor_adc2);
  4912  0DB2  0840               	movf	Sensor_Acquisition@sensor_adc2,w
  4913  0DB3  00C1               	movwf	??_Sensor_Acquisition
  4914  0DB4  0841               	movf	??_Sensor_Acquisition,w
  4915  0DB5  00A4               	movwf	Sensor_Acq_ExecutePacket@sensor_adc2
  4916  0DB6  0844               	movf	Sensor_Acquisition@sensor_adc1,w
  4917  0DB7  3185  2596  318D   	fcall	_Sensor_Acq_ExecutePacket
  4918  0DBA  0020               	movlb	0	; select bank0
  4919  0DBB  00C2               	movwf	??_Sensor_Acquisition+1
  4920  0DBC  0842               	movf	??_Sensor_Acquisition+1,w
  4921  0DBD  00C3               	movwf	Sensor_Acquisition@error
  4922  0DBE                     l5363:	
  4923                           
  4924                           ;mtouch_sensor.c: 360: if(sensor_adc1 != (0))
  4925  0DBE  0844               	movf	Sensor_Acquisition@sensor_adc1,w
  4926  0DBF  1903               	btfsc	3,2
  4927  0DC0  2DC5               	goto	l5367
  4928                           
  4929                           ;mtouch_sensor.c: 361: {
  4930                           ;mtouch_sensor.c: 362: Sensor_postAcquisitionProcess(sensor_adc1);
  4931  0DC1  0844               	movf	Sensor_Acquisition@sensor_adc1,w
  4932  0DC2  318D  2551  318D   	fcall	_Sensor_postAcquisitionProcess
  4933  0DC5                     l5367:	
  4934                           
  4935                           ;mtouch_sensor.c: 363: }
  4936                           ;mtouch_sensor.c: 365: if(sensor_adc2 !=(0))
  4937  0DC5  0020               	movlb	0	; select bank0
  4938  0DC6  0840               	movf	Sensor_Acquisition@sensor_adc2,w
  4939  0DC7  1903               	btfsc	3,2
  4940  0DC8  2DCD               	goto	l5371
  4941                           
  4942                           ;mtouch_sensor.c: 366: {
  4943                           ;mtouch_sensor.c: 367: Sensor_postAcquisitionProcess(sensor_adc2);
  4944  0DC9  0840               	movf	Sensor_Acquisition@sensor_adc2,w
  4945  0DCA  318D  2551  318D   	fcall	_Sensor_postAcquisitionProcess
  4946  0DCD                     l5371:	
  4947                           
  4948                           ;mtouch_sensor.c: 368: }
  4949                           ;mtouch_sensor.c: 370: if((Sensor_isActive(sensor_adc1) && Sensor_isCalibrated(sensor_ad
      +                          c1))
  4950                           ;mtouch_sensor.c: 371: ||(Sensor_isActive(sensor_adc2) && Sensor_isCalibrated(sensor_adc
      +                          2)))
  4951  0DCD  0020               	movlb	0	; select bank0
  4952  0DCE  0844               	movf	Sensor_Acquisition@sensor_adc1,w
  4953  0DCF  3188  2074  318D   	fcall	_Sensor_isActive
  4954  0DD2  3A00               	xorlw	0
  4955  0DD3  1903               	skipnz
  4956  0DD4  2DDD               	goto	l5375
  4957  0DD5  0020               	movlb	0	; select bank0
  4958  0DD6  0844               	movf	Sensor_Acquisition@sensor_adc1,w
  4959  0DD7  3188  2086  318D   	fcall	_Sensor_isCalibrated
  4960  0DDA  3A00               	xorlw	0
  4961  0DDB  1D03               	skipz
  4962  0DDC  2DED               	goto	l5379
  4963  0DDD                     l5375:	
  4964  0DDD  0020               	movlb	0	; select bank0
  4965  0DDE  0840               	movf	Sensor_Acquisition@sensor_adc2,w
  4966  0DDF  3188  2074  318D   	fcall	_Sensor_isActive
  4967  0DE2  3A00               	xorlw	0
  4968  0DE3  1903               	skipnz
  4969  0DE4  2DF5               	goto	l5381
  4970  0DE5  0020               	movlb	0	; select bank0
  4971  0DE6  0840               	movf	Sensor_Acquisition@sensor_adc2,w
  4972  0DE7  3188  2086  318D   	fcall	_Sensor_isCalibrated
  4973  0DEA  3A00               	xorlw	0
  4974  0DEB  1903               	skipnz
  4975  0DEC  2DF5               	goto	l5381
  4976  0DED                     l5379:	
  4977                           
  4978                           ;mtouch_sensor.c: 372: {
  4979                           ;mtouch_sensor.c: 373: Sensor_Scanfrequency_Evaluation(sensor_adc1,sensor_adc2);
  4980  0DED  0020               	movlb	0	; select bank0
  4981  0DEE  0840               	movf	Sensor_Acquisition@sensor_adc2,w
  4982  0DEF  00C1               	movwf	??_Sensor_Acquisition
  4983  0DF0  0841               	movf	??_Sensor_Acquisition,w
  4984  0DF1  00B4               	movwf	Sensor_Scanfrequency_Evaluation@sensor_adc2
  4985  0DF2  0844               	movf	Sensor_Acquisition@sensor_adc1,w
  4986  0DF3  318E  26A5         	fcall	_Sensor_Scanfrequency_Evaluation
  4987  0DF5                     l5381:	
  4988                           
  4989                           ;mtouch_sensor.c: 374: }
  4990                           ;mtouch_sensor.c: 376: return error;
  4991  0DF5  0020               	movlb	0	; select bank0
  4992  0DF6  0843               	movf	Sensor_Acquisition@error,w
  4993  0DF7  0008               	return
  4994  0DF8                     __end_of_Sensor_Acquisition:	
  4995                           
  4996                           	psect	text21
  4997  0D51                     __ptext21:	
  4998 ;; *************** function _Sensor_postAcquisitionProcess *****************
  4999 ;; Defined at:
  5000 ;;		line 379 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  sensor          1    wreg     PTR struct .
  5003 ;;		 -> mtouch_sensor(54), 
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;  sensor          1    3[BANK0 ] PTR struct .
  5006 ;;		 -> mtouch_sensor(54), 
  5007 ;;  deviation       2    1[BANK0 ] unsigned int 
  5008 ;;  adcIndex        1    0[BANK0 ] unsigned char 
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      enum E3335
  5011 ;; Registers used:
  5012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5018 ;;      Params:         0       0       0       0       0       0       0       0
  5019 ;;      Locals:         0       4       0       0       0       0       0       0
  5020 ;;      Temps:          2       0       0       0       0       0       0       0
  5021 ;;      Totals:         2       4       0       0       0       0       0       0
  5022 ;;Total ram usage:        6 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; Hardware stack levels required when called:    3
  5025 ;; This function calls:
  5026 ;;		_Sensor_getScanGroupIndex
  5027 ;;		_Sensor_isEnabled
  5028 ;;		_Sensor_setActive
  5029 ;;		_Sensor_setInactive
  5030 ;;		_abs
  5031 ;; This function is called by:
  5032 ;;		_Sensor_Acquisition
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           
  5037                           ;psect for function _Sensor_postAcquisitionProcess
  5038  0D51                     _Sensor_postAcquisitionProcess:	
  5039                           
  5040                           ;incstack = 0
  5041                           ; Regs used in _Sensor_postAcquisitionProcess: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5042                           ;Sensor_postAcquisitionProcess@sensor stored from wreg
  5043  0D51  0020               	movlb	0	; select bank0
  5044  0D52  00A3               	movwf	Sensor_postAcquisitionProcess@sensor
  5045                           
  5046                           ;mtouch_sensor.c: 381: mtouch_sensor_sample_t deviation;
  5047                           ;mtouch_sensor.c: 382: uint8_t adcIndex = Sensor_getScanGroupIndex(sensor);
  5048  0D53  0823               	movf	Sensor_postAcquisitionProcess@sensor,w
  5049  0D54  3180  2027  318D   	fcall	_Sensor_getScanGroupIndex
  5050  0D57  00F8               	movwf	??_Sensor_postAcquisitionProcess
  5051  0D58  0878               	movf	??_Sensor_postAcquisitionProcess,w
  5052  0D59  0020               	movlb	0	; select bank0
  5053  0D5A  00A0               	movwf	Sensor_postAcquisitionProcess@adcIndex
  5054                           
  5055                           ;mtouch_sensor.c: 384: if(Sensor_isEnabled(sensor))
  5056  0D5B  0823               	movf	Sensor_postAcquisitionProcess@sensor,w
  5057  0D5C  3189  210B  318D   	fcall	_Sensor_isEnabled
  5058  0D5F  3A00               	xorlw	0
  5059  0D60  1903               	skipnz
  5060  0D61  2D84               	goto	l5263
  5061                           
  5062                           ;mtouch_sensor.c: 385: deviation = abs(packet_sample[adcIndex] - sensor->rawSample);
  5063  0D62  0020               	movlb	0	; select bank0
  5064  0D63  3520               	lslf	Sensor_postAcquisitionProcess@adcIndex,w
  5065  0D64  3E66               	addlw	(low (_packet_sample| 0))& (0+255)
  5066  0D65  0086               	movwf	6
  5067  0D66  0187               	clrf	7
  5068  0D67  0823               	movf	Sensor_postAcquisitionProcess@sensor,w
  5069  0D68  3E06               	addlw	6
  5070  0D69  0084               	movwf	4
  5071  0D6A  3001               	movlw	1	; select bank2/3
  5072  0D6B  0085               	movwf	5
  5073  0D6C  3F00               	moviw [0]fsr0
  5074  0D6D  00F8               	movwf	??_Sensor_postAcquisitionProcess
  5075  0D6E  3F01               	moviw [1]fsr0
  5076  0D6F  00F9               	movwf	??_Sensor_postAcquisitionProcess+1
  5077  0D70  09F8               	comf	??_Sensor_postAcquisitionProcess,f
  5078  0D71  09F9               	comf	??_Sensor_postAcquisitionProcess+1,f
  5079  0D72  0AF8               	incf	??_Sensor_postAcquisitionProcess,f
  5080  0D73  1903               	skipnz
  5081  0D74  0AF9               	incf	??_Sensor_postAcquisitionProcess+1,f
  5082  0D75  3F40               	moviw [0]fsr1
  5083  0D76  0778               	addwf	??_Sensor_postAcquisitionProcess,w
  5084  0D77  00F2               	movwf	abs@a
  5085  0D78  3F41               	moviw [1]fsr1
  5086  0D79  3D79               	addwfc	??_Sensor_postAcquisitionProcess+1,w
  5087  0D7A  00F3               	movwf	abs@a+1
  5088  0D7B  3188  209E  318D   	fcall	_abs
  5089  0D7E  0873               	movf	?_abs+1,w
  5090  0D7F  0020               	movlb	0	; select bank0
  5091  0D80  00A2               	movwf	Sensor_postAcquisitionProcess@deviation+1
  5092  0D81  0872               	movf	?_abs,w
  5093  0D82  00A1               	movwf	Sensor_postAcquisitionProcess@deviation
  5094  0D83  2D87               	goto	l5265
  5095  0D84                     l5263:	
  5096                           
  5097                           ;mtouch_sensor.c: 386: else
  5098                           ;mtouch_sensor.c: 387: deviation = 0;
  5099  0D84  0020               	movlb	0	; select bank0
  5100  0D85  01A1               	clrf	Sensor_postAcquisitionProcess@deviation
  5101  0D86  01A2               	clrf	Sensor_postAcquisitionProcess@deviation+1
  5102  0D87                     l5265:	
  5103                           
  5104                           ;mtouch_sensor.c: 389: if(deviation > (mtouch_sensor_packetsample_t)(sensor->oversamplin
      +                          g)<<2)
  5105  0D87  0823               	movf	Sensor_postAcquisitionProcess@sensor,w
  5106  0D88  3E04               	addlw	4
  5107  0D89  0086               	movwf	6
  5108  0D8A  3001               	movlw	1	; select bank2/3
  5109  0D8B  0087               	movwf	7
  5110  0D8C  0801               	movf	1,w
  5111  0D8D  00F8               	movwf	??_Sensor_postAcquisitionProcess
  5112  0D8E  01F9               	clrf	??_Sensor_postAcquisitionProcess+1
  5113  0D8F  35F8               	lslf	??_Sensor_postAcquisitionProcess,f
  5114  0D90  0DF9               	rlf	??_Sensor_postAcquisitionProcess+1,f
  5115  0D91  35F8               	lslf	??_Sensor_postAcquisitionProcess,f
  5116  0D92  0DF9               	rlf	??_Sensor_postAcquisitionProcess+1,f
  5117  0D93  0822               	movf	Sensor_postAcquisitionProcess@deviation+1,w
  5118  0D94  0279               	subwf	??_Sensor_postAcquisitionProcess+1,w
  5119  0D95  1D03               	skipz
  5120  0D96  2D99               	goto	u5225
  5121  0D97  0821               	movf	Sensor_postAcquisitionProcess@deviation,w
  5122  0D98  0278               	subwf	??_Sensor_postAcquisitionProcess,w
  5123  0D99                     u5225:	
  5124  0D99  1803               	skipnc
  5125  0D9A  2D9F               	goto	l5269
  5126                           
  5127                           ;mtouch_sensor.c: 390: Sensor_setActive(sensor);
  5128  0D9B  0823               	movf	Sensor_postAcquisitionProcess@sensor,w
  5129  0D9C  3188  204B         	fcall	_Sensor_setActive
  5130  0D9E  0008               	return
  5131  0D9F                     l5269:	
  5132                           
  5133                           ;mtouch_sensor.c: 391: else
  5134                           ;mtouch_sensor.c: 392: Sensor_setInactive(sensor);
  5135  0D9F  0020               	movlb	0	; select bank0
  5136  0DA0  0823               	movf	Sensor_postAcquisitionProcess@sensor,w
  5137  0DA1  3188  2053         	fcall	_Sensor_setInactive
  5138  0DA3  0008               	return
  5139  0DA4                     __end_of_Sensor_postAcquisitionProcess:	
  5140                           ;mtouch_sensor.c: 394: return MTOUCH_SENSOR_ERROR_none;
  5141                           ;	Return value of _Sensor_postAcquisitionProcess is never used
  5142                           
  5143                           
  5144                           	psect	text22
  5145  0853                     __ptext22:	
  5146 ;; *************** function _Sensor_setInactive *****************
  5147 ;; Defined at:
  5148 ;;		line 770 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  sensor          1    wreg     PTR struct .
  5151 ;;		 -> mtouch_sensor(54), 
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;  sensor          1    2[COMMON] PTR struct .
  5154 ;;		 -> mtouch_sensor(54), 
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  1    wreg      void 
  5157 ;; Registers used:
  5158 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5164 ;;      Params:         0       0       0       0       0       0       0       0
  5165 ;;      Locals:         1       0       0       0       0       0       0       0
  5166 ;;      Temps:          0       0       0       0       0       0       0       0
  5167 ;;      Totals:         1       0       0       0       0       0       0       0
  5168 ;;Total ram usage:        1 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; Hardware stack levels required when called:    2
  5171 ;; This function calls:
  5172 ;;		Nothing
  5173 ;; This function is called by:
  5174 ;;		_Sensor_postAcquisitionProcess
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           
  5179                           ;psect for function _Sensor_setInactive
  5180  0853                     _Sensor_setInactive:	
  5181                           
  5182                           ;incstack = 0
  5183                           ; Regs used in _Sensor_setInactive: [wreg+fsr1l+fsr1h+status,2+status,0]
  5184                           ;Sensor_setInactive@sensor stored from wreg
  5185  0853  00F2               	movwf	Sensor_setInactive@sensor
  5186                           
  5187                           ;mtouch_sensor.c: 772: sensor->active = 0;
  5188  0854  0872               	movf	Sensor_setInactive@sensor,w
  5189  0855  3E08               	addlw	8
  5190  0856  0086               	movwf	6
  5191  0857  3001               	movlw	1	; select bank2/3
  5192  0858  0087               	movwf	7
  5193  0859  1081               	bcf	1,1
  5194  085A  0008               	return
  5195  085B                     __end_of_Sensor_setInactive:	
  5196                           
  5197                           	psect	text23
  5198  084B                     __ptext23:	
  5199 ;; *************** function _Sensor_setActive *****************
  5200 ;; Defined at:
  5201 ;;		line 765 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;  sensor          1    wreg     PTR struct .
  5204 ;;		 -> mtouch_sensor(54), 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  sensor          1    2[COMMON] PTR struct .
  5207 ;;		 -> mtouch_sensor(54), 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      void 
  5210 ;; Registers used:
  5211 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5217 ;;      Params:         0       0       0       0       0       0       0       0
  5218 ;;      Locals:         1       0       0       0       0       0       0       0
  5219 ;;      Temps:          0       0       0       0       0       0       0       0
  5220 ;;      Totals:         1       0       0       0       0       0       0       0
  5221 ;;Total ram usage:        1 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    2
  5224 ;; This function calls:
  5225 ;;		Nothing
  5226 ;; This function is called by:
  5227 ;;		_Sensor_postAcquisitionProcess
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           
  5232                           ;psect for function _Sensor_setActive
  5233  084B                     _Sensor_setActive:	
  5234                           
  5235                           ;incstack = 0
  5236                           ; Regs used in _Sensor_setActive: [wreg+fsr1l+fsr1h+status,2+status,0]
  5237                           ;Sensor_setActive@sensor stored from wreg
  5238  084B  00F2               	movwf	Sensor_setActive@sensor
  5239                           
  5240                           ;mtouch_sensor.c: 767: sensor->active = 1;
  5241  084C  0872               	movf	Sensor_setActive@sensor,w
  5242  084D  3E08               	addlw	8
  5243  084E  0086               	movwf	6
  5244  084F  3001               	movlw	1	; select bank2/3
  5245  0850  0087               	movwf	7
  5246  0851  1481               	bsf	1,1
  5247  0852  0008               	return
  5248  0853                     __end_of_Sensor_setActive:	
  5249                           
  5250                           	psect	text24
  5251  0EA5                     __ptext24:	
  5252 ;; *************** function _Sensor_Scanfrequency_Evaluation *****************
  5253 ;; Defined at:
  5254 ;;		line 640 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;  sensor_adc1     1    wreg     PTR struct .
  5257 ;;		 -> mtouch_sensor(54), 
  5258 ;;  sensor_adc2     1   20[BANK0 ] PTR struct .
  5259 ;;		 -> mtouch_sensor(54), 
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;  sensor_adc1     1   23[BANK0 ] PTR struct .
  5262 ;;		 -> mtouch_sensor(54), 
  5263 ;;  best_packet_    4   27[BANK0 ] unsigned int [2]
  5264 ;;  packet_noise    2   24[BANK0 ] unsigned int 
  5265 ;;  i               1   31[BANK0 ] unsigned char 
  5266 ;;  best_sample_    1   26[BANK0 ] unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      void 
  5269 ;; Registers used:
  5270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5276 ;;      Params:         0       1       0       0       0       0       0       0
  5277 ;;      Locals:         0       9       0       0       0       0       0       0
  5278 ;;      Temps:          0       2       0       0       0       0       0       0
  5279 ;;      Totals:         0      12       0       0       0       0       0       0
  5280 ;;Total ram usage:       12 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    5
  5283 ;; This function calls:
  5284 ;;		_Sensor_Acq_ExecutePacket
  5285 ;; This function is called by:
  5286 ;;		_Sensor_Acquisition
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           
  5291                           ;psect for function _Sensor_Scanfrequency_Evaluation
  5292  0EA5                     _Sensor_Scanfrequency_Evaluation:	
  5293                           
  5294                           ;incstack = 0
  5295                           ; Regs used in _Sensor_Scanfrequency_Evaluation: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  5296                           ;Sensor_Scanfrequency_Evaluation@sensor_adc1 stored from wreg
  5297  0EA5  0020               	movlb	0	; select bank0
  5298  0EA6  00B7               	movwf	Sensor_Scanfrequency_Evaluation@sensor_adc1
  5299                           
  5300                           ;mtouch_sensor.c: 642: uint8_t i;
  5301                           ;mtouch_sensor.c: 643: const mtouch_sensor_sampleperiod_t frequency_hop[5] = {0,13,28,30
      +                          ,23};
  5302                           ;mtouch_sensor.c: 644: mtouch_sensor_packetnoise_t packet_noise_Max;
  5303                           ;mtouch_sensor.c: 645: mtouch_sensor_sampleperiod_t best_sample_period;
  5304                           ;mtouch_sensor.c: 646: mtouch_sensor_packetsample_t best_packet_sample[2];
  5305                           ;mtouch_sensor.c: 648: packet_noise_Max = packet_noise + (packet_noise>>2);
  5306  0EA7  086B               	movf	_packet_noise+1,w
  5307  0EA8  00B6               	movwf	??_Sensor_Scanfrequency_Evaluation+1
  5308  0EA9  086A               	movf	_packet_noise,w
  5309  0EAA  00B5               	movwf	??_Sensor_Scanfrequency_Evaluation
  5310  0EAB  36B6               	lsrf	??_Sensor_Scanfrequency_Evaluation+1,f
  5311  0EAC  0CB5               	rrf	??_Sensor_Scanfrequency_Evaluation,f
  5312  0EAD  36B6               	lsrf	??_Sensor_Scanfrequency_Evaluation+1,f
  5313  0EAE  0CB5               	rrf	??_Sensor_Scanfrequency_Evaluation,f
  5314  0EAF  086A               	movf	_packet_noise,w
  5315  0EB0  0735               	addwf	??_Sensor_Scanfrequency_Evaluation,w
  5316  0EB1  00B8               	movwf	Sensor_Scanfrequency_Evaluation@packet_noise_Max
  5317  0EB2  086B               	movf	_packet_noise+1,w
  5318  0EB3  3D36               	addwfc	??_Sensor_Scanfrequency_Evaluation+1,w
  5319  0EB4  00B9               	movwf	Sensor_Scanfrequency_Evaluation@packet_noise_Max+1
  5320                           
  5321                           ;mtouch_sensor.c: 649: best_sample_period = sample_period;
  5322  0EB5  0865               	movf	_sample_period,w
  5323  0EB6  00B5               	movwf	??_Sensor_Scanfrequency_Evaluation
  5324  0EB7  0835               	movf	??_Sensor_Scanfrequency_Evaluation,w
  5325  0EB8  00BA               	movwf	Sensor_Scanfrequency_Evaluation@best_sample_period
  5326                           
  5327                           ;mtouch_sensor.c: 650: best_packet_sample[0] = packet_sample[0];
  5328  0EB9  0867               	movf	_packet_sample+1,w
  5329  0EBA  00BC               	movwf	Sensor_Scanfrequency_Evaluation@best_packet_sample+1
  5330  0EBB  0866               	movf	_packet_sample,w
  5331  0EBC  00BB               	movwf	Sensor_Scanfrequency_Evaluation@best_packet_sample
  5332                           
  5333                           ;mtouch_sensor.c: 651: best_packet_sample[1] = packet_sample[1];
  5334  0EBD  0869               	movf	_packet_sample+3,w
  5335  0EBE  00BE               	movwf	Sensor_Scanfrequency_Evaluation@best_packet_sample+3
  5336  0EBF  0868               	movf	_packet_sample+2,w
  5337  0EC0  00BD               	movwf	Sensor_Scanfrequency_Evaluation@best_packet_sample+2
  5338                           
  5339                           ;mtouch_sensor.c: 653: for(i=(uint8_t)0;i<(uint8_t)5;i++)
  5340  0EC1  01BF               	clrf	Sensor_Scanfrequency_Evaluation@i
  5341  0EC2  3005               	movlw	5
  5342  0EC3  023F               	subwf	Sensor_Scanfrequency_Evaluation@i,w
  5343  0EC4  1803               	btfsc	3,0
  5344  0EC5  2F02               	goto	l5305
  5345  0EC6                     l5287:	
  5346                           
  5347                           ;mtouch_sensor.c: 654: {
  5348                           ;mtouch_sensor.c: 655: sample_period += frequency_hop[i];
  5349  0EC6  083F               	movf	Sensor_Scanfrequency_Evaluation@i,w
  5350  0EC7  3E68               	addlw	low (Sensor_Scanfrequency_Evaluation@frequency_hop| (0+32768))
  5351  0EC8  0084               	movwf	4
  5352  0EC9  3090               	movlw	high (Sensor_Scanfrequency_Evaluation@frequency_hop| (0+32768))
  5353  0ECA  1803               	skipnc
  5354  0ECB  3E01               	addlw	1
  5355  0ECC  0085               	movwf	5
  5356  0ECD  0800               	movf	0,w	;code access
  5357  0ECE  00B5               	movwf	??_Sensor_Scanfrequency_Evaluation
  5358  0ECF  0835               	movf	??_Sensor_Scanfrequency_Evaluation,w
  5359  0ED0  07E5               	addwf	_sample_period,f
  5360                           
  5361                           ;mtouch_sensor.c: 661: else if(sample_period < ((mtouch_sensor_sampleperiod_t)(mtouch_se
      +                          nsor_time_t)32+(mtouch_sensor_time_t)32+(mtouch_sensor_time_t)110))
  5362                           
  5363                           ;mtouch_sensor.c: 660: }
  5364                           
  5365                           ;mtouch_sensor.c: 659: sample_period+=((mtouch_sensor_sampleperiod_t)(mtouch_sensor_time
      +                          _t)32+(mtouch_sensor_time_t)32+(mtouch_sensor_time_t)110);
  5366                           
  5367                           ;mtouch_sensor.c: 657: {
  5368                           ;mtouch_sensor.c: 658: sample_period-=((mtouch_sensor_sampleperiod_t)255);
  5369                           
  5370                           ;mtouch_sensor.c: 656: if(sample_period > ((mtouch_sensor_sampleperiod_t)255))
  5371  0ED1  30AE               	movlw	174
  5372  0ED2  0265               	subwf	_sample_period,w
  5373  0ED3  1803               	skipnc
  5374  0ED4  2ED9               	goto	l5295
  5375                           
  5376                           ;mtouch_sensor.c: 662: {
  5377                           ;mtouch_sensor.c: 663: sample_period += ((mtouch_sensor_sampleperiod_t)(mtouch_sensor_ti
      +                          me_t)32+(mtouch_sensor_time_t)32+(mtouch_sensor_time_t)110);
  5378  0ED5  30AE               	movlw	174
  5379  0ED6  00B5               	movwf	??_Sensor_Scanfrequency_Evaluation
  5380  0ED7  0835               	movf	??_Sensor_Scanfrequency_Evaluation,w
  5381  0ED8  07E5               	addwf	_sample_period,f
  5382  0ED9                     l5295:	
  5383                           
  5384                           ;mtouch_sensor.c: 664: }
  5385                           ;mtouch_sensor.c: 665: Sensor_Acq_ExecutePacket(sensor_adc1,sensor_adc2);
  5386  0ED9  0834               	movf	Sensor_Scanfrequency_Evaluation@sensor_adc2,w
  5387  0EDA  00B5               	movwf	??_Sensor_Scanfrequency_Evaluation
  5388  0EDB  0835               	movf	??_Sensor_Scanfrequency_Evaluation,w
  5389  0EDC  00A4               	movwf	Sensor_Acq_ExecutePacket@sensor_adc2
  5390  0EDD  0837               	movf	Sensor_Scanfrequency_Evaluation@sensor_adc1,w
  5391  0EDE  3185  2596  318E   	fcall	_Sensor_Acq_ExecutePacket
  5392                           
  5393                           ;mtouch_sensor.c: 666: if(packet_noise_Max < packet_noise)
  5394  0EE1  0020               	movlb	0	; select bank0
  5395  0EE2  086B               	movf	_packet_noise+1,w
  5396  0EE3  0239               	subwf	Sensor_Scanfrequency_Evaluation@packet_noise_Max+1,w
  5397  0EE4  1D03               	skipz
  5398  0EE5  2EE8               	goto	u5255
  5399  0EE6  086A               	movf	_packet_noise,w
  5400  0EE7  0238               	subwf	Sensor_Scanfrequency_Evaluation@packet_noise_Max,w
  5401  0EE8                     u5255:	
  5402  0EE8  1803               	skipnc
  5403  0EE9  2EFA               	goto	l5301
  5404                           
  5405                           ;mtouch_sensor.c: 667: {
  5406                           ;mtouch_sensor.c: 668: packet_noise_Max = packet_noise;
  5407  0EEA  086B               	movf	_packet_noise+1,w
  5408  0EEB  00B9               	movwf	Sensor_Scanfrequency_Evaluation@packet_noise_Max+1
  5409  0EEC  086A               	movf	_packet_noise,w
  5410  0EED  00B8               	movwf	Sensor_Scanfrequency_Evaluation@packet_noise_Max
  5411                           
  5412                           ;mtouch_sensor.c: 669: best_sample_period = sample_period;
  5413  0EEE  0865               	movf	_sample_period,w
  5414  0EEF  00B5               	movwf	??_Sensor_Scanfrequency_Evaluation
  5415  0EF0  0835               	movf	??_Sensor_Scanfrequency_Evaluation,w
  5416  0EF1  00BA               	movwf	Sensor_Scanfrequency_Evaluation@best_sample_period
  5417                           
  5418                           ;mtouch_sensor.c: 670: best_packet_sample[0] = packet_sample[0];
  5419  0EF2  0867               	movf	_packet_sample+1,w
  5420  0EF3  00BC               	movwf	Sensor_Scanfrequency_Evaluation@best_packet_sample+1
  5421  0EF4  0866               	movf	_packet_sample,w
  5422  0EF5  00BB               	movwf	Sensor_Scanfrequency_Evaluation@best_packet_sample
  5423                           
  5424                           ;mtouch_sensor.c: 671: best_packet_sample[1] = packet_sample[1];
  5425  0EF6  0869               	movf	_packet_sample+3,w
  5426  0EF7  00BE               	movwf	Sensor_Scanfrequency_Evaluation@best_packet_sample+3
  5427  0EF8  0868               	movf	_packet_sample+2,w
  5428  0EF9  00BD               	movwf	Sensor_Scanfrequency_Evaluation@best_packet_sample+2
  5429  0EFA                     l5301:	
  5430  0EFA  3001               	movlw	1
  5431  0EFB  00B5               	movwf	??_Sensor_Scanfrequency_Evaluation
  5432  0EFC  0835               	movf	??_Sensor_Scanfrequency_Evaluation,w
  5433  0EFD  07BF               	addwf	Sensor_Scanfrequency_Evaluation@i,f
  5434  0EFE  3005               	movlw	5
  5435  0EFF  023F               	subwf	Sensor_Scanfrequency_Evaluation@i,w
  5436  0F00  1C03               	skipc
  5437  0F01  2EC6               	goto	l5287
  5438  0F02                     l5305:	
  5439                           
  5440                           ;mtouch_sensor.c: 672: }
  5441                           ;mtouch_sensor.c: 673: }
  5442                           ;mtouch_sensor.c: 675: sample_period = best_sample_period;
  5443  0F02  083A               	movf	Sensor_Scanfrequency_Evaluation@best_sample_period,w
  5444  0F03  00B5               	movwf	??_Sensor_Scanfrequency_Evaluation
  5445  0F04  0835               	movf	??_Sensor_Scanfrequency_Evaluation,w
  5446  0F05  00E5               	movwf	_sample_period
  5447                           
  5448                           ;mtouch_sensor.c: 676: packet_sample[0] = best_packet_sample[0];
  5449  0F06  083C               	movf	Sensor_Scanfrequency_Evaluation@best_packet_sample+1,w
  5450  0F07  00E7               	movwf	_packet_sample+1
  5451  0F08  083B               	movf	Sensor_Scanfrequency_Evaluation@best_packet_sample,w
  5452  0F09  00E6               	movwf	_packet_sample
  5453                           
  5454                           ;mtouch_sensor.c: 677: packet_sample[1] = best_packet_sample[1];
  5455  0F0A  083E               	movf	Sensor_Scanfrequency_Evaluation@best_packet_sample+3,w
  5456  0F0B  00E9               	movwf	_packet_sample+3
  5457  0F0C  083D               	movf	Sensor_Scanfrequency_Evaluation@best_packet_sample+2,w
  5458  0F0D  00E8               	movwf	_packet_sample+2
  5459  0F0E  0008               	return
  5460  0F0F                     __end_of_Sensor_Scanfrequency_Evaluation:	
  5461                           
  5462                           	psect	text25
  5463  0596                     __ptext25:	
  5464 ;; *************** function _Sensor_Acq_ExecutePacket *****************
  5465 ;; Defined at:
  5466 ;;		line 402 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  sensor_adc1     1    wreg     PTR struct .
  5469 ;;		 -> mtouch_sensor(54), 
  5470 ;;  sensor_adc2     1    4[BANK0 ] PTR struct .
  5471 ;;		 -> mtouch_sensor(54), 
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;  sensor_adc1     1   19[BANK0 ] PTR struct .
  5474 ;;		 -> mtouch_sensor(54), 
  5475 ;;  last_b          2   15[BANK0 ] unsigned int 
  5476 ;;  last_a          2   13[BANK0 ] unsigned int 
  5477 ;;  sensor_globa    1   18[BANK0 ] struct .
  5478 ;;  packet_count    1   17[BANK0 ] unsigned char 
  5479 ;;  activeSensor    1   12[BANK0 ] unsigned char 
  5480 ;;  error           1   11[BANK0 ] enum E3335
  5481 ;;  ADxIF_flag      1   10[BANK0 ] unsigned char 
  5482 ;;  AD2CON2_temp    1    9[BANK0 ] unsigned char 
  5483 ;;  AD1CON2_temp    1    8[BANK0 ] unsigned char 
  5484 ;;  ADCOMCON_tem    1    7[BANK0 ] unsigned char 
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      enum E3335
  5487 ;; Registers used:
  5488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5494 ;;      Params:         0       1       0       0       0       0       0       0
  5495 ;;      Locals:         0      13       0       0       0       0       0       0
  5496 ;;      Temps:          0       2       0       0       0       0       0       0
  5497 ;;      Totals:         0      16       0       0       0       0       0       0
  5498 ;;Total ram usage:       16 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:    4
  5501 ;; This function calls:
  5502 ;;		_MTOUCH_Sensor_Scan_Initialize
  5503 ;;		_Sensor_autoCalibration
  5504 ;;		_Sensor_isActive
  5505 ;;		_Sensor_isCalibrated
  5506 ;;		_Sensor_isCalibratingAcqTime
  5507 ;;		_Sensor_isEnabled
  5508 ;;		_TMR2_LoadPeriodRegister
  5509 ;;		_TMR2_StartTimer
  5510 ;;		_TMR2_StopTimer
  5511 ;;		_abs
  5512 ;; This function is called by:
  5513 ;;		_Sensor_Acquisition
  5514 ;;		_Sensor_Scanfrequency_Evaluation
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           
  5519                           ;psect for function _Sensor_Acq_ExecutePacket
  5520  0596                     _Sensor_Acq_ExecutePacket:	
  5521                           
  5522                           ;incstack = 0
  5523                           ; Regs used in _Sensor_Acq_ExecutePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5524                           ;Sensor_Acq_ExecutePacket@sensor_adc1 stored from wreg
  5525  0596  0020               	movlb	0	; select bank0
  5526  0597  00B3               	movwf	Sensor_Acq_ExecutePacket@sensor_adc1
  5527                           
  5528                           ;mtouch_sensor.c: 404: enum mtouch_sensor_error error = MTOUCH_SENSOR_ERROR_none;
  5529  0598  01AB               	clrf	Sensor_Acq_ExecutePacket@error
  5530                           
  5531                           ;mtouch_sensor.c: 405: uint8_t ADCOMCON_temp;
  5532                           ;mtouch_sensor.c: 406: uint8_t ADxIF_flag = 0;
  5533  0599  01AA               	clrf	Sensor_Acq_ExecutePacket@ADxIF_flag
  5534                           
  5535                           ;mtouch_sensor.c: 407: mtouch_sensor_globalflags_t sensor_globalFlags;
  5536                           ;mtouch_sensor.c: 408: mtouch_sensor_packetcounter_t packet_counter;
  5537                           ;mtouch_sensor.c: 410: mtouch_sensor_adcsample_t last_a = 0;
  5538  059A  01AD               	clrf	Sensor_Acq_ExecutePacket@last_a
  5539  059B  01AE               	clrf	Sensor_Acq_ExecutePacket@last_a+1
  5540                           
  5541                           ;mtouch_sensor.c: 411: mtouch_sensor_adcsample_t last_b = 0;
  5542  059C  01AF               	clrf	Sensor_Acq_ExecutePacket@last_b
  5543  059D  01B0               	clrf	Sensor_Acq_ExecutePacket@last_b+1
  5544                           
  5545                           ;mtouch_sensor.c: 412: uint8_t activeSensor = 0;
  5546  059E  01AC               	clrf	Sensor_Acq_ExecutePacket@activeSensor
  5547                           
  5548                           ;mtouch_sensor.c: 414: uint8_t ADCOMCON_temp;
  5549                           ;mtouch_sensor.c: 415: uint8_t AD1CON2_temp,AD2CON2_temp;
  5550                           ;mtouch_sensor.c: 418: if(Sensor_isEnabled(sensor_adc1)== 0 && Sensor_isEnabled(sensor_a
      +                          dc2)== 0)
  5551  059F  0833               	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5552  05A0  3189  210B  3185   	fcall	_Sensor_isEnabled
  5553  05A3  3A00               	xorlw	0
  5554  05A4  1D03               	skipz
  5555  05A5  2DB1               	goto	l5077
  5556  05A6  0020               	movlb	0	; select bank0
  5557  05A7  0824               	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5558  05A8  3189  210B  3185   	fcall	_Sensor_isEnabled
  5559  05AB  3A00               	xorlw	0
  5560  05AC  1D03               	skipz
  5561  05AD  2DB1               	goto	l5077
  5562                           
  5563                           ;mtouch_sensor.c: 419: return error;
  5564  05AE  0020               	movlb	0	; select bank0
  5565  05AF  082B               	movf	Sensor_Acq_ExecutePacket@error,w
  5566  05B0  0008               	return
  5567  05B1                     l5077:	
  5568                           
  5569                           ;mtouch_sensor.c: 421: if(Sensor_isActive(sensor_adc2))
  5570  05B1  0020               	movlb	0	; select bank0
  5571  05B2  0824               	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5572  05B3  3188  2074  3185   	fcall	_Sensor_isActive
  5573  05B6  3A00               	xorlw	0
  5574  05B7  1903               	skipnz
  5575  05B8  2DBC               	goto	l5081
  5576                           
  5577                           ;mtouch_sensor.c: 422: activeSensor = 1;
  5578  05B9  0020               	movlb	0	; select bank0
  5579  05BA  01AC               	clrf	Sensor_Acq_ExecutePacket@activeSensor
  5580  05BB  0AAC               	incf	Sensor_Acq_ExecutePacket@activeSensor,f
  5581  05BC                     l5081:	
  5582                           ;mtouch_sensor.c: 423: else
  5583                           ;mtouch_sensor.c: 424: {
  5584                           
  5585                           
  5586                           ;mtouch_sensor.c: 426: }
  5587                           ;mtouch_sensor.c: 428: ADCOMCON_temp = ADCOMCON;
  5588  05BC  002E               	movlb	14	; select bank14
  5589  05BD  0812               	movf	18,w	;volatile
  5590  05BE  0020               	movlb	0	; select bank0
  5591  05BF  00A5               	movwf	??_Sensor_Acq_ExecutePacket
  5592  05C0  0825               	movf	??_Sensor_Acq_ExecutePacket,w
  5593  05C1  00A7               	movwf	Sensor_Acq_ExecutePacket@ADCOMCON_temp
  5594                           
  5595                           ;mtouch_sensor.c: 429: AD1CON2_temp = AD1CON2;
  5596  05C2  002E               	movlb	14	; select bank14
  5597  05C3  0813               	movf	19,w	;volatile
  5598  05C4  0020               	movlb	0	; select bank0
  5599  05C5  00A5               	movwf	??_Sensor_Acq_ExecutePacket
  5600  05C6  0825               	movf	??_Sensor_Acq_ExecutePacket,w
  5601  05C7  00A8               	movwf	Sensor_Acq_ExecutePacket@AD1CON2_temp
  5602                           
  5603                           ;mtouch_sensor.c: 430: AD2CON2_temp = AD2CON2;
  5604  05C8  002F               	movlb	15	; select bank15
  5605  05C9  0813               	movf	19,w	;volatile
  5606  05CA  0020               	movlb	0	; select bank0
  5607  05CB  00A5               	movwf	??_Sensor_Acq_ExecutePacket
  5608  05CC  0825               	movf	??_Sensor_Acq_ExecutePacket,w
  5609  05CD  00A9               	movwf	Sensor_Acq_ExecutePacket@AD2CON2_temp
  5610                           
  5611                           ;mtouch_sensor.c: 431: MTOUCH_Sensor_Scan_Initialize();
  5612  05CE  3188  20EA  3185   	fcall	_MTOUCH_Sensor_Scan_Initialize
  5613                           
  5614                           ;mtouch_sensor.c: 433: if(Sensor_isEnabled(sensor_adc1))
  5615  05D1  0020               	movlb	0	; select bank0
  5616  05D2  0833               	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5617  05D3  3189  210B  3185   	fcall	_Sensor_isEnabled
  5618  05D6  3A00               	xorlw	0
  5619  05D7  1903               	skipnz
  5620  05D8  2E43               	goto	l5113
  5621                           
  5622                           ;mtouch_sensor.c: 434: {
  5623                           ;mtouch_sensor.c: 435: AD1CON0 = (uint8_t)sensor_adc1->adcon0;
  5624  05D9  0020               	movlb	0	; select bank0
  5625  05DA  0833               	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5626  05DB  0086               	movwf	6
  5627  05DC  3001               	movlw	1	; select bank2/3
  5628  05DD  0087               	movwf	7
  5629  05DE  3001               	movlw	1	; select bank2/3
  5630  05DF  3F41               	moviw [1]fsr1
  5631  05E0  002E               	movlb	14	; select bank14
  5632  05E1  0091               	movwf	17	;volatile
  5633                           
  5634                           ;mtouch_sensor.c: 436: AAD1CAP = (uint8_t)sensor_adc1->addcap;
  5635  05E2  0020               	movlb	0	; select bank0
  5636  05E3  0833               	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5637  05E4  0086               	movwf	6
  5638  05E5  3001               	movlw	1	; select bank2/3
  5639  05E6  0087               	movwf	7
  5640  05E7  3001               	movlw	1	; select bank2/3
  5641  05E8  3F45               	moviw [5]fsr1
  5642  05E9  002E               	movlb	14	; select bank14
  5643  05EA  0099               	movwf	25	;volatile
  5644                           
  5645                           ;mtouch_sensor.c: 437: AD1CON2bits.TRIGSEL = (uint8_t)0b101;
  5646  05EB  0813               	movf	19,w	;volatile
  5647  05EC  398F               	andlw	-113
  5648  05ED  3850               	iorlw	80
  5649  05EE  0093               	movwf	19	;volatile
  5650                           
  5651                           ;mtouch_sensor.c: 439: if(Sensor_isCalibrated(sensor_adc1))
  5652  05EF  0020               	movlb	0	; select bank0
  5653  05F0  0833               	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5654  05F1  3188  2086  3185   	fcall	_Sensor_isCalibrated
  5655  05F4  3A00               	xorlw	0
  5656  05F5  1903               	skipnz
  5657  05F6  2E08               	goto	l5095
  5658                           
  5659                           ;mtouch_sensor.c: 440: {
  5660                           ;mtouch_sensor.c: 441: AD1PRECON = (uint8_t)sensor_adc1->precharge_time;
  5661  05F7  0020               	movlb	0	; select bank0
  5662  05F8  0833               	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5663  05F9  0086               	movwf	6
  5664  05FA  3001               	movlw	1	; select bank2/3
  5665  05FB  0087               	movwf	7
  5666  05FC  3001               	movlw	1	; select bank2/3
  5667  05FD  3F42               	moviw [2]fsr1
  5668  05FE  002E               	movlb	14	; select bank14
  5669  05FF  0096               	movwf	22	;volatile
  5670                           
  5671                           ;mtouch_sensor.c: 442: AD1ACQCON = (uint8_t)sensor_adc1->acquisition_time;
  5672  0600  0020               	movlb	0	; select bank0
  5673  0601  0833               	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5674  0602  0086               	movwf	6
  5675  0603  3001               	movlw	1	; select bank2/3
  5676  0604  0087               	movwf	7
  5677  0605  3001               	movlw	1	; select bank2/3
  5678  0606  3F43               	moviw [3]fsr1
  5679  0607  2E1C               	goto	L4
  5680  0608                     l5095:	
  5681                           ;mtouch_sensor.c: 443: }
  5682                           
  5683                           
  5684                           ;mtouch_sensor.c: 444: else
  5685                           ;mtouch_sensor.c: 445: {
  5686                           ;mtouch_sensor.c: 446: AD1PRECON = (mtouch_sensor_time_t)32;
  5687  0608  3020               	movlw	32
  5688  0609  002E               	movlb	14	; select bank14
  5689  060A  0096               	movwf	22	;volatile
  5690                           
  5691                           ;mtouch_sensor.c: 447: if(Sensor_isCalibratingAcqTime(sensor_adc1))
  5692  060B  0020               	movlb	0	; select bank0
  5693  060C  0833               	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5694  060D  3188  206B  3185   	fcall	_Sensor_isCalibratingAcqTime
  5695  0610  3A00               	xorlw	0
  5696  0611  1903               	skipnz
  5697  0612  2E1B               	goto	l5101
  5698                           
  5699                           ;mtouch_sensor.c: 448: AD1ACQCON = (uint8_t)sensor_adc1->acquisition_time;
  5700  0613  0020               	movlb	0	; select bank0
  5701  0614  0833               	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5702  0615  0086               	movwf	6
  5703  0616  3001               	movlw	1	; select bank2/3
  5704  0617  0087               	movwf	7
  5705  0618  3001               	movlw	1	; select bank2/3
  5706  0619  3F43               	moviw [3]fsr1
  5707  061A  2E1C               	goto	L4
  5708  061B                     l5101:	
  5709                           
  5710                           ;mtouch_sensor.c: 449: else
  5711                           ;mtouch_sensor.c: 450: AD1ACQCON = (mtouch_sensor_time_t)32;
  5712  061B  3020               	movlw	32
  5713  061C                     L4:	
  5714  061C  002E               	movlb	14	; select bank14
  5715  061D  0097               	movwf	23	;volatile
  5716                           
  5717                           ;mtouch_sensor.c: 451: }
  5718                           ;mtouch_sensor.c: 453: packet_counter = sensor_adc1->oversampling-(mtouch_sensor_packetc
      +                          ounter_t)1;
  5719  061E  0020               	movlb	0	; select bank0
  5720  061F  0833               	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5721  0620  3E04               	addlw	4
  5722  0621  0086               	movwf	6
  5723  0622  3001               	movlw	1	; select bank2/3
  5724  0623  0087               	movwf	7
  5725  0624  0801               	movf	1,w
  5726  0625  3EFF               	addlw	255
  5727  0626  00A5               	movwf	??_Sensor_Acq_ExecutePacket
  5728  0627  0825               	movf	??_Sensor_Acq_ExecutePacket,w
  5729  0628  00B1               	movwf	Sensor_Acq_ExecutePacket@packet_counter
  5730                           
  5731                           ;mtouch_sensor.c: 454: packet_sample[0] = (mtouch_sensor_packetsample_t)(sensor_adc1->ov
      +                          ersampling)<<9;
  5732  0629  0833               	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  5733  062A  3E04               	addlw	4
  5734  062B  0086               	movwf	6
  5735  062C  3001               	movlw	1	; select bank2/3
  5736  062D  0087               	movwf	7
  5737  062E  0801               	movf	1,w
  5738  062F  00A5               	movwf	??_Sensor_Acq_ExecutePacket
  5739  0630  01A6               	clrf	??_Sensor_Acq_ExecutePacket+1
  5740  0631  3009               	movlw	9
  5741  0632                     u4995:	
  5742  0632  35A5               	lslf	??_Sensor_Acq_ExecutePacket,f
  5743  0633  0DA6               	rlf	??_Sensor_Acq_ExecutePacket+1,f
  5744  0634  0B89               	decfsz	9,f
  5745  0635  2E32               	goto	u4995
  5746  0636  0825               	movf	??_Sensor_Acq_ExecutePacket,w
  5747  0637  00E6               	movwf	_packet_sample
  5748  0638  0826               	movf	??_Sensor_Acq_ExecutePacket+1,w
  5749  0639  00E7               	movwf	_packet_sample+1
  5750                           
  5751                           ;mtouch_sensor.c: 456: PIR1bits.AD1IF = 0;
  5752  063A  1311               	bcf	17,6	;volatile
  5753                           
  5754                           ;mtouch_sensor.c: 457: AAD1GRD = 0b01000000;
  5755  063B  3040               	movlw	64
  5756  063C  002E               	movlb	14	; select bank14
  5757  063D  0098               	movwf	24	;volatile
  5758                           
  5759                           ;mtouch_sensor.c: 458: AAD2GRD = 0b00000000;
  5760  063E  002F               	movlb	15	; select bank15
  5761  063F  0198               	clrf	24	;volatile
  5762                           
  5763                           ;mtouch_sensor.c: 459: APFCONbits.GRDASEL = 0x0;
  5764  0640  0022               	movlb	2	; select bank2
  5765  0641  101D               	bcf	29,0	;volatile
  5766                           
  5767                           ;mtouch_sensor.c: 461: }
  5768  0642  2E57               	goto	l5123
  5769  0643                     l5113:	
  5770                           
  5771                           ;mtouch_sensor.c: 462: else
  5772                           ;mtouch_sensor.c: 463: {
  5773                           ;mtouch_sensor.c: 464: packet_counter = sensor_adc2->oversampling-(mtouch_sensor_packetc
      +                          ounter_t)1;
  5774  0643  0020               	movlb	0	; select bank0
  5775  0644  0824               	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5776  0645  3E04               	addlw	4
  5777  0646  0086               	movwf	6
  5778  0647  3001               	movlw	1	; select bank2/3
  5779  0648  0087               	movwf	7
  5780  0649  0801               	movf	1,w
  5781  064A  3EFF               	addlw	255
  5782  064B  00A5               	movwf	??_Sensor_Acq_ExecutePacket
  5783  064C  0825               	movf	??_Sensor_Acq_ExecutePacket,w
  5784  064D  00B1               	movwf	Sensor_Acq_ExecutePacket@packet_counter
  5785                           
  5786                           ;mtouch_sensor.c: 465: ADxIF_flag = 1;
  5787  064E  01AA               	clrf	Sensor_Acq_ExecutePacket@ADxIF_flag
  5788  064F  0AAA               	incf	Sensor_Acq_ExecutePacket@ADxIF_flag,f
  5789                           
  5790                           ;mtouch_sensor.c: 466: AAD1GRD = 0b00000000;
  5791  0650  002E               	movlb	14	; select bank14
  5792  0651  0198               	clrf	24	;volatile
  5793                           
  5794                           ;mtouch_sensor.c: 467: AAD2GRD = 0b01000000;
  5795  0652  3040               	movlw	64
  5796  0653  002F               	movlb	15	; select bank15
  5797  0654  0098               	movwf	24	;volatile
  5798                           
  5799                           ;mtouch_sensor.c: 468: APFCONbits.GRDASEL = 0x1;
  5800  0655  0022               	movlb	2	; select bank2
  5801  0656  141D               	bsf	29,0	;volatile
  5802  0657                     l5123:	
  5803                           
  5804                           ;mtouch_sensor.c: 469: }
  5805                           ;mtouch_sensor.c: 471: if(Sensor_isEnabled(sensor_adc2))
  5806  0657  0020               	movlb	0	; select bank0
  5807  0658  0824               	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5808  0659  3189  210B  3185   	fcall	_Sensor_isEnabled
  5809  065C  3A00               	xorlw	0
  5810  065D  1903               	skipnz
  5811  065E  2EB7               	goto	l5145
  5812                           
  5813                           ;mtouch_sensor.c: 472: {
  5814                           ;mtouch_sensor.c: 473: AD2CON0 = (uint8_t)sensor_adc2->adcon0;
  5815  065F  0020               	movlb	0	; select bank0
  5816  0660  0824               	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5817  0661  0086               	movwf	6
  5818  0662  3001               	movlw	1	; select bank2/3
  5819  0663  0087               	movwf	7
  5820  0664  3001               	movlw	1	; select bank2/3
  5821  0665  3F41               	moviw [1]fsr1
  5822  0666  002F               	movlb	15	; select bank15
  5823  0667  0091               	movwf	17	;volatile
  5824                           
  5825                           ;mtouch_sensor.c: 474: AAD2CAP = (uint8_t)sensor_adc2->addcap;
  5826  0668  0020               	movlb	0	; select bank0
  5827  0669  0824               	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5828  066A  0086               	movwf	6
  5829  066B  3001               	movlw	1	; select bank2/3
  5830  066C  0087               	movwf	7
  5831  066D  3001               	movlw	1	; select bank2/3
  5832  066E  3F45               	moviw [5]fsr1
  5833  066F  002F               	movlb	15	; select bank15
  5834  0670  0099               	movwf	25	;volatile
  5835                           
  5836                           ;mtouch_sensor.c: 475: AD2CON2bits.TRIGSEL = (uint8_t)0b101;
  5837  0671  0813               	movf	19,w	;volatile
  5838  0672  398F               	andlw	-113
  5839  0673  3850               	iorlw	80
  5840  0674  0093               	movwf	19	;volatile
  5841                           
  5842                           ;mtouch_sensor.c: 476: if(Sensor_isCalibrated(sensor_adc2))
  5843  0675  0020               	movlb	0	; select bank0
  5844  0676  0824               	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5845  0677  3188  2086  3185   	fcall	_Sensor_isCalibrated
  5846  067A  3A00               	xorlw	0
  5847  067B  1903               	skipnz
  5848  067C  2E8E               	goto	l5133
  5849                           
  5850                           ;mtouch_sensor.c: 477: {
  5851                           ;mtouch_sensor.c: 478: AD2PRECON = (uint8_t)sensor_adc2->precharge_time;
  5852  067D  0020               	movlb	0	; select bank0
  5853  067E  0824               	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5854  067F  0086               	movwf	6
  5855  0680  3001               	movlw	1	; select bank2/3
  5856  0681  0087               	movwf	7
  5857  0682  3001               	movlw	1	; select bank2/3
  5858  0683  3F42               	moviw [2]fsr1
  5859  0684  002F               	movlb	15	; select bank15
  5860  0685  0096               	movwf	22	;volatile
  5861                           
  5862                           ;mtouch_sensor.c: 479: AD2ACQCON = (uint8_t)sensor_adc2->acquisition_time;
  5863  0686  0020               	movlb	0	; select bank0
  5864  0687  0824               	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5865  0688  0086               	movwf	6
  5866  0689  3001               	movlw	1	; select bank2/3
  5867  068A  0087               	movwf	7
  5868  068B  3001               	movlw	1	; select bank2/3
  5869  068C  3F43               	moviw [3]fsr1
  5870  068D  2EA2               	goto	L6
  5871  068E                     l5133:	
  5872                           ;mtouch_sensor.c: 480: }
  5873                           
  5874                           
  5875                           ;mtouch_sensor.c: 481: else
  5876                           ;mtouch_sensor.c: 482: {
  5877                           ;mtouch_sensor.c: 483: AD2PRECON = (mtouch_sensor_time_t)32;
  5878  068E  3020               	movlw	32
  5879  068F  002F               	movlb	15	; select bank15
  5880  0690  0096               	movwf	22	;volatile
  5881                           
  5882                           ;mtouch_sensor.c: 484: if(Sensor_isCalibratingAcqTime(sensor_adc2))
  5883  0691  0020               	movlb	0	; select bank0
  5884  0692  0824               	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5885  0693  3188  206B  3185   	fcall	_Sensor_isCalibratingAcqTime
  5886  0696  3A00               	xorlw	0
  5887  0697  1903               	skipnz
  5888  0698  2EA1               	goto	l5139
  5889                           
  5890                           ;mtouch_sensor.c: 485: AD2ACQCON = (uint8_t)sensor_adc2->acquisition_time;
  5891  0699  0020               	movlb	0	; select bank0
  5892  069A  0824               	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5893  069B  0086               	movwf	6
  5894  069C  3001               	movlw	1	; select bank2/3
  5895  069D  0087               	movwf	7
  5896  069E  3001               	movlw	1	; select bank2/3
  5897  069F  3F43               	moviw [3]fsr1
  5898  06A0  2EA2               	goto	L6
  5899  06A1                     l5139:	
  5900                           
  5901                           ;mtouch_sensor.c: 486: else
  5902                           ;mtouch_sensor.c: 487: AD2ACQCON = (mtouch_sensor_time_t)32;
  5903  06A1  3020               	movlw	32
  5904  06A2                     L6:	
  5905  06A2  002F               	movlb	15	; select bank15
  5906  06A3  0097               	movwf	23	;volatile
  5907                           
  5908                           ;mtouch_sensor.c: 488: }
  5909                           ;mtouch_sensor.c: 489: packet_sample[1] = (mtouch_sensor_packetsample_t)(sensor_adc2->ov
      +                          ersampling)<<9;
  5910  06A4  0020               	movlb	0	; select bank0
  5911  06A5  0824               	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  5912  06A6  3E04               	addlw	4
  5913  06A7  0086               	movwf	6
  5914  06A8  3001               	movlw	1	; select bank2/3
  5915  06A9  0087               	movwf	7
  5916  06AA  0801               	movf	1,w
  5917  06AB  00A5               	movwf	??_Sensor_Acq_ExecutePacket
  5918  06AC  01A6               	clrf	??_Sensor_Acq_ExecutePacket+1
  5919  06AD  3009               	movlw	9
  5920  06AE                     u5035:	
  5921  06AE  35A5               	lslf	??_Sensor_Acq_ExecutePacket,f
  5922  06AF  0DA6               	rlf	??_Sensor_Acq_ExecutePacket+1,f
  5923  06B0  0B89               	decfsz	9,f
  5924  06B1  2EAE               	goto	u5035
  5925  06B2  0825               	movf	??_Sensor_Acq_ExecutePacket,w
  5926  06B3  00E8               	movwf	_packet_sample+2
  5927  06B4  0826               	movf	??_Sensor_Acq_ExecutePacket+1,w
  5928  06B5  00E9               	movwf	_packet_sample+3
  5929                           
  5930                           ;mtouch_sensor.c: 490: PIR2bits.AD2IF = 0;
  5931  06B6  1312               	bcf	18,6	;volatile
  5932  06B7                     l5145:	
  5933                           
  5934                           ;mtouch_sensor.c: 491: }
  5935                           ;mtouch_sensor.c: 493: sensor_globalFlags.done = 0;
  5936  06B7  0020               	movlb	0	; select bank0
  5937  06B8  1032               	bcf	Sensor_Acq_ExecutePacket@sensor_globalFlags,0
  5938                           
  5939                           ;mtouch_sensor.c: 495: TMR2_LoadPeriodRegister(sample_period);
  5940  06B9  0865               	movf	_sample_period,w
  5941  06BA  3188  201C  3185   	fcall	_TMR2_LoadPeriodRegister
  5942                           
  5943                           ;mtouch_sensor.c: 496: TMR2_StartTimer();
  5944  06BD  3188  2006  3185   	fcall	_TMR2_StartTimer
  5945                           
  5946                           ;mtouch_sensor.c: 497: packet_noise = 0;
  5947  06C0  0020               	movlb	0	; select bank0
  5948  06C1  01EA               	clrf	_packet_noise
  5949  06C2  01EB               	clrf	_packet_noise+1
  5950  06C3                     l5153:	
  5951                           ;mtouch_sensor.c: 499: do
  5952                           
  5953                           
  5954                           ;mtouch_sensor.c: 500: {
  5955                           ;mtouch_sensor.c: 501: if(ADxIF_flag == 0)
  5956  06C3  082A               	movf	Sensor_Acq_ExecutePacket@ADxIF_flag,w
  5957  06C4  1D03               	btfss	3,2
  5958  06C5  2ED0               	goto	l627
  5959                           
  5960                           ;mtouch_sensor.c: 502: {
  5961                           ;mtouch_sensor.c: 503: if (PIR1bits.AD1IF == 0) { sensor_globalFlags.check = 0; }
  5962  06C6  1F11               	btfss	17,6	;volatile
  5963  06C7  10B2               	bcf	Sensor_Acq_ExecutePacket@sensor_globalFlags,1
  5964  06C8                     l629:	
  5965                           ;mtouch_sensor.c: 504: while (PIR1bits.AD1IF == 0) { }
  5966                           
  5967  06C8  1F11               	btfss	17,6	;volatile
  5968  06C9  2EC8               	goto	l629
  5969                           
  5970                           ;mtouch_sensor.c: 505: PIR1bits.AD1IF = 0;
  5971  06CA  1311               	bcf	17,6	;volatile
  5972                           
  5973                           ;mtouch_sensor.c: 506: AAD1GRD ^= 0b00100000;
  5974  06CB  3020               	movlw	32
  5975  06CC  00A5               	movwf	??_Sensor_Acq_ExecutePacket
  5976  06CD  0825               	movf	??_Sensor_Acq_ExecutePacket,w
  5977  06CE  002E               	movlb	14	; select bank14
  5978  06CF  2EDA               	goto	L7
  5979  06D0                     l627:	
  5980                           ;mtouch_sensor.c: 507: }
  5981                           
  5982                           
  5983                           ;mtouch_sensor.c: 508: else
  5984                           ;mtouch_sensor.c: 509: {
  5985                           ;mtouch_sensor.c: 510: if (PIR2bits.AD2IF == 0) { sensor_globalFlags.check = 0; }
  5986  06D0  1B12               	btfsc	18,6	;volatile
  5987  06D1  2ED3               	goto	l634
  5988  06D2  10B2               	bcf	Sensor_Acq_ExecutePacket@sensor_globalFlags,1
  5989  06D3                     l634:	
  5990                           ;mtouch_sensor.c: 511: while (PIR2bits.AD2IF == 0) { }
  5991                           
  5992  06D3  1F12               	btfss	18,6	;volatile
  5993  06D4  2ED3               	goto	l634
  5994                           
  5995                           ;mtouch_sensor.c: 512: PIR2bits.AD2IF = 0;
  5996  06D5  1312               	bcf	18,6	;volatile
  5997                           
  5998                           ;mtouch_sensor.c: 513: AAD2GRD ^= 0b00100000;
  5999  06D6  3020               	movlw	32
  6000  06D7  00A5               	movwf	??_Sensor_Acq_ExecutePacket
  6001  06D8  0825               	movf	??_Sensor_Acq_ExecutePacket,w
  6002  06D9  002F               	movlb	15	; select bank15
  6003  06DA                     L7:	
  6004  06DA  0698               	xorwf	24,f	;volatile
  6005                           
  6006                           ;mtouch_sensor.c: 514: }
  6007                           ;mtouch_sensor.c: 516: AAD1CON3 ^= 0b11000000;
  6008  06DB  30C0               	movlw	192
  6009  06DC  0020               	movlb	0	; select bank0
  6010  06DD  00A5               	movwf	??_Sensor_Acq_ExecutePacket
  6011  06DE  0825               	movf	??_Sensor_Acq_ExecutePacket,w
  6012  06DF  002E               	movlb	14	; select bank14
  6013  06E0  0694               	xorwf	20,f	;volatile
  6014                           
  6015                           ;mtouch_sensor.c: 517: AAD2CON3 ^= 0b11000000;
  6016  06E1  30C0               	movlw	192
  6017  06E2  0020               	movlb	0	; select bank0
  6018  06E3  00A5               	movwf	??_Sensor_Acq_ExecutePacket
  6019  06E4  0825               	movf	??_Sensor_Acq_ExecutePacket,w
  6020  06E5  002F               	movlb	15	; select bank15
  6021  06E6  0694               	xorwf	20,f	;volatile
  6022                           
  6023                           ;mtouch_sensor.c: 520: if ((packet_counter & 0x01) == 0)
  6024  06E7  0020               	movlb	0	; select bank0
  6025  06E8  1831               	btfsc	Sensor_Acq_ExecutePacket@packet_counter,0
  6026  06E9  2F3E               	goto	l5179
  6027                           
  6028                           ;mtouch_sensor.c: 521: {
  6029                           ;mtouch_sensor.c: 522: packet_sample[0] += AAD1RES0;
  6030  06EA  002E               	movlb	14	; select bank14
  6031  06EB  081A               	movf	26,w	;volatile
  6032  06EC  0020               	movlb	0	; select bank0
  6033  06ED  07E6               	addwf	_packet_sample,f
  6034  06EE  002E               	movlb	14	; select bank14
  6035  06EF  081B               	movf	27,w	;volatile
  6036  06F0  0020               	movlb	0	; select bank0
  6037  06F1  3DE7               	addwfc	_packet_sample+1,f
  6038                           
  6039                           ;mtouch_sensor.c: 523: packet_sample[1] += AAD2RES0;
  6040  06F2  002F               	movlb	15	; select bank15
  6041  06F3  081A               	movf	26,w	;volatile
  6042  06F4  0020               	movlb	0	; select bank0
  6043  06F5  07E8               	addwf	_packet_sample+2,f
  6044  06F6  002F               	movlb	15	; select bank15
  6045  06F7  081B               	movf	27,w	;volatile
  6046  06F8  0020               	movlb	0	; select bank0
  6047  06F9  3DE9               	addwfc	_packet_sample+3,f
  6048                           
  6049                           ;mtouch_sensor.c: 524: if(activeSensor ==0)
  6050  06FA  082C               	movf	Sensor_Acq_ExecutePacket@activeSensor,w
  6051  06FB  1D03               	btfss	3,2
  6052  06FC  2F1C               	goto	l5175
  6053                           
  6054                           ;mtouch_sensor.c: 525: {
  6055                           ;mtouch_sensor.c: 526: packet_noise += abs(last_b-AAD1RES0);
  6056  06FD  002E               	movlb	14	; select bank14
  6057  06FE  091A               	comf	26,w	;volatile
  6058  06FF  0020               	movlb	0	; select bank0
  6059  0700  00A5               	movwf	??_Sensor_Acq_ExecutePacket
  6060  0701  002E               	movlb	14	; select bank14
  6061  0702  091B               	comf	27,w	;volatile
  6062  0703  0020               	movlb	0	; select bank0
  6063  0704  00A6               	movwf	??_Sensor_Acq_ExecutePacket+1
  6064  0705  0AA5               	incf	??_Sensor_Acq_ExecutePacket,f
  6065  0706  1903               	skipnz
  6066  0707  0AA6               	incf	??_Sensor_Acq_ExecutePacket+1,f
  6067  0708  082F               	movf	Sensor_Acq_ExecutePacket@last_b,w
  6068  0709  0725               	addwf	??_Sensor_Acq_ExecutePacket,w
  6069  070A  00F2               	movwf	abs@a
  6070  070B  0830               	movf	Sensor_Acq_ExecutePacket@last_b+1,w
  6071  070C  3D26               	addwfc	??_Sensor_Acq_ExecutePacket+1,w
  6072  070D  00F3               	movwf	abs@a+1
  6073  070E  3188  209E  3185   	fcall	_abs
  6074  0711  0872               	movf	?_abs,w
  6075  0712  0020               	movlb	0	; select bank0
  6076  0713  07EA               	addwf	_packet_noise,f
  6077  0714  0873               	movf	?_abs+1,w
  6078  0715  3DEB               	addwfc	_packet_noise+1,f
  6079                           
  6080                           ;mtouch_sensor.c: 527: last_b = AAD1RES0;
  6081  0716  002E               	movlb	14	; select bank14
  6082  0717  081B               	movf	27,w	;volatile
  6083  0718  0020               	movlb	0	; select bank0
  6084  0719  00B0               	movwf	Sensor_Acq_ExecutePacket@last_b+1
  6085  071A  002E               	movlb	14	; select bank14
  6086  071B  2F3A               	goto	L8
  6087  071C                     l5175:	
  6088                           ;mtouch_sensor.c: 528: }
  6089                           
  6090                           
  6091                           ;mtouch_sensor.c: 529: else
  6092                           ;mtouch_sensor.c: 530: {
  6093                           ;mtouch_sensor.c: 531: packet_noise += abs(last_b-AAD2RES0);
  6094  071C  002F               	movlb	15	; select bank15
  6095  071D  091A               	comf	26,w	;volatile
  6096  071E  0020               	movlb	0	; select bank0
  6097  071F  00A5               	movwf	??_Sensor_Acq_ExecutePacket
  6098  0720  002F               	movlb	15	; select bank15
  6099  0721  091B               	comf	27,w	;volatile
  6100  0722  0020               	movlb	0	; select bank0
  6101  0723  00A6               	movwf	??_Sensor_Acq_ExecutePacket+1
  6102  0724  0AA5               	incf	??_Sensor_Acq_ExecutePacket,f
  6103  0725  1903               	skipnz
  6104  0726  0AA6               	incf	??_Sensor_Acq_ExecutePacket+1,f
  6105  0727  082F               	movf	Sensor_Acq_ExecutePacket@last_b,w
  6106  0728  0725               	addwf	??_Sensor_Acq_ExecutePacket,w
  6107  0729  00F2               	movwf	abs@a
  6108  072A  0830               	movf	Sensor_Acq_ExecutePacket@last_b+1,w
  6109  072B  3D26               	addwfc	??_Sensor_Acq_ExecutePacket+1,w
  6110  072C  00F3               	movwf	abs@a+1
  6111  072D  3188  209E  3185   	fcall	_abs
  6112  0730  0872               	movf	?_abs,w
  6113  0731  0020               	movlb	0	; select bank0
  6114  0732  07EA               	addwf	_packet_noise,f
  6115  0733  0873               	movf	?_abs+1,w
  6116  0734  3DEB               	addwfc	_packet_noise+1,f
  6117                           
  6118                           ;mtouch_sensor.c: 532: last_b = AAD2RES0;
  6119  0735  002F               	movlb	15	; select bank15
  6120  0736  081B               	movf	27,w	;volatile
  6121  0737  0020               	movlb	0	; select bank0
  6122  0738  00B0               	movwf	Sensor_Acq_ExecutePacket@last_b+1
  6123  0739  002F               	movlb	15	; select bank15
  6124  073A                     L8:	
  6125  073A  081A               	movf	26,w	;volatile
  6126  073B  0020               	movlb	0	; select bank0
  6127  073C  00AF               	movwf	Sensor_Acq_ExecutePacket@last_b
  6128                           
  6129                           ;mtouch_sensor.c: 533: }
  6130                           ;mtouch_sensor.c: 534: }
  6131  073D  2F78               	goto	l5191
  6132  073E                     l5179:	
  6133                           
  6134                           ;mtouch_sensor.c: 535: else
  6135                           ;mtouch_sensor.c: 536: {
  6136                           ;mtouch_sensor.c: 537: packet_sample[0] -= AAD1RES0;
  6137  073E  002E               	movlb	14	; select bank14
  6138  073F  081A               	movf	26,w	;volatile
  6139  0740  0020               	movlb	0	; select bank0
  6140  0741  02E6               	subwf	_packet_sample,f
  6141  0742  002E               	movlb	14	; select bank14
  6142  0743  081B               	movf	27,w	;volatile
  6143  0744  0020               	movlb	0	; select bank0
  6144  0745  3BE7               	subwfb	_packet_sample+1,f
  6145                           
  6146                           ;mtouch_sensor.c: 538: packet_sample[1] -= AAD2RES0;
  6147  0746  002F               	movlb	15	; select bank15
  6148  0747  081A               	movf	26,w	;volatile
  6149  0748  0020               	movlb	0	; select bank0
  6150  0749  02E8               	subwf	_packet_sample+2,f
  6151  074A  002F               	movlb	15	; select bank15
  6152  074B  081B               	movf	27,w	;volatile
  6153  074C  0020               	movlb	0	; select bank0
  6154  074D  3BE9               	subwfb	_packet_sample+3,f
  6155                           
  6156                           ;mtouch_sensor.c: 539: if(activeSensor ==0)
  6157  074E  082C               	movf	Sensor_Acq_ExecutePacket@activeSensor,w
  6158  074F  1D03               	btfss	3,2
  6159  0750  2F57               	goto	l5187
  6160                           
  6161                           ;mtouch_sensor.c: 540: {
  6162                           ;mtouch_sensor.c: 541: packet_noise +=abs(last_a-AAD1RES0);
  6163  0751  002E               	movlb	14	; select bank14
  6164  0752  091A               	comf	26,w	;volatile
  6165  0753  0020               	movlb	0	; select bank0
  6166  0754  00A5               	movwf	??_Sensor_Acq_ExecutePacket
  6167  0755  002E               	movlb	14	; select bank14
  6168  0756  2F5C               	goto	L9
  6169  0757                     l5187:	
  6170                           ;mtouch_sensor.c: 543: }
  6171                           
  6172                           ;mtouch_sensor.c: 542: last_a = AAD1RES0;
  6173                           
  6174                           
  6175                           ;mtouch_sensor.c: 544: else
  6176                           ;mtouch_sensor.c: 545: {
  6177                           ;mtouch_sensor.c: 546: packet_noise +=abs(last_a-AAD2RES0);
  6178  0757  002F               	movlb	15	; select bank15
  6179  0758  091A               	comf	26,w	;volatile
  6180  0759  0020               	movlb	0	; select bank0
  6181  075A  00A5               	movwf	??_Sensor_Acq_ExecutePacket
  6182  075B  002F               	movlb	15	; select bank15
  6183  075C                     L9:	
  6184  075C  091B               	comf	27,w	;volatile
  6185  075D  0020               	movlb	0	; select bank0
  6186  075E  00A6               	movwf	??_Sensor_Acq_ExecutePacket+1
  6187  075F  0AA5               	incf	??_Sensor_Acq_ExecutePacket,f
  6188  0760  1903               	skipnz
  6189  0761  0AA6               	incf	??_Sensor_Acq_ExecutePacket+1,f
  6190  0762  082D               	movf	Sensor_Acq_ExecutePacket@last_a,w
  6191  0763  0725               	addwf	??_Sensor_Acq_ExecutePacket,w
  6192  0764  00F2               	movwf	abs@a
  6193  0765  082E               	movf	Sensor_Acq_ExecutePacket@last_a+1,w
  6194  0766  3D26               	addwfc	??_Sensor_Acq_ExecutePacket+1,w
  6195  0767  00F3               	movwf	abs@a+1
  6196  0768  3188  209E  3185   	fcall	_abs
  6197  076B  0872               	movf	?_abs,w
  6198  076C  0020               	movlb	0	; select bank0
  6199  076D  07EA               	addwf	_packet_noise,f
  6200  076E  0873               	movf	?_abs+1,w
  6201  076F  3DEB               	addwfc	_packet_noise+1,f
  6202                           
  6203                           ;mtouch_sensor.c: 547: last_a = AAD1RES0;
  6204  0770  002E               	movlb	14	; select bank14
  6205  0771  081B               	movf	27,w	;volatile
  6206  0772  0020               	movlb	0	; select bank0
  6207  0773  00AE               	movwf	Sensor_Acq_ExecutePacket@last_a+1
  6208  0774  002E               	movlb	14	; select bank14
  6209  0775  081A               	movf	26,w	;volatile
  6210  0776  0020               	movlb	0	; select bank0
  6211  0777  00AD               	movwf	Sensor_Acq_ExecutePacket@last_a
  6212  0778                     l5191:	
  6213                           
  6214                           ;mtouch_sensor.c: 548: }
  6215                           ;mtouch_sensor.c: 549: }
  6216                           ;mtouch_sensor.c: 552: if (packet_counter == 0)
  6217  0778  0831               	movf	Sensor_Acq_ExecutePacket@packet_counter,w
  6218  0779  1903               	btfsc	3,2
  6219                           
  6220                           ;mtouch_sensor.c: 553: {
  6221                           ;mtouch_sensor.c: 555: sensor_globalFlags.done = (uint8_t)1;
  6222  077A  1432               	bsf	Sensor_Acq_ExecutePacket@sensor_globalFlags,0
  6223                           
  6224                           ;mtouch_sensor.c: 556: }
  6225                           ;mtouch_sensor.c: 557: packet_counter--;
  6226  077B  3001               	movlw	1
  6227  077C  02B1               	subwf	Sensor_Acq_ExecutePacket@packet_counter,f
  6228                           
  6229                           ;mtouch_sensor.c: 559: if (sensor_globalFlags.check != 0)
  6230  077D  1CB2               	btfss	Sensor_Acq_ExecutePacket@sensor_globalFlags,1
  6231  077E  2F81               	goto	l644
  6232                           
  6233                           ;mtouch_sensor.c: 560: {
  6234                           ;mtouch_sensor.c: 561: sensor_globalFlags.error = 1;
  6235  077F  1532               	bsf	Sensor_Acq_ExecutePacket@sensor_globalFlags,2
  6236                           
  6237                           ;mtouch_sensor.c: 562: sensor_globalFlags.done = 1;
  6238  0780  1432               	bsf	Sensor_Acq_ExecutePacket@sensor_globalFlags,0
  6239  0781                     l644:	
  6240                           
  6241                           ;mtouch_sensor.c: 563: }
  6242                           ;mtouch_sensor.c: 564: sensor_globalFlags.check = 1;
  6243  0781  14B2               	bsf	Sensor_Acq_ExecutePacket@sensor_globalFlags,1
  6244                           
  6245                           ;mtouch_sensor.c: 565: } while(sensor_globalFlags.done == 0);
  6246  0782  1C32               	btfss	Sensor_Acq_ExecutePacket@sensor_globalFlags,0
  6247  0783  2EC3               	goto	l5153
  6248                           
  6249                           ;mtouch_sensor.c: 567: TMR2_StopTimer();
  6250  0784  3188  2009  3185   	fcall	_TMR2_StopTimer
  6251                           
  6252                           ;mtouch_sensor.c: 568: ADCOMCON = ADCOMCON_temp;
  6253  0787  0020               	movlb	0	; select bank0
  6254  0788  0827               	movf	Sensor_Acq_ExecutePacket@ADCOMCON_temp,w
  6255  0789  002E               	movlb	14	; select bank14
  6256  078A  0092               	movwf	18	;volatile
  6257                           
  6258                           ;mtouch_sensor.c: 569: AD1CON2 = AD1CON2_temp;
  6259  078B  0020               	movlb	0	; select bank0
  6260  078C  0828               	movf	Sensor_Acq_ExecutePacket@AD1CON2_temp,w
  6261  078D  002E               	movlb	14	; select bank14
  6262  078E  0093               	movwf	19	;volatile
  6263                           
  6264                           ;mtouch_sensor.c: 570: AD2CON2 = AD2CON2_temp;
  6265  078F  0020               	movlb	0	; select bank0
  6266  0790  0829               	movf	Sensor_Acq_ExecutePacket@AD2CON2_temp,w
  6267  0791  002F               	movlb	15	; select bank15
  6268  0792  0093               	movwf	19	;volatile
  6269                           
  6270                           ;mtouch_sensor.c: 573: if(Sensor_isEnabled(sensor_adc1) && !Sensor_isCalibrated(sensor_a
      +                          dc1))
  6271  0793  0020               	movlb	0	; select bank0
  6272  0794  0833               	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  6273  0795  3189  210B  3185   	fcall	_Sensor_isEnabled
  6274  0798  3A00               	xorlw	0
  6275  0799  1903               	skipnz
  6276  079A  2FA8               	goto	l5215
  6277  079B  0020               	movlb	0	; select bank0
  6278  079C  0833               	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  6279  079D  3188  2086  3185   	fcall	_Sensor_isCalibrated
  6280  07A0  3A00               	xorlw	0
  6281  07A1  1D03               	skipz
  6282  07A2  2FA8               	goto	l5215
  6283                           
  6284                           ;mtouch_sensor.c: 574: Sensor_autoCalibration(sensor_adc1);
  6285  07A3  0020               	movlb	0	; select bank0
  6286  07A4  0833               	movf	Sensor_Acq_ExecutePacket@sensor_adc1,w
  6287  07A5  3183  2323  3185   	fcall	_Sensor_autoCalibration
  6288  07A8                     l5215:	
  6289                           
  6290                           ;mtouch_sensor.c: 576: if(Sensor_isEnabled(sensor_adc2) && !Sensor_isCalibrated(sensor_a
      +                          dc2))
  6291  07A8  0020               	movlb	0	; select bank0
  6292  07A9  0824               	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  6293  07AA  3189  210B  3185   	fcall	_Sensor_isEnabled
  6294  07AD  3A00               	xorlw	0
  6295  07AE  1903               	skipnz
  6296  07AF  2FBC               	goto	l5221
  6297  07B0  0020               	movlb	0	; select bank0
  6298  07B1  0824               	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  6299  07B2  3188  2086  3185   	fcall	_Sensor_isCalibrated
  6300  07B5  3A00               	xorlw	0
  6301  07B6  1D03               	skipz
  6302  07B7  2FBC               	goto	l5221
  6303                           
  6304                           ;mtouch_sensor.c: 577: Sensor_autoCalibration(sensor_adc2);
  6305  07B8  0020               	movlb	0	; select bank0
  6306  07B9  0824               	movf	Sensor_Acq_ExecutePacket@sensor_adc2,w
  6307  07BA  3183  2323         	fcall	_Sensor_autoCalibration
  6308  07BC                     l5221:	
  6309                           
  6310                           ;mtouch_sensor.c: 579: AD1PRECON = 0;
  6311  07BC  002E               	movlb	14	; select bank14
  6312  07BD  0196               	clrf	22	;volatile
  6313                           
  6314                           ;mtouch_sensor.c: 580: AD2PRECON = 0;
  6315  07BE  002F               	movlb	15	; select bank15
  6316  07BF  0196               	clrf	22	;volatile
  6317                           
  6318                           ;mtouch_sensor.c: 581: AD1ACQCON = 0;
  6319  07C0  002E               	movlb	14	; select bank14
  6320  07C1  0197               	clrf	23	;volatile
  6321                           
  6322                           ;mtouch_sensor.c: 582: AD2ACQCON = 0;
  6323  07C2  002F               	movlb	15	; select bank15
  6324  07C3  0197               	clrf	23	;volatile
  6325                           
  6326                           ;mtouch_sensor.c: 583: AD1CON0bits.ADON = 0;
  6327  07C4  002E               	movlb	14	; select bank14
  6328  07C5  1011               	bcf	17,0	;volatile
  6329                           
  6330                           ;mtouch_sensor.c: 584: AD2CON0bits.ADON = 0;
  6331  07C6  002F               	movlb	15	; select bank15
  6332  07C7  1011               	bcf	17,0	;volatile
  6333                           
  6334                           ;mtouch_sensor.c: 586: return error;
  6335  07C8  0020               	movlb	0	; select bank0
  6336  07C9  082B               	movf	Sensor_Acq_ExecutePacket@error,w
  6337  07CA  0008               	return
  6338  07CB                     __end_of_Sensor_Acq_ExecutePacket:	
  6339                           
  6340                           	psect	text26
  6341  0809                     __ptext26:	
  6342 ;; *************** function _TMR2_StopTimer *****************
  6343 ;; Defined at:
  6344 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;		None
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;		None
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1    wreg      void 
  6351 ;; Registers used:
  6352 ;;		None
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6358 ;;      Params:         0       0       0       0       0       0       0       0
  6359 ;;      Locals:         0       0       0       0       0       0       0       0
  6360 ;;      Temps:          0       0       0       0       0       0       0       0
  6361 ;;      Totals:         0       0       0       0       0       0       0       0
  6362 ;;Total ram usage:        0 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; Hardware stack levels required when called:    2
  6365 ;; This function calls:
  6366 ;;		Nothing
  6367 ;; This function is called by:
  6368 ;;		_Sensor_Acq_ExecutePacket
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           
  6373                           ;psect for function _TMR2_StopTimer
  6374  0809                     _TMR2_StopTimer:	
  6375                           
  6376                           ;tmr2.c: 90: T2CONbits.TMR2ON = 0;
  6377                           
  6378                           ;incstack = 0
  6379                           ; Regs used in _TMR2_StopTimer: []
  6380  0809  0020               	movlb	0	; select bank0
  6381  080A  111C               	bcf	28,2	;volatile
  6382  080B  0008               	return
  6383  080C                     __end_of_TMR2_StopTimer:	
  6384                           
  6385                           	psect	text27
  6386  0806                     __ptext27:	
  6387 ;; *************** function _TMR2_StartTimer *****************
  6388 ;; Defined at:
  6389 ;;		line 81 in file "mcc_generated_files/tmr2.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;		None
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      void 
  6396 ;; Registers used:
  6397 ;;		None
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6403 ;;      Params:         0       0       0       0       0       0       0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0       0
  6405 ;;      Temps:          0       0       0       0       0       0       0       0
  6406 ;;      Totals:         0       0       0       0       0       0       0       0
  6407 ;;Total ram usage:        0 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; Hardware stack levels required when called:    2
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_TMR2_Initialize
  6414 ;;		_Sensor_Acq_ExecutePacket
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           
  6419                           ;psect for function _TMR2_StartTimer
  6420  0806                     _TMR2_StartTimer:	
  6421                           
  6422                           ;tmr2.c: 84: T2CONbits.TMR2ON = 1;
  6423                           
  6424                           ;incstack = 0
  6425                           ; Regs used in _TMR2_StartTimer: []
  6426  0806  0020               	movlb	0	; select bank0
  6427  0807  151C               	bsf	28,2	;volatile
  6428  0808  0008               	return
  6429  0809                     __end_of_TMR2_StartTimer:	
  6430                           
  6431                           	psect	text28
  6432  081C                     __ptext28:	
  6433 ;; *************** function _TMR2_LoadPeriodRegister *****************
  6434 ;; Defined at:
  6435 ;;		line 108 in file "mcc_generated_files/tmr2.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;  periodVal       1    wreg     unsigned char 
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;  periodVal       1    2[COMMON] unsigned char 
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  1    wreg      void 
  6442 ;; Registers used:
  6443 ;;		wreg
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6449 ;;      Params:         0       0       0       0       0       0       0       0
  6450 ;;      Locals:         1       0       0       0       0       0       0       0
  6451 ;;      Temps:          0       0       0       0       0       0       0       0
  6452 ;;      Totals:         1       0       0       0       0       0       0       0
  6453 ;;Total ram usage:        1 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:    2
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		_Sensor_Acq_ExecutePacket
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           
  6464                           ;psect for function _TMR2_LoadPeriodRegister
  6465  081C                     _TMR2_LoadPeriodRegister:	
  6466                           
  6467                           ;incstack = 0
  6468                           ; Regs used in _TMR2_LoadPeriodRegister: [wreg]
  6469                           ;TMR2_LoadPeriodRegister@periodVal stored from wreg
  6470  081C  00F2               	movwf	TMR2_LoadPeriodRegister@periodVal
  6471                           
  6472                           ;tmr2.c: 110: PR2 = periodVal;
  6473  081D  0872               	movf	TMR2_LoadPeriodRegister@periodVal,w
  6474  081E  0020               	movlb	0	; select bank0
  6475  081F  009B               	movwf	27	;volatile
  6476  0820  0008               	return
  6477  0821                     __end_of_TMR2_LoadPeriodRegister:	
  6478                           
  6479                           	psect	text29
  6480  090B                     __ptext29:	
  6481 ;; *************** function _Sensor_isEnabled *****************
  6482 ;; Defined at:
  6483 ;;		line 748 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;  sensor          1    wreg     PTR struct .
  6486 ;;		 -> mtouch_sensor(54), 
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;  sensor          1    3[COMMON] PTR struct .
  6489 ;;		 -> mtouch_sensor(54), 
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  1    wreg      unsigned char 
  6492 ;; Registers used:
  6493 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6499 ;;      Params:         0       0       0       0       0       0       0       0
  6500 ;;      Locals:         1       0       0       0       0       0       0       0
  6501 ;;      Temps:          1       0       0       0       0       0       0       0
  6502 ;;      Totals:         2       0       0       0       0       0       0       0
  6503 ;;Total ram usage:        2 bytes
  6504 ;; Hardware stack levels used:    1
  6505 ;; Hardware stack levels required when called:    2
  6506 ;; This function calls:
  6507 ;;		Nothing
  6508 ;; This function is called by:
  6509 ;;		_Sensor_Service
  6510 ;;		_Sensor_postAcquisitionProcess
  6511 ;;		_Sensor_Acq_ExecutePacket
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           
  6516                           ;psect for function _Sensor_isEnabled
  6517  090B                     _Sensor_isEnabled:	
  6518                           
  6519                           ;incstack = 0
  6520                           ; Regs used in _Sensor_isEnabled: [wreg+fsr1l+fsr1h+status,2+status,0]
  6521                           ;Sensor_isEnabled@sensor stored from wreg
  6522  090B  00F3               	movwf	Sensor_isEnabled@sensor
  6523                           
  6524                           ;mtouch_sensor.c: 750: if(sensor!=(0))
  6525  090C  0873               	movf	Sensor_isEnabled@sensor,w
  6526  090D  1903               	btfsc	3,2
  6527  090E  291A               	goto	l5011
  6528                           
  6529                           ;mtouch_sensor.c: 751: return (bool)sensor->enabled;
  6530  090F  0873               	movf	Sensor_isEnabled@sensor,w
  6531  0910  3E08               	addlw	8
  6532  0911  0086               	movwf	6
  6533  0912  3001               	movlw	1	; select bank2/3
  6534  0913  0087               	movwf	7
  6535  0914  0C01               	rrf	1,w
  6536  0915  00F2               	movwf	??_Sensor_isEnabled
  6537  0916  0CF2               	rrf	??_Sensor_isEnabled,f
  6538  0917  0C72               	rrf	??_Sensor_isEnabled,w
  6539  0918  3901               	andlw	1
  6540  0919  0008               	return
  6541  091A                     l5011:	
  6542                           
  6543                           ;mtouch_sensor.c: 752: else
  6544                           ;mtouch_sensor.c: 753: return 0;
  6545  091A  3000               	movlw	0
  6546  091B  0008               	return
  6547  091C                     __end_of_Sensor_isEnabled:	
  6548                           
  6549                           	psect	text30
  6550  0886                     __ptext30:	
  6551 ;; *************** function _Sensor_isCalibrated *****************
  6552 ;; Defined at:
  6553 ;;		line 811 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6554 ;; Parameters:    Size  Location     Type
  6555 ;;  sensor          1    wreg     PTR struct .
  6556 ;;		 -> mtouch_sensor(54), 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  sensor          1    2[COMMON] PTR struct .
  6559 ;;		 -> mtouch_sensor(54), 
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  1    wreg      unsigned char 
  6562 ;; Registers used:
  6563 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6569 ;;      Params:         0       0       0       0       0       0       0       0
  6570 ;;      Locals:         1       0       0       0       0       0       0       0
  6571 ;;      Temps:          0       0       0       0       0       0       0       0
  6572 ;;      Totals:         1       0       0       0       0       0       0       0
  6573 ;;Total ram usage:        1 bytes
  6574 ;; Hardware stack levels used:    1
  6575 ;; Hardware stack levels required when called:    2
  6576 ;; This function calls:
  6577 ;;		Nothing
  6578 ;; This function is called by:
  6579 ;;		_Sensor_Acquisition
  6580 ;;		_Sensor_Acq_ExecutePacket
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583                           
  6584                           
  6585                           ;psect for function _Sensor_isCalibrated
  6586  0886                     _Sensor_isCalibrated:	
  6587                           
  6588                           ;incstack = 0
  6589                           ; Regs used in _Sensor_isCalibrated: [wreg+fsr1l+fsr1h+status,2+status,0]
  6590                           ;Sensor_isCalibrated@sensor stored from wreg
  6591  0886  00F2               	movwf	Sensor_isCalibrated@sensor
  6592                           
  6593                           ;mtouch_sensor.c: 813: return (bool)sensor->calibrated;
  6594  0887  0872               	movf	Sensor_isCalibrated@sensor,w
  6595  0888  3E08               	addlw	8
  6596  0889  0086               	movwf	6
  6597  088A  3001               	movlw	1	; select bank2/3
  6598  088B  0087               	movwf	7
  6599  088C  0C01               	rrf	1,w
  6600  088D  0C89               	rrf	9,f
  6601  088E  3901               	andlw	1
  6602  088F  0008               	return
  6603  0890                     __end_of_Sensor_isCalibrated:	
  6604                           
  6605                           	psect	text31
  6606  0874                     __ptext31:	
  6607 ;; *************** function _Sensor_isActive *****************
  6608 ;; Defined at:
  6609 ;;		line 775 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6610 ;; Parameters:    Size  Location     Type
  6611 ;;  sensor          1    wreg     PTR struct .
  6612 ;;		 -> mtouch_sensor(54), 
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;  sensor          1    2[COMMON] PTR struct .
  6615 ;;		 -> mtouch_sensor(54), 
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  1    wreg      unsigned char 
  6618 ;; Registers used:
  6619 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/0
  6622 ;;		On exit  : 0/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6625 ;;      Params:         0       0       0       0       0       0       0       0
  6626 ;;      Locals:         1       0       0       0       0       0       0       0
  6627 ;;      Temps:          0       0       0       0       0       0       0       0
  6628 ;;      Totals:         1       0       0       0       0       0       0       0
  6629 ;;Total ram usage:        1 bytes
  6630 ;; Hardware stack levels used:    1
  6631 ;; Hardware stack levels required when called:    2
  6632 ;; This function calls:
  6633 ;;		Nothing
  6634 ;; This function is called by:
  6635 ;;		_Sensor_Acquisition
  6636 ;;		_Sensor_Acq_ExecutePacket
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640                           
  6641                           ;psect for function _Sensor_isActive
  6642  0874                     _Sensor_isActive:	
  6643                           
  6644                           ;incstack = 0
  6645                           ; Regs used in _Sensor_isActive: [wreg+fsr1l+fsr1h+status,2+status,0]
  6646                           ;Sensor_isActive@sensor stored from wreg
  6647  0874  00F2               	movwf	Sensor_isActive@sensor
  6648                           
  6649                           ;mtouch_sensor.c: 777: return (bool)sensor->active;
  6650  0875  0872               	movf	Sensor_isActive@sensor,w
  6651  0876  3E08               	addlw	8
  6652  0877  0086               	movwf	6
  6653  0878  3001               	movlw	1	; select bank2/3
  6654  0879  0087               	movwf	7
  6655  087A  0C01               	rrf	1,w
  6656  087B  3901               	andlw	1
  6657  087C  0008               	return
  6658  087D                     __end_of_Sensor_isActive:	
  6659                           
  6660                           	psect	text32
  6661  0323                     __ptext32:	
  6662 ;; *************** function _Sensor_autoCalibration *****************
  6663 ;; Defined at:
  6664 ;;		line 597 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6665 ;; Parameters:    Size  Location     Type
  6666 ;;  sensor          1    wreg     PTR struct .
  6667 ;;		 -> mtouch_sensor(54), 
  6668 ;; Auto vars:     Size  Location     Type
  6669 ;;  sensor          1    9[COMMON] PTR struct .
  6670 ;;		 -> mtouch_sensor(54), 
  6671 ;;  adcIndex        1    8[COMMON] unsigned char 
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  1    wreg      enum E3335
  6674 ;; Registers used:
  6675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6681 ;;      Params:         0       0       0       0       0       0       0       0
  6682 ;;      Locals:         2       0       0       0       0       0       0       0
  6683 ;;      Temps:          0       4       0       0       0       0       0       0
  6684 ;;      Totals:         2       4       0       0       0       0       0       0
  6685 ;;Total ram usage:        6 bytes
  6686 ;; Hardware stack levels used:    1
  6687 ;; Hardware stack levels required when called:    3
  6688 ;; This function calls:
  6689 ;;		_Sensor_getScanGroupIndex
  6690 ;;		_Sensor_isCalibratingAcqTime
  6691 ;;		_Sensor_setCalibratAcqTime
  6692 ;;		_Sensor_setCalibrated
  6693 ;;		_abs
  6694 ;; This function is called by:
  6695 ;;		_Sensor_Acq_ExecutePacket
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           
  6700                           ;psect for function _Sensor_autoCalibration
  6701  0323                     _Sensor_autoCalibration:	
  6702                           
  6703                           ;incstack = 0
  6704                           ; Regs used in _Sensor_autoCalibration: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6705                           ;Sensor_autoCalibration@sensor stored from wreg
  6706  0323  00F9               	movwf	Sensor_autoCalibration@sensor
  6707                           
  6708                           ;mtouch_sensor.c: 599: uint8_t adcIndex = Sensor_getScanGroupIndex(sensor);
  6709  0324  0879               	movf	Sensor_autoCalibration@sensor,w
  6710  0325  3180  2027  3183   	fcall	_Sensor_getScanGroupIndex
  6711  0328  0020               	movlb	0	; select bank0
  6712  0329  00A0               	movwf	??_Sensor_autoCalibration
  6713  032A  0820               	movf	??_Sensor_autoCalibration,w
  6714  032B  00F8               	movwf	Sensor_autoCalibration@adcIndex
  6715                           
  6716                           ;mtouch_sensor.c: 601: if(!Sensor_isCalibratingAcqTime(sensor))
  6717  032C  0879               	movf	Sensor_autoCalibration@sensor,w
  6718  032D  3188  206B  3183   	fcall	_Sensor_isCalibratingAcqTime
  6719  0330  3A00               	xorlw	0
  6720  0331  1D03               	skipz
  6721  0332  2B66               	goto	l5035
  6722                           
  6723                           ;mtouch_sensor.c: 602: {
  6724                           ;mtouch_sensor.c: 603: if(packet_sample[adcIndex] > (mtouch_sensor_packetsample_t)(senso
      +                          r->oversampling)<<9)
  6725  0333  3578               	lslf	Sensor_autoCalibration@adcIndex,w
  6726  0334  3E66               	addlw	(low (_packet_sample| 0))& (0+255)
  6727  0335  0086               	movwf	6
  6728  0336  0187               	clrf	7
  6729  0337  3F40               	moviw [0]fsr1
  6730  0338  0020               	movlb	0	; select bank0
  6731  0339  00A0               	movwf	??_Sensor_autoCalibration
  6732  033A  3F41               	moviw [1]fsr1
  6733  033B  00A1               	movwf	??_Sensor_autoCalibration+1
  6734  033C  0879               	movf	Sensor_autoCalibration@sensor,w
  6735  033D  3E04               	addlw	4
  6736  033E  0086               	movwf	6
  6737  033F  3001               	movlw	1	; select bank2/3
  6738  0340  0087               	movwf	7
  6739  0341  0801               	movf	1,w
  6740  0342  00A2               	movwf	??_Sensor_autoCalibration+2
  6741  0343  01A3               	clrf	??_Sensor_autoCalibration+3
  6742  0344  3009               	movlw	9
  6743  0345                     u4855:	
  6744  0345  35A2               	lslf	??_Sensor_autoCalibration+2,f
  6745  0346  0DA3               	rlf	??_Sensor_autoCalibration+3,f
  6746  0347  0B89               	decfsz	9,f
  6747  0348  2B45               	goto	u4855
  6748  0349  0821               	movf	??_Sensor_autoCalibration+1,w
  6749  034A  0223               	subwf	??_Sensor_autoCalibration+3,w
  6750  034B  1D03               	skipz
  6751  034C  2B4F               	goto	u4865
  6752  034D  0820               	movf	??_Sensor_autoCalibration,w
  6753  034E  0222               	subwf	??_Sensor_autoCalibration+2,w
  6754  034F                     u4865:	
  6755  034F  1803               	skipnc
  6756  0350  2B62               	goto	l5033
  6757                           
  6758                           ;mtouch_sensor.c: 604: {
  6759                           ;mtouch_sensor.c: 605: if(++(sensor->addcap) >= (uint8_t)0x0F)
  6760  0351  3001               	movlw	1
  6761  0352  00A0               	movwf	??_Sensor_autoCalibration
  6762  0353  0879               	movf	Sensor_autoCalibration@sensor,w
  6763  0354  3E05               	addlw	5
  6764  0355  0086               	movwf	6
  6765  0356  3001               	movlw	1	; select bank2/3
  6766  0357  0087               	movwf	7
  6767  0358  0820               	movf	??_Sensor_autoCalibration,w
  6768  0359  0781               	addwf	1,f
  6769  035A  300F               	movlw	15
  6770  035B  0201               	subwf	1,w
  6771  035C  1C03               	skipc
  6772  035D  0008               	return
  6773                           
  6774                           ;mtouch_sensor.c: 606: Sensor_setCalibratAcqTime(sensor);
  6775  035E  0879               	movf	Sensor_autoCalibration@sensor,w
  6776  035F  3188  20AC         	fcall	_Sensor_setCalibratAcqTime
  6777                           
  6778                           ;mtouch_sensor.c: 607: }
  6779  0361  0008               	return
  6780  0362                     l5033:	
  6781                           
  6782                           ;mtouch_sensor.c: 608: else
  6783                           ;mtouch_sensor.c: 609: {
  6784                           ;mtouch_sensor.c: 610: Sensor_setCalibratAcqTime(sensor);
  6785  0362  0879               	movf	Sensor_autoCalibration@sensor,w
  6786  0363  3188  20AC         	fcall	_Sensor_setCalibratAcqTime
  6787                           
  6788                           ;mtouch_sensor.c: 611: }
  6789                           ;mtouch_sensor.c: 612: }
  6790  0365  0008               	return
  6791  0366                     l5035:	
  6792                           
  6793                           ;mtouch_sensor.c: 613: else
  6794                           ;mtouch_sensor.c: 614: {
  6795                           ;mtouch_sensor.c: 615: if(abs(packet_sample[adcIndex] - sensor->rawSample) < (mtouch_sen
      +                          sor_packetsample_t)(sensor->oversampling)<<1)
  6796  0366  0879               	movf	Sensor_autoCalibration@sensor,w
  6797  0367  3E04               	addlw	4
  6798  0368  0086               	movwf	6
  6799  0369  3001               	movlw	1	; select bank2/3
  6800  036A  0087               	movwf	7
  6801  036B  0801               	movf	1,w
  6802  036C  0020               	movlb	0	; select bank0
  6803  036D  00A0               	movwf	??_Sensor_autoCalibration
  6804  036E  01A1               	clrf	??_Sensor_autoCalibration+1
  6805  036F  35A0               	lslf	??_Sensor_autoCalibration,f
  6806  0370  0DA1               	rlf	??_Sensor_autoCalibration+1,f
  6807  0371  3578               	lslf	Sensor_autoCalibration@adcIndex,w
  6808  0372  3E66               	addlw	(low (_packet_sample| 0))& (0+255)
  6809  0373  0086               	movwf	6
  6810  0374  0187               	clrf	7
  6811  0375  0879               	movf	Sensor_autoCalibration@sensor,w
  6812  0376  3E06               	addlw	6
  6813  0377  0084               	movwf	4
  6814  0378  3001               	movlw	1	; select bank2/3
  6815  0379  0085               	movwf	5
  6816  037A  3F00               	moviw [0]fsr0
  6817  037B  00A2               	movwf	??_Sensor_autoCalibration+2
  6818  037C  3F01               	moviw [1]fsr0
  6819  037D  00A3               	movwf	??_Sensor_autoCalibration+3
  6820  037E  09A2               	comf	??_Sensor_autoCalibration+2,f
  6821  037F  09A3               	comf	??_Sensor_autoCalibration+3,f
  6822  0380  0AA2               	incf	??_Sensor_autoCalibration+2,f
  6823  0381  1903               	skipnz
  6824  0382  0AA3               	incf	??_Sensor_autoCalibration+3,f
  6825  0383  3F40               	moviw [0]fsr1
  6826  0384  0722               	addwf	??_Sensor_autoCalibration+2,w
  6827  0385  00F2               	movwf	abs@a
  6828  0386  3F41               	moviw [1]fsr1
  6829  0387  3D23               	addwfc	??_Sensor_autoCalibration+3,w
  6830  0388  00F3               	movwf	abs@a+1
  6831  0389  3188  209E  3183   	fcall	_abs
  6832  038C  0020               	movlb	0	; select bank0
  6833  038D  0821               	movf	??_Sensor_autoCalibration+1,w
  6834  038E  0273               	subwf	?_abs+1,w
  6835  038F  1D03               	skipz
  6836  0390  2B93               	goto	u4885
  6837  0391  0820               	movf	??_Sensor_autoCalibration,w
  6838  0392  0272               	subwf	?_abs,w
  6839  0393                     u4885:	
  6840  0393  1803               	skipnc
  6841  0394  2BA2               	goto	l5041
  6842                           
  6843                           ;mtouch_sensor.c: 616: {
  6844                           ;mtouch_sensor.c: 617: sensor->precharge_time = (mtouch_sensor_time_t)32;
  6845  0395  3020               	movlw	32
  6846  0396  00A0               	movwf	??_Sensor_autoCalibration
  6847  0397  0879               	movf	Sensor_autoCalibration@sensor,w
  6848  0398  3E02               	addlw	2
  6849  0399  0086               	movwf	6
  6850  039A  3001               	movlw	1	; select bank2/3
  6851  039B  0087               	movwf	7
  6852  039C  0820               	movf	??_Sensor_autoCalibration,w
  6853  039D  0081               	movwf	1
  6854                           
  6855                           ;mtouch_sensor.c: 618: Sensor_setCalibrated(sensor);
  6856  039E  0879               	movf	Sensor_autoCalibration@sensor,w
  6857  039F  3188  2090         	fcall	_Sensor_setCalibrated
  6858                           
  6859                           ;mtouch_sensor.c: 619: }
  6860  03A1  0008               	return
  6861  03A2                     l5041:	
  6862                           
  6863                           ;mtouch_sensor.c: 620: else
  6864                           ;mtouch_sensor.c: 621: {
  6865                           ;mtouch_sensor.c: 622: if(++(sensor->acquisition_time)>=(mtouch_sensor_time_t)32)
  6866  03A2  3001               	movlw	1
  6867  03A3  0020               	movlb	0	; select bank0
  6868  03A4  00A0               	movwf	??_Sensor_autoCalibration
  6869  03A5  0879               	movf	Sensor_autoCalibration@sensor,w
  6870  03A6  3E03               	addlw	3
  6871  03A7  0086               	movwf	6
  6872  03A8  3001               	movlw	1	; select bank2/3
  6873  03A9  0087               	movwf	7
  6874  03AA  0820               	movf	??_Sensor_autoCalibration,w
  6875  03AB  0781               	addwf	1,f
  6876  03AC  3020               	movlw	32
  6877  03AD  0201               	subwf	1,w
  6878  03AE  1C03               	skipc
  6879  03AF  0008               	return
  6880                           
  6881                           ;mtouch_sensor.c: 623: {
  6882                           ;mtouch_sensor.c: 624: sensor->precharge_time = (mtouch_sensor_time_t)32;
  6883  03B0  3020               	movlw	32
  6884  03B1  00A0               	movwf	??_Sensor_autoCalibration
  6885  03B2  0879               	movf	Sensor_autoCalibration@sensor,w
  6886  03B3  3E02               	addlw	2
  6887  03B4  0086               	movwf	6
  6888  03B5  3001               	movlw	1	; select bank2/3
  6889  03B6  0087               	movwf	7
  6890  03B7  0820               	movf	??_Sensor_autoCalibration,w
  6891  03B8  0081               	movwf	1
  6892                           
  6893                           ;mtouch_sensor.c: 625: Sensor_setCalibrated(sensor);
  6894  03B9  0879               	movf	Sensor_autoCalibration@sensor,w
  6895  03BA  3188  2090         	fcall	_Sensor_setCalibrated
  6896  03BC  0008               	return
  6897  03BD                     __end_of_Sensor_autoCalibration:	
  6898                           ;mtouch_sensor.c: 626: }
  6899                           ;mtouch_sensor.c: 627: }
  6900                           ;mtouch_sensor.c: 628: }
  6901                           ;mtouch_sensor.c: 630: return MTOUCH_SENSOR_ERROR_none;
  6902                           ;	Return value of _Sensor_autoCalibration is never used
  6903                           
  6904                           
  6905                           	psect	text33
  6906  089E                     __ptext33:	
  6907 ;; *************** function _abs *****************
  6908 ;; Defined at:
  6909 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\abs.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;  a               2    2[COMMON] int 
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;		None
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  2    2[COMMON] int 
  6916 ;; Registers used:
  6917 ;;		wreg, status,2, status,0
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6923 ;;      Params:         2       0       0       0       0       0       0       0
  6924 ;;      Locals:         0       0       0       0       0       0       0       0
  6925 ;;      Temps:          2       0       0       0       0       0       0       0
  6926 ;;      Totals:         4       0       0       0       0       0       0       0
  6927 ;;Total ram usage:        4 bytes
  6928 ;; Hardware stack levels used:    1
  6929 ;; Hardware stack levels required when called:    2
  6930 ;; This function calls:
  6931 ;;		Nothing
  6932 ;; This function is called by:
  6933 ;;		_Sensor_postAcquisitionProcess
  6934 ;;		_Sensor_Acq_ExecutePacket
  6935 ;;		_Sensor_autoCalibration
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939                           
  6940                           ;psect for function _abs
  6941  089E                     _abs:	
  6942                           
  6943                           ;incstack = 0
  6944                           ; Regs used in _abs: [wreg+status,2+status,0]
  6945  089E  1FF3               	btfss	abs@a+1,7
  6946  089F  0008               	return
  6947  08A0  0972               	comf	abs@a,w
  6948  08A1  00F4               	movwf	??_abs
  6949  08A2  0973               	comf	abs@a+1,w
  6950  08A3  00F5               	movwf	??_abs+1
  6951  08A4  0AF4               	incf	??_abs,f
  6952  08A5  1903               	skipnz
  6953  08A6  0AF5               	incf	??_abs+1,f
  6954  08A7  0874               	movf	??_abs,w
  6955  08A8  00F2               	movwf	?_abs
  6956  08A9  0875               	movf	??_abs+1,w
  6957  08AA  00F3               	movwf	?_abs+1
  6958  08AB  0008               	return
  6959  08AC                     __end_of_abs:	
  6960                           
  6961                           	psect	text34
  6962  0890                     __ptext34:	
  6963 ;; *************** function _Sensor_setCalibrated *****************
  6964 ;; Defined at:
  6965 ;;		line 816 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  sensor          1    wreg     PTR struct .
  6968 ;;		 -> mtouch_sensor(54), 
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;  sensor          1    2[COMMON] PTR struct .
  6971 ;;		 -> mtouch_sensor(54), 
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  1    wreg      void 
  6974 ;; Registers used:
  6975 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6981 ;;      Params:         0       0       0       0       0       0       0       0
  6982 ;;      Locals:         1       0       0       0       0       0       0       0
  6983 ;;      Temps:          0       0       0       0       0       0       0       0
  6984 ;;      Totals:         1       0       0       0       0       0       0       0
  6985 ;;Total ram usage:        1 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:    2
  6988 ;; This function calls:
  6989 ;;		Nothing
  6990 ;; This function is called by:
  6991 ;;		_Sensor_autoCalibration
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           
  6996                           ;psect for function _Sensor_setCalibrated
  6997  0890                     _Sensor_setCalibrated:	
  6998                           
  6999                           ;incstack = 0
  7000                           ; Regs used in _Sensor_setCalibrated: [wreg+fsr1l+fsr1h+status,2+status,0]
  7001                           ;Sensor_setCalibrated@sensor stored from wreg
  7002  0890  00F2               	movwf	Sensor_setCalibrated@sensor
  7003                           
  7004                           ;mtouch_sensor.c: 818: sensor->calibrated = 1;
  7005  0891  0872               	movf	Sensor_setCalibrated@sensor,w
  7006  0892  3E08               	addlw	8
  7007  0893  0086               	movwf	6
  7008  0894  3001               	movlw	1	; select bank2/3
  7009  0895  0087               	movwf	7
  7010  0896  1501               	bsf	1,2
  7011                           
  7012                           ;mtouch_sensor.c: 819: sensor->acqTime_cal = 0;
  7013  0897  0872               	movf	Sensor_setCalibrated@sensor,w
  7014  0898  3E08               	addlw	8
  7015  0899  0086               	movwf	6
  7016  089A  3001               	movlw	1	; select bank2/3
  7017  089B  0087               	movwf	7
  7018  089C  1201               	bcf	1,4
  7019  089D  0008               	return
  7020  089E                     __end_of_Sensor_setCalibrated:	
  7021                           
  7022                           	psect	text35
  7023  08AC                     __ptext35:	
  7024 ;; *************** function _Sensor_setCalibratAcqTime *****************
  7025 ;; Defined at:
  7026 ;;		line 822 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  sensor          1    wreg     PTR struct .
  7029 ;;		 -> mtouch_sensor(54), 
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;  sensor          1    2[COMMON] PTR struct .
  7032 ;;		 -> mtouch_sensor(54), 
  7033 ;; Return value:  Size  Location     Type
  7034 ;;                  1    wreg      void 
  7035 ;; Registers used:
  7036 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7037 ;; Tracked objects:
  7038 ;;		On entry : 0/0
  7039 ;;		On exit  : 0/0
  7040 ;;		Unchanged: 0/0
  7041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7042 ;;      Params:         0       0       0       0       0       0       0       0
  7043 ;;      Locals:         1       0       0       0       0       0       0       0
  7044 ;;      Temps:          0       0       0       0       0       0       0       0
  7045 ;;      Totals:         1       0       0       0       0       0       0       0
  7046 ;;Total ram usage:        1 bytes
  7047 ;; Hardware stack levels used:    1
  7048 ;; Hardware stack levels required when called:    2
  7049 ;; This function calls:
  7050 ;;		Nothing
  7051 ;; This function is called by:
  7052 ;;		_Sensor_autoCalibration
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           
  7057                           ;psect for function _Sensor_setCalibratAcqTime
  7058  08AC                     _Sensor_setCalibratAcqTime:	
  7059                           
  7060                           ;incstack = 0
  7061                           ; Regs used in _Sensor_setCalibratAcqTime: [wreg+fsr1l+fsr1h+status,2+status,0]
  7062                           ;Sensor_setCalibratAcqTime@sensor stored from wreg
  7063  08AC  00F2               	movwf	Sensor_setCalibratAcqTime@sensor
  7064                           
  7065                           ;mtouch_sensor.c: 824: sensor->acqTime_cal = 1;
  7066  08AD  0872               	movf	Sensor_setCalibratAcqTime@sensor,w
  7067  08AE  3E08               	addlw	8
  7068  08AF  0086               	movwf	6
  7069  08B0  3001               	movlw	1	; select bank2/3
  7070  08B1  0087               	movwf	7
  7071  08B2  1601               	bsf	1,4
  7072                           
  7073                           ;mtouch_sensor.c: 825: sensor->acquisition_time = (mtouch_sensor_time_t)1;
  7074  08B3  0872               	movf	Sensor_setCalibratAcqTime@sensor,w
  7075  08B4  3E03               	addlw	3
  7076  08B5  0086               	movwf	6
  7077  08B6  3001               	movlw	1	; select bank2/3
  7078  08B7  0087               	movwf	7
  7079  08B8  0181               	clrf	1
  7080  08B9  0A81               	incf	1,f
  7081  08BA  0008               	return
  7082  08BB                     __end_of_Sensor_setCalibratAcqTime:	
  7083                           
  7084                           	psect	text36
  7085  086B                     __ptext36:	
  7086 ;; *************** function _Sensor_isCalibratingAcqTime *****************
  7087 ;; Defined at:
  7088 ;;		line 828 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7089 ;; Parameters:    Size  Location     Type
  7090 ;;  sensor          1    wreg     PTR struct .
  7091 ;;		 -> mtouch_sensor(54), 
  7092 ;; Auto vars:     Size  Location     Type
  7093 ;;  sensor          1    2[COMMON] PTR struct .
  7094 ;;		 -> mtouch_sensor(54), 
  7095 ;; Return value:  Size  Location     Type
  7096 ;;                  1    wreg      unsigned char 
  7097 ;; Registers used:
  7098 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7099 ;; Tracked objects:
  7100 ;;		On entry : 0/0
  7101 ;;		On exit  : 0/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7104 ;;      Params:         0       0       0       0       0       0       0       0
  7105 ;;      Locals:         1       0       0       0       0       0       0       0
  7106 ;;      Temps:          0       0       0       0       0       0       0       0
  7107 ;;      Totals:         1       0       0       0       0       0       0       0
  7108 ;;Total ram usage:        1 bytes
  7109 ;; Hardware stack levels used:    1
  7110 ;; Hardware stack levels required when called:    2
  7111 ;; This function calls:
  7112 ;;		Nothing
  7113 ;; This function is called by:
  7114 ;;		_Sensor_Acq_ExecutePacket
  7115 ;;		_Sensor_autoCalibration
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           
  7120                           ;psect for function _Sensor_isCalibratingAcqTime
  7121  086B                     _Sensor_isCalibratingAcqTime:	
  7122                           
  7123                           ;incstack = 0
  7124                           ; Regs used in _Sensor_isCalibratingAcqTime: [wreg+fsr1l+fsr1h+status,2+status,0]
  7125                           ;Sensor_isCalibratingAcqTime@sensor stored from wreg
  7126  086B  00F2               	movwf	Sensor_isCalibratingAcqTime@sensor
  7127                           
  7128                           ;mtouch_sensor.c: 830: return (bool)sensor->acqTime_cal;
  7129  086C  0872               	movf	Sensor_isCalibratingAcqTime@sensor,w
  7130  086D  3E08               	addlw	8
  7131  086E  0086               	movwf	6
  7132  086F  3001               	movlw	1	; select bank2/3
  7133  0870  0087               	movwf	7
  7134  0871  0E01               	swapf	1,w
  7135  0872  3901               	andlw	1
  7136  0873  0008               	return
  7137  0874                     __end_of_Sensor_isCalibratingAcqTime:	
  7138                           
  7139                           	psect	text37
  7140  0027                     __ptext37:	
  7141 ;; *************** function _Sensor_getScanGroupIndex *****************
  7142 ;; Defined at:
  7143 ;;		line 324 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;  sensor          1    wreg     PTR struct .
  7146 ;;		 -> mtouch_sensor(54), 
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;  sensor          1    6[COMMON] PTR struct .
  7149 ;;		 -> mtouch_sensor(54), 
  7150 ;;  sensorGroup     1    7[COMMON] unsigned char 
  7151 ;; Return value:  Size  Location     Type
  7152 ;;                  1    wreg      unsigned char 
  7153 ;; Registers used:
  7154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7155 ;; Tracked objects:
  7156 ;;		On entry : 0/0
  7157 ;;		On exit  : 0/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7160 ;;      Params:         0       0       0       0       0       0       0       0
  7161 ;;      Locals:         2       0       0       0       0       0       0       0
  7162 ;;      Temps:          4       0       0       0       0       0       0       0
  7163 ;;      Totals:         6       0       0       0       0       0       0       0
  7164 ;;Total ram usage:        6 bytes
  7165 ;; Hardware stack levels used:    1
  7166 ;; Hardware stack levels required when called:    2
  7167 ;; This function calls:
  7168 ;;		Nothing
  7169 ;; This function is called by:
  7170 ;;		_Sensor_postAcquisitionProcess
  7171 ;;		_Sensor_autoCalibration
  7172 ;;		_Sensor_RawSample_Update
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           
  7177                           ;psect for function _Sensor_getScanGroupIndex
  7178  0027                     _Sensor_getScanGroupIndex:	
  7179                           
  7180                           ;incstack = 0
  7181                           ; Regs used in _Sensor_getScanGroupIndex: [wreg-fsr0h+status,2+status,0+pclath]
  7182                           ;Sensor_getScanGroupIndex@sensor stored from wreg
  7183  0027  00F6               	movwf	Sensor_getScanGroupIndex@sensor
  7184                           
  7185                           ;mtouch_sensor.c: 326: uint8_t sensorGroup;
  7186                           ;mtouch_sensor.c: 327: for(sensorGroup = 0; sensorGroup < 3; sensorGroup++)
  7187  0028  01F7               	clrf	Sensor_getScanGroupIndex@sensorGroup
  7188  0029  3003               	movlw	3
  7189  002A  0277               	subwf	Sensor_getScanGroupIndex@sensorGroup,w
  7190  002B  1803               	btfsc	3,0
  7191  002C  285D               	goto	l4967
  7192  002D                     l4951:	
  7193                           
  7194                           ;mtouch_sensor.c: 328: {
  7195                           ;mtouch_sensor.c: 329: if(sensor_scan_group[sensorGroup].sensor_adc1 == sensor)
  7196  002D  0877               	movf	Sensor_getScanGroupIndex@sensorGroup,w
  7197  002E  00F2               	movwf	??_Sensor_getScanGroupIndex
  7198  002F  01F3               	clrf	??_Sensor_getScanGroupIndex+1
  7199  0030  35F2               	lslf	??_Sensor_getScanGroupIndex,f
  7200  0031  0DF3               	rlf	??_Sensor_getScanGroupIndex+1,f
  7201  0032  3062               	movlw	low (_sensor_scan_group| (0+32768))
  7202  0033  0772               	addwf	??_Sensor_getScanGroupIndex,w
  7203  0034  0084               	movwf	4
  7204  0035  3090               	movlw	high (_sensor_scan_group| (0+32768))
  7205  0036  3D73               	addwfc	??_Sensor_getScanGroupIndex+1,w
  7206  0037  0085               	movwf	5
  7207  0038  0800               	movf	0,w	;code access
  7208  0039  0676               	xorwf	Sensor_getScanGroupIndex@sensor,w
  7209  003A  1D03               	skipz
  7210  003B  283E               	goto	l4957
  7211                           
  7212                           ;mtouch_sensor.c: 330: return 0;
  7213  003C  3000               	movlw	0
  7214  003D  0008               	return
  7215  003E                     l4957:	
  7216                           
  7217                           ;mtouch_sensor.c: 331: if(sensor_scan_group[sensorGroup].sensor_adc2 == sensor)
  7218  003E  0877               	movf	Sensor_getScanGroupIndex@sensorGroup,w
  7219  003F  00F2               	movwf	??_Sensor_getScanGroupIndex
  7220  0040  01F3               	clrf	??_Sensor_getScanGroupIndex+1
  7221  0041  35F2               	lslf	??_Sensor_getScanGroupIndex,f
  7222  0042  0DF3               	rlf	??_Sensor_getScanGroupIndex+1,f
  7223  0043  0872               	movf	??_Sensor_getScanGroupIndex,w
  7224  0044  3E01               	addlw	1
  7225  0045  00F4               	movwf	??_Sensor_getScanGroupIndex+2
  7226  0046  3000               	movlw	0
  7227  0047  3D73               	addwfc	??_Sensor_getScanGroupIndex+1,w
  7228  0048  00F5               	movwf	??_Sensor_getScanGroupIndex+3
  7229  0049  3062               	movlw	low (_sensor_scan_group| (0+32768))
  7230  004A  0774               	addwf	??_Sensor_getScanGroupIndex+2,w
  7231  004B  0084               	movwf	4
  7232  004C  3090               	movlw	high (_sensor_scan_group| (0+32768))
  7233  004D  3D75               	addwfc	??_Sensor_getScanGroupIndex+3,w
  7234  004E  0085               	movwf	5
  7235  004F  0800               	movf	0,w	;code access
  7236  0050  0676               	xorwf	Sensor_getScanGroupIndex@sensor,w
  7237  0051  1D03               	skipz
  7238  0052  2855               	goto	l4963
  7239                           
  7240                           ;mtouch_sensor.c: 332: return 1;
  7241  0053  3001               	movlw	1
  7242  0054  0008               	return
  7243  0055                     l4963:	
  7244  0055  3001               	movlw	1
  7245  0056  00F2               	movwf	??_Sensor_getScanGroupIndex
  7246  0057  0872               	movf	??_Sensor_getScanGroupIndex,w
  7247  0058  07F7               	addwf	Sensor_getScanGroupIndex@sensorGroup,f
  7248  0059  3003               	movlw	3
  7249  005A  0277               	subwf	Sensor_getScanGroupIndex@sensorGroup,w
  7250  005B  1C03               	skipc
  7251  005C  282D               	goto	l4951
  7252  005D                     l4967:	
  7253                           
  7254                           ;mtouch_sensor.c: 333: }
  7255                           ;mtouch_sensor.c: 334: return 0;
  7256  005D  3000               	movlw	0
  7257  005E  0008               	return
  7258  005F                     __end_of_Sensor_getScanGroupIndex:	
  7259                           
  7260                           	psect	text38
  7261  08EA                     __ptext38:	
  7262 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
  7263 ;; Defined at:
  7264 ;;		line 251 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;		None
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;		None
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  1    wreg      void 
  7271 ;; Registers used:
  7272 ;;		wreg, status,2, status,0
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7278 ;;      Params:         0       0       0       0       0       0       0       0
  7279 ;;      Locals:         0       0       0       0       0       0       0       0
  7280 ;;      Temps:          0       0       0       0       0       0       0       0
  7281 ;;      Totals:         0       0       0       0       0       0       0       0
  7282 ;;Total ram usage:        0 bytes
  7283 ;; Hardware stack levels used:    1
  7284 ;; Hardware stack levels required when called:    2
  7285 ;; This function calls:
  7286 ;;		Nothing
  7287 ;; This function is called by:
  7288 ;;		_Sensor_Acq_ExecutePacket
  7289 ;;		_MTOUCH_Initialize
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293                           
  7294                           ;psect for function _MTOUCH_Sensor_Scan_Initialize
  7295  08EA                     _MTOUCH_Sensor_Scan_Initialize:	
  7296                           
  7297                           ;mtouch_sensor.c: 253: T2CONbits.T2CKPS = 0x0;
  7298                           
  7299                           ;incstack = 0
  7300                           ; Regs used in _MTOUCH_Sensor_Scan_Initialize: [wreg+status,2+status,0]
  7301  08EA  30FC               	movlw	-4
  7302  08EB  0020               	movlb	0	; select bank0
  7303  08EC  059C               	andwf	28,f	;volatile
  7304                           
  7305                           ;mtouch_sensor.c: 255: AD1CON0 = (uint8_t)0;
  7306  08ED  002E               	movlb	14	; select bank14
  7307  08EE  0191               	clrf	17	;volatile
  7308                           
  7309                           ;mtouch_sensor.c: 256: AD2CON0 = (uint8_t)0;
  7310  08EF  002F               	movlb	15	; select bank15
  7311  08F0  0191               	clrf	17	;volatile
  7312                           
  7313                           ;mtouch_sensor.c: 257: ADCOMCON = (uint8_t)( 0x1<<7 | 0x1<<4 | 0x0 );
  7314  08F1  3090               	movlw	144
  7315  08F2  002E               	movlb	14	; select bank14
  7316  08F3  0092               	movwf	18	;volatile
  7317                           
  7318                           ;mtouch_sensor.c: 258: AD1CON3 = (uint8_t)0b01000000;
  7319  08F4  3040               	movlw	64
  7320  08F5  0094               	movwf	20	;volatile
  7321                           
  7322                           ;mtouch_sensor.c: 259: AD2CON3 = (uint8_t)0b01000000;
  7323  08F6  3040               	movlw	64
  7324  08F7  002F               	movlb	15	; select bank15
  7325  08F8  0094               	movwf	20	;volatile
  7326  08F9  0008               	return
  7327  08FA                     __end_of_MTOUCH_Sensor_Scan_Initialize:	
  7328                           
  7329                           	psect	text39
  7330  080C                     __ptext39:	
  7331 ;; *************** function _MTOUCH_Proximity_ServiceAll *****************
  7332 ;; Defined at:
  7333 ;;		line 155 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  7334 ;; Parameters:    Size  Location     Type
  7335 ;;		None
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;		None
  7338 ;; Return value:  Size  Location     Type
  7339 ;;                  1    wreg      void 
  7340 ;; Registers used:
  7341 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7342 ;; Tracked objects:
  7343 ;;		On entry : 0/0
  7344 ;;		On exit  : 0/0
  7345 ;;		Unchanged: 0/0
  7346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7347 ;;      Params:         0       0       0       0       0       0       0       0
  7348 ;;      Locals:         0       0       0       0       0       0       0       0
  7349 ;;      Temps:          0       0       0       0       0       0       0       0
  7350 ;;      Totals:         0       0       0       0       0       0       0       0
  7351 ;;Total ram usage:        0 bytes
  7352 ;; Hardware stack levels used:    1
  7353 ;; Hardware stack levels required when called:    7
  7354 ;; This function calls:
  7355 ;;		_Proximity_Service
  7356 ;; This function is called by:
  7357 ;;		_MTOUCH_Service_Mainloop
  7358 ;; This function uses a non-reentrant model
  7359 ;;
  7360                           
  7361                           
  7362                           ;psect for function _MTOUCH_Proximity_ServiceAll
  7363  080C                     _MTOUCH_Proximity_ServiceAll:	
  7364                           
  7365                           ;mtouch_proximity.c: 157: Proximity_Service(Proximity0);
  7366                           
  7367                           ;incstack = 0
  7368                           ; Regs used in _MTOUCH_Proximity_ServiceAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7369  080C  3000               	movlw	0
  7370  080D  318C  24B5         	fcall	_Proximity_Service
  7371  080F  0008               	return
  7372  0810                     __end_of_MTOUCH_Proximity_ServiceAll:	
  7373                           
  7374                           	psect	text40
  7375  0CB5                     __ptext40:	
  7376 ;; *************** function _Proximity_Service *****************
  7377 ;; Defined at:
  7378 ;;		line 165 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  name            1    wreg     enum E3283
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;  name            1   22[BANK0 ] enum E3283
  7383 ;;  prox            1   23[BANK0 ] PTR struct .
  7384 ;;		 -> mtouch_proximity(18), 
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  1    wreg      void 
  7387 ;; Registers used:
  7388 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7394 ;;      Params:         0       0       0       0       0       0       0       0
  7395 ;;      Locals:         0       2       0       0       0       0       0       0
  7396 ;;      Temps:          0       1       0       0       0       0       0       0
  7397 ;;      Totals:         0       3       0       0       0       0       0       0
  7398 ;;Total ram usage:        3 bytes
  7399 ;; Hardware stack levels used:    1
  7400 ;; Hardware stack levels required when called:    6
  7401 ;; This function calls:
  7402 ;;		_MTOUCH_Proximity_Initialize
  7403 ;;		_MTOUCH_Sensor_isCalibrated
  7404 ;;		_MTOUCH_Sensor_wasSampled
  7405 ;;		_Proximity_Deviation_Update
  7406 ;;		_Proximity_Reading_Update
  7407 ;;		_Proximity_State_Activated
  7408 ;;		_Proximity_State_Initializing
  7409 ;;		_Proximity_State_NotActivated
  7410 ;; This function is called by:
  7411 ;;		_MTOUCH_Proximity_ServiceAll
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414                           
  7415                           
  7416                           ;psect for function _Proximity_Service
  7417  0CB5                     _Proximity_Service:	
  7418                           
  7419                           ;incstack = 0
  7420                           ; Regs used in _Proximity_Service: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7421                           ;Proximity_Service@name stored from wreg
  7422  0CB5  0020               	movlb	0	; select bank0
  7423  0CB6  00B6               	movwf	Proximity_Service@name
  7424                           
  7425                           ;mtouch_proximity.c: 167: mtouch_proximity_t* prox = &mtouch_proximity[name];
  7426  0CB7  0E36               	swapf	Proximity_Service@name,w
  7427  0CB8  39F0               	andlw	240
  7428  0CB9  0736               	addwf	Proximity_Service@name,w
  7429  0CBA  0736               	addwf	Proximity_Service@name,w
  7430  0CBB  3EC0               	addlw	(low (_mtouch_proximity| 0))& (0+255)
  7431  0CBC  00B5               	movwf	??_Proximity_Service
  7432  0CBD  0835               	movf	??_Proximity_Service,w
  7433  0CBE  00B7               	movwf	Proximity_Service@prox
  7434                           
  7435                           ;mtouch_proximity.c: 169: if (MTOUCH_Sensor_wasSampled(prox->sensor) && MTOUCH_Sensor_is
      +                          Calibrated(prox->sensor))
  7436  0CBF  0A37               	incf	Proximity_Service@prox,w
  7437  0CC0  0086               	movwf	6
  7438  0CC1  0187               	clrf	7
  7439  0CC2  0801               	movf	1,w
  7440  0CC3  3188  20CA  318C   	fcall	_MTOUCH_Sensor_wasSampled
  7441  0CC6  3A00               	xorlw	0
  7442  0CC7  1903               	skipnz
  7443  0CC8  0008               	return
  7444  0CC9  0020               	movlb	0	; select bank0
  7445  0CCA  0A37               	incf	Proximity_Service@prox,w
  7446  0CCB  0086               	movwf	6
  7447  0CCC  0187               	clrf	7
  7448  0CCD  0801               	movf	1,w
  7449  0CCE  3189  2157  318C   	fcall	_MTOUCH_Sensor_isCalibrated
  7450  0CD1  3A00               	xorlw	0
  7451  0CD2  1903               	skipnz
  7452  0CD3  0008               	return
  7453                           
  7454                           ;mtouch_proximity.c: 170: {
  7455                           ;mtouch_proximity.c: 171: Proximity_Reading_Update(prox);
  7456  0CD4  0020               	movlb	0	; select bank0
  7457  0CD5  0837               	movf	Proximity_Service@prox,w
  7458  0CD6  3180  20E4  318C   	fcall	_Proximity_Reading_Update
  7459                           
  7460                           ;mtouch_proximity.c: 172: Proximity_Deviation_Update(name);
  7461  0CD9  0020               	movlb	0	; select bank0
  7462  0CDA  0836               	movf	Proximity_Service@name,w
  7463  0CDB  3184  2479  318C   	fcall	_Proximity_Deviation_Update
  7464                           
  7465                           ;mtouch_proximity.c: 174: if (prox->state >= (uint8_t)(sizeof(Proximity_StateMachine)/si
      +                          zeof(proximity_statemachine_state_t)))
  7466  0CDE  0020               	movlb	0	; select bank0
  7467  0CDF  0837               	movf	Proximity_Service@prox,w
  7468  0CE0  3E02               	addlw	2
  7469  0CE1  0086               	movwf	6
  7470  0CE2  0187               	clrf	7
  7471  0CE3  3003               	movlw	3
  7472  0CE4  0201               	subwf	1,w
  7473  0CE5  1C03               	skipc
  7474  0CE6  2CEE               	goto	l1004
  7475                           
  7476                           ;mtouch_proximity.c: 175: {
  7477                           ;mtouch_proximity.c: 176: MTOUCH_Proximity_Initialize(prox->name);
  7478  0CE7  0837               	movf	Proximity_Service@prox,w
  7479  0CE8  0086               	movwf	6
  7480  0CE9  0187               	clrf	7
  7481  0CEA  0801               	movf	1,w
  7482  0CEB  318A  22C7  318C   	fcall	_MTOUCH_Proximity_Initialize
  7483  0CEE                     l1004:	
  7484                           
  7485                           ;mtouch_proximity.c: 177: }
  7486                           ;mtouch_proximity.c: 178: Proximity_StateMachine[prox->state](prox);
  7487  0CEE  0020               	movlb	0	; select bank0
  7488  0CEF  0837               	movf	Proximity_Service@prox,w
  7489  0CF0  00B5               	movwf	??_Proximity_Service
  7490  0CF1  0835               	movf	??_Proximity_Service,w
  7491  0CF2  00A7               	movwf	Proximity_State_Activated@prox
  7492  0CF3  0837               	movf	Proximity_Service@prox,w
  7493  0CF4  3E02               	addlw	2
  7494  0CF5  0086               	movwf	6
  7495  0CF6  0187               	clrf	7
  7496  0CF7  3501               	lslf	1,w
  7497  0CF8  3E4F               	addlw	(low (_Proximity_StateMachine| 0))& (0+255)
  7498  0CF9  0086               	movwf	6
  7499  0CFA  0187               	clrf	7
  7500  0CFB  3F41               	moviw [1]fsr1
  7501  0CFC  008A               	movwf	10
  7502  0CFD  3F40               	moviw [0]fsr1
  7503  0CFE  000A               	callw
  7504  0CFF  318C               	pagesel	$
  7505  0D00  0008               	return
  7506  0D01                     __end_of_Proximity_Service:	
  7507                           
  7508                           	psect	text41
  7509  0D01                     __ptext41:	
  7510 ;; *************** function _Proximity_State_Activated *****************
  7511 ;; Defined at:
  7512 ;;		line 233 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  prox            1    7[BANK0 ] PTR struct .
  7515 ;;		 -> mtouch_proximity(18), 
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;		None
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  1    wreg      void 
  7520 ;; Registers used:
  7521 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7527 ;;      Params:         0       1       0       0       0       0       0       0
  7528 ;;      Locals:         0       0       0       0       0       0       0       0
  7529 ;;      Temps:          0       2       0       0       0       0       0       0
  7530 ;;      Totals:         0       3       0       0       0       0       0       0
  7531 ;;Total ram usage:        3 bytes
  7532 ;; Hardware stack levels used:    1
  7533 ;; Hardware stack levels required when called:    3
  7534 ;; This function calls:
  7535 ;;		_MTOUCH_Proximity_Initialize
  7536 ;;		_Proximity_DefaultCallback
  7537 ;;		_processProximityNotActivate
  7538 ;; This function is called by:
  7539 ;;		_Proximity_Service
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543                           
  7544                           ;psect for function _Proximity_State_Activated
  7545  0D01                     _Proximity_State_Activated:	
  7546                           
  7547                           ;mtouch_proximity.c: 236: if ((prox->counter) >= ((mtouch_prox_statecounter_t)1000))
  7548                           
  7549                           ;incstack = 0
  7550                           ; Regs used in _Proximity_State_Activated: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  7551  0D01  0020               	movlb	0	; select bank0
  7552  0D02  0827               	movf	Proximity_State_Activated@prox,w
  7553  0D03  3E0C               	addlw	12
  7554  0D04  0086               	movwf	6
  7555  0D05  0187               	clrf	7
  7556  0D06  3F40               	moviw [0]fsr1
  7557  0D07  00A8               	movwf	??_Proximity_State_Activated
  7558  0D08  3F41               	moviw [1]fsr1
  7559  0D09  00A9               	movwf	??_Proximity_State_Activated+1
  7560  0D0A  3003               	movlw	3
  7561  0D0B  0229               	subwf	??_Proximity_State_Activated+1,w
  7562  0D0C  30E8               	movlw	232
  7563  0D0D  1903               	skipnz
  7564  0D0E  0228               	subwf	??_Proximity_State_Activated,w
  7565  0D0F  1C03               	skipc
  7566  0D10  2D26               	goto	l3949
  7567                           
  7568                           ;mtouch_proximity.c: 237: {
  7569                           ;mtouch_proximity.c: 238: MTOUCH_Proximity_Initialize(prox->name);
  7570  0D11  0827               	movf	Proximity_State_Activated@prox,w
  7571  0D12  0086               	movwf	6
  7572  0D13  0187               	clrf	7
  7573  0D14  0801               	movf	1,w
  7574  0D15  318A  22C7  318D   	fcall	_MTOUCH_Proximity_Initialize
  7575                           
  7576                           ;mtouch_proximity.c: 239: callback_notActivated(prox->name);
  7577  0D18  0020               	movlb	0	; select bank0
  7578  0D19  0827               	movf	Proximity_State_Activated@prox,w
  7579  0D1A  0086               	movwf	6
  7580  0D1B  0187               	clrf	7
  7581  0D1C  0801               	movf	1,w
  7582  0D1D  00A8               	movwf	??_Proximity_State_Activated
  7583  0D1E  0828               	movf	??_Proximity_State_Activated,w
  7584  0D1F  00F2               	movwf	processProximityNotActivate@prox
  7585  0D20  085C               	movf	_callback_notActivated+1,w
  7586  0D21  008A               	movwf	10
  7587  0D22  085B               	movf	_callback_notActivated,w
  7588  0D23  000A               	callw
  7589  0D24  318D               	pagesel	$
  7590                           
  7591                           ;mtouch_proximity.c: 240: }
  7592  0D25  0008               	return
  7593  0D26                     l3949:	
  7594                           
  7595                           ;mtouch_proximity.c: 243: else if ((prox->integratedDeviation) < (mtouch_prox_deviation_
      +                          t)((prox->threshold) >> 1))
  7596  0D26  0020               	movlb	0	; select bank0
  7597  0D27  0827               	movf	Proximity_State_Activated@prox,w
  7598  0D28  3E0B               	addlw	11
  7599  0D29  0086               	movwf	6
  7600  0D2A  0187               	clrf	7
  7601  0D2B  0801               	movf	1,w
  7602  0D2C  3A80               	xorlw	128
  7603  0D2D  00A8               	movwf	??_Proximity_State_Activated
  7604  0D2E  0827               	movf	Proximity_State_Activated@prox,w
  7605  0D2F  3E10               	addlw	16
  7606  0D30  0086               	movwf	6
  7607  0D31  0187               	clrf	7
  7608  0D32  3701               	asrf	1,w
  7609  0D33  3A80               	xorlw	128
  7610  0D34  02A8               	subwf	??_Proximity_State_Activated,f
  7611  0D35  1803               	skipnc
  7612  0D36  0008               	return
  7613                           
  7614                           ;mtouch_proximity.c: 244: {
  7615                           ;mtouch_proximity.c: 245: prox->state = MTOUCH_PROXIMITY_STATE_notActivated;
  7616  0D37  0827               	movf	Proximity_State_Activated@prox,w
  7617  0D38  3E02               	addlw	2
  7618  0D39  0086               	movwf	6
  7619  0D3A  0187               	clrf	7
  7620  0D3B  0181               	clrf	1
  7621  0D3C  0A81               	incf	1,f
  7622                           
  7623                           ;mtouch_proximity.c: 246: prox->counter = (mtouch_prox_statecounter_t)0;
  7624  0D3D  0827               	movf	Proximity_State_Activated@prox,w
  7625  0D3E  3E0C               	addlw	12
  7626  0D3F  0086               	movwf	6
  7627  0D40  0187               	clrf	7
  7628  0D41  3000               	movlw	0
  7629  0D42  3FC0               	movwi [0]fsr1
  7630  0D43  3FC1               	movwi [1]fsr1
  7631                           
  7632                           ;mtouch_proximity.c: 247: callback_notActivated(prox->name);
  7633  0D44  0827               	movf	Proximity_State_Activated@prox,w
  7634  0D45  0086               	movwf	6
  7635  0D46  0187               	clrf	7
  7636  0D47  0801               	movf	1,w
  7637  0D48  00A8               	movwf	??_Proximity_State_Activated
  7638  0D49  0828               	movf	??_Proximity_State_Activated,w
  7639  0D4A  00F2               	movwf	processProximityNotActivate@prox
  7640  0D4B  085C               	movf	_callback_notActivated+1,w
  7641  0D4C  008A               	movwf	10
  7642  0D4D  085B               	movf	_callback_notActivated,w
  7643  0D4E  000A               	callw
  7644  0D4F  318D               	pagesel	$
  7645  0D50  0008               	return
  7646  0D51                     __end_of_Proximity_State_Activated:	
  7647                           
  7648                           	psect	text42
  7649  0C2E                     __ptext42:	
  7650 ;; *************** function _Proximity_State_Initializing *****************
  7651 ;; Defined at:
  7652 ;;		line 181 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;  prox            1    7[BANK0 ] PTR struct .
  7655 ;;		 -> mtouch_proximity(18), 
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;		None
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  1    wreg      void 
  7660 ;; Registers used:
  7661 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7667 ;;      Params:         0       1       0       0       0       0       0       0
  7668 ;;      Locals:         0       0       0       0       0       0       0       0
  7669 ;;      Temps:          0       2       0       0       0       0       0       0
  7670 ;;      Totals:         0       3       0       0       0       0       0       0
  7671 ;;Total ram usage:        3 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; Hardware stack levels required when called:    5
  7674 ;; This function calls:
  7675 ;;		_Proximity_Baseline_Initialize
  7676 ;;		_Proximity_Baseline_Update
  7677 ;; This function is called by:
  7678 ;;		_Proximity_Service
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           
  7683                           ;psect for function _Proximity_State_Initializing
  7684  0C2E                     _Proximity_State_Initializing:	
  7685                           
  7686                           ;mtouch_proximity.c: 184: if ((prox->counter) <= (mtouch_prox_statecounter_t)((mtouch_pr
      +                          ox_statecounter_t)16.0)/2)
  7687                           
  7688                           ;incstack = 0
  7689                           ; Regs used in _Proximity_State_Initializing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
  7690  0C2E  0020               	movlb	0	; select bank0
  7691  0C2F  0827               	movf	Proximity_State_Initializing@prox,w
  7692  0C30  3E0C               	addlw	12
  7693  0C31  0086               	movwf	6
  7694  0C32  0187               	clrf	7
  7695  0C33  3F40               	moviw [0]fsr1
  7696  0C34  00A8               	movwf	??_Proximity_State_Initializing
  7697  0C35  3F41               	moviw [1]fsr1
  7698  0C36  00A9               	movwf	??_Proximity_State_Initializing+1
  7699  0C37  3000               	movlw	0
  7700  0C38  0229               	subwf	??_Proximity_State_Initializing+1,w
  7701  0C39  3009               	movlw	9
  7702  0C3A  1903               	skipnz
  7703  0C3B  0228               	subwf	??_Proximity_State_Initializing,w
  7704  0C3C  1803               	skipnc
  7705  0C3D  2C43               	goto	l5529
  7706                           
  7707                           ;mtouch_proximity.c: 185: {
  7708                           ;mtouch_proximity.c: 186: Proximity_Baseline_Initialize(prox);
  7709  0C3E  0827               	movf	Proximity_State_Initializing@prox,w
  7710  0C3F  318B  2366  318C   	fcall	_Proximity_Baseline_Initialize
  7711                           
  7712                           ;mtouch_proximity.c: 187: } else {
  7713  0C42  2C48               	goto	l5531
  7714  0C43                     l5529:	
  7715                           
  7716                           ;mtouch_proximity.c: 188: Proximity_Baseline_Update(prox);
  7717  0C43  0020               	movlb	0	; select bank0
  7718  0C44  0827               	movf	Proximity_State_Initializing@prox,w
  7719  0C45  318F  277D  318C   	fcall	_Proximity_Baseline_Update
  7720  0C48                     l5531:	
  7721                           
  7722                           ;mtouch_proximity.c: 189: }
  7723                           ;mtouch_proximity.c: 192: (prox->counter)++;
  7724  0C48  0020               	movlb	0	; select bank0
  7725  0C49  0827               	movf	Proximity_State_Initializing@prox,w
  7726  0C4A  3E0C               	addlw	12
  7727  0C4B  0086               	movwf	6
  7728  0C4C  0187               	clrf	7
  7729  0C4D  3001               	movlw	1
  7730  0C4E  0781               	addwf	1,f
  7731  0C4F  3141               	addfsr 1,1
  7732  0C50  1803               	skipnc
  7733  0C51  0A81               	incf	1,f
  7734                           
  7735                           ;mtouch_proximity.c: 193: if ((prox->counter) >= (mtouch_prox_statecounter_t)((mtouch_pr
      +                          ox_statecounter_t)16.0))
  7736  0C52  0827               	movf	Proximity_State_Initializing@prox,w
  7737  0C53  3E0C               	addlw	12
  7738  0C54  0086               	movwf	6
  7739  0C55  0187               	clrf	7
  7740  0C56  3F40               	moviw [0]fsr1
  7741  0C57  00A8               	movwf	??_Proximity_State_Initializing
  7742  0C58  3F41               	moviw [1]fsr1
  7743  0C59  00A9               	movwf	??_Proximity_State_Initializing+1
  7744  0C5A  3000               	movlw	0
  7745  0C5B  0229               	subwf	??_Proximity_State_Initializing+1,w
  7746  0C5C  3010               	movlw	16
  7747  0C5D  1903               	skipnz
  7748  0C5E  0228               	subwf	??_Proximity_State_Initializing,w
  7749  0C5F  1C03               	skipc
  7750  0C60  0008               	return
  7751                           
  7752                           ;mtouch_proximity.c: 194: {
  7753                           ;mtouch_proximity.c: 195: prox->state = MTOUCH_PROXIMITY_STATE_notActivated;
  7754  0C61  0827               	movf	Proximity_State_Initializing@prox,w
  7755  0C62  3E02               	addlw	2
  7756  0C63  0086               	movwf	6
  7757  0C64  0187               	clrf	7
  7758  0C65  0181               	clrf	1
  7759  0C66  0A81               	incf	1,f
  7760                           
  7761                           ;mtouch_proximity.c: 196: prox->counter = (mtouch_prox_statecounter_t)0;
  7762  0C67  0827               	movf	Proximity_State_Initializing@prox,w
  7763  0C68  3E0C               	addlw	12
  7764  0C69  0086               	movwf	6
  7765  0C6A  0187               	clrf	7
  7766  0C6B  3000               	movlw	0
  7767  0C6C  3FC0               	movwi [0]fsr1
  7768  0C6D  3FC1               	movwi [1]fsr1
  7769  0C6E  0008               	return
  7770  0C6F                     __end_of_Proximity_State_Initializing:	
  7771                           
  7772                           	psect	text43
  7773  03BD                     __ptext43:	
  7774 ;; *************** function _Proximity_State_NotActivated *****************
  7775 ;; Defined at:
  7776 ;;		line 199 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  7777 ;; Parameters:    Size  Location     Type
  7778 ;;  prox            1    7[BANK0 ] PTR struct .
  7779 ;;		 -> mtouch_proximity(18), 
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;  deviation       4   12[BANK0 ] long 
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  1    wreg      void 
  7784 ;; Registers used:
  7785 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7791 ;;      Params:         0       1       0       0       0       0       0       0
  7792 ;;      Locals:         0       4       0       0       0       0       0       0
  7793 ;;      Temps:          0       4       0       0       0       0       0       0
  7794 ;;      Totals:         0       9       0       0       0       0       0       0
  7795 ;;Total ram usage:        9 bytes
  7796 ;; Hardware stack levels used:    1
  7797 ;; Hardware stack levels required when called:    4
  7798 ;; This function calls:
  7799 ;;		_MTOUCH_Proximity_Baseline_Get
  7800 ;;		_MTOUCH_Proximity_Initialize
  7801 ;;		_MTOUCH_Proximity_Reading_Get
  7802 ;;		_Proximity_Baseline_Update
  7803 ;;		_Proximity_DefaultCallback
  7804 ;;		_processProximityActivate
  7805 ;; This function is called by:
  7806 ;;		_Proximity_Service
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810                           
  7811                           ;psect for function _Proximity_State_NotActivated
  7812  03BD                     _Proximity_State_NotActivated:	
  7813                           
  7814                           ;mtouch_proximity.c: 202: int32_t deviation = (int32_t)((uint32_t)(MTOUCH_Proximity_Read
      +                          ing_Get(prox->name)) - (uint32_t)(MTOUCH_Proximity_Baseline_Get(prox->name)));
  7815                           
  7816                           ;incstack = 0
  7817                           ; Regs used in _Proximity_State_NotActivated: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
  7818  03BD  0020               	movlb	0	; select bank0
  7819  03BE  0827               	movf	Proximity_State_NotActivated@prox,w
  7820  03BF  0086               	movwf	6
  7821  03C0  0187               	clrf	7
  7822  03C1  0801               	movf	1,w
  7823  03C2  3189  21B9  3183   	fcall	_MTOUCH_Proximity_Baseline_Get
  7824  03C5  0020               	movlb	0	; select bank0
  7825  03C6  0921               	comf	?_MTOUCH_Proximity_Baseline_Get,w
  7826  03C7  00A8               	movwf	??_Proximity_State_NotActivated
  7827  03C8  0922               	comf	?_MTOUCH_Proximity_Baseline_Get+1,w
  7828  03C9  00A9               	movwf	??_Proximity_State_NotActivated+1
  7829  03CA  0923               	comf	?_MTOUCH_Proximity_Baseline_Get+2,w
  7830  03CB  00AA               	movwf	??_Proximity_State_NotActivated+2
  7831  03CC  0924               	comf	?_MTOUCH_Proximity_Baseline_Get+3,w
  7832  03CD  00AB               	movwf	??_Proximity_State_NotActivated+3
  7833  03CE  0AA8               	incf	??_Proximity_State_NotActivated,f
  7834  03CF  1903               	skipnz
  7835  03D0  0AA9               	incf	??_Proximity_State_NotActivated+1,f
  7836  03D1  1903               	skipnz
  7837  03D2  0AAA               	incf	??_Proximity_State_NotActivated+2,f
  7838  03D3  1903               	skipnz
  7839  03D4  0AAB               	incf	??_Proximity_State_NotActivated+3,f
  7840  03D5  0827               	movf	Proximity_State_NotActivated@prox,w
  7841  03D6  0086               	movwf	6
  7842  03D7  0187               	clrf	7
  7843  03D8  0801               	movf	1,w
  7844  03D9  318A  2243  3183   	fcall	_MTOUCH_Proximity_Reading_Get
  7845  03DC  0872               	movf	?_MTOUCH_Proximity_Reading_Get,w
  7846  03DD  0020               	movlb	0	; select bank0
  7847  03DE  07A8               	addwf	??_Proximity_State_NotActivated,f
  7848  03DF  0873               	movf	?_MTOUCH_Proximity_Reading_Get+1,w
  7849  03E0  3DA9               	addwfc	??_Proximity_State_NotActivated+1,f
  7850  03E1  0874               	movf	?_MTOUCH_Proximity_Reading_Get+2,w
  7851  03E2  3DAA               	addwfc	??_Proximity_State_NotActivated+2,f
  7852  03E3  0875               	movf	?_MTOUCH_Proximity_Reading_Get+3,w
  7853  03E4  3DAB               	addwfc	??_Proximity_State_NotActivated+3,f
  7854  03E5  082B               	movf	??_Proximity_State_NotActivated+3,w
  7855  03E6  00AF               	movwf	Proximity_State_NotActivated@deviation+3
  7856  03E7  082A               	movf	??_Proximity_State_NotActivated+2,w
  7857  03E8  00AE               	movwf	Proximity_State_NotActivated@deviation+2
  7858  03E9  0829               	movf	??_Proximity_State_NotActivated+1,w
  7859  03EA  00AD               	movwf	Proximity_State_NotActivated@deviation+1
  7860  03EB  0828               	movf	??_Proximity_State_NotActivated,w
  7861  03EC  00AC               	movwf	Proximity_State_NotActivated@deviation
  7862                           
  7863                           ;mtouch_proximity.c: 203: if (deviation < (int32_t)(mtouch_prox_deviation_t)-10)
  7864  03ED  1FAF               	btfss	Proximity_State_NotActivated@deviation+3,7
  7865  03EE  2C20               	goto	l5547
  7866  03EF  30F6               	movlw	246
  7867  03F0  022C               	subwf	Proximity_State_NotActivated@deviation,w
  7868  03F1  30FF               	movlw	255
  7869  03F2  3B2D               	subwfb	Proximity_State_NotActivated@deviation+1,w
  7870  03F3  30FF               	movlw	255
  7871  03F4  3B2E               	subwfb	Proximity_State_NotActivated@deviation+2,w
  7872  03F5  30FF               	movlw	255
  7873  03F6  3B2F               	subwfb	Proximity_State_NotActivated@deviation+3,w
  7874  03F7  1803               	btfsc	3,0
  7875  03F8  2C20               	goto	l5547
  7876                           
  7877                           ;mtouch_proximity.c: 204: {
  7878                           ;mtouch_proximity.c: 205: (prox->counter)++;
  7879  03F9  0827               	movf	Proximity_State_NotActivated@prox,w
  7880  03FA  3E0C               	addlw	12
  7881  03FB  0086               	movwf	6
  7882  03FC  0187               	clrf	7
  7883  03FD  3001               	movlw	1
  7884  03FE  0781               	addwf	1,f
  7885  03FF  3141               	addfsr 1,1
  7886  0400  1803               	skipnc
  7887  0401  0A81               	incf	1,f
  7888                           
  7889                           ;mtouch_proximity.c: 206: if ((prox->counter) > (mtouch_prox_statecounter_t)((mtouch_pro
      +                          x_statecounter_t)32))
  7890  0402  0827               	movf	Proximity_State_NotActivated@prox,w
  7891  0403  3E0C               	addlw	12
  7892  0404  0086               	movwf	6
  7893  0405  0187               	clrf	7
  7894  0406  3F40               	moviw [0]fsr1
  7895  0407  00A8               	movwf	??_Proximity_State_NotActivated
  7896  0408  3F41               	moviw [1]fsr1
  7897  0409  00A9               	movwf	??_Proximity_State_NotActivated+1
  7898  040A  3000               	movlw	0
  7899  040B  0229               	subwf	??_Proximity_State_NotActivated+1,w
  7900  040C  3021               	movlw	33
  7901  040D  1903               	skipnz
  7902  040E  0228               	subwf	??_Proximity_State_NotActivated,w
  7903  040F  1C03               	skipc
  7904  0410  2C55               	goto	l1016
  7905                           
  7906                           ;mtouch_proximity.c: 207: {
  7907                           ;mtouch_proximity.c: 208: prox->counter = (mtouch_prox_statecounter_t)0;
  7908  0411  0827               	movf	Proximity_State_NotActivated@prox,w
  7909  0412  3E0C               	addlw	12
  7910  0413  0086               	movwf	6
  7911  0414  0187               	clrf	7
  7912  0415  3000               	movlw	0
  7913  0416  3FC0               	movwi [0]fsr1
  7914  0417  3FC1               	movwi [1]fsr1
  7915                           
  7916                           ;mtouch_proximity.c: 209: MTOUCH_Proximity_Initialize(prox->name);
  7917  0418  0827               	movf	Proximity_State_NotActivated@prox,w
  7918  0419  0086               	movwf	6
  7919  041A  0187               	clrf	7
  7920  041B  0801               	movf	1,w
  7921  041C  318A  22C7  3183   	fcall	_MTOUCH_Proximity_Initialize
  7922                           
  7923                           ;mtouch_proximity.c: 210: }
  7924                           ;mtouch_proximity.c: 211: }
  7925  041F  2C55               	goto	l1016
  7926  0420                     l5547:	
  7927                           
  7928                           ;mtouch_proximity.c: 213: else if ((prox->integratedDeviation) > (prox->threshold))
  7929  0420  0020               	movlb	0	; select bank0
  7930  0421  0827               	movf	Proximity_State_NotActivated@prox,w
  7931  0422  3E10               	addlw	16
  7932  0423  0086               	movwf	6
  7933  0424  0187               	clrf	7
  7934  0425  0801               	movf	1,w
  7935  0426  3A80               	xorlw	128
  7936  0427  00A8               	movwf	??_Proximity_State_NotActivated
  7937  0428  0827               	movf	Proximity_State_NotActivated@prox,w
  7938  0429  3E0B               	addlw	11
  7939  042A  0086               	movwf	6
  7940  042B  0187               	clrf	7
  7941  042C  0801               	movf	1,w
  7942  042D  3A80               	xorlw	128
  7943  042E  02A8               	subwf	??_Proximity_State_NotActivated,f
  7944  042F  1803               	skipnc
  7945  0430  2C4D               	goto	l5553
  7946                           
  7947                           ;mtouch_proximity.c: 214: {
  7948                           ;mtouch_proximity.c: 215: prox->state = MTOUCH_PROXIMITY_STATE_activated;
  7949  0431  3002               	movlw	2
  7950  0432  00A8               	movwf	??_Proximity_State_NotActivated
  7951  0433  0827               	movf	Proximity_State_NotActivated@prox,w
  7952  0434  3E02               	addlw	2
  7953  0435  0086               	movwf	6
  7954  0436  0187               	clrf	7
  7955  0437  0828               	movf	??_Proximity_State_NotActivated,w
  7956  0438  0081               	movwf	1
  7957                           
  7958                           ;mtouch_proximity.c: 216: prox->counter = (mtouch_prox_statecounter_t)0;
  7959  0439  0827               	movf	Proximity_State_NotActivated@prox,w
  7960  043A  3E0C               	addlw	12
  7961  043B  0086               	movwf	6
  7962  043C  0187               	clrf	7
  7963  043D  3000               	movlw	0
  7964  043E  3FC0               	movwi [0]fsr1
  7965  043F  3FC1               	movwi [1]fsr1
  7966                           
  7967                           ;mtouch_proximity.c: 217: callback_activated(prox->name);
  7968  0440  0827               	movf	Proximity_State_NotActivated@prox,w
  7969  0441  0086               	movwf	6
  7970  0442  0187               	clrf	7
  7971  0443  0801               	movf	1,w
  7972  0444  00A8               	movwf	??_Proximity_State_NotActivated
  7973  0445  0828               	movf	??_Proximity_State_NotActivated,w
  7974  0446  00F2               	movwf	processProximityActivate@prox
  7975  0447  085E               	movf	_callback_activated+1,w
  7976  0448  008A               	movwf	10
  7977  0449  085D               	movf	_callback_activated,w
  7978  044A  000A               	callw
  7979  044B  3183               	pagesel	$
  7980                           
  7981                           ;mtouch_proximity.c: 218: }
  7982  044C  2C55               	goto	l1016
  7983  044D                     l5553:	
  7984                           
  7985                           ;mtouch_proximity.c: 219: else
  7986                           ;mtouch_proximity.c: 220: {
  7987                           ;mtouch_proximity.c: 222: prox->counter = (mtouch_prox_statecounter_t)0;
  7988  044D  0020               	movlb	0	; select bank0
  7989  044E  0827               	movf	Proximity_State_NotActivated@prox,w
  7990  044F  3E0C               	addlw	12
  7991  0450  0086               	movwf	6
  7992  0451  0187               	clrf	7
  7993  0452  3000               	movlw	0
  7994  0453  3FC0               	movwi [0]fsr1
  7995  0454  3FC1               	movwi [1]fsr1
  7996  0455                     l1016:	
  7997                           
  7998                           ;mtouch_proximity.c: 223: }
  7999                           ;mtouch_proximity.c: 226: (prox->baseline_count)++;
  8000  0455  0020               	movlb	0	; select bank0
  8001  0456  0827               	movf	Proximity_State_NotActivated@prox,w
  8002  0457  3E0E               	addlw	14
  8003  0458  0086               	movwf	6
  8004  0459  0187               	clrf	7
  8005  045A  3001               	movlw	1
  8006  045B  0781               	addwf	1,f
  8007  045C  3141               	addfsr 1,1
  8008  045D  1803               	skipnc
  8009  045E  0A81               	incf	1,f
  8010                           
  8011                           ;mtouch_proximity.c: 227: if ((prox->baseline_count) > ((mtouch_prox_baselinecounter_t)6
      +                          4))
  8012  045F  0827               	movf	Proximity_State_NotActivated@prox,w
  8013  0460  3E0E               	addlw	14
  8014  0461  0086               	movwf	6
  8015  0462  0187               	clrf	7
  8016  0463  3F40               	moviw [0]fsr1
  8017  0464  00A8               	movwf	??_Proximity_State_NotActivated
  8018  0465  3F41               	moviw [1]fsr1
  8019  0466  00A9               	movwf	??_Proximity_State_NotActivated+1
  8020  0467  3000               	movlw	0
  8021  0468  0229               	subwf	??_Proximity_State_NotActivated+1,w
  8022  0469  3041               	movlw	65
  8023  046A  1903               	skipnz
  8024  046B  0228               	subwf	??_Proximity_State_NotActivated,w
  8025  046C  1C03               	skipc
  8026  046D  0008               	return
  8027                           
  8028                           ;mtouch_proximity.c: 228: {
  8029                           ;mtouch_proximity.c: 229: prox->baseline_count = (mtouch_prox_baselinecounter_t)0;
  8030  046E  0827               	movf	Proximity_State_NotActivated@prox,w
  8031  046F  3E0E               	addlw	14
  8032  0470  0086               	movwf	6
  8033  0471  0187               	clrf	7
  8034  0472  3000               	movlw	0
  8035  0473  3FC0               	movwi [0]fsr1
  8036  0474  3FC1               	movwi [1]fsr1
  8037                           
  8038                           ;mtouch_proximity.c: 230: Proximity_Baseline_Update(prox);
  8039  0475  0827               	movf	Proximity_State_NotActivated@prox,w
  8040  0476  318F  277D         	fcall	_Proximity_Baseline_Update
  8041  0478  0008               	return
  8042  0479                     __end_of_Proximity_State_NotActivated:	
  8043                           
  8044                           	psect	text44
  8045  0805                     __ptext44:	
  8046 ;; *************** function _processProximityNotActivate *****************
  8047 ;; Defined at:
  8048 ;;		line 82 in file "main.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;  prox            1    2[COMMON] enum E3311
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;		None
  8053 ;; Return value:  Size  Location     Type
  8054 ;;                  1    wreg      void 
  8055 ;; Registers used:
  8056 ;;		None
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8062 ;;      Params:         1       0       0       0       0       0       0       0
  8063 ;;      Locals:         0       0       0       0       0       0       0       0
  8064 ;;      Temps:          0       0       0       0       0       0       0       0
  8065 ;;      Totals:         1       0       0       0       0       0       0       0
  8066 ;;Total ram usage:        1 bytes
  8067 ;; Hardware stack levels used:    1
  8068 ;; Hardware stack levels required when called:    2
  8069 ;; This function calls:
  8070 ;;		Nothing
  8071 ;; This function is called by:
  8072 ;;		_main
  8073 ;;		_Proximity_State_Activated
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           
  8078                           ;psect for function _processProximityNotActivate
  8079  0805                     _processProximityNotActivate:	
  8080                           
  8081                           ;incstack = 0
  8082                           ; Regs used in _processProximityNotActivate: []
  8083  0805  0008               	return
  8084  0806                     __end_of_processProximityNotActivate:	
  8085                           
  8086                           	psect	text45
  8087  0804                     __ptext45:	
  8088 ;; *************** function _Proximity_DefaultCallback *****************
  8089 ;; Defined at:
  8090 ;;		line 420 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;  name            1    2[COMMON] enum E3283
  8093 ;; Auto vars:     Size  Location     Type
  8094 ;;		None
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  1    wreg      void 
  8097 ;; Registers used:
  8098 ;;		None
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8104 ;;      Params:         1       0       0       0       0       0       0       0
  8105 ;;      Locals:         0       0       0       0       0       0       0       0
  8106 ;;      Temps:          0       0       0       0       0       0       0       0
  8107 ;;      Totals:         1       0       0       0       0       0       0       0
  8108 ;;Total ram usage:        1 bytes
  8109 ;; Hardware stack levels used:    1
  8110 ;; Hardware stack levels required when called:    2
  8111 ;; This function calls:
  8112 ;;		Nothing
  8113 ;; This function is called by:
  8114 ;;		_Proximity_State_NotActivated
  8115 ;;		_Proximity_State_Activated
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           
  8120                           ;psect for function _Proximity_DefaultCallback
  8121  0804                     _Proximity_DefaultCallback:	
  8122                           
  8123                           ;incstack = 0
  8124                           ; Regs used in _Proximity_DefaultCallback: []
  8125  0804  0008               	return
  8126  0805                     __end_of_Proximity_DefaultCallback:	
  8127                           
  8128                           	psect	text46
  8129  0803                     __ptext46:	
  8130 ;; *************** function _processProximityActivate *****************
  8131 ;; Defined at:
  8132 ;;		line 76 in file "main.c"
  8133 ;; Parameters:    Size  Location     Type
  8134 ;;  prox            1    2[COMMON] enum E3311
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;		None
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  1    wreg      void 
  8139 ;; Registers used:
  8140 ;;		None
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8146 ;;      Params:         1       0       0       0       0       0       0       0
  8147 ;;      Locals:         0       0       0       0       0       0       0       0
  8148 ;;      Temps:          0       0       0       0       0       0       0       0
  8149 ;;      Totals:         1       0       0       0       0       0       0       0
  8150 ;;Total ram usage:        1 bytes
  8151 ;; Hardware stack levels used:    1
  8152 ;; Hardware stack levels required when called:    2
  8153 ;; This function calls:
  8154 ;;		Nothing
  8155 ;; This function is called by:
  8156 ;;		_main
  8157 ;;		_Proximity_State_NotActivated
  8158 ;; This function uses a non-reentrant model
  8159 ;;
  8160                           
  8161                           
  8162                           ;psect for function _processProximityActivate
  8163  0803                     _processProximityActivate:	
  8164                           
  8165                           ;incstack = 0
  8166                           ; Regs used in _processProximityActivate: []
  8167  0803  0008               	return
  8168  0804                     __end_of_processProximityActivate:	
  8169                           
  8170                           	psect	text47
  8171  0F7D                     __ptext47:	
  8172 ;; *************** function _Proximity_Baseline_Update *****************
  8173 ;; Defined at:
  8174 ;;		line 385 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;  prox            1    wreg     PTR struct .
  8177 ;;		 -> mtouch_proximity(18), 
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;  prox            1    6[COMMON] PTR struct .
  8180 ;;		 -> mtouch_proximity(18), 
  8181 ;; Return value:  Size  Location     Type
  8182 ;;                  1    wreg      void 
  8183 ;; Registers used:
  8184 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8185 ;; Tracked objects:
  8186 ;;		On entry : 0/0
  8187 ;;		On exit  : 0/0
  8188 ;;		Unchanged: 0/0
  8189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8190 ;;      Params:         0       0       0       0       0       0       0       0
  8191 ;;      Locals:         1       0       0       0       0       0       0       0
  8192 ;;      Temps:          4       0       0       0       0       0       0       0
  8193 ;;      Totals:         5       0       0       0       0       0       0       0
  8194 ;;Total ram usage:        5 bytes
  8195 ;; Hardware stack levels used:    1
  8196 ;; Hardware stack levels required when called:    2
  8197 ;; This function calls:
  8198 ;;		Nothing
  8199 ;; This function is called by:
  8200 ;;		_Proximity_State_Initializing
  8201 ;;		_Proximity_State_NotActivated
  8202 ;; This function uses a non-reentrant model
  8203 ;;
  8204                           
  8205                           
  8206                           ;psect for function _Proximity_Baseline_Update
  8207  0F7D                     _Proximity_Baseline_Update:	
  8208                           
  8209                           ;incstack = 0
  8210                           ; Regs used in _Proximity_Baseline_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  8211                           ;Proximity_Baseline_Update@prox stored from wreg
  8212  0F7D  00F6               	movwf	Proximity_Baseline_Update@prox
  8213                           
  8214                           ;mtouch_proximity.c: 387: if (INTCONbits.GIE == (uint8_t)1)
  8215  0F7E  1F8B               	btfss	11,7	;volatile
  8216  0F7F  2FC1               	goto	l3697
  8217                           
  8218                           ;mtouch_proximity.c: 388: {
  8219                           ;mtouch_proximity.c: 389: INTCONbits.GIE = (uint8_t)0;
  8220  0F80  138B               	bcf	11,7	;volatile
  8221                           
  8222                           ;mtouch_proximity.c: 390: prox->baseline -= (prox->baseline) >> ((uint8_t)4);
  8223  0F81  0876               	movf	Proximity_Baseline_Update@prox,w
  8224  0F82  3E07               	addlw	7
  8225  0F83  0086               	movwf	6
  8226  0F84  0187               	clrf	7
  8227  0F85  3F40               	moviw [0]fsr1
  8228  0F86  00F2               	movwf	??_Proximity_Baseline_Update
  8229  0F87  3F41               	moviw [1]fsr1
  8230  0F88  00F3               	movwf	??_Proximity_Baseline_Update+1
  8231  0F89  3F42               	moviw [2]fsr1
  8232  0F8A  00F4               	movwf	??_Proximity_Baseline_Update+2
  8233  0F8B  3F43               	moviw [3]fsr1
  8234  0F8C  00F5               	movwf	??_Proximity_Baseline_Update+3
  8235  0F8D  3004               	movlw	4
  8236  0F8E                     u2975:	
  8237  0F8E  36F5               	lsrf	??_Proximity_Baseline_Update+3,f
  8238  0F8F  0CF4               	rrf	??_Proximity_Baseline_Update+2,f
  8239  0F90  0CF3               	rrf	??_Proximity_Baseline_Update+1,f
  8240  0F91  0CF2               	rrf	??_Proximity_Baseline_Update,f
  8241  0F92  0B89               	decfsz	9,f
  8242  0F93  2F8E               	goto	u2975
  8243  0F94  0876               	movf	Proximity_Baseline_Update@prox,w
  8244  0F95  3E07               	addlw	7
  8245  0F96  0086               	movwf	6
  8246  0F97  0187               	clrf	7
  8247  0F98  0872               	movf	??_Proximity_Baseline_Update,w
  8248  0F99  0281               	subwf	1,f
  8249  0F9A  3141               	addfsr 1,1
  8250  0F9B  0873               	movf	??_Proximity_Baseline_Update+1,w
  8251  0F9C  3B81               	subwfb	1,f
  8252  0F9D  3141               	addfsr 1,1
  8253  0F9E  0874               	movf	??_Proximity_Baseline_Update+2,w
  8254  0F9F  3B81               	subwfb	1,f
  8255  0FA0  3141               	addfsr 1,1
  8256  0FA1  0875               	movf	??_Proximity_Baseline_Update+3,w
  8257  0FA2  3B81               	subwfb	1,f
  8258  0FA3  317D               	addfsr 1,-3
  8259                           
  8260                           ;mtouch_proximity.c: 391: prox->baseline += prox->reading;
  8261  0FA4  0876               	movf	Proximity_Baseline_Update@prox,w
  8262  0FA5  3E03               	addlw	3
  8263  0FA6  0086               	movwf	6
  8264  0FA7  0187               	clrf	7
  8265  0FA8  3F40               	moviw [0]fsr1
  8266  0FA9  00F2               	movwf	??_Proximity_Baseline_Update
  8267  0FAA  3F41               	moviw [1]fsr1
  8268  0FAB  00F3               	movwf	??_Proximity_Baseline_Update+1
  8269  0FAC  3F42               	moviw [2]fsr1
  8270  0FAD  00F4               	movwf	??_Proximity_Baseline_Update+2
  8271  0FAE  3F43               	moviw [3]fsr1
  8272  0FAF  00F5               	movwf	??_Proximity_Baseline_Update+3
  8273  0FB0  0876               	movf	Proximity_Baseline_Update@prox,w
  8274  0FB1  3E07               	addlw	7
  8275  0FB2  0086               	movwf	6
  8276  0FB3  0187               	clrf	7
  8277  0FB4  0872               	movf	??_Proximity_Baseline_Update,w
  8278  0FB5  0781               	addwf	1,f
  8279  0FB6  3141               	addfsr 1,1
  8280  0FB7  0873               	movf	??_Proximity_Baseline_Update+1,w
  8281  0FB8  3D81               	addwfc	1,f
  8282  0FB9  3141               	addfsr 1,1
  8283  0FBA  0874               	movf	??_Proximity_Baseline_Update+2,w
  8284  0FBB  3D81               	addwfc	1,f
  8285  0FBC  3141               	addfsr 1,1
  8286  0FBD  0875               	movf	??_Proximity_Baseline_Update+3,w
  8287  0FBE  3D81               	addwfc	1,f
  8288                           
  8289                           ;mtouch_proximity.c: 392: INTCONbits.GIE = (uint8_t)1;
  8290  0FBF  178B               	bsf	11,7	;volatile
  8291                           
  8292                           ;mtouch_proximity.c: 393: }
  8293  0FC0  0008               	return
  8294  0FC1                     l3697:	
  8295                           
  8296                           ;mtouch_proximity.c: 394: else
  8297                           ;mtouch_proximity.c: 395: {
  8298                           ;mtouch_proximity.c: 396: prox->baseline -= (prox->baseline) >> ((uint8_t)4);
  8299  0FC1  0876               	movf	Proximity_Baseline_Update@prox,w
  8300  0FC2  3E07               	addlw	7
  8301  0FC3  0086               	movwf	6
  8302  0FC4  0187               	clrf	7
  8303  0FC5  3F40               	moviw [0]fsr1
  8304  0FC6  00F2               	movwf	??_Proximity_Baseline_Update
  8305  0FC7  3F41               	moviw [1]fsr1
  8306  0FC8  00F3               	movwf	??_Proximity_Baseline_Update+1
  8307  0FC9  3F42               	moviw [2]fsr1
  8308  0FCA  00F4               	movwf	??_Proximity_Baseline_Update+2
  8309  0FCB  3F43               	moviw [3]fsr1
  8310  0FCC  00F5               	movwf	??_Proximity_Baseline_Update+3
  8311  0FCD  3004               	movlw	4
  8312  0FCE                     u2985:	
  8313  0FCE  36F5               	lsrf	??_Proximity_Baseline_Update+3,f
  8314  0FCF  0CF4               	rrf	??_Proximity_Baseline_Update+2,f
  8315  0FD0  0CF3               	rrf	??_Proximity_Baseline_Update+1,f
  8316  0FD1  0CF2               	rrf	??_Proximity_Baseline_Update,f
  8317  0FD2  0B89               	decfsz	9,f
  8318  0FD3  2FCE               	goto	u2985
  8319  0FD4  0876               	movf	Proximity_Baseline_Update@prox,w
  8320  0FD5  3E07               	addlw	7
  8321  0FD6  0086               	movwf	6
  8322  0FD7  0187               	clrf	7
  8323  0FD8  0872               	movf	??_Proximity_Baseline_Update,w
  8324  0FD9  0281               	subwf	1,f
  8325  0FDA  3141               	addfsr 1,1
  8326  0FDB  0873               	movf	??_Proximity_Baseline_Update+1,w
  8327  0FDC  3B81               	subwfb	1,f
  8328  0FDD  3141               	addfsr 1,1
  8329  0FDE  0874               	movf	??_Proximity_Baseline_Update+2,w
  8330  0FDF  3B81               	subwfb	1,f
  8331  0FE0  3141               	addfsr 1,1
  8332  0FE1  0875               	movf	??_Proximity_Baseline_Update+3,w
  8333  0FE2  3B81               	subwfb	1,f
  8334  0FE3  317D               	addfsr 1,-3
  8335                           
  8336                           ;mtouch_proximity.c: 397: prox->baseline += prox->reading;
  8337  0FE4  0876               	movf	Proximity_Baseline_Update@prox,w
  8338  0FE5  3E03               	addlw	3
  8339  0FE6  0086               	movwf	6
  8340  0FE7  0187               	clrf	7
  8341  0FE8  3F40               	moviw [0]fsr1
  8342  0FE9  00F2               	movwf	??_Proximity_Baseline_Update
  8343  0FEA  3F41               	moviw [1]fsr1
  8344  0FEB  00F3               	movwf	??_Proximity_Baseline_Update+1
  8345  0FEC  3F42               	moviw [2]fsr1
  8346  0FED  00F4               	movwf	??_Proximity_Baseline_Update+2
  8347  0FEE  3F43               	moviw [3]fsr1
  8348  0FEF  00F5               	movwf	??_Proximity_Baseline_Update+3
  8349  0FF0  0876               	movf	Proximity_Baseline_Update@prox,w
  8350  0FF1  3E07               	addlw	7
  8351  0FF2  0086               	movwf	6
  8352  0FF3  0187               	clrf	7
  8353  0FF4  0872               	movf	??_Proximity_Baseline_Update,w
  8354  0FF5  0781               	addwf	1,f
  8355  0FF6  3141               	addfsr 1,1
  8356  0FF7  0873               	movf	??_Proximity_Baseline_Update+1,w
  8357  0FF8  3D81               	addwfc	1,f
  8358  0FF9  3141               	addfsr 1,1
  8359  0FFA  0874               	movf	??_Proximity_Baseline_Update+2,w
  8360  0FFB  3D81               	addwfc	1,f
  8361  0FFC  3141               	addfsr 1,1
  8362  0FFD  0875               	movf	??_Proximity_Baseline_Update+3,w
  8363  0FFE  3D81               	addwfc	1,f
  8364  0FFF  0008               	return
  8365  1000                     __end_of_Proximity_Baseline_Update:	
  8366                           
  8367                           	psect	text48
  8368  0B66                     __ptext48:	
  8369 ;; *************** function _Proximity_Baseline_Initialize *****************
  8370 ;; Defined at:
  8371 ;;		line 379 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;  prox            1    wreg     PTR struct .
  8374 ;;		 -> mtouch_proximity(18), 
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;  prox            1    4[BANK0 ] PTR struct .
  8377 ;;		 -> mtouch_proximity(18), 
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  1    wreg      void 
  8380 ;; Registers used:
  8381 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8387 ;;      Params:         0       0       0       0       0       0       0       0
  8388 ;;      Locals:         0       1       0       0       0       0       0       0
  8389 ;;      Temps:          0       4       0       0       0       0       0       0
  8390 ;;      Totals:         0       5       0       0       0       0       0       0
  8391 ;;Total ram usage:        5 bytes
  8392 ;; Hardware stack levels used:    1
  8393 ;; Hardware stack levels required when called:    4
  8394 ;; This function calls:
  8395 ;;		_MTOUCH_Sensor_RawSample_Get
  8396 ;; This function is called by:
  8397 ;;		_Proximity_State_Initializing
  8398 ;; This function uses a non-reentrant model
  8399 ;;
  8400                           
  8401                           
  8402                           ;psect for function _Proximity_Baseline_Initialize
  8403  0B66                     _Proximity_Baseline_Initialize:	
  8404                           
  8405                           ;incstack = 0
  8406                           ; Regs used in _Proximity_Baseline_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  8407                           ;Proximity_Baseline_Initialize@prox stored from wreg
  8408  0B66  0020               	movlb	0	; select bank0
  8409  0B67  00A4               	movwf	Proximity_Baseline_Initialize@prox
  8410                           
  8411                           ;mtouch_proximity.c: 381: prox->baseline = MTOUCH_Sensor_RawSample_Get(prox->sensor);
  8412  0B68  0A24               	incf	Proximity_Baseline_Initialize@prox,w
  8413  0B69  0086               	movwf	6
  8414  0B6A  0187               	clrf	7
  8415  0B6B  0801               	movf	1,w
  8416  0B6C  3189  2185  318B   	fcall	_MTOUCH_Sensor_RawSample_Get
  8417  0B6F  0876               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  8418  0B70  0020               	movlb	0	; select bank0
  8419  0B71  00A0               	movwf	??_Proximity_Baseline_Initialize
  8420  0B72  0877               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  8421  0B73  00A1               	movwf	??_Proximity_Baseline_Initialize+1
  8422  0B74  01A2               	clrf	??_Proximity_Baseline_Initialize+2
  8423  0B75  01A3               	clrf	??_Proximity_Baseline_Initialize+3
  8424  0B76  0824               	movf	Proximity_Baseline_Initialize@prox,w
  8425  0B77  3E07               	addlw	7
  8426  0B78  0086               	movwf	6
  8427  0B79  0187               	clrf	7
  8428  0B7A  0820               	movf	??_Proximity_Baseline_Initialize,w
  8429  0B7B  3FC0               	movwi [0]fsr1
  8430  0B7C  0821               	movf	??_Proximity_Baseline_Initialize+1,w
  8431  0B7D  3FC1               	movwi [1]fsr1
  8432  0B7E  0822               	movf	??_Proximity_Baseline_Initialize+2,w
  8433  0B7F  3FC2               	movwi [2]fsr1
  8434  0B80  0823               	movf	??_Proximity_Baseline_Initialize+3,w
  8435  0B81  3FC3               	movwi [3]fsr1
  8436                           
  8437                           ;mtouch_proximity.c: 382: prox->baseline <<= (((uint8_t)4) + ((uint8_t)1));
  8438  0B82  0824               	movf	Proximity_Baseline_Initialize@prox,w
  8439  0B83  3E07               	addlw	7
  8440  0B84  0086               	movwf	6
  8441  0B85  0187               	clrf	7
  8442  0B86  3005               	movlw	5
  8443  0B87                     u5325:	
  8444  0B87  3581               	lslf	1,f
  8445  0B88  3141               	addfsr 1,1
  8446  0B89  0D81               	rlf	1,f
  8447  0B8A  3141               	addfsr 1,1
  8448  0B8B  0D81               	rlf	1,f
  8449  0B8C  3141               	addfsr 1,1
  8450  0B8D  0D81               	rlf	1,f
  8451  0B8E  317D               	addfsr 1,-3
  8452  0B8F  0B89               	decfsz	9,f
  8453  0B90  2B87               	goto	u5325
  8454  0B91  0008               	return
  8455  0B92                     __end_of_Proximity_Baseline_Initialize:	
  8456                           
  8457                           	psect	text49
  8458  0AC7                     __ptext49:	
  8459 ;; *************** function _MTOUCH_Proximity_Initialize *****************
  8460 ;; Defined at:
  8461 ;;		line 127 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  8462 ;; Parameters:    Size  Location     Type
  8463 ;;  name            1    wreg     enum E3283
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;  name            1    3[COMMON] enum E3283
  8466 ;;  prox            1    4[COMMON] PTR struct .
  8467 ;;		 -> mtouch_proximity(18), 
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  1    wreg      void 
  8470 ;; Registers used:
  8471 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/0
  8474 ;;		On exit  : 0/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8477 ;;      Params:         0       0       0       0       0       0       0       0
  8478 ;;      Locals:         2       0       0       0       0       0       0       0
  8479 ;;      Temps:          1       0       0       0       0       0       0       0
  8480 ;;      Totals:         3       0       0       0       0       0       0       0
  8481 ;;Total ram usage:        3 bytes
  8482 ;; Hardware stack levels used:    1
  8483 ;; Hardware stack levels required when called:    2
  8484 ;; This function calls:
  8485 ;;		Nothing
  8486 ;; This function is called by:
  8487 ;;		_Proximity_Service
  8488 ;;		_Proximity_State_NotActivated
  8489 ;;		_Proximity_State_Activated
  8490 ;;		_MTOUCH_proximity_Recalibrate
  8491 ;;		_MTOUCH_Proximity_InitializeAll
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           
  8496                           ;psect for function _MTOUCH_Proximity_Initialize
  8497  0AC7                     _MTOUCH_Proximity_Initialize:	
  8498                           
  8499                           ;incstack = 0
  8500                           ; Regs used in _MTOUCH_Proximity_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0]
  8501                           ;MTOUCH_Proximity_Initialize@name stored from wreg
  8502  0AC7  00F3               	movwf	MTOUCH_Proximity_Initialize@name
  8503                           
  8504                           ;mtouch_proximity.c: 129: mtouch_proximity_t* prox = &mtouch_proximity[name];
  8505  0AC8  0E73               	swapf	MTOUCH_Proximity_Initialize@name,w
  8506  0AC9  39F0               	andlw	240
  8507  0ACA  0773               	addwf	MTOUCH_Proximity_Initialize@name,w
  8508  0ACB  0773               	addwf	MTOUCH_Proximity_Initialize@name,w
  8509  0ACC  3EC0               	addlw	(low (_mtouch_proximity| 0))& (0+255)
  8510  0ACD  00F2               	movwf	??_MTOUCH_Proximity_Initialize
  8511  0ACE  0872               	movf	??_MTOUCH_Proximity_Initialize,w
  8512  0ACF  00F4               	movwf	MTOUCH_Proximity_Initialize@prox
  8513                           
  8514                           ;mtouch_proximity.c: 131: prox->state = MTOUCH_PROXIMITY_STATE_initializing;
  8515  0AD0  0874               	movf	MTOUCH_Proximity_Initialize@prox,w
  8516  0AD1  3E02               	addlw	2
  8517  0AD2  0086               	movwf	6
  8518  0AD3  0187               	clrf	7
  8519  0AD4  0181               	clrf	1
  8520                           
  8521                           ;mtouch_proximity.c: 132: prox->baseline = (mtouch_prox_baseline_t)0;
  8522  0AD5  0874               	movf	MTOUCH_Proximity_Initialize@prox,w
  8523  0AD6  3E07               	addlw	7
  8524  0AD7  0086               	movwf	6
  8525  0AD8  0187               	clrf	7
  8526  0AD9  3000               	movlw	0
  8527  0ADA  3FC0               	movwi [0]fsr1
  8528  0ADB  3000               	movlw	0
  8529  0ADC  3FC1               	movwi [1]fsr1
  8530  0ADD  3FC2               	movwi [2]fsr1
  8531  0ADE  3FC3               	movwi [3]fsr1
  8532                           
  8533                           ;mtouch_proximity.c: 133: prox->counter = (mtouch_prox_statecounter_t)0;
  8534  0ADF  0874               	movf	MTOUCH_Proximity_Initialize@prox,w
  8535  0AE0  3E0C               	addlw	12
  8536  0AE1  0086               	movwf	6
  8537  0AE2  0187               	clrf	7
  8538  0AE3  3000               	movlw	0
  8539  0AE4  3FC0               	movwi [0]fsr1
  8540  0AE5  3FC1               	movwi [1]fsr1
  8541                           
  8542                           ;mtouch_proximity.c: 134: prox->baseline_count = (mtouch_prox_baselinecounter_t)0;
  8543  0AE6  0874               	movf	MTOUCH_Proximity_Initialize@prox,w
  8544  0AE7  3E0E               	addlw	14
  8545  0AE8  0086               	movwf	6
  8546  0AE9  0187               	clrf	7
  8547  0AEA  3000               	movlw	0
  8548  0AEB  3FC0               	movwi [0]fsr1
  8549  0AEC  3FC1               	movwi [1]fsr1
  8550  0AED  0008               	return
  8551  0AEE                     __end_of_MTOUCH_Proximity_Initialize:	
  8552                           
  8553                           	psect	text50
  8554  00E4                     __ptext50:	
  8555 ;; *************** function _Proximity_Reading_Update *****************
  8556 ;; Defined at:
  8557 ;;		line 363 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;  prox            1    wreg     PTR struct .
  8560 ;;		 -> mtouch_proximity(18), 
  8561 ;; Auto vars:     Size  Location     Type
  8562 ;;  prox            1    4[BANK0 ] PTR struct .
  8563 ;;		 -> mtouch_proximity(18), 
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  1    wreg      void 
  8566 ;; Registers used:
  8567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8573 ;;      Params:         0       0       0       0       0       0       0       0
  8574 ;;      Locals:         0       1       0       0       0       0       0       0
  8575 ;;      Temps:          0       4       0       0       0       0       0       0
  8576 ;;      Totals:         0       5       0       0       0       0       0       0
  8577 ;;Total ram usage:        5 bytes
  8578 ;; Hardware stack levels used:    1
  8579 ;; Hardware stack levels required when called:    4
  8580 ;; This function calls:
  8581 ;;		_MTOUCH_Sensor_RawSample_Get
  8582 ;; This function is called by:
  8583 ;;		_Proximity_Service
  8584 ;; This function uses a non-reentrant model
  8585 ;;
  8586                           
  8587                           
  8588                           ;psect for function _Proximity_Reading_Update
  8589  00E4                     _Proximity_Reading_Update:	
  8590                           
  8591                           ;incstack = 0
  8592                           ; Regs used in _Proximity_Reading_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  8593                           ;Proximity_Reading_Update@prox stored from wreg
  8594  00E4  0020               	movlb	0	; select bank0
  8595  00E5  00A4               	movwf	Proximity_Reading_Update@prox
  8596                           
  8597                           ;mtouch_proximity.c: 365: if (INTCONbits.GIE == (uint8_t)1)
  8598  00E6  1F8B               	btfss	11,7	;volatile
  8599  00E7  292A               	goto	l5493
  8600                           
  8601                           ;mtouch_proximity.c: 366: {
  8602                           ;mtouch_proximity.c: 367: INTCONbits.GIE = (uint8_t)0;
  8603  00E8  138B               	bcf	11,7	;volatile
  8604                           
  8605                           ;mtouch_proximity.c: 368: prox->reading -= prox->reading >> ((uint8_t)1);
  8606  00E9  0824               	movf	Proximity_Reading_Update@prox,w
  8607  00EA  3E03               	addlw	3
  8608  00EB  0086               	movwf	6
  8609  00EC  0187               	clrf	7
  8610  00ED  3F40               	moviw [0]fsr1
  8611  00EE  00A0               	movwf	??_Proximity_Reading_Update
  8612  00EF  3F41               	moviw [1]fsr1
  8613  00F0  00A1               	movwf	??_Proximity_Reading_Update+1
  8614  00F1  3F42               	moviw [2]fsr1
  8615  00F2  00A2               	movwf	??_Proximity_Reading_Update+2
  8616  00F3  3F43               	moviw [3]fsr1
  8617  00F4  00A3               	movwf	??_Proximity_Reading_Update+3
  8618  00F5  3001               	movlw	1
  8619  00F6                     u5595:	
  8620  00F6  36A3               	lsrf	??_Proximity_Reading_Update+3,f
  8621  00F7  0CA2               	rrf	??_Proximity_Reading_Update+2,f
  8622  00F8  0CA1               	rrf	??_Proximity_Reading_Update+1,f
  8623  00F9  0CA0               	rrf	??_Proximity_Reading_Update,f
  8624  00FA  0B89               	decfsz	9,f
  8625  00FB  28F6               	goto	u5595
  8626  00FC  0824               	movf	Proximity_Reading_Update@prox,w
  8627  00FD  3E03               	addlw	3
  8628  00FE  0086               	movwf	6
  8629  00FF  0187               	clrf	7
  8630  0100  0820               	movf	??_Proximity_Reading_Update,w
  8631  0101  0281               	subwf	1,f
  8632  0102  3141               	addfsr 1,1
  8633  0103  0821               	movf	??_Proximity_Reading_Update+1,w
  8634  0104  3B81               	subwfb	1,f
  8635  0105  3141               	addfsr 1,1
  8636  0106  0822               	movf	??_Proximity_Reading_Update+2,w
  8637  0107  3B81               	subwfb	1,f
  8638  0108  3141               	addfsr 1,1
  8639  0109  0823               	movf	??_Proximity_Reading_Update+3,w
  8640  010A  3B81               	subwfb	1,f
  8641  010B  317D               	addfsr 1,-3
  8642                           
  8643                           ;mtouch_proximity.c: 369: prox->reading += MTOUCH_Sensor_RawSample_Get(prox->sensor);
  8644  010C  0A24               	incf	Proximity_Reading_Update@prox,w
  8645  010D  0086               	movwf	6
  8646  010E  0187               	clrf	7
  8647  010F  0801               	movf	1,w
  8648  0110  3189  2185         	fcall	_MTOUCH_Sensor_RawSample_Get
  8649  0112  0876               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  8650  0113  0020               	movlb	0	; select bank0
  8651  0114  00A0               	movwf	??_Proximity_Reading_Update
  8652  0115  0877               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  8653  0116  00A1               	movwf	??_Proximity_Reading_Update+1
  8654  0117  01A2               	clrf	??_Proximity_Reading_Update+2
  8655  0118  01A3               	clrf	??_Proximity_Reading_Update+3
  8656  0119  0824               	movf	Proximity_Reading_Update@prox,w
  8657  011A  3E03               	addlw	3
  8658  011B  0086               	movwf	6
  8659  011C  0187               	clrf	7
  8660  011D  0820               	movf	??_Proximity_Reading_Update,w
  8661  011E  0781               	addwf	1,f
  8662  011F  3141               	addfsr 1,1
  8663  0120  0821               	movf	??_Proximity_Reading_Update+1,w
  8664  0121  3D81               	addwfc	1,f
  8665  0122  3141               	addfsr 1,1
  8666  0123  0822               	movf	??_Proximity_Reading_Update+2,w
  8667  0124  3D81               	addwfc	1,f
  8668  0125  3141               	addfsr 1,1
  8669  0126  0823               	movf	??_Proximity_Reading_Update+3,w
  8670  0127  3D81               	addwfc	1,f
  8671                           
  8672                           ;mtouch_proximity.c: 370: INTCONbits.GIE = (uint8_t)1;
  8673  0128  178B               	bsf	11,7	;volatile
  8674                           
  8675                           ;mtouch_proximity.c: 371: }
  8676  0129  0008               	return
  8677  012A                     l5493:	
  8678                           
  8679                           ;mtouch_proximity.c: 372: else
  8680                           ;mtouch_proximity.c: 373: {
  8681                           ;mtouch_proximity.c: 374: prox->reading -= prox->reading >> ((uint8_t)1);
  8682  012A  0824               	movf	Proximity_Reading_Update@prox,w
  8683  012B  3E03               	addlw	3
  8684  012C  0086               	movwf	6
  8685  012D  0187               	clrf	7
  8686  012E  3F40               	moviw [0]fsr1
  8687  012F  00A0               	movwf	??_Proximity_Reading_Update
  8688  0130  3F41               	moviw [1]fsr1
  8689  0131  00A1               	movwf	??_Proximity_Reading_Update+1
  8690  0132  3F42               	moviw [2]fsr1
  8691  0133  00A2               	movwf	??_Proximity_Reading_Update+2
  8692  0134  3F43               	moviw [3]fsr1
  8693  0135  00A3               	movwf	??_Proximity_Reading_Update+3
  8694  0136  3001               	movlw	1
  8695  0137                     u5605:	
  8696  0137  36A3               	lsrf	??_Proximity_Reading_Update+3,f
  8697  0138  0CA2               	rrf	??_Proximity_Reading_Update+2,f
  8698  0139  0CA1               	rrf	??_Proximity_Reading_Update+1,f
  8699  013A  0CA0               	rrf	??_Proximity_Reading_Update,f
  8700  013B  0B89               	decfsz	9,f
  8701  013C  2937               	goto	u5605
  8702  013D  0824               	movf	Proximity_Reading_Update@prox,w
  8703  013E  3E03               	addlw	3
  8704  013F  0086               	movwf	6
  8705  0140  0187               	clrf	7
  8706  0141  0820               	movf	??_Proximity_Reading_Update,w
  8707  0142  0281               	subwf	1,f
  8708  0143  3141               	addfsr 1,1
  8709  0144  0821               	movf	??_Proximity_Reading_Update+1,w
  8710  0145  3B81               	subwfb	1,f
  8711  0146  3141               	addfsr 1,1
  8712  0147  0822               	movf	??_Proximity_Reading_Update+2,w
  8713  0148  3B81               	subwfb	1,f
  8714  0149  3141               	addfsr 1,1
  8715  014A  0823               	movf	??_Proximity_Reading_Update+3,w
  8716  014B  3B81               	subwfb	1,f
  8717  014C  317D               	addfsr 1,-3
  8718                           
  8719                           ;mtouch_proximity.c: 375: prox->reading += MTOUCH_Sensor_RawSample_Get(prox->sensor);
  8720  014D  0A24               	incf	Proximity_Reading_Update@prox,w
  8721  014E  0086               	movwf	6
  8722  014F  0187               	clrf	7
  8723  0150  0801               	movf	1,w
  8724  0151  3189  2185         	fcall	_MTOUCH_Sensor_RawSample_Get
  8725  0153  0876               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  8726  0154  0020               	movlb	0	; select bank0
  8727  0155  00A0               	movwf	??_Proximity_Reading_Update
  8728  0156  0877               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  8729  0157  00A1               	movwf	??_Proximity_Reading_Update+1
  8730  0158  01A2               	clrf	??_Proximity_Reading_Update+2
  8731  0159  01A3               	clrf	??_Proximity_Reading_Update+3
  8732  015A  0824               	movf	Proximity_Reading_Update@prox,w
  8733  015B  3E03               	addlw	3
  8734  015C  0086               	movwf	6
  8735  015D  0187               	clrf	7
  8736  015E  0820               	movf	??_Proximity_Reading_Update,w
  8737  015F  0781               	addwf	1,f
  8738  0160  3141               	addfsr 1,1
  8739  0161  0821               	movf	??_Proximity_Reading_Update+1,w
  8740  0162  3D81               	addwfc	1,f
  8741  0163  3141               	addfsr 1,1
  8742  0164  0822               	movf	??_Proximity_Reading_Update+2,w
  8743  0165  3D81               	addwfc	1,f
  8744  0166  3141               	addfsr 1,1
  8745  0167  0823               	movf	??_Proximity_Reading_Update+3,w
  8746  0168  3D81               	addwfc	1,f
  8747  0169  0008               	return
  8748  016A                     __end_of_Proximity_Reading_Update:	
  8749                           
  8750                           	psect	text51
  8751  0479                     __ptext51:	
  8752 ;; *************** function _Proximity_Deviation_Update *****************
  8753 ;; Defined at:
  8754 ;;		line 311 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  8755 ;; Parameters:    Size  Location     Type
  8756 ;;  name            1    wreg     enum E3283
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;  name            1   20[BANK0 ] enum E3283
  8759 ;;  deviation       4   16[BANK0 ] long 
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  1    wreg      void 
  8762 ;; Registers used:
  8763 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8769 ;;      Params:         0       0       0       0       0       0       0       0
  8770 ;;      Locals:         0       5       0       0       0       0       0       0
  8771 ;;      Temps:          0       9       0       0       0       0       0       0
  8772 ;;      Totals:         0      14       0       0       0       0       0       0
  8773 ;;Total ram usage:       14 bytes
  8774 ;; Hardware stack levels used:    1
  8775 ;; Hardware stack levels required when called:    4
  8776 ;; This function calls:
  8777 ;;		_MTOUCH_Proximity_Baseline_Get
  8778 ;;		_MTOUCH_Proximity_Reading_Get
  8779 ;; This function is called by:
  8780 ;;		_Proximity_Service
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           
  8785                           ;psect for function _Proximity_Deviation_Update
  8786  0479                     _Proximity_Deviation_Update:	
  8787                           
  8788                           ;incstack = 0
  8789                           ; Regs used in _Proximity_Deviation_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  8790                           ;Proximity_Deviation_Update@name stored from wreg
  8791  0479  0020               	movlb	0	; select bank0
  8792  047A  00B4               	movwf	Proximity_Deviation_Update@name
  8793                           
  8794                           ;mtouch_proximity.c: 313: int32_t deviation;
  8795                           ;mtouch_proximity.c: 315: deviation = (int32_t)((uint32_t)(MTOUCH_Proximity_Reading_Get(
      +                          name)) - (uint32_t)(MTOUCH_Proximity_Baseline_Get(name)));
  8796  047B  0834               	movf	Proximity_Deviation_Update@name,w
  8797  047C  3189  21B9  3184   	fcall	_MTOUCH_Proximity_Baseline_Get
  8798  047F  0020               	movlb	0	; select bank0
  8799  0480  0921               	comf	?_MTOUCH_Proximity_Baseline_Get,w
  8800  0481  00A7               	movwf	??_Proximity_Deviation_Update
  8801  0482  0922               	comf	?_MTOUCH_Proximity_Baseline_Get+1,w
  8802  0483  00A8               	movwf	??_Proximity_Deviation_Update+1
  8803  0484  0923               	comf	?_MTOUCH_Proximity_Baseline_Get+2,w
  8804  0485  00A9               	movwf	??_Proximity_Deviation_Update+2
  8805  0486  0924               	comf	?_MTOUCH_Proximity_Baseline_Get+3,w
  8806  0487  00AA               	movwf	??_Proximity_Deviation_Update+3
  8807  0488  0AA7               	incf	??_Proximity_Deviation_Update,f
  8808  0489  1903               	skipnz
  8809  048A  0AA8               	incf	??_Proximity_Deviation_Update+1,f
  8810  048B  1903               	skipnz
  8811  048C  0AA9               	incf	??_Proximity_Deviation_Update+2,f
  8812  048D  1903               	skipnz
  8813  048E  0AAA               	incf	??_Proximity_Deviation_Update+3,f
  8814  048F  0834               	movf	Proximity_Deviation_Update@name,w
  8815  0490  318A  2243  3184   	fcall	_MTOUCH_Proximity_Reading_Get
  8816  0493  0872               	movf	?_MTOUCH_Proximity_Reading_Get,w
  8817  0494  0020               	movlb	0	; select bank0
  8818  0495  07A7               	addwf	??_Proximity_Deviation_Update,f
  8819  0496  0873               	movf	?_MTOUCH_Proximity_Reading_Get+1,w
  8820  0497  3DA8               	addwfc	??_Proximity_Deviation_Update+1,f
  8821  0498  0874               	movf	?_MTOUCH_Proximity_Reading_Get+2,w
  8822  0499  3DA9               	addwfc	??_Proximity_Deviation_Update+2,f
  8823  049A  0875               	movf	?_MTOUCH_Proximity_Reading_Get+3,w
  8824  049B  3DAA               	addwfc	??_Proximity_Deviation_Update+3,f
  8825  049C  082A               	movf	??_Proximity_Deviation_Update+3,w
  8826  049D  00B3               	movwf	Proximity_Deviation_Update@deviation+3
  8827  049E  0829               	movf	??_Proximity_Deviation_Update+2,w
  8828  049F  00B2               	movwf	Proximity_Deviation_Update@deviation+2
  8829  04A0  0828               	movf	??_Proximity_Deviation_Update+1,w
  8830  04A1  00B1               	movwf	Proximity_Deviation_Update@deviation+1
  8831  04A2  0827               	movf	??_Proximity_Deviation_Update,w
  8832  04A3  00B0               	movwf	Proximity_Deviation_Update@deviation
  8833                           
  8834                           ;mtouch_proximity.c: 318: deviation = deviation >> (mtouch_proximity[name].scaling);
  8835  04A4  0830               	movf	Proximity_Deviation_Update@deviation,w
  8836  04A5  00A7               	movwf	??_Proximity_Deviation_Update
  8837  04A6  0831               	movf	Proximity_Deviation_Update@deviation+1,w
  8838  04A7  00A8               	movwf	??_Proximity_Deviation_Update+1
  8839  04A8  0832               	movf	Proximity_Deviation_Update@deviation+2,w
  8840  04A9  00A9               	movwf	??_Proximity_Deviation_Update+2
  8841  04AA  0833               	movf	Proximity_Deviation_Update@deviation+3,w
  8842  04AB  00AA               	movwf	??_Proximity_Deviation_Update+3
  8843  04AC  0E34               	swapf	Proximity_Deviation_Update@name,w
  8844  04AD  39F0               	andlw	240
  8845  04AE  0734               	addwf	Proximity_Deviation_Update@name,w
  8846  04AF  0734               	addwf	Proximity_Deviation_Update@name,w
  8847  04B0  3E11               	addlw	17
  8848  04B1  3EC0               	addlw	(low (_mtouch_proximity| 0))& (0+255)
  8849  04B2  0086               	movwf	6
  8850  04B3  0187               	clrf	7
  8851  04B4  0A01               	incf	1,w
  8852  04B5  2CBA               	goto	u5610
  8853  04B6                     u5615:	
  8854  04B6  37AA               	asrf	??_Proximity_Deviation_Update+3,f
  8855  04B7  0CA9               	rrf	??_Proximity_Deviation_Update+2,f
  8856  04B8  0CA8               	rrf	??_Proximity_Deviation_Update+1,f
  8857  04B9  0CA7               	rrf	??_Proximity_Deviation_Update,f
  8858  04BA                     u5610:	
  8859  04BA  0B89               	decfsz	9,f
  8860  04BB  2CB6               	goto	u5615
  8861  04BC  082A               	movf	??_Proximity_Deviation_Update+3,w
  8862  04BD  00B3               	movwf	Proximity_Deviation_Update@deviation+3
  8863  04BE  0829               	movf	??_Proximity_Deviation_Update+2,w
  8864  04BF  00B2               	movwf	Proximity_Deviation_Update@deviation+2
  8865  04C0  0828               	movf	??_Proximity_Deviation_Update+1,w
  8866  04C1  00B1               	movwf	Proximity_Deviation_Update@deviation+1
  8867  04C2  0827               	movf	??_Proximity_Deviation_Update,w
  8868  04C3  00B0               	movwf	Proximity_Deviation_Update@deviation
  8869                           
  8870                           ;mtouch_proximity.c: 321: if (deviation > (mtouch_prox_deviation_t)((127)))
  8871  04C4  1BB3               	btfsc	Proximity_Deviation_Update@deviation+3,7
  8872  04C5  2CDB               	goto	l5505
  8873  04C6  0833               	movf	Proximity_Deviation_Update@deviation+3,w
  8874  04C7  1D03               	btfss	3,2
  8875  04C8  2CD3               	goto	l5503
  8876  04C9  0832               	movf	Proximity_Deviation_Update@deviation+2,w
  8877  04CA  1D03               	btfss	3,2
  8878  04CB  2CD3               	goto	l5503
  8879  04CC  0831               	movf	Proximity_Deviation_Update@deviation+1,w
  8880  04CD  1D03               	btfss	3,2
  8881  04CE  2CD3               	goto	l5503
  8882  04CF  3080               	movlw	128
  8883  04D0  0230               	subwf	Proximity_Deviation_Update@deviation,w
  8884  04D1  1C03               	btfss	3,0
  8885  04D2  2CDB               	goto	l5505
  8886  04D3                     l5503:	
  8887                           
  8888                           ;mtouch_proximity.c: 322: {
  8889                           ;mtouch_proximity.c: 323: deviation = (mtouch_prox_deviation_t)((127));
  8890  04D3  3000               	movlw	0
  8891  04D4  00B3               	movwf	Proximity_Deviation_Update@deviation+3
  8892  04D5  3000               	movlw	0
  8893  04D6  00B2               	movwf	Proximity_Deviation_Update@deviation+2
  8894  04D7  3000               	movlw	0
  8895  04D8  00B1               	movwf	Proximity_Deviation_Update@deviation+1
  8896  04D9  307F               	movlw	127
  8897  04DA  00B0               	movwf	Proximity_Deviation_Update@deviation
  8898  04DB                     l5505:	
  8899                           
  8900                           ;mtouch_proximity.c: 324: }
  8901                           ;mtouch_proximity.c: 325: if (deviation < (mtouch_prox_deviation_t)((-128)))
  8902  04DB  1FB3               	btfss	Proximity_Deviation_Update@deviation+3,7
  8903  04DC  2CEF               	goto	l5509
  8904  04DD  3080               	movlw	128
  8905  04DE  0230               	subwf	Proximity_Deviation_Update@deviation,w
  8906  04DF  30FF               	movlw	255
  8907  04E0  3B31               	subwfb	Proximity_Deviation_Update@deviation+1,w
  8908  04E1  30FF               	movlw	255
  8909  04E2  3B32               	subwfb	Proximity_Deviation_Update@deviation+2,w
  8910  04E3  30FF               	movlw	255
  8911  04E4  3B33               	subwfb	Proximity_Deviation_Update@deviation+3,w
  8912  04E5  1803               	btfsc	3,0
  8913  04E6  2CEF               	goto	l5509
  8914                           
  8915                           ;mtouch_proximity.c: 326: {
  8916                           ;mtouch_proximity.c: 327: deviation = (mtouch_prox_deviation_t)((-128));
  8917  04E7  30FF               	movlw	255
  8918  04E8  00B3               	movwf	Proximity_Deviation_Update@deviation+3
  8919  04E9  30FF               	movlw	255
  8920  04EA  00B2               	movwf	Proximity_Deviation_Update@deviation+2
  8921  04EB  30FF               	movlw	255
  8922  04EC  00B1               	movwf	Proximity_Deviation_Update@deviation+1
  8923  04ED  3080               	movlw	128
  8924  04EE  00B0               	movwf	Proximity_Deviation_Update@deviation
  8925  04EF                     l5509:	
  8926                           
  8927                           ;mtouch_proximity.c: 328: }
  8928                           ;mtouch_proximity.c: 330: if(deviation < 0)
  8929  04EF  1FB3               	btfss	Proximity_Deviation_Update@deviation+3,7
  8930  04F0  2CFB               	goto	l5513
  8931                           
  8932                           ;mtouch_proximity.c: 331: {
  8933                           ;mtouch_proximity.c: 332: mtouch_proximity[name].integratedDeviation = 0;
  8934  04F1  0E34               	swapf	Proximity_Deviation_Update@name,w
  8935  04F2  39F0               	andlw	240
  8936  04F3  0734               	addwf	Proximity_Deviation_Update@name,w
  8937  04F4  0734               	addwf	Proximity_Deviation_Update@name,w
  8938  04F5  3E0B               	addlw	11
  8939  04F6  3EC0               	addlw	(low (_mtouch_proximity| 0))& (0+255)
  8940  04F7  0086               	movwf	6
  8941  04F8  0187               	clrf	7
  8942  04F9  0181               	clrf	1
  8943                           
  8944                           ;mtouch_proximity.c: 333: }
  8945  04FA  0008               	return
  8946  04FB                     l5513:	
  8947                           
  8948                           ;mtouch_proximity.c: 334: else if((mtouch_prox_deviation_t)deviation < (mtouch_prox_devi
      +                          ation_t)(mtouch_proximity[name].threshold << 3))
  8949  04FB  0830               	movf	Proximity_Deviation_Update@deviation,w
  8950  04FC  3A80               	xorlw	128
  8951  04FD  00A7               	movwf	??_Proximity_Deviation_Update
  8952  04FE  0E34               	swapf	Proximity_Deviation_Update@name,w
  8953  04FF  39F0               	andlw	240
  8954  0500  0734               	addwf	Proximity_Deviation_Update@name,w
  8955  0501  0734               	addwf	Proximity_Deviation_Update@name,w
  8956  0502  3E10               	addlw	16
  8957  0503  3EC0               	addlw	(low (_mtouch_proximity| 0))& (0+255)
  8958  0504  0086               	movwf	6
  8959  0505  0187               	clrf	7
  8960  0506  0801               	movf	1,w
  8961  0507  00A8               	movwf	??_Proximity_Deviation_Update+1
  8962  0508  3002               	movlw	2
  8963  0509                     u5655:	
  8964  0509  35A8               	lslf	??_Proximity_Deviation_Update+1,f
  8965  050A  3EFF               	addlw	-1
  8966  050B  1D03               	skipz
  8967  050C  2D09               	goto	u5655
  8968  050D  3528               	lslf	??_Proximity_Deviation_Update+1,w
  8969  050E  3A80               	xorlw	128
  8970  050F  02A7               	subwf	??_Proximity_Deviation_Update,f
  8971  0510  1803               	skipnc
  8972  0511  2D2C               	goto	l5519
  8973                           
  8974                           ;mtouch_proximity.c: 335: {
  8975                           ;mtouch_proximity.c: 337: if(mtouch_proximity[name].integratedDeviation >0 )
  8976  0512  0E34               	swapf	Proximity_Deviation_Update@name,w
  8977  0513  39F0               	andlw	240
  8978  0514  0734               	addwf	Proximity_Deviation_Update@name,w
  8979  0515  0734               	addwf	Proximity_Deviation_Update@name,w
  8980  0516  3E0B               	addlw	11
  8981  0517  3EC0               	addlw	(low (_mtouch_proximity| 0))& (0+255)
  8982  0518  0086               	movwf	6
  8983  0519  0187               	clrf	7
  8984  051A  0801               	movf	1,w
  8985  051B  3A80               	xorlw	128
  8986  051C  3E7F               	addlw	-129
  8987  051D  1C03               	skipc
  8988  051E  0008               	return
  8989                           
  8990                           ;mtouch_proximity.c: 338: mtouch_proximity[name].integratedDeviation--;
  8991  051F  30FF               	movlw	255
  8992  0520  00A7               	movwf	??_Proximity_Deviation_Update
  8993  0521  0E34               	swapf	Proximity_Deviation_Update@name,w
  8994  0522  39F0               	andlw	240
  8995  0523  0734               	addwf	Proximity_Deviation_Update@name,w
  8996  0524  0734               	addwf	Proximity_Deviation_Update@name,w
  8997  0525  3E0B               	addlw	11
  8998  0526  3EC0               	addlw	(low (_mtouch_proximity| 0))& (0+255)
  8999  0527  0086               	movwf	6
  9000  0528  0187               	clrf	7
  9001  0529  0827               	movf	??_Proximity_Deviation_Update,w
  9002  052A  0781               	addwf	1,f
  9003                           
  9004                           ;mtouch_proximity.c: 339: }
  9005  052B  0008               	return
  9006  052C                     l5519:	
  9007                           
  9008                           ;mtouch_proximity.c: 340: else
  9009                           ;mtouch_proximity.c: 341: {
  9010                           ;mtouch_proximity.c: 342: mtouch_proximity[name].integratedDeviation -= mtouch_proximity
      +                          [name].integratedDeviation >> ((uint8_t)2);;
  9011  052C  0E34               	swapf	Proximity_Deviation_Update@name,w
  9012  052D  39F0               	andlw	240
  9013  052E  0734               	addwf	Proximity_Deviation_Update@name,w
  9014  052F  0734               	addwf	Proximity_Deviation_Update@name,w
  9015  0530  3E0B               	addlw	11
  9016  0531  3EC0               	addlw	(low (_mtouch_proximity| 0))& (0+255)
  9017  0532  0086               	movwf	6
  9018  0533  0187               	clrf	7
  9019  0534  0801               	movf	1,w
  9020  0535  00A7               	movwf	??_Proximity_Deviation_Update
  9021  0536  3002               	movlw	2
  9022  0537                     u5685:	
  9023  0537  1003               	clrc
  9024  0538  1BA7               	btfsc	??_Proximity_Deviation_Update,7
  9025  0539  1403               	setc
  9026  053A  0CA7               	rrf	??_Proximity_Deviation_Update,f
  9027  053B  0B89               	decfsz	9,f
  9028  053C  2D37               	goto	u5685
  9029  053D  0E34               	swapf	Proximity_Deviation_Update@name,w
  9030  053E  39F0               	andlw	240
  9031  053F  0734               	addwf	Proximity_Deviation_Update@name,w
  9032  0540  0734               	addwf	Proximity_Deviation_Update@name,w
  9033  0541  3E0B               	addlw	11
  9034  0542  3EC0               	addlw	(low (_mtouch_proximity| 0))& (0+255)
  9035  0543  0086               	movwf	6
  9036  0544  0187               	clrf	7
  9037  0545  0827               	movf	??_Proximity_Deviation_Update,w
  9038  0546  0281               	subwf	1,f
  9039                           
  9040                           ;mtouch_proximity.c: 343: if((mtouch_prox_deviation_t)((127)) - mtouch_proximity[name].i
      +                          ntegratedDeviation > deviation)
  9041  0547  0E34               	swapf	Proximity_Deviation_Update@name,w
  9042  0548  39F0               	andlw	240
  9043  0549  0734               	addwf	Proximity_Deviation_Update@name,w
  9044  054A  0734               	addwf	Proximity_Deviation_Update@name,w
  9045  054B  3E0B               	addlw	11
  9046  054C  3EC0               	addlw	(low (_mtouch_proximity| 0))& (0+255)
  9047  054D  0086               	movwf	6
  9048  054E  0187               	clrf	7
  9049  054F  0801               	movf	1,w
  9050  0550  00A7               	movwf	??_Proximity_Deviation_Update
  9051  0551  01A8               	clrf	??_Proximity_Deviation_Update+1
  9052  0552  1BA7               	btfsc	??_Proximity_Deviation_Update,7
  9053  0553  03A8               	decf	??_Proximity_Deviation_Update+1,f
  9054  0554  09A7               	comf	??_Proximity_Deviation_Update,f
  9055  0555  09A8               	comf	??_Proximity_Deviation_Update+1,f
  9056  0556  0AA7               	incf	??_Proximity_Deviation_Update,f
  9057  0557  1903               	skipnz
  9058  0558  0AA8               	incf	??_Proximity_Deviation_Update+1,f
  9059  0559  0827               	movf	??_Proximity_Deviation_Update,w
  9060  055A  3E7F               	addlw	127
  9061  055B  00A9               	movwf	??_Proximity_Deviation_Update+2
  9062  055C  3000               	movlw	0
  9063  055D  3D28               	addwfc	??_Proximity_Deviation_Update+1,w
  9064  055E  00AA               	movwf	??_Proximity_Deviation_Update+3
  9065  055F  0829               	movf	??_Proximity_Deviation_Update+2,w
  9066  0560  00AB               	movwf	??_Proximity_Deviation_Update+4
  9067  0561  082A               	movf	??_Proximity_Deviation_Update+3,w
  9068  0562  00AC               	movwf	??_Proximity_Deviation_Update+5
  9069  0563  3000               	movlw	0
  9070  0564  1BAC               	btfsc	??_Proximity_Deviation_Update+5,7
  9071  0565  30FF               	movlw	255
  9072  0566  00AD               	movwf	??_Proximity_Deviation_Update+6
  9073  0567  00AE               	movwf	??_Proximity_Deviation_Update+7
  9074  0568  0833               	movf	Proximity_Deviation_Update@deviation+3,w
  9075  0569  3A80               	xorlw	128
  9076  056A  00AF               	movwf	??_Proximity_Deviation_Update+8
  9077  056B  082E               	movf	??_Proximity_Deviation_Update+7,w
  9078  056C  3A80               	xorlw	128
  9079  056D  022F               	subwf	??_Proximity_Deviation_Update+8,w
  9080  056E  1D03               	skipz
  9081  056F  2D7A               	goto	u5693
  9082  0570  082D               	movf	??_Proximity_Deviation_Update+6,w
  9083  0571  0232               	subwf	Proximity_Deviation_Update@deviation+2,w
  9084  0572  1D03               	skipz
  9085  0573  2D7A               	goto	u5693
  9086  0574  082C               	movf	??_Proximity_Deviation_Update+5,w
  9087  0575  0231               	subwf	Proximity_Deviation_Update@deviation+1,w
  9088  0576  1D03               	skipz
  9089  0577  2D7A               	goto	u5693
  9090  0578  082B               	movf	??_Proximity_Deviation_Update+4,w
  9091  0579  0230               	subwf	Proximity_Deviation_Update@deviation,w
  9092  057A                     u5693:	
  9093  057A  1803               	skipnc
  9094  057B  2D89               	goto	l5523
  9095                           
  9096                           ;mtouch_proximity.c: 344: mtouch_proximity[name].integratedDeviation += deviation;
  9097  057C  0830               	movf	Proximity_Deviation_Update@deviation,w
  9098  057D  00A7               	movwf	??_Proximity_Deviation_Update
  9099  057E  0E34               	swapf	Proximity_Deviation_Update@name,w
  9100  057F  39F0               	andlw	240
  9101  0580  0734               	addwf	Proximity_Deviation_Update@name,w
  9102  0581  0734               	addwf	Proximity_Deviation_Update@name,w
  9103  0582  3E0B               	addlw	11
  9104  0583  3EC0               	addlw	(low (_mtouch_proximity| 0))& (0+255)
  9105  0584  0086               	movwf	6
  9106  0585  0187               	clrf	7
  9107  0586  0827               	movf	??_Proximity_Deviation_Update,w
  9108  0587  0781               	addwf	1,f
  9109  0588  0008               	return
  9110  0589                     l5523:	
  9111                           
  9112                           ;mtouch_proximity.c: 345: else
  9113                           ;mtouch_proximity.c: 346: mtouch_proximity[name].integratedDeviation = (mtouch_prox_devi
      +                          ation_t)((127));
  9114  0589  307F               	movlw	127
  9115  058A  00A7               	movwf	??_Proximity_Deviation_Update
  9116  058B  0E34               	swapf	Proximity_Deviation_Update@name,w
  9117  058C  39F0               	andlw	240
  9118  058D  0734               	addwf	Proximity_Deviation_Update@name,w
  9119  058E  0734               	addwf	Proximity_Deviation_Update@name,w
  9120  058F  3E0B               	addlw	11
  9121  0590  3EC0               	addlw	(low (_mtouch_proximity| 0))& (0+255)
  9122  0591  0086               	movwf	6
  9123  0592  0187               	clrf	7
  9124  0593  0827               	movf	??_Proximity_Deviation_Update,w
  9125  0594  0081               	movwf	1
  9126  0595  0008               	return
  9127  0596                     __end_of_Proximity_Deviation_Update:	
  9128                           
  9129                           	psect	text52
  9130  0A43                     __ptext52:	
  9131 ;; *************** function _MTOUCH_Proximity_Reading_Get *****************
  9132 ;; Defined at:
  9133 ;;		line 355 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  9134 ;; Parameters:    Size  Location     Type
  9135 ;;  name            1    wreg     enum E3283
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;  name            1    7[COMMON] enum E3283
  9138 ;; Return value:  Size  Location     Type
  9139 ;;                  4    2[COMMON] unsigned long 
  9140 ;; Registers used:
  9141 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9142 ;; Tracked objects:
  9143 ;;		On entry : 0/0
  9144 ;;		On exit  : 0/0
  9145 ;;		Unchanged: 0/0
  9146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9147 ;;      Params:         5       0       0       0       0       0       0       0
  9148 ;;      Locals:         1       0       0       0       0       0       0       0
  9149 ;;      Temps:          0       0       0       0       0       0       0       0
  9150 ;;      Totals:         6       0       0       0       0       0       0       0
  9151 ;;Total ram usage:        6 bytes
  9152 ;; Hardware stack levels used:    1
  9153 ;; Hardware stack levels required when called:    2
  9154 ;; This function calls:
  9155 ;;		Nothing
  9156 ;; This function is called by:
  9157 ;;		_Proximity_State_NotActivated
  9158 ;;		_Proximity_Deviation_Update
  9159 ;; This function uses a non-reentrant model
  9160 ;;
  9161                           
  9162                           
  9163                           ;psect for function _MTOUCH_Proximity_Reading_Get
  9164  0A43                     _MTOUCH_Proximity_Reading_Get:	
  9165                           
  9166                           ;incstack = 0
  9167                           ; Regs used in _MTOUCH_Proximity_Reading_Get: [wreg+fsr1l+fsr1h+status,2+status,0]
  9168                           ;MTOUCH_Proximity_Reading_Get@name stored from wreg
  9169  0A43  00F7               	movwf	MTOUCH_Proximity_Reading_Get@name
  9170                           
  9171                           ;mtouch_proximity.c: 357: if (name < 1)
  9172  0A44  0877               	movf	MTOUCH_Proximity_Reading_Get@name,w
  9173  0A45  1D03               	btfss	3,2
  9174  0A46  2A58               	goto	l3707
  9175                           
  9176                           ;mtouch_proximity.c: 358: return mtouch_proximity[name].reading;
  9177  0A47  0E77               	swapf	MTOUCH_Proximity_Reading_Get@name,w
  9178  0A48  39F0               	andlw	240
  9179  0A49  0777               	addwf	MTOUCH_Proximity_Reading_Get@name,w
  9180  0A4A  0777               	addwf	MTOUCH_Proximity_Reading_Get@name,w
  9181  0A4B  3E03               	addlw	3
  9182  0A4C  3EC0               	addlw	(low (_mtouch_proximity| 0))& (0+255)
  9183  0A4D  0086               	movwf	6
  9184  0A4E  0187               	clrf	7
  9185  0A4F  3F40               	moviw [0]fsr1
  9186  0A50  00F2               	movwf	?_MTOUCH_Proximity_Reading_Get
  9187  0A51  3F41               	moviw [1]fsr1
  9188  0A52  00F3               	movwf	?_MTOUCH_Proximity_Reading_Get+1
  9189  0A53  3F42               	moviw [2]fsr1
  9190  0A54  00F4               	movwf	?_MTOUCH_Proximity_Reading_Get+2
  9191  0A55  3F43               	moviw [3]fsr1
  9192  0A56  00F5               	movwf	?_MTOUCH_Proximity_Reading_Get+3
  9193  0A57  0008               	return
  9194  0A58                     l3707:	
  9195                           
  9196                           ;mtouch_proximity.c: 359: else
  9197                           ;mtouch_proximity.c: 360: return 0;
  9198  0A58  3000               	movlw	0
  9199  0A59  00F5               	movwf	?_MTOUCH_Proximity_Reading_Get+3
  9200  0A5A  3000               	movlw	0
  9201  0A5B  00F4               	movwf	?_MTOUCH_Proximity_Reading_Get+2
  9202  0A5C  3000               	movlw	0
  9203  0A5D  00F3               	movwf	?_MTOUCH_Proximity_Reading_Get+1
  9204  0A5E  3000               	movlw	0
  9205  0A5F  00F2               	movwf	?_MTOUCH_Proximity_Reading_Get
  9206  0A60  0008               	return
  9207  0A61                     __end_of_MTOUCH_Proximity_Reading_Get:	
  9208                           
  9209                           	psect	text53
  9210  09B9                     __ptext53:	
  9211 ;; *************** function _MTOUCH_Proximity_Baseline_Get *****************
  9212 ;; Defined at:
  9213 ;;		line 401 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  9214 ;; Parameters:    Size  Location     Type
  9215 ;;  name            1    wreg     enum E3283
  9216 ;; Auto vars:     Size  Location     Type
  9217 ;;  name            1    6[BANK0 ] enum E3283
  9218 ;; Return value:  Size  Location     Type
  9219 ;;                  4    1[BANK0 ] unsigned long 
  9220 ;; Registers used:
  9221 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9227 ;;      Params:         0       5       0       0       0       0       0       0
  9228 ;;      Locals:         0       1       0       0       0       0       0       0
  9229 ;;      Temps:          0       0       0       0       0       0       0       0
  9230 ;;      Totals:         0       6       0       0       0       0       0       0
  9231 ;;Total ram usage:        6 bytes
  9232 ;; Hardware stack levels used:    1
  9233 ;; Hardware stack levels required when called:    3
  9234 ;; This function calls:
  9235 ;;		_Proximity_Baseline_Get_helper
  9236 ;; This function is called by:
  9237 ;;		_Proximity_State_NotActivated
  9238 ;;		_Proximity_Deviation_Update
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242                           
  9243                           ;psect for function _MTOUCH_Proximity_Baseline_Get
  9244  09B9                     _MTOUCH_Proximity_Baseline_Get:	
  9245                           
  9246                           ;incstack = 0
  9247                           ; Regs used in _MTOUCH_Proximity_Baseline_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  9248                           ;MTOUCH_Proximity_Baseline_Get@name stored from wreg
  9249  09B9  0020               	movlb	0	; select bank0
  9250  09BA  00A6               	movwf	MTOUCH_Proximity_Baseline_Get@name
  9251                           
  9252                           ;mtouch_proximity.c: 403: if (name < 1)
  9253  09BB  0826               	movf	MTOUCH_Proximity_Baseline_Get@name,w
  9254  09BC  1D03               	btfss	3,2
  9255  09BD  29CB               	goto	l5347
  9256                           
  9257                           ;mtouch_proximity.c: 404: return Proximity_Baseline_Get_helper(name);
  9258  09BE  0826               	movf	MTOUCH_Proximity_Baseline_Get@name,w
  9259  09BF  318A  2282         	fcall	_Proximity_Baseline_Get_helper
  9260  09C1  0875               	movf	?_Proximity_Baseline_Get_helper+3,w
  9261  09C2  0020               	movlb	0	; select bank0
  9262  09C3  00A4               	movwf	?_MTOUCH_Proximity_Baseline_Get+3
  9263  09C4  0874               	movf	?_Proximity_Baseline_Get_helper+2,w
  9264  09C5  00A3               	movwf	?_MTOUCH_Proximity_Baseline_Get+2
  9265  09C6  0873               	movf	?_Proximity_Baseline_Get_helper+1,w
  9266  09C7  00A2               	movwf	?_MTOUCH_Proximity_Baseline_Get+1
  9267  09C8  0872               	movf	?_Proximity_Baseline_Get_helper,w
  9268  09C9  00A1               	movwf	?_MTOUCH_Proximity_Baseline_Get
  9269  09CA  0008               	return
  9270  09CB                     l5347:	
  9271                           
  9272                           ;mtouch_proximity.c: 405: else
  9273                           ;mtouch_proximity.c: 406: return 0;
  9274  09CB  3000               	movlw	0
  9275  09CC  00A4               	movwf	?_MTOUCH_Proximity_Baseline_Get+3
  9276  09CD  3000               	movlw	0
  9277  09CE  00A3               	movwf	?_MTOUCH_Proximity_Baseline_Get+2
  9278  09CF  3000               	movlw	0
  9279  09D0  00A2               	movwf	?_MTOUCH_Proximity_Baseline_Get+1
  9280  09D1  3000               	movlw	0
  9281  09D2  00A1               	movwf	?_MTOUCH_Proximity_Baseline_Get
  9282  09D3  0008               	return
  9283  09D4                     __end_of_MTOUCH_Proximity_Baseline_Get:	
  9284                           
  9285                           	psect	text54
  9286  0A82                     __ptext54:	
  9287 ;; *************** function _Proximity_Baseline_Get_helper *****************
  9288 ;; Defined at:
  9289 ;;		line 410 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
  9290 ;; Parameters:    Size  Location     Type
  9291 ;;  name            1    wreg     enum E3283
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;  name            1    0[BANK0 ] enum E3283
  9294 ;; Return value:  Size  Location     Type
  9295 ;;                  4    2[COMMON] unsigned long 
  9296 ;; Registers used:
  9297 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9298 ;; Tracked objects:
  9299 ;;		On entry : 0/0
  9300 ;;		On exit  : 0/0
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9303 ;;      Params:         4       0       0       0       0       0       0       0
  9304 ;;      Locals:         0       1       0       0       0       0       0       0
  9305 ;;      Temps:          4       0       0       0       0       0       0       0
  9306 ;;      Totals:         8       1       0       0       0       0       0       0
  9307 ;;Total ram usage:        9 bytes
  9308 ;; Hardware stack levels used:    1
  9309 ;; Hardware stack levels required when called:    2
  9310 ;; This function calls:
  9311 ;;		Nothing
  9312 ;; This function is called by:
  9313 ;;		_MTOUCH_Proximity_Baseline_Get
  9314 ;; This function uses a non-reentrant model
  9315 ;;
  9316                           
  9317                           
  9318                           ;psect for function _Proximity_Baseline_Get_helper
  9319  0A82                     _Proximity_Baseline_Get_helper:	
  9320                           
  9321                           ;incstack = 0
  9322                           ; Regs used in _Proximity_Baseline_Get_helper: [wreg+fsr1l+fsr1h+status,2+status,0]
  9323                           ;Proximity_Baseline_Get_helper@name stored from wreg
  9324  0A82  0020               	movlb	0	; select bank0
  9325  0A83  00A0               	movwf	Proximity_Baseline_Get_helper@name
  9326                           
  9327                           ;mtouch_proximity.c: 412: return (mtouch_prox_reading_t)(mtouch_proximity[name].baseline
      +                           >> ((uint8_t)4));
  9328  0A84  0E20               	swapf	Proximity_Baseline_Get_helper@name,w
  9329  0A85  39F0               	andlw	240
  9330  0A86  0720               	addwf	Proximity_Baseline_Get_helper@name,w
  9331  0A87  0720               	addwf	Proximity_Baseline_Get_helper@name,w
  9332  0A88  3E07               	addlw	7
  9333  0A89  3EC0               	addlw	(low (_mtouch_proximity| 0))& (0+255)
  9334  0A8A  0086               	movwf	6
  9335  0A8B  0187               	clrf	7
  9336  0A8C  3F40               	moviw [0]fsr1
  9337  0A8D  00F6               	movwf	??_Proximity_Baseline_Get_helper
  9338  0A8E  3F41               	moviw [1]fsr1
  9339  0A8F  00F7               	movwf	??_Proximity_Baseline_Get_helper+1
  9340  0A90  3F42               	moviw [2]fsr1
  9341  0A91  00F8               	movwf	??_Proximity_Baseline_Get_helper+2
  9342  0A92  3F43               	moviw [3]fsr1
  9343  0A93  00F9               	movwf	??_Proximity_Baseline_Get_helper+3
  9344  0A94  3004               	movlw	4
  9345  0A95                     u5205:	
  9346  0A95  36F9               	lsrf	??_Proximity_Baseline_Get_helper+3,f
  9347  0A96  0CF8               	rrf	??_Proximity_Baseline_Get_helper+2,f
  9348  0A97  0CF7               	rrf	??_Proximity_Baseline_Get_helper+1,f
  9349  0A98  0CF6               	rrf	??_Proximity_Baseline_Get_helper,f
  9350  0A99  0B89               	decfsz	9,f
  9351  0A9A  2A95               	goto	u5205
  9352  0A9B  0879               	movf	??_Proximity_Baseline_Get_helper+3,w
  9353  0A9C  00F5               	movwf	?_Proximity_Baseline_Get_helper+3
  9354  0A9D  0878               	movf	??_Proximity_Baseline_Get_helper+2,w
  9355  0A9E  00F4               	movwf	?_Proximity_Baseline_Get_helper+2
  9356  0A9F  0877               	movf	??_Proximity_Baseline_Get_helper+1,w
  9357  0AA0  00F3               	movwf	?_Proximity_Baseline_Get_helper+1
  9358  0AA1  0876               	movf	??_Proximity_Baseline_Get_helper,w
  9359  0AA2  00F2               	movwf	?_Proximity_Baseline_Get_helper
  9360  0AA3  0008               	return
  9361  0AA4                     __end_of_Proximity_Baseline_Get_helper:	
  9362                           
  9363                           	psect	text55
  9364  08DA                     __ptext55:	
  9365 ;; *************** function _MTOUCH_Button_ServiceAll *****************
  9366 ;; Defined at:
  9367 ;;		line 187 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9368 ;; Parameters:    Size  Location     Type
  9369 ;;		None
  9370 ;; Auto vars:     Size  Location     Type
  9371 ;;  button          1   15[BANK0 ] enum E3231
  9372 ;; Return value:  Size  Location     Type
  9373 ;;                  1    wreg      void 
  9374 ;; Registers used:
  9375 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9376 ;; Tracked objects:
  9377 ;;		On entry : 0/0
  9378 ;;		On exit  : 0/0
  9379 ;;		Unchanged: 0/0
  9380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9381 ;;      Params:         0       0       0       0       0       0       0       0
  9382 ;;      Locals:         0       1       0       0       0       0       0       0
  9383 ;;      Temps:          0       1       0       0       0       0       0       0
  9384 ;;      Totals:         0       2       0       0       0       0       0       0
  9385 ;;Total ram usage:        2 bytes
  9386 ;; Hardware stack levels used:    1
  9387 ;; Hardware stack levels required when called:    7
  9388 ;; This function calls:
  9389 ;;		_Button_Service
  9390 ;; This function is called by:
  9391 ;;		_MTOUCH_Service_Mainloop
  9392 ;; This function uses a non-reentrant model
  9393 ;;
  9394                           
  9395                           
  9396                           ;psect for function _MTOUCH_Button_ServiceAll
  9397  08DA                     _MTOUCH_Button_ServiceAll:	
  9398                           
  9399                           ;mtouch_button.c: 189: enum mtouch_button_names button;
  9400                           ;mtouch_button.c: 190: for (button = 0; button < 5; button++)
  9401                           
  9402                           ;incstack = 0
  9403                           ; Regs used in _MTOUCH_Button_ServiceAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  9404  08DA  0020               	movlb	0	; select bank0
  9405  08DB  01AF               	clrf	MTOUCH_Button_ServiceAll@button
  9406  08DC                     L10:	
  9407  08DC  3005               	movlw	5
  9408  08DD  022F               	subwf	MTOUCH_Button_ServiceAll@button,w
  9409  08DE  1803               	btfsc	3,0
  9410  08DF  0008               	return
  9411                           
  9412                           ;mtouch_button.c: 191: {
  9413                           ;mtouch_button.c: 192: Button_Service(button);
  9414  08E0  082F               	movf	MTOUCH_Button_ServiceAll@button,w
  9415  08E1  318D  25F8  3188   	fcall	_Button_Service
  9416  08E4  3001               	movlw	1
  9417  08E5  0020               	movlb	0	; select bank0
  9418  08E6  00AE               	movwf	??_MTOUCH_Button_ServiceAll
  9419  08E7  082E               	movf	??_MTOUCH_Button_ServiceAll,w
  9420  08E8  07AF               	addwf	MTOUCH_Button_ServiceAll@button,f
  9421  08E9  28DC               	goto	L10
  9422  08EA                     __end_of_MTOUCH_Button_ServiceAll:	
  9423                           
  9424                           	psect	text56
  9425  0DF8                     __ptext56:	
  9426 ;; *************** function _Button_Service *****************
  9427 ;; Defined at:
  9428 ;;		line 196 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;  name            1    wreg     enum E3231
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;  name            1   12[BANK0 ] enum E3231
  9433 ;;  button          1   13[BANK0 ] PTR struct .
  9434 ;;		 -> mtouch_button(80), 
  9435 ;; Return value:  Size  Location     Type
  9436 ;;                  1    wreg      void 
  9437 ;; Registers used:
  9438 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 0/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9444 ;;      Params:         0       0       0       0       0       0       0       0
  9445 ;;      Locals:         0       2       0       0       0       0       0       0
  9446 ;;      Temps:          0       2       0       0       0       0       0       0
  9447 ;;      Totals:         0       4       0       0       0       0       0       0
  9448 ;;Total ram usage:        4 bytes
  9449 ;; Hardware stack levels used:    1
  9450 ;; Hardware stack levels required when called:    6
  9451 ;; This function calls:
  9452 ;;		_Button_Deviation_Update
  9453 ;;		_Button_Reading_Update
  9454 ;;		_Button_State_Initializing
  9455 ;;		_Button_State_NotPressed
  9456 ;;		_Button_State_Pressed
  9457 ;;		_MTOUCH_Button_Initialize
  9458 ;;		_MTOUCH_Sensor_isCalibrated
  9459 ;;		_MTOUCH_Sensor_wasSampled
  9460 ;; This function is called by:
  9461 ;;		_MTOUCH_Button_ServiceAll
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           
  9466                           ;psect for function _Button_Service
  9467  0DF8                     _Button_Service:	
  9468                           
  9469                           ;incstack = 0
  9470                           ; Regs used in _Button_Service: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9471                           ;Button_Service@name stored from wreg
  9472  0DF8  0020               	movlb	0	; select bank0
  9473  0DF9  00AC               	movwf	Button_Service@name
  9474                           
  9475                           ;mtouch_button.c: 198: mtouch_button_t* button = &mtouch_button[name];
  9476  0DFA  082C               	movf	Button_Service@name,w
  9477  0DFB  00AA               	movwf	??_Button_Service
  9478  0DFC  3003               	movlw	3
  9479  0DFD                     u5785:	
  9480  0DFD  35AA               	lslf	??_Button_Service,f
  9481  0DFE  3EFF               	addlw	-1
  9482  0DFF  1D03               	skipz
  9483  0E00  2DFD               	goto	u5785
  9484  0E01  352A               	lslf	??_Button_Service,w
  9485  0E02  3EA0               	addlw	(low (_mtouch_button| (0+256)))& (0+255)
  9486  0E03  00AB               	movwf	??_Button_Service+1
  9487  0E04  082B               	movf	??_Button_Service+1,w
  9488  0E05  00AD               	movwf	Button_Service@button
  9489                           
  9490                           ;mtouch_button.c: 200: if (MTOUCH_Sensor_wasSampled(button->sensor) && MTOUCH_Sensor_isC
      +                          alibrated(button->sensor))
  9491  0E06  0A2D               	incf	Button_Service@button,w
  9492  0E07  0086               	movwf	6
  9493  0E08  3001               	movlw	1	; select bank2/3
  9494  0E09  0087               	movwf	7
  9495  0E0A  0801               	movf	1,w
  9496  0E0B  3188  20CA  318D   	fcall	_MTOUCH_Sensor_wasSampled
  9497  0E0E  3A00               	xorlw	0
  9498  0E0F  1903               	skipnz
  9499  0E10  0008               	return
  9500  0E11  0020               	movlb	0	; select bank0
  9501  0E12  0A2D               	incf	Button_Service@button,w
  9502  0E13  0086               	movwf	6
  9503  0E14  3001               	movlw	1	; select bank2/3
  9504  0E15  0087               	movwf	7
  9505  0E16  0801               	movf	1,w
  9506  0E17  3189  2157  318D   	fcall	_MTOUCH_Sensor_isCalibrated
  9507  0E1A  3A00               	xorlw	0
  9508  0E1B  1903               	skipnz
  9509  0E1C  0008               	return
  9510                           
  9511                           ;mtouch_button.c: 201: {
  9512                           ;mtouch_button.c: 202: Button_Reading_Update(button);
  9513  0E1D  0020               	movlb	0	; select bank0
  9514  0E1E  082D               	movf	Button_Service@button,w
  9515  0E1F  318F  270F  318D   	fcall	_Button_Reading_Update
  9516                           
  9517                           ;mtouch_button.c: 203: Button_Deviation_Update(button);
  9518  0E22  0020               	movlb	0	; select bank0
  9519  0E23  082D               	movf	Button_Service@button,w
  9520  0E24  3181  21F9  318D   	fcall	_Button_Deviation_Update
  9521                           
  9522                           ;mtouch_button.c: 205: if (button->state >= (uint8_t)(sizeof(Button_StateMachine)/sizeof
      +                          (button_statemachine_state_t)))
  9523  0E27  0020               	movlb	0	; select bank0
  9524  0E28  082D               	movf	Button_Service@button,w
  9525  0E29  3E02               	addlw	2
  9526  0E2A  0086               	movwf	6
  9527  0E2B  3001               	movlw	1	; select bank2/3
  9528  0E2C  0087               	movwf	7
  9529  0E2D  3003               	movlw	3
  9530  0E2E  0201               	subwf	1,w
  9531  0E2F  1C03               	skipc
  9532  0E30  2E39               	goto	l827
  9533                           
  9534                           ;mtouch_button.c: 206: {
  9535                           ;mtouch_button.c: 207: MTOUCH_Button_Initialize(button->name);
  9536  0E31  082D               	movf	Button_Service@button,w
  9537  0E32  0086               	movwf	6
  9538  0E33  3001               	movlw	1	; select bank2/3
  9539  0E34  0087               	movwf	7
  9540  0E35  0801               	movf	1,w
  9541  0E36  318B  23F7  318D   	fcall	_MTOUCH_Button_Initialize
  9542  0E39                     l827:	
  9543                           
  9544                           ;mtouch_button.c: 208: }
  9545                           ;mtouch_button.c: 209: Button_StateMachine[button->state](button);
  9546  0E39  0020               	movlb	0	; select bank0
  9547  0E3A  082D               	movf	Button_Service@button,w
  9548  0E3B  00AA               	movwf	??_Button_Service
  9549  0E3C  082A               	movf	??_Button_Service,w
  9550  0E3D  00A7               	movwf	Button_State_Pressed@button
  9551  0E3E  082D               	movf	Button_Service@button,w
  9552  0E3F  3E02               	addlw	2
  9553  0E40  0086               	movwf	6
  9554  0E41  3001               	movlw	1	; select bank2/3
  9555  0E42  0087               	movwf	7
  9556  0E43  3501               	lslf	1,w
  9557  0E44  3E55               	addlw	(low (_Button_StateMachine| 0))& (0+255)
  9558  0E45  0086               	movwf	6
  9559  0E46  0187               	clrf	7
  9560  0E47  3F41               	moviw [1]fsr1
  9561  0E48  008A               	movwf	10
  9562  0E49  3F40               	moviw [0]fsr1
  9563  0E4A  000A               	callw
  9564  0E4B  318D               	pagesel	$
  9565  0E4C  0008               	return
  9566  0E4D                     __end_of_Button_Service:	
  9567                           
  9568                           	psect	text57
  9569  08CA                     __ptext57:	
  9570 ;; *************** function _MTOUCH_Sensor_wasSampled *****************
  9571 ;; Defined at:
  9572 ;;		line 850 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9573 ;; Parameters:    Size  Location     Type
  9574 ;;  sensor          1    wreg     enum E3328
  9575 ;; Auto vars:     Size  Location     Type
  9576 ;;  sensor          1    7[COMMON] enum E3328
  9577 ;; Return value:  Size  Location     Type
  9578 ;;                  1    wreg      unsigned char 
  9579 ;; Registers used:
  9580 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9581 ;; Tracked objects:
  9582 ;;		On entry : 0/0
  9583 ;;		On exit  : 0/0
  9584 ;;		Unchanged: 0/0
  9585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9586 ;;      Params:         0       0       0       0       0       0       0       0
  9587 ;;      Locals:         1       0       0       0       0       0       0       0
  9588 ;;      Temps:          1       0       0       0       0       0       0       0
  9589 ;;      Totals:         2       0       0       0       0       0       0       0
  9590 ;;Total ram usage:        2 bytes
  9591 ;; Hardware stack levels used:    1
  9592 ;; Hardware stack levels required when called:    3
  9593 ;; This function calls:
  9594 ;;		___bmul
  9595 ;; This function is called by:
  9596 ;;		_Button_Service
  9597 ;;		_Proximity_Service
  9598 ;; This function uses a non-reentrant model
  9599 ;;
  9600                           
  9601                           
  9602                           ;psect for function _MTOUCH_Sensor_wasSampled
  9603  08CA                     _MTOUCH_Sensor_wasSampled:	
  9604                           
  9605                           ;incstack = 0
  9606                           ; Regs used in _MTOUCH_Sensor_wasSampled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  9607                           ;MTOUCH_Sensor_wasSampled@sensor stored from wreg
  9608  08CA  00F7               	movwf	MTOUCH_Sensor_wasSampled@sensor
  9609                           
  9610                           ;mtouch_sensor.c: 852: return (bool)mtouch_sensor[sensor].sampled;
  9611  08CB  3009               	movlw	9
  9612  08CC  00F6               	movwf	??_MTOUCH_Sensor_wasSampled
  9613  08CD  0876               	movf	??_MTOUCH_Sensor_wasSampled,w
  9614  08CE  00F2               	movwf	___bmul@multiplicand
  9615  08CF  0877               	movf	MTOUCH_Sensor_wasSampled@sensor,w
  9616  08D0  3188  20FA         	fcall	___bmul
  9617  08D2  3E08               	addlw	8
  9618  08D3  3E20               	addlw	(low (_mtouch_sensor| (0+256)))& (0+255)
  9619  08D4  0086               	movwf	6
  9620  08D5  3001               	movlw	1	; select bank2/3
  9621  08D6  0087               	movwf	7
  9622  08D7  0801               	movf	1,w
  9623  08D8  3901               	andlw	1
  9624  08D9  0008               	return
  9625  08DA                     __end_of_MTOUCH_Sensor_wasSampled:	
  9626                           
  9627                           	psect	text58
  9628  0957                     __ptext58:	
  9629 ;; *************** function _MTOUCH_Sensor_isCalibrated *****************
  9630 ;; Defined at:
  9631 ;;		line 803 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9632 ;; Parameters:    Size  Location     Type
  9633 ;;  sensor          1    wreg     enum E3328
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;  sensor          1    7[COMMON] enum E3328
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  1    wreg      unsigned char 
  9638 ;; Registers used:
  9639 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9645 ;;      Params:         0       0       0       0       0       0       0       0
  9646 ;;      Locals:         1       0       0       0       0       0       0       0
  9647 ;;      Temps:          1       0       0       0       0       0       0       0
  9648 ;;      Totals:         2       0       0       0       0       0       0       0
  9649 ;;Total ram usage:        2 bytes
  9650 ;; Hardware stack levels used:    1
  9651 ;; Hardware stack levels required when called:    3
  9652 ;; This function calls:
  9653 ;;		___bmul
  9654 ;; This function is called by:
  9655 ;;		_Button_Service
  9656 ;;		_Proximity_Service
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           
  9660                           
  9661                           ;psect for function _MTOUCH_Sensor_isCalibrated
  9662  0957                     _MTOUCH_Sensor_isCalibrated:	
  9663                           
  9664                           ;incstack = 0
  9665                           ; Regs used in _MTOUCH_Sensor_isCalibrated: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  9666                           ;MTOUCH_Sensor_isCalibrated@sensor stored from wreg
  9667  0957  00F7               	movwf	MTOUCH_Sensor_isCalibrated@sensor
  9668                           
  9669                           ;mtouch_sensor.c: 805: if(sensor < 6)
  9670  0958  3006               	movlw	6
  9671  0959  0277               	subwf	MTOUCH_Sensor_isCalibrated@sensor,w
  9672  095A  1803               	skipnc
  9673  095B  296C               	goto	l5407
  9674                           
  9675                           ;mtouch_sensor.c: 806: return (bool)mtouch_sensor[sensor].calibrated;
  9676  095C  3009               	movlw	9
  9677  095D  00F6               	movwf	??_MTOUCH_Sensor_isCalibrated
  9678  095E  0876               	movf	??_MTOUCH_Sensor_isCalibrated,w
  9679  095F  00F2               	movwf	___bmul@multiplicand
  9680  0960  0877               	movf	MTOUCH_Sensor_isCalibrated@sensor,w
  9681  0961  3188  20FA         	fcall	___bmul
  9682  0963  3E08               	addlw	8
  9683  0964  3E20               	addlw	(low (_mtouch_sensor| (0+256)))& (0+255)
  9684  0965  0086               	movwf	6
  9685  0966  3001               	movlw	1	; select bank2/3
  9686  0967  0087               	movwf	7
  9687  0968  0C01               	rrf	1,w
  9688  0969  0C89               	rrf	9,f
  9689  096A  3901               	andlw	1
  9690  096B  0008               	return
  9691  096C                     l5407:	
  9692                           
  9693                           ;mtouch_sensor.c: 807: else
  9694                           ;mtouch_sensor.c: 808: return 0;
  9695  096C  3000               	movlw	0
  9696  096D  0008               	return
  9697  096E                     __end_of_MTOUCH_Sensor_isCalibrated:	
  9698                           
  9699                           	psect	text59
  9700  028B                     __ptext59:	
  9701 ;; *************** function _Button_State_NotPressed *****************
  9702 ;; Defined at:
  9703 ;;		line 231 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9704 ;; Parameters:    Size  Location     Type
  9705 ;;  button          1    7[BANK0 ] PTR struct .
  9706 ;;		 -> mtouch_button(80), 
  9707 ;; Auto vars:     Size  Location     Type
  9708 ;;		None
  9709 ;; Return value:  Size  Location     Type
  9710 ;;                  1    wreg      void 
  9711 ;; Registers used:
  9712 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/0
  9715 ;;		On exit  : 0/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9718 ;;      Params:         0       1       0       0       0       0       0       0
  9719 ;;      Locals:         0       0       0       0       0       0       0       0
  9720 ;;      Temps:          0       2       0       0       0       0       0       0
  9721 ;;      Totals:         0       3       0       0       0       0       0       0
  9722 ;;Total ram usage:        3 bytes
  9723 ;; Hardware stack levels used:    1
  9724 ;; Hardware stack levels required when called:    5
  9725 ;; This function calls:
  9726 ;;		_Button_Baseline_Update
  9727 ;;		_Button_DefaultCallback
  9728 ;;		_MTOUCH_Button_Initialize
  9729 ;;		_processButtonTouch
  9730 ;; This function is called by:
  9731 ;;		_Button_Service
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           
  9735                           
  9736                           ;psect for function _Button_State_NotPressed
  9737  028B                     _Button_State_NotPressed:	
  9738                           
  9739                           ;mtouch_button.c: 234: if ((button->deviation) < (mtouch_button_deviation_t)(mtouch_butt
      +                          on_deviation_t)-10)
  9740                           
  9741                           ;incstack = 0
  9742                           ; Regs used in _Button_State_NotPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  9743  028B  0020               	movlb	0	; select bank0
  9744  028C  0827               	movf	Button_State_NotPressed@button,w
  9745  028D  3E09               	addlw	9
  9746  028E  0086               	movwf	6
  9747  028F  3001               	movlw	1	; select bank2/3
  9748  0290  0087               	movwf	7
  9749  0291  0801               	movf	1,w
  9750  0292  3A80               	xorlw	128
  9751  0293  3E8A               	addlw	138
  9752  0294  1803               	skipnc
  9753  0295  2AC1               	goto	l5461
  9754                           
  9755                           ;mtouch_button.c: 235: {
  9756                           ;mtouch_button.c: 236: (button->counter)++;
  9757  0296  0827               	movf	Button_State_NotPressed@button,w
  9758  0297  3E0A               	addlw	10
  9759  0298  0086               	movwf	6
  9760  0299  3001               	movlw	1	; select bank2/3
  9761  029A  0087               	movwf	7
  9762  029B  3001               	movlw	1
  9763  029C  0781               	addwf	1,f
  9764  029D  3141               	addfsr 1,1
  9765  029E  1803               	skipnc
  9766  029F  0A81               	incf	1,f
  9767                           
  9768                           ;mtouch_button.c: 237: if ((button->counter) > (mtouch_button_statecounter_t)((mtouch_bu
      +                          tton_statecounter_t)32))
  9769  02A0  0827               	movf	Button_State_NotPressed@button,w
  9770  02A1  3E0A               	addlw	10
  9771  02A2  0086               	movwf	6
  9772  02A3  3001               	movlw	1	; select bank2/3
  9773  02A4  0087               	movwf	7
  9774  02A5  3F40               	moviw [0]fsr1
  9775  02A6  00A8               	movwf	??_Button_State_NotPressed
  9776  02A7  3F41               	moviw [1]fsr1
  9777  02A8  00A9               	movwf	??_Button_State_NotPressed+1
  9778  02A9  3000               	movlw	0
  9779  02AA  0229               	subwf	??_Button_State_NotPressed+1,w
  9780  02AB  3021               	movlw	33
  9781  02AC  1903               	skipnz
  9782  02AD  0228               	subwf	??_Button_State_NotPressed,w
  9783  02AE  1C03               	skipc
  9784  02AF  2AFC               	goto	l839
  9785                           
  9786                           ;mtouch_button.c: 238: {
  9787                           ;mtouch_button.c: 239: button->counter = (mtouch_button_statecounter_t)0;
  9788  02B0  0827               	movf	Button_State_NotPressed@button,w
  9789  02B1  3E0A               	addlw	10
  9790  02B2  0086               	movwf	6
  9791  02B3  3001               	movlw	1	; select bank2/3
  9792  02B4  0087               	movwf	7
  9793  02B5  3000               	movlw	0
  9794  02B6  3FC0               	movwi [0]fsr1
  9795  02B7  3FC1               	movwi [1]fsr1
  9796                           
  9797                           ;mtouch_button.c: 240: MTOUCH_Button_Initialize(button->name);
  9798  02B8  0827               	movf	Button_State_NotPressed@button,w
  9799  02B9  0086               	movwf	6
  9800  02BA  3001               	movlw	1	; select bank2/3
  9801  02BB  0087               	movwf	7
  9802  02BC  0801               	movf	1,w
  9803  02BD  318B  23F7  3182   	fcall	_MTOUCH_Button_Initialize
  9804                           
  9805                           ;mtouch_button.c: 241: }
  9806                           ;mtouch_button.c: 242: }
  9807  02C0  2AFC               	goto	l839
  9808  02C1                     l5461:	
  9809                           
  9810                           ;mtouch_button.c: 244: else if ((button->deviation) > (button->threshold))
  9811  02C1  0020               	movlb	0	; select bank0
  9812  02C2  0827               	movf	Button_State_NotPressed@button,w
  9813  02C3  3E0E               	addlw	14
  9814  02C4  0086               	movwf	6
  9815  02C5  3001               	movlw	1	; select bank2/3
  9816  02C6  0087               	movwf	7
  9817  02C7  0801               	movf	1,w
  9818  02C8  3A80               	xorlw	128
  9819  02C9  00A8               	movwf	??_Button_State_NotPressed
  9820  02CA  0827               	movf	Button_State_NotPressed@button,w
  9821  02CB  3E09               	addlw	9
  9822  02CC  0086               	movwf	6
  9823  02CD  3001               	movlw	1	; select bank2/3
  9824  02CE  0087               	movwf	7
  9825  02CF  0801               	movf	1,w
  9826  02D0  3A80               	xorlw	128
  9827  02D1  02A8               	subwf	??_Button_State_NotPressed,f
  9828  02D2  1803               	skipnc
  9829  02D3  2AF3               	goto	l5467
  9830                           
  9831                           ;mtouch_button.c: 245: {
  9832                           ;mtouch_button.c: 246: button->state = MTOUCH_BUTTON_STATE_pressed;
  9833  02D4  3002               	movlw	2
  9834  02D5  00A8               	movwf	??_Button_State_NotPressed
  9835  02D6  0827               	movf	Button_State_NotPressed@button,w
  9836  02D7  3E02               	addlw	2
  9837  02D8  0086               	movwf	6
  9838  02D9  3001               	movlw	1	; select bank2/3
  9839  02DA  0087               	movwf	7
  9840  02DB  0828               	movf	??_Button_State_NotPressed,w
  9841  02DC  0081               	movwf	1
  9842                           
  9843                           ;mtouch_button.c: 247: button->counter = (mtouch_button_statecounter_t)0;
  9844  02DD  0827               	movf	Button_State_NotPressed@button,w
  9845  02DE  3E0A               	addlw	10
  9846  02DF  0086               	movwf	6
  9847  02E0  3001               	movlw	1	; select bank2/3
  9848  02E1  0087               	movwf	7
  9849  02E2  3000               	movlw	0
  9850  02E3  3FC0               	movwi [0]fsr1
  9851  02E4  3FC1               	movwi [1]fsr1
  9852                           
  9853                           ;mtouch_button.c: 248: callback_pressed(button->name);
  9854  02E5  0827               	movf	Button_State_NotPressed@button,w
  9855  02E6  0086               	movwf	6
  9856  02E7  3001               	movlw	1	; select bank2/3
  9857  02E8  0087               	movwf	7
  9858  02E9  0801               	movf	1,w
  9859  02EA  00A8               	movwf	??_Button_State_NotPressed
  9860  02EB  0828               	movf	??_Button_State_NotPressed,w
  9861  02EC  00F2               	movwf	processButtonTouch@button
  9862  02ED  0862               	movf	_callback_pressed+1,w
  9863  02EE  008A               	movwf	10
  9864  02EF  0861               	movf	_callback_pressed,w
  9865  02F0  000A               	callw
  9866  02F1  3182               	pagesel	$
  9867                           
  9868                           ;mtouch_button.c: 249: }
  9869  02F2  2AFC               	goto	l839
  9870  02F3                     l5467:	
  9871                           
  9872                           ;mtouch_button.c: 250: else
  9873                           ;mtouch_button.c: 251: {
  9874                           ;mtouch_button.c: 253: button->counter = (mtouch_button_statecounter_t)0;
  9875  02F3  0020               	movlb	0	; select bank0
  9876  02F4  0827               	movf	Button_State_NotPressed@button,w
  9877  02F5  3E0A               	addlw	10
  9878  02F6  0086               	movwf	6
  9879  02F7  3001               	movlw	1	; select bank2/3
  9880  02F8  0087               	movwf	7
  9881  02F9  3000               	movlw	0
  9882  02FA  3FC0               	movwi [0]fsr1
  9883  02FB  3FC1               	movwi [1]fsr1
  9884  02FC                     l839:	
  9885                           
  9886                           ;mtouch_button.c: 254: }
  9887                           ;mtouch_button.c: 257: (button->baseline_count)++;
  9888  02FC  0020               	movlb	0	; select bank0
  9889  02FD  0827               	movf	Button_State_NotPressed@button,w
  9890  02FE  3E0C               	addlw	12
  9891  02FF  0086               	movwf	6
  9892  0300  3001               	movlw	1	; select bank2/3
  9893  0301  0087               	movwf	7
  9894  0302  3001               	movlw	1
  9895  0303  0781               	addwf	1,f
  9896  0304  3141               	addfsr 1,1
  9897  0305  1803               	skipnc
  9898  0306  0A81               	incf	1,f
  9899                           
  9900                           ;mtouch_button.c: 258: if ((button->baseline_count) > ((mtouch_button_baselinecounter_t)
      +                          32))
  9901  0307  0827               	movf	Button_State_NotPressed@button,w
  9902  0308  3E0C               	addlw	12
  9903  0309  0086               	movwf	6
  9904  030A  3001               	movlw	1	; select bank2/3
  9905  030B  0087               	movwf	7
  9906  030C  3F40               	moviw [0]fsr1
  9907  030D  00A8               	movwf	??_Button_State_NotPressed
  9908  030E  3F41               	moviw [1]fsr1
  9909  030F  00A9               	movwf	??_Button_State_NotPressed+1
  9910  0310  3000               	movlw	0
  9911  0311  0229               	subwf	??_Button_State_NotPressed+1,w
  9912  0312  3021               	movlw	33
  9913  0313  1903               	skipnz
  9914  0314  0228               	subwf	??_Button_State_NotPressed,w
  9915  0315  1C03               	skipc
  9916  0316  0008               	return
  9917                           
  9918                           ;mtouch_button.c: 259: {
  9919                           ;mtouch_button.c: 260: button->baseline_count = (mtouch_button_baselinecounter_t)0;
  9920  0317  0827               	movf	Button_State_NotPressed@button,w
  9921  0318  3E0C               	addlw	12
  9922  0319  0086               	movwf	6
  9923  031A  3001               	movlw	1	; select bank2/3
  9924  031B  0087               	movwf	7
  9925  031C  3000               	movlw	0
  9926  031D  3FC0               	movwi [0]fsr1
  9927  031E  3FC1               	movwi [1]fsr1
  9928                           
  9929                           ;mtouch_button.c: 261: Button_Baseline_Update(button);
  9930  031F  0827               	movf	Button_State_NotPressed@button,w
  9931  0320  3181  216A         	fcall	_Button_Baseline_Update
  9932  0322  0008               	return
  9933  0323                     __end_of_Button_State_NotPressed:	
  9934                           
  9935                           	psect	text60
  9936  0C6F                     __ptext60:	
  9937 ;; *************** function _Button_State_Initializing *****************
  9938 ;; Defined at:
  9939 ;;		line 213 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9940 ;; Parameters:    Size  Location     Type
  9941 ;;  button          1    7[BANK0 ] PTR struct .
  9942 ;;		 -> mtouch_button(80), 
  9943 ;; Auto vars:     Size  Location     Type
  9944 ;;		None
  9945 ;; Return value:  Size  Location     Type
  9946 ;;                  1    wreg      void 
  9947 ;; Registers used:
  9948 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9949 ;; Tracked objects:
  9950 ;;		On entry : 0/0
  9951 ;;		On exit  : 0/0
  9952 ;;		Unchanged: 0/0
  9953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9954 ;;      Params:         0       1       0       0       0       0       0       0
  9955 ;;      Locals:         0       0       0       0       0       0       0       0
  9956 ;;      Temps:          0       2       0       0       0       0       0       0
  9957 ;;      Totals:         0       3       0       0       0       0       0       0
  9958 ;;Total ram usage:        3 bytes
  9959 ;; Hardware stack levels used:    1
  9960 ;; Hardware stack levels required when called:    5
  9961 ;; This function calls:
  9962 ;;		_Button_Baseline_Initialize
  9963 ;;		_Button_Baseline_Update
  9964 ;; This function is called by:
  9965 ;;		_Button_Service
  9966 ;; This function uses a non-reentrant model
  9967 ;;
  9968                           
  9969                           
  9970                           ;psect for function _Button_State_Initializing
  9971  0C6F                     _Button_State_Initializing:	
  9972                           
  9973                           ;mtouch_button.c: 216: if ((button->counter) <= (mtouch_button_statecounter_t)((mtouch_b
      +                          utton_statecounter_t)16)/2)
  9974                           
  9975                           ;incstack = 0
  9976                           ; Regs used in _Button_State_Initializing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  9977  0C6F  0020               	movlb	0	; select bank0
  9978  0C70  0827               	movf	Button_State_Initializing@button,w
  9979  0C71  3E0A               	addlw	10
  9980  0C72  0086               	movwf	6
  9981  0C73  3001               	movlw	1	; select bank2/3
  9982  0C74  0087               	movwf	7
  9983  0C75  3F40               	moviw [0]fsr1
  9984  0C76  00A8               	movwf	??_Button_State_Initializing
  9985  0C77  3F41               	moviw [1]fsr1
  9986  0C78  00A9               	movwf	??_Button_State_Initializing+1
  9987  0C79  3000               	movlw	0
  9988  0C7A  0229               	subwf	??_Button_State_Initializing+1,w
  9989  0C7B  3009               	movlw	9
  9990  0C7C  1903               	skipnz
  9991  0C7D  0228               	subwf	??_Button_State_Initializing,w
  9992  0C7E  1803               	skipnc
  9993  0C7F  2C85               	goto	l5445
  9994                           
  9995                           ;mtouch_button.c: 217: {
  9996                           ;mtouch_button.c: 218: Button_Baseline_Initialize(button);
  9997  0C80  0827               	movf	Button_State_Initializing@button,w
  9998  0C81  318B  2392  318C   	fcall	_Button_Baseline_Initialize
  9999                           
 10000                           ;mtouch_button.c: 219: } else {
 10001  0C84  2C8A               	goto	l5447
 10002  0C85                     l5445:	
 10003                           
 10004                           ;mtouch_button.c: 220: Button_Baseline_Update(button);
 10005  0C85  0020               	movlb	0	; select bank0
 10006  0C86  0827               	movf	Button_State_Initializing@button,w
 10007  0C87  3181  216A  318C   	fcall	_Button_Baseline_Update
 10008  0C8A                     l5447:	
 10009                           
 10010                           ;mtouch_button.c: 221: }
 10011                           ;mtouch_button.c: 224: (button->counter)++;
 10012  0C8A  0020               	movlb	0	; select bank0
 10013  0C8B  0827               	movf	Button_State_Initializing@button,w
 10014  0C8C  3E0A               	addlw	10
 10015  0C8D  0086               	movwf	6
 10016  0C8E  3001               	movlw	1	; select bank2/3
 10017  0C8F  0087               	movwf	7
 10018  0C90  3001               	movlw	1
 10019  0C91  0781               	addwf	1,f
 10020  0C92  3141               	addfsr 1,1
 10021  0C93  1803               	skipnc
 10022  0C94  0A81               	incf	1,f
 10023                           
 10024                           ;mtouch_button.c: 225: if ((button->counter) >= (mtouch_button_statecounter_t)((mtouch_b
      +                          utton_statecounter_t)16))
 10025  0C95  0827               	movf	Button_State_Initializing@button,w
 10026  0C96  3E0A               	addlw	10
 10027  0C97  0086               	movwf	6
 10028  0C98  3001               	movlw	1	; select bank2/3
 10029  0C99  0087               	movwf	7
 10030  0C9A  3F40               	moviw [0]fsr1
 10031  0C9B  00A8               	movwf	??_Button_State_Initializing
 10032  0C9C  3F41               	moviw [1]fsr1
 10033  0C9D  00A9               	movwf	??_Button_State_Initializing+1
 10034  0C9E  3000               	movlw	0
 10035  0C9F  0229               	subwf	??_Button_State_Initializing+1,w
 10036  0CA0  3010               	movlw	16
 10037  0CA1  1903               	skipnz
 10038  0CA2  0228               	subwf	??_Button_State_Initializing,w
 10039  0CA3  1C03               	skipc
 10040  0CA4  0008               	return
 10041                           
 10042                           ;mtouch_button.c: 226: {
 10043                           ;mtouch_button.c: 227: button->state = MTOUCH_BUTTON_STATE_notPressed;
 10044  0CA5  0827               	movf	Button_State_Initializing@button,w
 10045  0CA6  3E02               	addlw	2
 10046  0CA7  0086               	movwf	6
 10047  0CA8  3001               	movlw	1	; select bank2/3
 10048  0CA9  0087               	movwf	7
 10049  0CAA  0181               	clrf	1
 10050  0CAB  0A81               	incf	1,f
 10051                           
 10052                           ;mtouch_button.c: 228: button->counter = (mtouch_button_statecounter_t)0;
 10053  0CAC  0827               	movf	Button_State_Initializing@button,w
 10054  0CAD  3E0A               	addlw	10
 10055  0CAE  0086               	movwf	6
 10056  0CAF  3001               	movlw	1	; select bank2/3
 10057  0CB0  0087               	movwf	7
 10058  0CB1  3000               	movlw	0
 10059  0CB2  3FC0               	movwi [0]fsr1
 10060  0CB3  3FC1               	movwi [1]fsr1
 10061  0CB4  0008               	return
 10062  0CB5                     __end_of_Button_State_Initializing:	
 10063                           
 10064                           	psect	text61
 10065  0E4D                     __ptext61:	
 10066 ;; *************** function _Button_State_Pressed *****************
 10067 ;; Defined at:
 10068 ;;		line 264 in file "mcc_generated_files/mtouch/mtouch_button.c"
 10069 ;; Parameters:    Size  Location     Type
 10070 ;;  button          1    7[BANK0 ] PTR struct .
 10071 ;;		 -> mtouch_button(80), 
 10072 ;; Auto vars:     Size  Location     Type
 10073 ;;		None
 10074 ;; Return value:  Size  Location     Type
 10075 ;;                  1    wreg      void 
 10076 ;; Registers used:
 10077 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10078 ;; Tracked objects:
 10079 ;;		On entry : 0/0
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10083 ;;      Params:         0       1       0       0       0       0       0       0
 10084 ;;      Locals:         0       0       0       0       0       0       0       0
 10085 ;;      Temps:          0       2       0       0       0       0       0       0
 10086 ;;      Totals:         0       3       0       0       0       0       0       0
 10087 ;;Total ram usage:        3 bytes
 10088 ;; Hardware stack levels used:    1
 10089 ;; Hardware stack levels required when called:    5
 10090 ;; This function calls:
 10091 ;;		_Button_DefaultCallback
 10092 ;;		_MTOUCH_Button_Initialize
 10093 ;;		_processButtonRelease
 10094 ;; This function is called by:
 10095 ;;		_Button_Service
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           
 10099                           
 10100                           ;psect for function _Button_State_Pressed
 10101  0E4D                     _Button_State_Pressed:	
 10102                           
 10103                           ;mtouch_button.c: 267: if ((button->counter) >= ((mtouch_button_statecounter_t)1000))
 10104                           
 10105                           ;incstack = 0
 10106                           ; Regs used in _Button_State_Pressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10107  0E4D  0020               	movlb	0	; select bank0
 10108  0E4E  0827               	movf	Button_State_Pressed@button,w
 10109  0E4F  3E0A               	addlw	10
 10110  0E50  0086               	movwf	6
 10111  0E51  3001               	movlw	1	; select bank2/3
 10112  0E52  0087               	movwf	7
 10113  0E53  3F40               	moviw [0]fsr1
 10114  0E54  00A8               	movwf	??_Button_State_Pressed
 10115  0E55  3F41               	moviw [1]fsr1
 10116  0E56  00A9               	movwf	??_Button_State_Pressed+1
 10117  0E57  3003               	movlw	3
 10118  0E58  0229               	subwf	??_Button_State_Pressed+1,w
 10119  0E59  30E8               	movlw	232
 10120  0E5A  1903               	skipnz
 10121  0E5B  0228               	subwf	??_Button_State_Pressed,w
 10122  0E5C  1C03               	skipc
 10123  0E5D  2E75               	goto	l5477
 10124                           
 10125                           ;mtouch_button.c: 268: {
 10126                           ;mtouch_button.c: 269: MTOUCH_Button_Initialize(button->name);
 10127  0E5E  0827               	movf	Button_State_Pressed@button,w
 10128  0E5F  0086               	movwf	6
 10129  0E60  3001               	movlw	1	; select bank2/3
 10130  0E61  0087               	movwf	7
 10131  0E62  0801               	movf	1,w
 10132  0E63  318B  23F7  318E   	fcall	_MTOUCH_Button_Initialize
 10133                           
 10134                           ;mtouch_button.c: 270: callback_notPressed(button->name);
 10135  0E66  0020               	movlb	0	; select bank0
 10136  0E67  0827               	movf	Button_State_Pressed@button,w
 10137  0E68  0086               	movwf	6
 10138  0E69  3001               	movlw	1	; select bank2/3
 10139  0E6A  0087               	movwf	7
 10140  0E6B  0801               	movf	1,w
 10141  0E6C  00A8               	movwf	??_Button_State_Pressed
 10142  0E6D  0828               	movf	??_Button_State_Pressed,w
 10143  0E6E  00F2               	movwf	processButtonRelease@button
 10144  0E6F  0860               	movf	_callback_notPressed+1,w
 10145  0E70  008A               	movwf	10
 10146  0E71  085F               	movf	_callback_notPressed,w
 10147  0E72  000A               	callw
 10148  0E73  318E               	pagesel	$
 10149                           
 10150                           ;mtouch_button.c: 271: }
 10151  0E74  0008               	return
 10152  0E75                     l5477:	
 10153                           
 10154                           ;mtouch_button.c: 274: else if ((button->deviation) < (mtouch_button_deviation_t)((butto
      +                          n->threshold) >> 1))
 10155  0E75  0020               	movlb	0	; select bank0
 10156  0E76  0827               	movf	Button_State_Pressed@button,w
 10157  0E77  3E09               	addlw	9
 10158  0E78  0086               	movwf	6
 10159  0E79  3001               	movlw	1	; select bank2/3
 10160  0E7A  0087               	movwf	7
 10161  0E7B  0801               	movf	1,w
 10162  0E7C  3A80               	xorlw	128
 10163  0E7D  00A8               	movwf	??_Button_State_Pressed
 10164  0E7E  0827               	movf	Button_State_Pressed@button,w
 10165  0E7F  3E0E               	addlw	14
 10166  0E80  0086               	movwf	6
 10167  0E81  3001               	movlw	1	; select bank2/3
 10168  0E82  0087               	movwf	7
 10169  0E83  3701               	asrf	1,w
 10170  0E84  3A80               	xorlw	128
 10171  0E85  02A8               	subwf	??_Button_State_Pressed,f
 10172  0E86  1803               	skipnc
 10173  0E87  0008               	return
 10174                           
 10175                           ;mtouch_button.c: 275: {
 10176                           ;mtouch_button.c: 276: button->state = MTOUCH_BUTTON_STATE_notPressed;
 10177  0E88  0827               	movf	Button_State_Pressed@button,w
 10178  0E89  3E02               	addlw	2
 10179  0E8A  0086               	movwf	6
 10180  0E8B  3001               	movlw	1	; select bank2/3
 10181  0E8C  0087               	movwf	7
 10182  0E8D  0181               	clrf	1
 10183  0E8E  0A81               	incf	1,f
 10184                           
 10185                           ;mtouch_button.c: 277: button->counter = (mtouch_button_statecounter_t)0;
 10186  0E8F  0827               	movf	Button_State_Pressed@button,w
 10187  0E90  3E0A               	addlw	10
 10188  0E91  0086               	movwf	6
 10189  0E92  3001               	movlw	1	; select bank2/3
 10190  0E93  0087               	movwf	7
 10191  0E94  3000               	movlw	0
 10192  0E95  3FC0               	movwi [0]fsr1
 10193  0E96  3FC1               	movwi [1]fsr1
 10194                           
 10195                           ;mtouch_button.c: 278: callback_notPressed(button->name);
 10196  0E97  0827               	movf	Button_State_Pressed@button,w
 10197  0E98  0086               	movwf	6
 10198  0E99  3001               	movlw	1	; select bank2/3
 10199  0E9A  0087               	movwf	7
 10200  0E9B  0801               	movf	1,w
 10201  0E9C  00A8               	movwf	??_Button_State_Pressed
 10202  0E9D  0828               	movf	??_Button_State_Pressed,w
 10203  0E9E  00F2               	movwf	processButtonRelease@button
 10204  0E9F  0860               	movf	_callback_notPressed+1,w
 10205  0EA0  008A               	movwf	10
 10206  0EA1  085F               	movf	_callback_notPressed,w
 10207  0EA2  000A               	callw
 10208  0EA3  318E               	pagesel	$
 10209  0EA4  0008               	return
 10210  0EA5                     __end_of_Button_State_Pressed:	
 10211                           
 10212                           	psect	text62
 10213  0802                     __ptext62:	
 10214 ;; *************** function _processButtonTouch *****************
 10215 ;; Defined at:
 10216 ;;		line 50 in file "main.c"
 10217 ;; Parameters:    Size  Location     Type
 10218 ;;  button          1    2[COMMON] enum E3259
 10219 ;; Auto vars:     Size  Location     Type
 10220 ;;		None
 10221 ;; Return value:  Size  Location     Type
 10222 ;;                  1    wreg      void 
 10223 ;; Registers used:
 10224 ;;		None
 10225 ;; Tracked objects:
 10226 ;;		On entry : 0/0
 10227 ;;		On exit  : 0/0
 10228 ;;		Unchanged: 0/0
 10229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10230 ;;      Params:         1       0       0       0       0       0       0       0
 10231 ;;      Locals:         0       0       0       0       0       0       0       0
 10232 ;;      Temps:          0       0       0       0       0       0       0       0
 10233 ;;      Totals:         1       0       0       0       0       0       0       0
 10234 ;;Total ram usage:        1 bytes
 10235 ;; Hardware stack levels used:    1
 10236 ;; Hardware stack levels required when called:    2
 10237 ;; This function calls:
 10238 ;;		Nothing
 10239 ;; This function is called by:
 10240 ;;		_main
 10241 ;;		_Button_State_NotPressed
 10242 ;; This function uses a non-reentrant model
 10243 ;;
 10244                           
 10245                           
 10246                           ;psect for function _processButtonTouch
 10247  0802                     _processButtonTouch:	
 10248                           
 10249                           ;main.c: 60: }
 10250                           
 10251                           ;main.c: 53: {
 10252                           ;main.c: 59: default: break;
 10253                           
 10254                           ;main.c: 52: switch(button)
 10255                           
 10256                           ;incstack = 0
 10257                           ; Regs used in _processButtonTouch: []
 10258  0802  0008               	return
 10259  0803                     __end_of_processButtonTouch:	
 10260                           
 10261                           	psect	text63
 10262  0801                     __ptext63:	
 10263 ;; *************** function _Button_DefaultCallback *****************
 10264 ;; Defined at:
 10265 ;;		line 477 in file "mcc_generated_files/mtouch/mtouch_button.c"
 10266 ;; Parameters:    Size  Location     Type
 10267 ;;  button          1    2[COMMON] enum E3231
 10268 ;; Auto vars:     Size  Location     Type
 10269 ;;		None
 10270 ;; Return value:  Size  Location     Type
 10271 ;;                  1    wreg      void 
 10272 ;; Registers used:
 10273 ;;		None
 10274 ;; Tracked objects:
 10275 ;;		On entry : 0/0
 10276 ;;		On exit  : 0/0
 10277 ;;		Unchanged: 0/0
 10278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10279 ;;      Params:         1       0       0       0       0       0       0       0
 10280 ;;      Locals:         0       0       0       0       0       0       0       0
 10281 ;;      Temps:          0       0       0       0       0       0       0       0
 10282 ;;      Totals:         1       0       0       0       0       0       0       0
 10283 ;;Total ram usage:        1 bytes
 10284 ;; Hardware stack levels used:    1
 10285 ;; Hardware stack levels required when called:    2
 10286 ;; This function calls:
 10287 ;;		Nothing
 10288 ;; This function is called by:
 10289 ;;		_Button_State_NotPressed
 10290 ;;		_Button_State_Pressed
 10291 ;; This function uses a non-reentrant model
 10292 ;;
 10293                           
 10294                           
 10295                           ;psect for function _Button_DefaultCallback
 10296  0801                     _Button_DefaultCallback:	
 10297                           
 10298                           ;incstack = 0
 10299                           ; Regs used in _Button_DefaultCallback: []
 10300  0801  0008               	return
 10301  0802                     __end_of_Button_DefaultCallback:	
 10302                           
 10303                           	psect	text64
 10304  0800                     __ptext64:	
 10305 ;; *************** function _processButtonRelease *****************
 10306 ;; Defined at:
 10307 ;;		line 63 in file "main.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;  button          1    2[COMMON] enum E3259
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;		None
 10312 ;; Return value:  Size  Location     Type
 10313 ;;                  1    wreg      void 
 10314 ;; Registers used:
 10315 ;;		None
 10316 ;; Tracked objects:
 10317 ;;		On entry : 0/0
 10318 ;;		On exit  : 0/0
 10319 ;;		Unchanged: 0/0
 10320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10321 ;;      Params:         1       0       0       0       0       0       0       0
 10322 ;;      Locals:         0       0       0       0       0       0       0       0
 10323 ;;      Temps:          0       0       0       0       0       0       0       0
 10324 ;;      Totals:         1       0       0       0       0       0       0       0
 10325 ;;Total ram usage:        1 bytes
 10326 ;; Hardware stack levels used:    1
 10327 ;; Hardware stack levels required when called:    2
 10328 ;; This function calls:
 10329 ;;		Nothing
 10330 ;; This function is called by:
 10331 ;;		_main
 10332 ;;		_Button_State_Pressed
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           
 10337                           ;psect for function _processButtonRelease
 10338  0800                     _processButtonRelease:	
 10339                           
 10340                           ;main.c: 73: }
 10341                           
 10342                           ;main.c: 66: {
 10343                           ;main.c: 72: default: break;
 10344                           
 10345                           ;main.c: 65: switch(button)
 10346                           
 10347                           ;incstack = 0
 10348                           ; Regs used in _processButtonRelease: []
 10349  0800  0008               	return
 10350  0801                     __end_of_processButtonRelease:	
 10351                           
 10352                           	psect	text65
 10353  0BF7                     __ptext65:	
 10354 ;; *************** function _MTOUCH_Button_Initialize *****************
 10355 ;; Defined at:
 10356 ;;		line 157 in file "mcc_generated_files/mtouch/mtouch_button.c"
 10357 ;; Parameters:    Size  Location     Type
 10358 ;;  name            1    wreg     enum E3231
 10359 ;; Auto vars:     Size  Location     Type
 10360 ;;  name            1    0[BANK0 ] enum E3231
 10361 ;;  button          1    1[BANK0 ] PTR struct .
 10362 ;;		 -> mtouch_button(80), 
 10363 ;; Return value:  Size  Location     Type
 10364 ;;                  1    wreg      void 
 10365 ;; Registers used:
 10366 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10367 ;; Tracked objects:
 10368 ;;		On entry : 0/0
 10369 ;;		On exit  : 0/0
 10370 ;;		Unchanged: 0/0
 10371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10372 ;;      Params:         0       0       0       0       0       0       0       0
 10373 ;;      Locals:         0       2       0       0       0       0       0       0
 10374 ;;      Temps:          2       0       0       0       0       0       0       0
 10375 ;;      Totals:         2       2       0       0       0       0       0       0
 10376 ;;Total ram usage:        4 bytes
 10377 ;; Hardware stack levels used:    1
 10378 ;; Hardware stack levels required when called:    4
 10379 ;; This function calls:
 10380 ;;		_MTOUCH_Sensor_Calibrate
 10381 ;; This function is called by:
 10382 ;;		_Button_Service
 10383 ;;		_Button_State_NotPressed
 10384 ;;		_Button_State_Pressed
 10385 ;;		_MTOUCH_Button_InitializeAll
 10386 ;; This function uses a non-reentrant model
 10387 ;;
 10388                           
 10389                           
 10390                           ;psect for function _MTOUCH_Button_Initialize
 10391  0BF7                     _MTOUCH_Button_Initialize:	
 10392                           
 10393                           ;incstack = 0
 10394                           ; Regs used in _MTOUCH_Button_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 10395                           ;MTOUCH_Button_Initialize@name stored from wreg
 10396  0BF7  0020               	movlb	0	; select bank0
 10397  0BF8  00A0               	movwf	MTOUCH_Button_Initialize@name
 10398                           
 10399                           ;mtouch_button.c: 159: mtouch_button_t* button = &mtouch_button[name];
 10400  0BF9  0820               	movf	MTOUCH_Button_Initialize@name,w
 10401  0BFA  00F8               	movwf	??_MTOUCH_Button_Initialize
 10402  0BFB  3003               	movlw	3
 10403  0BFC                     u5275:	
 10404  0BFC  35F8               	lslf	??_MTOUCH_Button_Initialize,f
 10405  0BFD  3EFF               	addlw	-1
 10406  0BFE  1D03               	skipz
 10407  0BFF  2BFC               	goto	u5275
 10408  0C00  3578               	lslf	??_MTOUCH_Button_Initialize,w
 10409  0C01  3EA0               	addlw	(low (_mtouch_button| (0+256)))& (0+255)
 10410  0C02  00F9               	movwf	??_MTOUCH_Button_Initialize+1
 10411  0C03  0879               	movf	??_MTOUCH_Button_Initialize+1,w
 10412  0C04  00A1               	movwf	MTOUCH_Button_Initialize@button
 10413                           
 10414                           ;mtouch_button.c: 161: button->state = MTOUCH_BUTTON_STATE_initializing;
 10415  0C05  0821               	movf	MTOUCH_Button_Initialize@button,w
 10416  0C06  3E02               	addlw	2
 10417  0C07  0086               	movwf	6
 10418  0C08  3001               	movlw	1	; select bank2/3
 10419  0C09  0087               	movwf	7
 10420  0C0A  0181               	clrf	1
 10421                           
 10422                           ;mtouch_button.c: 162: button->baseline = (mtouch_button_baseline_t)0;
 10423  0C0B  0821               	movf	MTOUCH_Button_Initialize@button,w
 10424  0C0C  3E05               	addlw	5
 10425  0C0D  0086               	movwf	6
 10426  0C0E  3001               	movlw	1	; select bank2/3
 10427  0C0F  0087               	movwf	7
 10428  0C10  3000               	movlw	0
 10429  0C11  3FC0               	movwi [0]fsr1
 10430  0C12  3000               	movlw	0
 10431  0C13  3FC1               	movwi [1]fsr1
 10432  0C14  3FC2               	movwi [2]fsr1
 10433  0C15  3FC3               	movwi [3]fsr1
 10434                           
 10435                           ;mtouch_button.c: 163: button->counter = (mtouch_button_statecounter_t)0;
 10436  0C16  0821               	movf	MTOUCH_Button_Initialize@button,w
 10437  0C17  3E0A               	addlw	10
 10438  0C18  0086               	movwf	6
 10439  0C19  3001               	movlw	1	; select bank2/3
 10440  0C1A  0087               	movwf	7
 10441  0C1B  3000               	movlw	0
 10442  0C1C  3FC0               	movwi [0]fsr1
 10443  0C1D  3FC1               	movwi [1]fsr1
 10444                           
 10445                           ;mtouch_button.c: 164: button->baseline_count = (mtouch_button_baselinecounter_t)0;
 10446  0C1E  0821               	movf	MTOUCH_Button_Initialize@button,w
 10447  0C1F  3E0C               	addlw	12
 10448  0C20  0086               	movwf	6
 10449  0C21  3001               	movlw	1	; select bank2/3
 10450  0C22  0087               	movwf	7
 10451  0C23  3000               	movlw	0
 10452  0C24  3FC0               	movwi [0]fsr1
 10453  0C25  3FC1               	movwi [1]fsr1
 10454                           
 10455                           ;mtouch_button.c: 166: MTOUCH_Sensor_Calibrate(button->sensor);
 10456  0C26  0A21               	incf	MTOUCH_Button_Initialize@button,w
 10457  0C27  0086               	movwf	6
 10458  0C28  3001               	movlw	1	; select bank2/3
 10459  0C29  0087               	movwf	7
 10460  0C2A  0801               	movf	1,w
 10461  0C2B  318A  2261         	fcall	_MTOUCH_Sensor_Calibrate
 10462  0C2D  0008               	return
 10463  0C2E                     __end_of_MTOUCH_Button_Initialize:	
 10464                           
 10465                           	psect	text66
 10466  0A61                     __ptext66:	
 10467 ;; *************** function _MTOUCH_Sensor_Calibrate *****************
 10468 ;; Defined at:
 10469 ;;		line 794 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10470 ;; Parameters:    Size  Location     Type
 10471 ;;  sensor          1    wreg     enum E3328
 10472 ;; Auto vars:     Size  Location     Type
 10473 ;;  sensor          1    7[COMMON] enum E3328
 10474 ;; Return value:  Size  Location     Type
 10475 ;;                  1    wreg      void 
 10476 ;; Registers used:
 10477 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10478 ;; Tracked objects:
 10479 ;;		On entry : 0/0
 10480 ;;		On exit  : 0/0
 10481 ;;		Unchanged: 0/0
 10482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10483 ;;      Params:         0       0       0       0       0       0       0       0
 10484 ;;      Locals:         1       0       0       0       0       0       0       0
 10485 ;;      Temps:          1       0       0       0       0       0       0       0
 10486 ;;      Totals:         2       0       0       0       0       0       0       0
 10487 ;;Total ram usage:        2 bytes
 10488 ;; Hardware stack levels used:    1
 10489 ;; Hardware stack levels required when called:    3
 10490 ;; This function calls:
 10491 ;;		___bmul
 10492 ;; This function is called by:
 10493 ;;		_MTOUCH_Button_Initialize
 10494 ;;		_MTOUCH_Sensor_Initialize
 10495 ;; This function uses a non-reentrant model
 10496 ;;
 10497                           
 10498                           
 10499                           ;psect for function _MTOUCH_Sensor_Calibrate
 10500  0A61                     _MTOUCH_Sensor_Calibrate:	
 10501                           
 10502                           ;incstack = 0
 10503                           ; Regs used in _MTOUCH_Sensor_Calibrate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10504                           ;MTOUCH_Sensor_Calibrate@sensor stored from wreg
 10505  0A61  00F7               	movwf	MTOUCH_Sensor_Calibrate@sensor
 10506                           
 10507                           ;mtouch_sensor.c: 796: if(sensor < 6)
 10508  0A62  3006               	movlw	6
 10509  0A63  0277               	subwf	MTOUCH_Sensor_Calibrate@sensor,w
 10510  0A64  1803               	skipnc
 10511  0A65  0008               	return
 10512                           
 10513                           ;mtouch_sensor.c: 797: {
 10514                           ;mtouch_sensor.c: 798: mtouch_sensor[sensor].calibrated = 0;
 10515  0A66  3009               	movlw	9
 10516  0A67  00F6               	movwf	??_MTOUCH_Sensor_Calibrate
 10517  0A68  0876               	movf	??_MTOUCH_Sensor_Calibrate,w
 10518  0A69  00F2               	movwf	___bmul@multiplicand
 10519  0A6A  0877               	movf	MTOUCH_Sensor_Calibrate@sensor,w
 10520  0A6B  3188  20FA  318A   	fcall	___bmul
 10521  0A6E  3E08               	addlw	8
 10522  0A6F  3E20               	addlw	(low (_mtouch_sensor| (0+256)))& (0+255)
 10523  0A70  0086               	movwf	6
 10524  0A71  3001               	movlw	1	; select bank2/3
 10525  0A72  0087               	movwf	7
 10526  0A73  1101               	bcf	1,2
 10527                           
 10528                           ;mtouch_sensor.c: 799: mtouch_sensor[sensor].addcap = 0;
 10529  0A74  3009               	movlw	9
 10530  0A75  00F6               	movwf	??_MTOUCH_Sensor_Calibrate
 10531  0A76  0876               	movf	??_MTOUCH_Sensor_Calibrate,w
 10532  0A77  00F2               	movwf	___bmul@multiplicand
 10533  0A78  0877               	movf	MTOUCH_Sensor_Calibrate@sensor,w
 10534  0A79  3188  20FA         	fcall	___bmul
 10535  0A7B  3E05               	addlw	5
 10536  0A7C  3E20               	addlw	(low (_mtouch_sensor| (0+256)))& (0+255)
 10537  0A7D  0086               	movwf	6
 10538  0A7E  3001               	movlw	1	; select bank2/3
 10539  0A7F  0087               	movwf	7
 10540  0A80  0181               	clrf	1
 10541  0A81  0008               	return
 10542  0A82                     __end_of_MTOUCH_Sensor_Calibrate:	
 10543                           
 10544                           	psect	text67
 10545  016A                     __ptext67:	
 10546 ;; *************** function _Button_Baseline_Update *****************
 10547 ;; Defined at:
 10548 ;;		line 443 in file "mcc_generated_files/mtouch/mtouch_button.c"
 10549 ;; Parameters:    Size  Location     Type
 10550 ;;  button          1    wreg     PTR struct .
 10551 ;;		 -> mtouch_button(80), 
 10552 ;; Auto vars:     Size  Location     Type
 10553 ;;  button          1    6[BANK0 ] PTR struct .
 10554 ;;		 -> mtouch_button(80), 
 10555 ;; Return value:  Size  Location     Type
 10556 ;;                  1    wreg      void 
 10557 ;; Registers used:
 10558 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10559 ;; Tracked objects:
 10560 ;;		On entry : 0/0
 10561 ;;		On exit  : 0/0
 10562 ;;		Unchanged: 0/0
 10563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10564 ;;      Params:         0       0       0       0       0       0       0       0
 10565 ;;      Locals:         0       1       0       0       0       0       0       0
 10566 ;;      Temps:          0       6       0       0       0       0       0       0
 10567 ;;      Totals:         0       7       0       0       0       0       0       0
 10568 ;;Total ram usage:        7 bytes
 10569 ;; Hardware stack levels used:    1
 10570 ;; Hardware stack levels required when called:    4
 10571 ;; This function calls:
 10572 ;;		_MTOUCH_Sensor_RawSample_Get
 10573 ;; This function is called by:
 10574 ;;		_Button_State_Initializing
 10575 ;;		_Button_State_NotPressed
 10576 ;; This function uses a non-reentrant model
 10577 ;;
 10578                           
 10579                           
 10580                           ;psect for function _Button_Baseline_Update
 10581  016A                     _Button_Baseline_Update:	
 10582                           
 10583                           ;incstack = 0
 10584                           ; Regs used in _Button_Baseline_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 10585                           ;Button_Baseline_Update@button stored from wreg
 10586  016A  0020               	movlb	0	; select bank0
 10587  016B  00A6               	movwf	Button_Baseline_Update@button
 10588                           
 10589                           ;mtouch_button.c: 445: if (INTCONbits.GIE == (uint8_t)1)
 10590  016C  1F8B               	btfss	11,7	;volatile
 10591  016D  29B5               	goto	l5331
 10592                           
 10593                           ;mtouch_button.c: 446: {
 10594                           ;mtouch_button.c: 447: INTCONbits.GIE = (uint8_t)0;
 10595  016E  138B               	bcf	11,7	;volatile
 10596                           
 10597                           ;mtouch_button.c: 448: button->baseline -= (button->baseline) >> ((uint8_t)4);
 10598  016F  0826               	movf	Button_Baseline_Update@button,w
 10599  0170  3E05               	addlw	5
 10600  0171  0086               	movwf	6
 10601  0172  3001               	movlw	1	; select bank2/3
 10602  0173  0087               	movwf	7
 10603  0174  3F40               	moviw [0]fsr1
 10604  0175  00A0               	movwf	??_Button_Baseline_Update
 10605  0176  3F41               	moviw [1]fsr1
 10606  0177  00A1               	movwf	??_Button_Baseline_Update+1
 10607  0178  3F42               	moviw [2]fsr1
 10608  0179  00A2               	movwf	??_Button_Baseline_Update+2
 10609  017A  3F43               	moviw [3]fsr1
 10610  017B  00A3               	movwf	??_Button_Baseline_Update+3
 10611  017C  3004               	movlw	4
 10612  017D                     u5305:	
 10613  017D  36A3               	lsrf	??_Button_Baseline_Update+3,f
 10614  017E  0CA2               	rrf	??_Button_Baseline_Update+2,f
 10615  017F  0CA1               	rrf	??_Button_Baseline_Update+1,f
 10616  0180  0CA0               	rrf	??_Button_Baseline_Update,f
 10617  0181  0B89               	decfsz	9,f
 10618  0182  297D               	goto	u5305
 10619  0183  0826               	movf	Button_Baseline_Update@button,w
 10620  0184  3E05               	addlw	5
 10621  0185  0086               	movwf	6
 10622  0186  3001               	movlw	1	; select bank2/3
 10623  0187  0087               	movwf	7
 10624  0188  0820               	movf	??_Button_Baseline_Update,w
 10625  0189  0281               	subwf	1,f
 10626  018A  3141               	addfsr 1,1
 10627  018B  0821               	movf	??_Button_Baseline_Update+1,w
 10628  018C  3B81               	subwfb	1,f
 10629  018D  3141               	addfsr 1,1
 10630  018E  0822               	movf	??_Button_Baseline_Update+2,w
 10631  018F  3B81               	subwfb	1,f
 10632  0190  3141               	addfsr 1,1
 10633  0191  0823               	movf	??_Button_Baseline_Update+3,w
 10634  0192  3B81               	subwfb	1,f
 10635  0193  317D               	addfsr 1,-3
 10636                           
 10637                           ;mtouch_button.c: 449: button->baseline += button->reading;
 10638  0194  0826               	movf	Button_Baseline_Update@button,w
 10639  0195  3E03               	addlw	3
 10640  0196  0086               	movwf	6
 10641  0197  3001               	movlw	1	; select bank2/3
 10642  0198  0087               	movwf	7
 10643  0199  3F40               	moviw [0]fsr1
 10644  019A  00A0               	movwf	??_Button_Baseline_Update
 10645  019B  3F41               	moviw [1]fsr1
 10646  019C  00A1               	movwf	??_Button_Baseline_Update+1
 10647  019D  0820               	movf	??_Button_Baseline_Update,w
 10648  019E  00A2               	movwf	??_Button_Baseline_Update+2
 10649  019F  0821               	movf	??_Button_Baseline_Update+1,w
 10650  01A0  00A3               	movwf	??_Button_Baseline_Update+3
 10651  01A1  01A4               	clrf	??_Button_Baseline_Update+4
 10652  01A2  01A5               	clrf	??_Button_Baseline_Update+5
 10653  01A3  0826               	movf	Button_Baseline_Update@button,w
 10654  01A4  3E05               	addlw	5
 10655  01A5  0086               	movwf	6
 10656  01A6  3001               	movlw	1	; select bank2/3
 10657  01A7  0087               	movwf	7
 10658  01A8  0822               	movf	??_Button_Baseline_Update+2,w
 10659  01A9  0781               	addwf	1,f
 10660  01AA  3141               	addfsr 1,1
 10661  01AB  0823               	movf	??_Button_Baseline_Update+3,w
 10662  01AC  3D81               	addwfc	1,f
 10663  01AD  3141               	addfsr 1,1
 10664  01AE  0824               	movf	??_Button_Baseline_Update+4,w
 10665  01AF  3D81               	addwfc	1,f
 10666  01B0  3141               	addfsr 1,1
 10667  01B1  0825               	movf	??_Button_Baseline_Update+5,w
 10668  01B2  3D81               	addwfc	1,f
 10669                           
 10670                           ;mtouch_button.c: 450: INTCONbits.GIE = (uint8_t)1;
 10671  01B3  178B               	bsf	11,7	;volatile
 10672                           
 10673                           ;mtouch_button.c: 451: }
 10674  01B4  0008               	return
 10675  01B5                     l5331:	
 10676                           
 10677                           ;mtouch_button.c: 452: else
 10678                           ;mtouch_button.c: 453: {
 10679                           ;mtouch_button.c: 454: button->baseline -= (button->baseline) >> ((uint8_t)4);
 10680  01B5  0826               	movf	Button_Baseline_Update@button,w
 10681  01B6  3E05               	addlw	5
 10682  01B7  0086               	movwf	6
 10683  01B8  3001               	movlw	1	; select bank2/3
 10684  01B9  0087               	movwf	7
 10685  01BA  3F40               	moviw [0]fsr1
 10686  01BB  00A0               	movwf	??_Button_Baseline_Update
 10687  01BC  3F41               	moviw [1]fsr1
 10688  01BD  00A1               	movwf	??_Button_Baseline_Update+1
 10689  01BE  3F42               	moviw [2]fsr1
 10690  01BF  00A2               	movwf	??_Button_Baseline_Update+2
 10691  01C0  3F43               	moviw [3]fsr1
 10692  01C1  00A3               	movwf	??_Button_Baseline_Update+3
 10693  01C2  3004               	movlw	4
 10694  01C3                     u5315:	
 10695  01C3  36A3               	lsrf	??_Button_Baseline_Update+3,f
 10696  01C4  0CA2               	rrf	??_Button_Baseline_Update+2,f
 10697  01C5  0CA1               	rrf	??_Button_Baseline_Update+1,f
 10698  01C6  0CA0               	rrf	??_Button_Baseline_Update,f
 10699  01C7  0B89               	decfsz	9,f
 10700  01C8  29C3               	goto	u5315
 10701  01C9  0826               	movf	Button_Baseline_Update@button,w
 10702  01CA  3E05               	addlw	5
 10703  01CB  0086               	movwf	6
 10704  01CC  3001               	movlw	1	; select bank2/3
 10705  01CD  0087               	movwf	7
 10706  01CE  0820               	movf	??_Button_Baseline_Update,w
 10707  01CF  0281               	subwf	1,f
 10708  01D0  3141               	addfsr 1,1
 10709  01D1  0821               	movf	??_Button_Baseline_Update+1,w
 10710  01D2  3B81               	subwfb	1,f
 10711  01D3  3141               	addfsr 1,1
 10712  01D4  0822               	movf	??_Button_Baseline_Update+2,w
 10713  01D5  3B81               	subwfb	1,f
 10714  01D6  3141               	addfsr 1,1
 10715  01D7  0823               	movf	??_Button_Baseline_Update+3,w
 10716  01D8  3B81               	subwfb	1,f
 10717  01D9  317D               	addfsr 1,-3
 10718                           
 10719                           ;mtouch_button.c: 455: button->baseline += MTOUCH_Sensor_RawSample_Get(button->sensor);
 10720  01DA  0A26               	incf	Button_Baseline_Update@button,w
 10721  01DB  0086               	movwf	6
 10722  01DC  3001               	movlw	1	; select bank2/3
 10723  01DD  0087               	movwf	7
 10724  01DE  0801               	movf	1,w
 10725  01DF  3189  2185         	fcall	_MTOUCH_Sensor_RawSample_Get
 10726  01E1  0876               	movf	?_MTOUCH_Sensor_RawSample_Get,w
 10727  01E2  0020               	movlb	0	; select bank0
 10728  01E3  00A0               	movwf	??_Button_Baseline_Update
 10729  01E4  0877               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 10730  01E5  00A1               	movwf	??_Button_Baseline_Update+1
 10731  01E6  01A2               	clrf	??_Button_Baseline_Update+2
 10732  01E7  01A3               	clrf	??_Button_Baseline_Update+3
 10733  01E8  0826               	movf	Button_Baseline_Update@button,w
 10734  01E9  3E05               	addlw	5
 10735  01EA  0086               	movwf	6
 10736  01EB  3001               	movlw	1	; select bank2/3
 10737  01EC  0087               	movwf	7
 10738  01ED  0820               	movf	??_Button_Baseline_Update,w
 10739  01EE  0781               	addwf	1,f
 10740  01EF  3141               	addfsr 1,1
 10741  01F0  0821               	movf	??_Button_Baseline_Update+1,w
 10742  01F1  3D81               	addwfc	1,f
 10743  01F2  3141               	addfsr 1,1
 10744  01F3  0822               	movf	??_Button_Baseline_Update+2,w
 10745  01F4  3D81               	addwfc	1,f
 10746  01F5  3141               	addfsr 1,1
 10747  01F6  0823               	movf	??_Button_Baseline_Update+3,w
 10748  01F7  3D81               	addwfc	1,f
 10749  01F8  0008               	return
 10750  01F9                     __end_of_Button_Baseline_Update:	
 10751                           
 10752                           	psect	text68
 10753  0B92                     __ptext68:	
 10754 ;; *************** function _Button_Baseline_Initialize *****************
 10755 ;; Defined at:
 10756 ;;		line 437 in file "mcc_generated_files/mtouch/mtouch_button.c"
 10757 ;; Parameters:    Size  Location     Type
 10758 ;;  button          1    wreg     PTR struct .
 10759 ;;		 -> mtouch_button(80), 
 10760 ;; Auto vars:     Size  Location     Type
 10761 ;;  button          1    4[BANK0 ] PTR struct .
 10762 ;;		 -> mtouch_button(80), 
 10763 ;; Return value:  Size  Location     Type
 10764 ;;                  1    wreg      void 
 10765 ;; Registers used:
 10766 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10767 ;; Tracked objects:
 10768 ;;		On entry : 0/0
 10769 ;;		On exit  : 0/0
 10770 ;;		Unchanged: 0/0
 10771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10772 ;;      Params:         0       0       0       0       0       0       0       0
 10773 ;;      Locals:         0       1       0       0       0       0       0       0
 10774 ;;      Temps:          0       4       0       0       0       0       0       0
 10775 ;;      Totals:         0       5       0       0       0       0       0       0
 10776 ;;Total ram usage:        5 bytes
 10777 ;; Hardware stack levels used:    1
 10778 ;; Hardware stack levels required when called:    4
 10779 ;; This function calls:
 10780 ;;		_MTOUCH_Sensor_RawSample_Get
 10781 ;; This function is called by:
 10782 ;;		_Button_State_Initializing
 10783 ;; This function uses a non-reentrant model
 10784 ;;
 10785                           
 10786                           
 10787                           ;psect for function _Button_Baseline_Initialize
 10788  0B92                     _Button_Baseline_Initialize:	
 10789                           
 10790                           ;incstack = 0
 10791                           ; Regs used in _Button_Baseline_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 10792                           ;Button_Baseline_Initialize@button stored from wreg
 10793  0B92  0020               	movlb	0	; select bank0
 10794  0B93  00A4               	movwf	Button_Baseline_Initialize@button
 10795                           
 10796                           ;mtouch_button.c: 439: button->baseline = MTOUCH_Sensor_RawSample_Get(button->sensor);
 10797  0B94  0A24               	incf	Button_Baseline_Initialize@button,w
 10798  0B95  0086               	movwf	6
 10799  0B96  3001               	movlw	1	; select bank2/3
 10800  0B97  0087               	movwf	7
 10801  0B98  0801               	movf	1,w
 10802  0B99  3189  2185  318B   	fcall	_MTOUCH_Sensor_RawSample_Get
 10803  0B9C  0876               	movf	?_MTOUCH_Sensor_RawSample_Get,w
 10804  0B9D  0020               	movlb	0	; select bank0
 10805  0B9E  00A0               	movwf	??_Button_Baseline_Initialize
 10806  0B9F  0877               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 10807  0BA0  00A1               	movwf	??_Button_Baseline_Initialize+1
 10808  0BA1  01A2               	clrf	??_Button_Baseline_Initialize+2
 10809  0BA2  01A3               	clrf	??_Button_Baseline_Initialize+3
 10810  0BA3  0824               	movf	Button_Baseline_Initialize@button,w
 10811  0BA4  3E05               	addlw	5
 10812  0BA5  0086               	movwf	6
 10813  0BA6  3001               	movlw	1	; select bank2/3
 10814  0BA7  0087               	movwf	7
 10815  0BA8  0820               	movf	??_Button_Baseline_Initialize,w
 10816  0BA9  3FC0               	movwi [0]fsr1
 10817  0BAA  0821               	movf	??_Button_Baseline_Initialize+1,w
 10818  0BAB  3FC1               	movwi [1]fsr1
 10819  0BAC  0822               	movf	??_Button_Baseline_Initialize+2,w
 10820  0BAD  3FC2               	movwi [2]fsr1
 10821  0BAE  0823               	movf	??_Button_Baseline_Initialize+3,w
 10822  0BAF  3FC3               	movwi [3]fsr1
 10823                           
 10824                           ;mtouch_button.c: 440: button->baseline <<= ((uint8_t)4);
 10825  0BB0  0824               	movf	Button_Baseline_Initialize@button,w
 10826  0BB1  3E05               	addlw	5
 10827  0BB2  0086               	movwf	6
 10828  0BB3  3001               	movlw	1	; select bank2/3
 10829  0BB4  0087               	movwf	7
 10830  0BB5  3004               	movlw	4
 10831  0BB6                     u5285:	
 10832  0BB6  3581               	lslf	1,f
 10833  0BB7  3141               	addfsr 1,1
 10834  0BB8  0D81               	rlf	1,f
 10835  0BB9  3141               	addfsr 1,1
 10836  0BBA  0D81               	rlf	1,f
 10837  0BBB  3141               	addfsr 1,1
 10838  0BBC  0D81               	rlf	1,f
 10839  0BBD  317D               	addfsr 1,-3
 10840  0BBE  0B89               	decfsz	9,f
 10841  0BBF  2BB6               	goto	u5285
 10842  0BC0  0008               	return
 10843  0BC1                     __end_of_Button_Baseline_Initialize:	
 10844                           
 10845                           	psect	text69
 10846  0F0F                     __ptext69:	
 10847 ;; *************** function _Button_Reading_Update *****************
 10848 ;; Defined at:
 10849 ;;		line 421 in file "mcc_generated_files/mtouch/mtouch_button.c"
 10850 ;; Parameters:    Size  Location     Type
 10851 ;;  button          1    wreg     PTR struct .
 10852 ;;		 -> mtouch_button(80), 
 10853 ;; Auto vars:     Size  Location     Type
 10854 ;;  button          1    2[BANK0 ] PTR struct .
 10855 ;;		 -> mtouch_button(80), 
 10856 ;; Return value:  Size  Location     Type
 10857 ;;                  1    wreg      void 
 10858 ;; Registers used:
 10859 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10860 ;; Tracked objects:
 10861 ;;		On entry : 0/0
 10862 ;;		On exit  : 0/0
 10863 ;;		Unchanged: 0/0
 10864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10865 ;;      Params:         0       0       0       0       0       0       0       0
 10866 ;;      Locals:         0       1       0       0       0       0       0       0
 10867 ;;      Temps:          0       2       0       0       0       0       0       0
 10868 ;;      Totals:         0       3       0       0       0       0       0       0
 10869 ;;Total ram usage:        3 bytes
 10870 ;; Hardware stack levels used:    1
 10871 ;; Hardware stack levels required when called:    4
 10872 ;; This function calls:
 10873 ;;		_MTOUCH_Sensor_RawSample_Get
 10874 ;; This function is called by:
 10875 ;;		_Button_Service
 10876 ;; This function uses a non-reentrant model
 10877 ;;
 10878                           
 10879                           
 10880                           ;psect for function _Button_Reading_Update
 10881  0F0F                     _Button_Reading_Update:	
 10882                           
 10883                           ;incstack = 0
 10884                           ; Regs used in _Button_Reading_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10885                           ;Button_Reading_Update@button stored from wreg
 10886  0F0F  0020               	movlb	0	; select bank0
 10887  0F10  00A2               	movwf	Button_Reading_Update@button
 10888                           
 10889                           ;mtouch_button.c: 423: if (INTCONbits.GIE == (uint8_t)1)
 10890  0F11  1F8B               	btfss	11,7	;volatile
 10891  0F12  2F49               	goto	l5425
 10892                           
 10893                           ;mtouch_button.c: 424: {
 10894                           ;mtouch_button.c: 425: INTCONbits.GIE = (uint8_t)0;
 10895  0F13  138B               	bcf	11,7	;volatile
 10896                           
 10897                           ;mtouch_button.c: 426: button->reading -= button->reading>>(uint8_t)2;
 10898  0F14  0822               	movf	Button_Reading_Update@button,w
 10899  0F15  3E03               	addlw	3
 10900  0F16  0086               	movwf	6
 10901  0F17  3001               	movlw	1	; select bank2/3
 10902  0F18  0087               	movwf	7
 10903  0F19  3F40               	moviw [0]fsr1
 10904  0F1A  00A0               	movwf	??_Button_Reading_Update
 10905  0F1B  3F41               	moviw [1]fsr1
 10906  0F1C  00A1               	movwf	??_Button_Reading_Update+1
 10907  0F1D  36A1               	lsrf	??_Button_Reading_Update+1,f
 10908  0F1E  0CA0               	rrf	??_Button_Reading_Update,f
 10909  0F1F  36A1               	lsrf	??_Button_Reading_Update+1,f
 10910  0F20  0CA0               	rrf	??_Button_Reading_Update,f
 10911  0F21  0822               	movf	Button_Reading_Update@button,w
 10912  0F22  3E03               	addlw	3
 10913  0F23  0086               	movwf	6
 10914  0F24  3001               	movlw	1	; select bank2/3
 10915  0F25  0087               	movwf	7
 10916  0F26  0820               	movf	??_Button_Reading_Update,w
 10917  0F27  0281               	subwf	1,f
 10918  0F28  3141               	addfsr 1,1
 10919  0F29  0821               	movf	??_Button_Reading_Update+1,w
 10920  0F2A  3B81               	subwfb	1,f
 10921  0F2B  317F               	addfsr 1,-1
 10922                           
 10923                           ;mtouch_button.c: 427: button->reading += MTOUCH_Sensor_RawSample_Get(button->sensor)>>(
      +                          uint8_t)2;
 10924  0F2C  0A22               	incf	Button_Reading_Update@button,w
 10925  0F2D  0086               	movwf	6
 10926  0F2E  3001               	movlw	1	; select bank2/3
 10927  0F2F  0087               	movwf	7
 10928  0F30  0801               	movf	1,w
 10929  0F31  3189  2185         	fcall	_MTOUCH_Sensor_RawSample_Get
 10930  0F33  0876               	movf	?_MTOUCH_Sensor_RawSample_Get,w
 10931  0F34  0020               	movlb	0	; select bank0
 10932  0F35  00A0               	movwf	??_Button_Reading_Update
 10933  0F36  0877               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 10934  0F37  00A1               	movwf	??_Button_Reading_Update+1
 10935  0F38  36A1               	lsrf	??_Button_Reading_Update+1,f
 10936  0F39  0CA0               	rrf	??_Button_Reading_Update,f
 10937  0F3A  36A1               	lsrf	??_Button_Reading_Update+1,f
 10938  0F3B  0CA0               	rrf	??_Button_Reading_Update,f
 10939  0F3C  0822               	movf	Button_Reading_Update@button,w
 10940  0F3D  3E03               	addlw	3
 10941  0F3E  0086               	movwf	6
 10942  0F3F  3001               	movlw	1	; select bank2/3
 10943  0F40  0087               	movwf	7
 10944  0F41  0820               	movf	??_Button_Reading_Update,w
 10945  0F42  0781               	addwf	1,f
 10946  0F43  3141               	addfsr 1,1
 10947  0F44  0821               	movf	??_Button_Reading_Update+1,w
 10948  0F45  3D81               	addwfc	1,f
 10949  0F46  317F               	addfsr 1,-1
 10950                           
 10951                           ;mtouch_button.c: 428: INTCONbits.GIE = (uint8_t)1;
 10952  0F47  178B               	bsf	11,7	;volatile
 10953                           
 10954                           ;mtouch_button.c: 429: }
 10955  0F48  0008               	return
 10956  0F49                     l5425:	
 10957                           
 10958                           ;mtouch_button.c: 430: else
 10959                           ;mtouch_button.c: 431: {
 10960                           ;mtouch_button.c: 432: button->reading -= button->reading>>(uint8_t)2;
 10961  0F49  0822               	movf	Button_Reading_Update@button,w
 10962  0F4A  3E03               	addlw	3
 10963  0F4B  0086               	movwf	6
 10964  0F4C  3001               	movlw	1	; select bank2/3
 10965  0F4D  0087               	movwf	7
 10966  0F4E  3F40               	moviw [0]fsr1
 10967  0F4F  00A0               	movwf	??_Button_Reading_Update
 10968  0F50  3F41               	moviw [1]fsr1
 10969  0F51  00A1               	movwf	??_Button_Reading_Update+1
 10970  0F52  36A1               	lsrf	??_Button_Reading_Update+1,f
 10971  0F53  0CA0               	rrf	??_Button_Reading_Update,f
 10972  0F54  36A1               	lsrf	??_Button_Reading_Update+1,f
 10973  0F55  0CA0               	rrf	??_Button_Reading_Update,f
 10974  0F56  0822               	movf	Button_Reading_Update@button,w
 10975  0F57  3E03               	addlw	3
 10976  0F58  0086               	movwf	6
 10977  0F59  3001               	movlw	1	; select bank2/3
 10978  0F5A  0087               	movwf	7
 10979  0F5B  0820               	movf	??_Button_Reading_Update,w
 10980  0F5C  0281               	subwf	1,f
 10981  0F5D  3141               	addfsr 1,1
 10982  0F5E  0821               	movf	??_Button_Reading_Update+1,w
 10983  0F5F  3B81               	subwfb	1,f
 10984  0F60  317F               	addfsr 1,-1
 10985                           
 10986                           ;mtouch_button.c: 433: button->reading += MTOUCH_Sensor_RawSample_Get(button->sensor)>>(
      +                          uint8_t)2;
 10987  0F61  0A22               	incf	Button_Reading_Update@button,w
 10988  0F62  0086               	movwf	6
 10989  0F63  3001               	movlw	1	; select bank2/3
 10990  0F64  0087               	movwf	7
 10991  0F65  0801               	movf	1,w
 10992  0F66  3189  2185         	fcall	_MTOUCH_Sensor_RawSample_Get
 10993  0F68  0876               	movf	?_MTOUCH_Sensor_RawSample_Get,w
 10994  0F69  0020               	movlb	0	; select bank0
 10995  0F6A  00A0               	movwf	??_Button_Reading_Update
 10996  0F6B  0877               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 10997  0F6C  00A1               	movwf	??_Button_Reading_Update+1
 10998  0F6D  36A1               	lsrf	??_Button_Reading_Update+1,f
 10999  0F6E  0CA0               	rrf	??_Button_Reading_Update,f
 11000  0F6F  36A1               	lsrf	??_Button_Reading_Update+1,f
 11001  0F70  0CA0               	rrf	??_Button_Reading_Update,f
 11002  0F71  0822               	movf	Button_Reading_Update@button,w
 11003  0F72  3E03               	addlw	3
 11004  0F73  0086               	movwf	6
 11005  0F74  3001               	movlw	1	; select bank2/3
 11006  0F75  0087               	movwf	7
 11007  0F76  0820               	movf	??_Button_Reading_Update,w
 11008  0F77  0781               	addwf	1,f
 11009  0F78  3141               	addfsr 1,1
 11010  0F79  0821               	movf	??_Button_Reading_Update+1,w
 11011  0F7A  3D81               	addwfc	1,f
 11012  0F7B  317F               	addfsr 1,-1
 11013  0F7C  0008               	return
 11014  0F7D                     __end_of_Button_Reading_Update:	
 11015                           
 11016                           	psect	text70
 11017  0985                     __ptext70:	
 11018 ;; *************** function _MTOUCH_Sensor_RawSample_Get *****************
 11019 ;; Defined at:
 11020 ;;		line 685 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11021 ;; Parameters:    Size  Location     Type
 11022 ;;  name            1    wreg     enum E3328
 11023 ;; Auto vars:     Size  Location     Type
 11024 ;;  name            1    9[COMMON] enum E3328
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  2    6[COMMON] unsigned int 
 11027 ;; Registers used:
 11028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11034 ;;      Params:         2       0       0       0       0       0       0       0
 11035 ;;      Locals:         1       0       0       0       0       0       0       0
 11036 ;;      Temps:          1       0       0       0       0       0       0       0
 11037 ;;      Totals:         4       0       0       0       0       0       0       0
 11038 ;;Total ram usage:        4 bytes
 11039 ;; Hardware stack levels used:    1
 11040 ;; Hardware stack levels required when called:    3
 11041 ;; This function calls:
 11042 ;;		___bmul
 11043 ;; This function is called by:
 11044 ;;		_Button_Reading_Update
 11045 ;;		_Button_Baseline_Initialize
 11046 ;;		_Button_Baseline_Update
 11047 ;;		_Proximity_Reading_Update
 11048 ;;		_Proximity_Baseline_Initialize
 11049 ;; This function uses a non-reentrant model
 11050 ;;
 11051                           
 11052                           
 11053                           ;psect for function _MTOUCH_Sensor_RawSample_Get
 11054  0985                     _MTOUCH_Sensor_RawSample_Get:	
 11055                           
 11056                           ;incstack = 0
 11057                           ; Regs used in _MTOUCH_Sensor_RawSample_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 11058                           ;MTOUCH_Sensor_RawSample_Get@name stored from wreg
 11059  0985  00F9               	movwf	MTOUCH_Sensor_RawSample_Get@name
 11060                           
 11061                           ;mtouch_sensor.c: 687: if (name < 6)
 11062  0986  3006               	movlw	6
 11063  0987  0279               	subwf	MTOUCH_Sensor_RawSample_Get@name,w
 11064  0988  1803               	skipnc
 11065  0989  299B               	goto	l5249
 11066                           
 11067                           ;mtouch_sensor.c: 688: {
 11068                           ;mtouch_sensor.c: 689: return mtouch_sensor[name].rawSample;
 11069  098A  3009               	movlw	9
 11070  098B  00F8               	movwf	??_MTOUCH_Sensor_RawSample_Get
 11071  098C  0878               	movf	??_MTOUCH_Sensor_RawSample_Get,w
 11072  098D  00F2               	movwf	___bmul@multiplicand
 11073  098E  0879               	movf	MTOUCH_Sensor_RawSample_Get@name,w
 11074  098F  3188  20FA         	fcall	___bmul
 11075  0991  3E06               	addlw	6
 11076  0992  3E20               	addlw	(low (_mtouch_sensor| (0+256)))& (0+255)
 11077  0993  0086               	movwf	6
 11078  0994  3001               	movlw	1	; select bank2/3
 11079  0995  0087               	movwf	7
 11080  0996  3F40               	moviw [0]fsr1
 11081  0997  00F6               	movwf	?_MTOUCH_Sensor_RawSample_Get
 11082  0998  3F41               	moviw [1]fsr1
 11083  0999  00F7               	movwf	?_MTOUCH_Sensor_RawSample_Get+1
 11084                           
 11085                           ;mtouch_sensor.c: 690: }
 11086  099A  0008               	return
 11087  099B                     l5249:	
 11088                           
 11089                           ;mtouch_sensor.c: 691: else
 11090                           ;mtouch_sensor.c: 692: return (mtouch_sensor_sample_t)0;
 11091  099B  01F6               	clrf	?_MTOUCH_Sensor_RawSample_Get
 11092  099C  01F7               	clrf	?_MTOUCH_Sensor_RawSample_Get+1
 11093  099D  0008               	return
 11094  099E                     __end_of_MTOUCH_Sensor_RawSample_Get:	
 11095                           
 11096                           	psect	text71
 11097  08FA                     __ptext71:	
 11098 ;; *************** function ___bmul *****************
 11099 ;; Defined at:
 11100 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul8.c"
 11101 ;; Parameters:    Size  Location     Type
 11102 ;;  multiplier      1    wreg     unsigned char 
 11103 ;;  multiplicand    1    2[COMMON] unsigned char 
 11104 ;; Auto vars:     Size  Location     Type
 11105 ;;  multiplier      1    5[COMMON] unsigned char 
 11106 ;;  product         1    4[COMMON] unsigned char 
 11107 ;; Return value:  Size  Location     Type
 11108 ;;                  1    wreg      unsigned char 
 11109 ;; Registers used:
 11110 ;;		wreg, status,2, status,0
 11111 ;; Tracked objects:
 11112 ;;		On entry : 0/0
 11113 ;;		On exit  : 0/0
 11114 ;;		Unchanged: 0/0
 11115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11116 ;;      Params:         1       0       0       0       0       0       0       0
 11117 ;;      Locals:         2       0       0       0       0       0       0       0
 11118 ;;      Temps:          1       0       0       0       0       0       0       0
 11119 ;;      Totals:         4       0       0       0       0       0       0       0
 11120 ;;Total ram usage:        4 bytes
 11121 ;; Hardware stack levels used:    1
 11122 ;; Hardware stack levels required when called:    2
 11123 ;; This function calls:
 11124 ;;		Nothing
 11125 ;; This function is called by:
 11126 ;;		_MTOUCH_Sensor_RawSample_Get
 11127 ;;		_MTOUCH_Sensor_Calibrate
 11128 ;;		_MTOUCH_Sensor_isCalibrated
 11129 ;;		_MTOUCH_Sensor_wasSampled
 11130 ;;		_MTOUCH_Sensor_Initialize
 11131 ;;		_MTOUCH_Sensor_Disable
 11132 ;;		_MTOUCH_Sensor_Enable
 11133 ;;		_MTOUCH_Sensor_isEnabled
 11134 ;;		_MTOUCH_Sensor_isActive
 11135 ;;		_MTOUCH_Sensor_AdditionalCap_Get
 11136 ;;		_MTOUCH_Sensor_AcquisitionTime_Get
 11137 ;;		_MTOUCH_Sensor_PreChargeTime_Get
 11138 ;; This function uses a non-reentrant model
 11139 ;;
 11140                           
 11141                           
 11142                           ;psect for function ___bmul
 11143  08FA                     ___bmul:	
 11144                           
 11145                           ;incstack = 0
 11146                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 11147                           ;___bmul@multiplier stored from wreg
 11148  08FA  00F5               	movwf	___bmul@multiplier
 11149  08FB  01F4               	clrf	___bmul@product
 11150  08FC                     l5051:	
 11151  08FC  1C75               	btfss	___bmul@multiplier,0
 11152  08FD  2902               	goto	l5055
 11153  08FE  0872               	movf	___bmul@multiplicand,w
 11154  08FF  00F3               	movwf	??___bmul
 11155  0900  0873               	movf	??___bmul,w
 11156  0901  07F4               	addwf	___bmul@product,f
 11157  0902                     l5055:	
 11158  0902  1003               	clrc
 11159  0903  0DF2               	rlf	___bmul@multiplicand,f
 11160  0904  1003               	clrc
 11161  0905  0CF5               	rrf	___bmul@multiplier,f
 11162  0906  0875               	movf	___bmul@multiplier,w
 11163  0907  1D03               	btfss	3,2
 11164  0908  28FC               	goto	l5051
 11165  0909  0874               	movf	___bmul@product,w
 11166  090A  0008               	return
 11167  090B                     __end_of___bmul:	
 11168                           
 11169                           	psect	text72
 11170  01F9                     __ptext72:	
 11171 ;; *************** function _Button_Deviation_Update *****************
 11172 ;; Defined at:
 11173 ;;		line 372 in file "mcc_generated_files/mtouch/mtouch_button.c"
 11174 ;; Parameters:    Size  Location     Type
 11175 ;;  button          1    wreg     PTR struct .
 11176 ;;		 -> mtouch_button(80), 
 11177 ;; Auto vars:     Size  Location     Type
 11178 ;;  button          1    2[COMMON] PTR struct .
 11179 ;;		 -> mtouch_button(80), 
 11180 ;;  deviation       4    3[COMMON] long 
 11181 ;; Return value:  Size  Location     Type
 11182 ;;                  1    wreg      void 
 11183 ;; Registers used:
 11184 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11185 ;; Tracked objects:
 11186 ;;		On entry : 0/0
 11187 ;;		On exit  : 0/0
 11188 ;;		Unchanged: 0/0
 11189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11190 ;;      Params:         0       0       0       0       0       0       0       0
 11191 ;;      Locals:         5       0       0       0       0       0       0       0
 11192 ;;      Temps:          0      10       0       0       0       0       0       0
 11193 ;;      Totals:         5      10       0       0       0       0       0       0
 11194 ;;Total ram usage:       15 bytes
 11195 ;; Hardware stack levels used:    1
 11196 ;; Hardware stack levels required when called:    2
 11197 ;; This function calls:
 11198 ;;		Nothing
 11199 ;; This function is called by:
 11200 ;;		_Button_Service
 11201 ;; This function uses a non-reentrant model
 11202 ;;
 11203                           
 11204                           
 11205                           ;psect for function _Button_Deviation_Update
 11206  01F9                     _Button_Deviation_Update:	
 11207                           
 11208                           ;incstack = 0
 11209                           ; Regs used in _Button_Deviation_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
 11210                           ;Button_Deviation_Update@button stored from wreg
 11211  01F9  00F2               	movwf	Button_Deviation_Update@button
 11212                           
 11213                           ;mtouch_button.c: 374: int32_t deviation;
 11214                           ;mtouch_button.c: 376: deviation = (int32_t)((int32_t)(button->reading) - (int32_t)((but
      +                          ton->baseline)>>((uint8_t)4)));
 11215  01FA  0872               	movf	Button_Deviation_Update@button,w
 11216  01FB  3E05               	addlw	5
 11217  01FC  0086               	movwf	6
 11218  01FD  3001               	movlw	1	; select bank2/3
 11219  01FE  0087               	movwf	7
 11220  01FF  3F40               	moviw [0]fsr1
 11221  0200  0020               	movlb	0	; select bank0
 11222  0201  00A0               	movwf	??_Button_Deviation_Update
 11223  0202  3F41               	moviw [1]fsr1
 11224  0203  00A1               	movwf	??_Button_Deviation_Update+1
 11225  0204  3F42               	moviw [2]fsr1
 11226  0205  00A2               	movwf	??_Button_Deviation_Update+2
 11227  0206  3F43               	moviw [3]fsr1
 11228  0207  00A3               	movwf	??_Button_Deviation_Update+3
 11229  0208  3004               	movlw	4
 11230  0209                     u5465:	
 11231  0209  36A3               	lsrf	??_Button_Deviation_Update+3,f
 11232  020A  0CA2               	rrf	??_Button_Deviation_Update+2,f
 11233  020B  0CA1               	rrf	??_Button_Deviation_Update+1,f
 11234  020C  0CA0               	rrf	??_Button_Deviation_Update,f
 11235  020D  0B89               	decfsz	9,f
 11236  020E  2A09               	goto	u5465
 11237  020F  09A0               	comf	??_Button_Deviation_Update,f
 11238  0210  09A1               	comf	??_Button_Deviation_Update+1,f
 11239  0211  09A2               	comf	??_Button_Deviation_Update+2,f
 11240  0212  09A3               	comf	??_Button_Deviation_Update+3,f
 11241  0213  0AA0               	incf	??_Button_Deviation_Update,f
 11242  0214  1903               	skipnz
 11243  0215  0AA1               	incf	??_Button_Deviation_Update+1,f
 11244  0216  1903               	skipnz
 11245  0217  0AA2               	incf	??_Button_Deviation_Update+2,f
 11246  0218  1903               	skipnz
 11247  0219  0AA3               	incf	??_Button_Deviation_Update+3,f
 11248  021A  0872               	movf	Button_Deviation_Update@button,w
 11249  021B  3E03               	addlw	3
 11250  021C  0086               	movwf	6
 11251  021D  3001               	movlw	1	; select bank2/3
 11252  021E  0087               	movwf	7
 11253  021F  3F40               	moviw [0]fsr1
 11254  0220  00A4               	movwf	??_Button_Deviation_Update+4
 11255  0221  3F41               	moviw [1]fsr1
 11256  0222  00A5               	movwf	??_Button_Deviation_Update+5
 11257  0223  0824               	movf	??_Button_Deviation_Update+4,w
 11258  0224  00A6               	movwf	??_Button_Deviation_Update+6
 11259  0225  0825               	movf	??_Button_Deviation_Update+5,w
 11260  0226  00A7               	movwf	??_Button_Deviation_Update+7
 11261  0227  01A8               	clrf	??_Button_Deviation_Update+8
 11262  0228  01A9               	clrf	??_Button_Deviation_Update+9
 11263  0229  0826               	movf	??_Button_Deviation_Update+6,w
 11264  022A  07A0               	addwf	??_Button_Deviation_Update,f
 11265  022B  0827               	movf	??_Button_Deviation_Update+7,w
 11266  022C  3DA1               	addwfc	??_Button_Deviation_Update+1,f
 11267  022D  0828               	movf	??_Button_Deviation_Update+8,w
 11268  022E  3DA2               	addwfc	??_Button_Deviation_Update+2,f
 11269  022F  0829               	movf	??_Button_Deviation_Update+9,w
 11270  0230  3DA3               	addwfc	??_Button_Deviation_Update+3,f
 11271  0231  0823               	movf	??_Button_Deviation_Update+3,w
 11272  0232  00F6               	movwf	Button_Deviation_Update@deviation+3
 11273  0233  0822               	movf	??_Button_Deviation_Update+2,w
 11274  0234  00F5               	movwf	Button_Deviation_Update@deviation+2
 11275  0235  0821               	movf	??_Button_Deviation_Update+1,w
 11276  0236  00F4               	movwf	Button_Deviation_Update@deviation+1
 11277  0237  0820               	movf	??_Button_Deviation_Update,w
 11278  0238  00F3               	movwf	Button_Deviation_Update@deviation
 11279                           
 11280                           ;mtouch_button.c: 379: deviation = deviation >> (button->scaling);
 11281  0239  0873               	movf	Button_Deviation_Update@deviation,w
 11282  023A  00A0               	movwf	??_Button_Deviation_Update
 11283  023B  0874               	movf	Button_Deviation_Update@deviation+1,w
 11284  023C  00A1               	movwf	??_Button_Deviation_Update+1
 11285  023D  0875               	movf	Button_Deviation_Update@deviation+2,w
 11286  023E  00A2               	movwf	??_Button_Deviation_Update+2
 11287  023F  0876               	movf	Button_Deviation_Update@deviation+3,w
 11288  0240  00A3               	movwf	??_Button_Deviation_Update+3
 11289  0241  0872               	movf	Button_Deviation_Update@button,w
 11290  0242  3E0F               	addlw	15
 11291  0243  0086               	movwf	6
 11292  0244  3001               	movlw	1	; select bank2/3
 11293  0245  0087               	movwf	7
 11294  0246  0A01               	incf	1,w
 11295  0247  2A4C               	goto	u5470
 11296  0248                     u5475:	
 11297  0248  37A3               	asrf	??_Button_Deviation_Update+3,f
 11298  0249  0CA2               	rrf	??_Button_Deviation_Update+2,f
 11299  024A  0CA1               	rrf	??_Button_Deviation_Update+1,f
 11300  024B  0CA0               	rrf	??_Button_Deviation_Update,f
 11301  024C                     u5470:	
 11302  024C  0B89               	decfsz	9,f
 11303  024D  2A48               	goto	u5475
 11304  024E  0823               	movf	??_Button_Deviation_Update+3,w
 11305  024F  00F6               	movwf	Button_Deviation_Update@deviation+3
 11306  0250  0822               	movf	??_Button_Deviation_Update+2,w
 11307  0251  00F5               	movwf	Button_Deviation_Update@deviation+2
 11308  0252  0821               	movf	??_Button_Deviation_Update+1,w
 11309  0253  00F4               	movwf	Button_Deviation_Update@deviation+1
 11310  0254  0820               	movf	??_Button_Deviation_Update,w
 11311  0255  00F3               	movwf	Button_Deviation_Update@deviation
 11312                           
 11313                           ;mtouch_button.c: 382: if (deviation > (mtouch_button_deviation_t)((127)))
 11314  0256  1BF6               	btfsc	Button_Deviation_Update@deviation+3,7
 11315  0257  2A6D               	goto	l5435
 11316  0258  0876               	movf	Button_Deviation_Update@deviation+3,w
 11317  0259  1D03               	btfss	3,2
 11318  025A  2A65               	goto	l5433
 11319  025B  0875               	movf	Button_Deviation_Update@deviation+2,w
 11320  025C  1D03               	btfss	3,2
 11321  025D  2A65               	goto	l5433
 11322  025E  0874               	movf	Button_Deviation_Update@deviation+1,w
 11323  025F  1D03               	btfss	3,2
 11324  0260  2A65               	goto	l5433
 11325  0261  3080               	movlw	128
 11326  0262  0273               	subwf	Button_Deviation_Update@deviation,w
 11327  0263  1C03               	btfss	3,0
 11328  0264  2A6D               	goto	l5435
 11329  0265                     l5433:	
 11330                           
 11331                           ;mtouch_button.c: 383: {
 11332                           ;mtouch_button.c: 384: deviation = (mtouch_button_deviation_t)((127));
 11333  0265  3000               	movlw	0
 11334  0266  00F6               	movwf	Button_Deviation_Update@deviation+3
 11335  0267  3000               	movlw	0
 11336  0268  00F5               	movwf	Button_Deviation_Update@deviation+2
 11337  0269  3000               	movlw	0
 11338  026A  00F4               	movwf	Button_Deviation_Update@deviation+1
 11339  026B  307F               	movlw	127
 11340  026C  00F3               	movwf	Button_Deviation_Update@deviation
 11341  026D                     l5435:	
 11342                           
 11343                           ;mtouch_button.c: 385: }
 11344                           ;mtouch_button.c: 386: if (deviation < (mtouch_button_deviation_t)((-128)))
 11345  026D  1FF6               	btfss	Button_Deviation_Update@deviation+3,7
 11346  026E  2A81               	goto	l5439
 11347  026F  3080               	movlw	128
 11348  0270  0273               	subwf	Button_Deviation_Update@deviation,w
 11349  0271  30FF               	movlw	255
 11350  0272  3B74               	subwfb	Button_Deviation_Update@deviation+1,w
 11351  0273  30FF               	movlw	255
 11352  0274  3B75               	subwfb	Button_Deviation_Update@deviation+2,w
 11353  0275  30FF               	movlw	255
 11354  0276  3B76               	subwfb	Button_Deviation_Update@deviation+3,w
 11355  0277  1803               	btfsc	3,0
 11356  0278  2A81               	goto	l5439
 11357                           
 11358                           ;mtouch_button.c: 387: {
 11359                           ;mtouch_button.c: 388: deviation = (mtouch_button_deviation_t)((-128));
 11360  0279  30FF               	movlw	255
 11361  027A  00F6               	movwf	Button_Deviation_Update@deviation+3
 11362  027B  30FF               	movlw	255
 11363  027C  00F5               	movwf	Button_Deviation_Update@deviation+2
 11364  027D  30FF               	movlw	255
 11365  027E  00F4               	movwf	Button_Deviation_Update@deviation+1
 11366  027F  3080               	movlw	128
 11367  0280  00F3               	movwf	Button_Deviation_Update@deviation
 11368  0281                     l5439:	
 11369                           
 11370                           ;mtouch_button.c: 389: }
 11371                           ;mtouch_button.c: 391: button->deviation = (mtouch_button_deviation_t)deviation;
 11372  0281  0873               	movf	Button_Deviation_Update@deviation,w
 11373  0282  00A0               	movwf	??_Button_Deviation_Update
 11374  0283  0872               	movf	Button_Deviation_Update@button,w
 11375  0284  3E09               	addlw	9
 11376  0285  0086               	movwf	6
 11377  0286  3001               	movlw	1	; select bank2/3
 11378  0287  0087               	movwf	7
 11379  0288  0820               	movf	??_Button_Deviation_Update,w
 11380  0289  0081               	movwf	1
 11381  028A  0008               	return
 11382  028B                     __end_of_Button_Deviation_Update:	
 11383                           
 11384                           	psect	text73
 11385  0833                     __ptext73:	
 11386 ;; *************** function _MTOUCH_Proximity_SetNotActivatedCallback *****************
 11387 ;; Defined at:
 11388 ;;		line 425 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
 11389 ;; Parameters:    Size  Location     Type
 11390 ;;  callback        2    2[COMMON] PTR FTN(enum E3283,)void
 11391 ;;		 -> processProximityNotActivate(1), 
 11392 ;; Auto vars:     Size  Location     Type
 11393 ;;		None
 11394 ;; Return value:  Size  Location     Type
 11395 ;;                  1    wreg      void 
 11396 ;; Registers used:
 11397 ;;		wreg
 11398 ;; Tracked objects:
 11399 ;;		On entry : 0/0
 11400 ;;		On exit  : 0/0
 11401 ;;		Unchanged: 0/0
 11402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11403 ;;      Params:         2       0       0       0       0       0       0       0
 11404 ;;      Locals:         0       0       0       0       0       0       0       0
 11405 ;;      Temps:          0       0       0       0       0       0       0       0
 11406 ;;      Totals:         2       0       0       0       0       0       0       0
 11407 ;;Total ram usage:        2 bytes
 11408 ;; Hardware stack levels used:    1
 11409 ;; Hardware stack levels required when called:    2
 11410 ;; This function calls:
 11411 ;;		Nothing
 11412 ;; This function is called by:
 11413 ;;		_main
 11414 ;; This function uses a non-reentrant model
 11415 ;;
 11416                           
 11417                           
 11418                           ;psect for function _MTOUCH_Proximity_SetNotActivatedCallback
 11419  0833                     _MTOUCH_Proximity_SetNotActivatedCallback:	
 11420                           
 11421                           ;mtouch_proximity.c: 427: callback_notActivated = callback;
 11422                           
 11423                           ;incstack = 0
 11424                           ; Regs used in _MTOUCH_Proximity_SetNotActivatedCallback: [wreg]
 11425  0833  0873               	movf	MTOUCH_Proximity_SetNotActivatedCallback@callback+1,w
 11426  0834  0020               	movlb	0	; select bank0
 11427  0835  00DC               	movwf	_callback_notActivated+1
 11428  0836  0872               	movf	MTOUCH_Proximity_SetNotActivatedCallback@callback,w
 11429  0837  00DB               	movwf	_callback_notActivated
 11430  0838  0008               	return
 11431  0839                     __end_of_MTOUCH_Proximity_SetNotActivatedCallback:	
 11432                           
 11433                           	psect	text74
 11434  082D                     __ptext74:	
 11435 ;; *************** function _MTOUCH_Proximity_SetActivatedCallback *****************
 11436 ;; Defined at:
 11437 ;;		line 421 in file "mcc_generated_files/mtouch/mtouch_proximity.c"
 11438 ;; Parameters:    Size  Location     Type
 11439 ;;  callback        2    2[COMMON] PTR FTN(enum E3283,)void
 11440 ;;		 -> processProximityActivate(1), 
 11441 ;; Auto vars:     Size  Location     Type
 11442 ;;		None
 11443 ;; Return value:  Size  Location     Type
 11444 ;;                  1    wreg      void 
 11445 ;; Registers used:
 11446 ;;		wreg
 11447 ;; Tracked objects:
 11448 ;;		On entry : 0/0
 11449 ;;		On exit  : 0/0
 11450 ;;		Unchanged: 0/0
 11451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11452 ;;      Params:         2       0       0       0       0       0       0       0
 11453 ;;      Locals:         0       0       0       0       0       0       0       0
 11454 ;;      Temps:          0       0       0       0       0       0       0       0
 11455 ;;      Totals:         2       0       0       0       0       0       0       0
 11456 ;;Total ram usage:        2 bytes
 11457 ;; Hardware stack levels used:    1
 11458 ;; Hardware stack levels required when called:    2
 11459 ;; This function calls:
 11460 ;;		Nothing
 11461 ;; This function is called by:
 11462 ;;		_main
 11463 ;; This function uses a non-reentrant model
 11464 ;;
 11465                           
 11466                           
 11467                           ;psect for function _MTOUCH_Proximity_SetActivatedCallback
 11468  082D                     _MTOUCH_Proximity_SetActivatedCallback:	
 11469                           
 11470                           ;mtouch_proximity.c: 423: callback_activated = callback;
 11471                           
 11472                           ;incstack = 0
 11473                           ; Regs used in _MTOUCH_Proximity_SetActivatedCallback: [wreg]
 11474  082D  0873               	movf	MTOUCH_Proximity_SetActivatedCallback@callback+1,w
 11475  082E  0020               	movlb	0	; select bank0
 11476  082F  00DE               	movwf	_callback_activated+1
 11477  0830  0872               	movf	MTOUCH_Proximity_SetActivatedCallback@callback,w
 11478  0831  00DD               	movwf	_callback_activated
 11479  0832  0008               	return
 11480  0833                     __end_of_MTOUCH_Proximity_SetActivatedCallback:	
 11481                           
 11482                           	psect	text75
 11483  0827                     __ptext75:	
 11484 ;; *************** function _MTOUCH_Button_SetPressedCallback *****************
 11485 ;; Defined at:
 11486 ;;		line 478 in file "mcc_generated_files/mtouch/mtouch_button.c"
 11487 ;; Parameters:    Size  Location     Type
 11488 ;;  callback        2    2[COMMON] PTR FTN(enum E3231,)void
 11489 ;;		 -> processButtonTouch(1), 
 11490 ;; Auto vars:     Size  Location     Type
 11491 ;;		None
 11492 ;; Return value:  Size  Location     Type
 11493 ;;                  1    wreg      void 
 11494 ;; Registers used:
 11495 ;;		wreg
 11496 ;; Tracked objects:
 11497 ;;		On entry : 0/0
 11498 ;;		On exit  : 0/0
 11499 ;;		Unchanged: 0/0
 11500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11501 ;;      Params:         2       0       0       0       0       0       0       0
 11502 ;;      Locals:         0       0       0       0       0       0       0       0
 11503 ;;      Temps:          0       0       0       0       0       0       0       0
 11504 ;;      Totals:         2       0       0       0       0       0       0       0
 11505 ;;Total ram usage:        2 bytes
 11506 ;; Hardware stack levels used:    1
 11507 ;; Hardware stack levels required when called:    2
 11508 ;; This function calls:
 11509 ;;		Nothing
 11510 ;; This function is called by:
 11511 ;;		_main
 11512 ;; This function uses a non-reentrant model
 11513 ;;
 11514                           
 11515                           
 11516                           ;psect for function _MTOUCH_Button_SetPressedCallback
 11517  0827                     _MTOUCH_Button_SetPressedCallback:	
 11518                           
 11519                           ;mtouch_button.c: 480: callback_pressed = callback;
 11520                           
 11521                           ;incstack = 0
 11522                           ; Regs used in _MTOUCH_Button_SetPressedCallback: [wreg]
 11523  0827  0873               	movf	MTOUCH_Button_SetPressedCallback@callback+1,w
 11524  0828  0020               	movlb	0	; select bank0
 11525  0829  00E2               	movwf	_callback_pressed+1
 11526  082A  0872               	movf	MTOUCH_Button_SetPressedCallback@callback,w
 11527  082B  00E1               	movwf	_callback_pressed
 11528  082C  0008               	return
 11529  082D                     __end_of_MTOUCH_Button_SetPressedCallback:	
 11530                           
 11531                           	psect	text76
 11532  0821                     __ptext76:	
 11533 ;; *************** function _MTOUCH_Button_SetNotPressedCallback *****************
 11534 ;; Defined at:
 11535 ;;		line 482 in file "mcc_generated_files/mtouch/mtouch_button.c"
 11536 ;; Parameters:    Size  Location     Type
 11537 ;;  callback        2    2[COMMON] PTR FTN(enum E3231,)void
 11538 ;;		 -> processButtonRelease(1), 
 11539 ;; Auto vars:     Size  Location     Type
 11540 ;;		None
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  1    wreg      void 
 11543 ;; Registers used:
 11544 ;;		wreg
 11545 ;; Tracked objects:
 11546 ;;		On entry : 0/0
 11547 ;;		On exit  : 0/0
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11550 ;;      Params:         2       0       0       0       0       0       0       0
 11551 ;;      Locals:         0       0       0       0       0       0       0       0
 11552 ;;      Temps:          0       0       0       0       0       0       0       0
 11553 ;;      Totals:         2       0       0       0       0       0       0       0
 11554 ;;Total ram usage:        2 bytes
 11555 ;; Hardware stack levels used:    1
 11556 ;; Hardware stack levels required when called:    2
 11557 ;; This function calls:
 11558 ;;		Nothing
 11559 ;; This function is called by:
 11560 ;;		_main
 11561 ;; This function uses a non-reentrant model
 11562 ;;
 11563                           
 11564                           
 11565                           ;psect for function _MTOUCH_Button_SetNotPressedCallback
 11566  0821                     _MTOUCH_Button_SetNotPressedCallback:	
 11567                           
 11568                           ;mtouch_button.c: 484: callback_notPressed = callback;
 11569                           
 11570                           ;incstack = 0
 11571                           ; Regs used in _MTOUCH_Button_SetNotPressedCallback: [wreg]
 11572  0821  0873               	movf	MTOUCH_Button_SetNotPressedCallback@callback+1,w
 11573  0822  0020               	movlb	0	; select bank0
 11574  0823  00E0               	movwf	_callback_notPressed+1
 11575  0824  0872               	movf	MTOUCH_Button_SetNotPressedCallback@callback,w
 11576  0825  00DF               	movwf	_callback_notPressed
 11577  0826  0008               	return
 11578  0827                     __end_of_MTOUCH_Button_SetNotPressedCallback:	
 11579                           
 11580                           	psect	intentry
 11581  0003                     __pintentry:	
 11582 ;; *************** function _INTERRUPT_InterruptManager *****************
 11583 ;; Defined at:
 11584 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 11585 ;; Parameters:    Size  Location     Type
 11586 ;;		None
 11587 ;; Auto vars:     Size  Location     Type
 11588 ;;		None
 11589 ;; Return value:  Size  Location     Type
 11590 ;;                  1    wreg      void 
 11591 ;; Registers used:
 11592 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11593 ;; Tracked objects:
 11594 ;;		On entry : 0/0
 11595 ;;		On exit  : 0/0
 11596 ;;		Unchanged: 0/0
 11597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11598 ;;      Params:         0       0       0       0       0       0       0       0
 11599 ;;      Locals:         0       0       0       0       0       0       0       0
 11600 ;;      Temps:          1       0       0       0       0       0       0       0
 11601 ;;      Totals:         1       0       0       0       0       0       0       0
 11602 ;;Total ram usage:        1 bytes
 11603 ;; Hardware stack levels used:    1
 11604 ;; Hardware stack levels required when called:    1
 11605 ;; This function calls:
 11606 ;;		_EUSART_Receive_ISR
 11607 ;;		_EUSART_Transmit_ISR
 11608 ;; This function is called by:
 11609 ;;		Interrupt level 1
 11610 ;; This function uses a non-reentrant model
 11611 ;;
 11612                           
 11613  0003                     _INTERRUPT_InterruptManager:	
 11614                           
 11615                           ;incstack = 0
 11616  0003  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 11617                           
 11618                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 11619  0004  3180               	pagesel	$
 11620  0005  0020               	movlb	0	; select bank0
 11621  0006  087F               	movf	127,w
 11622  0007  00F1               	movwf	??_INTERRUPT_InterruptManager
 11623                           
 11624                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.TXIE == 1 && PIR1bits.TXIF
      +                           == 1)
 11625  0008  1F0B               	btfss	11,6	;volatile
 11626  0009  2814               	goto	i1l376
 11627  000A  0021               	movlb	1	; select bank1
 11628  000B  1E11               	btfss	17,4	;volatile
 11629  000C  2814               	goto	i1l376
 11630  000D  0020               	movlb	0	; select bank0
 11631  000E  1E11               	btfss	17,4	;volatile
 11632  000F  2814               	goto	i1l376
 11633                           
 11634                           ;interrupt_manager.c: 55: {
 11635                           ;interrupt_manager.c: 56: EUSART_Transmit_ISR();
 11636  0010  318A  2226  3180   	fcall	_EUSART_Transmit_ISR
 11637                           
 11638                           ;interrupt_manager.c: 57: }
 11639  0013  281E               	goto	i1l380
 11640  0014                     i1l376:	
 11641                           
 11642                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits
      +                          .RCIF == 1)
 11643  0014  1F0B               	btfss	11,6	;volatile
 11644  0015  281E               	goto	i1l380
 11645  0016  0021               	movlb	1	; select bank1
 11646  0017  1E91               	btfss	17,5	;volatile
 11647  0018  281E               	goto	i1l380
 11648  0019  0020               	movlb	0	; select bank0
 11649  001A  1E91               	btfss	17,5	;volatile
 11650  001B  281E               	goto	i1l380
 11651                           
 11652                           ;interrupt_manager.c: 59: {
 11653                           ;interrupt_manager.c: 60: EUSART_Receive_ISR();
 11654  001C  3189  219E         	fcall	_EUSART_Receive_ISR
 11655  001E                     i1l380:	
 11656                           ;interrupt_manager.c: 62: else
 11657                           ;interrupt_manager.c: 63: {
 11658                           
 11659                           ;interrupt_manager.c: 61: }
 11660                           
 11661  001E  0871               	movf	??_INTERRUPT_InterruptManager,w
 11662  001F  0020               	movlb	0	; select bank0
 11663  0020  00FF               	movwf	127
 11664  0021  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 11665  0022  0009               	retfie
 11666  0023                     __end_of_INTERRUPT_InterruptManager:	
 11667                           
 11668                           	psect	text78
 11669  0A26                     __ptext78:	
 11670 ;; *************** function _EUSART_Transmit_ISR *****************
 11671 ;; Defined at:
 11672 ;;		line 165 in file "mcc_generated_files/eusart.c"
 11673 ;; Parameters:    Size  Location     Type
 11674 ;;		None
 11675 ;; Auto vars:     Size  Location     Type
 11676 ;;		None
 11677 ;; Return value:  Size  Location     Type
 11678 ;;                  1    wreg      void 
 11679 ;; Registers used:
 11680 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11681 ;; Tracked objects:
 11682 ;;		On entry : 0/0
 11683 ;;		On exit  : 0/0
 11684 ;;		Unchanged: 0/0
 11685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11686 ;;      Params:         0       0       0       0       0       0       0       0
 11687 ;;      Locals:         0       0       0       0       0       0       0       0
 11688 ;;      Temps:          1       0       0       0       0       0       0       0
 11689 ;;      Totals:         1       0       0       0       0       0       0       0
 11690 ;;Total ram usage:        1 bytes
 11691 ;; Hardware stack levels used:    1
 11692 ;; This function calls:
 11693 ;;		Nothing
 11694 ;; This function is called by:
 11695 ;;		_INTERRUPT_InterruptManager
 11696 ;; This function uses a non-reentrant model
 11697 ;;
 11698                           
 11699                           
 11700                           ;psect for function _EUSART_Transmit_ISR
 11701  0A26                     _EUSART_Transmit_ISR:	
 11702                           
 11703                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 11704                           
 11705                           ;incstack = 0
 11706                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 11707  0A26  3010               	movlw	16
 11708  0A27  0020               	movlb	0	; select bank0
 11709  0A28  026F               	subwf	_eusartTxBufferRemaining,w	;volatile
 11710  0A29  1803               	skipnc
 11711  0A2A  2A40               	goto	i1l119
 11712                           
 11713                           ;eusart.c: 170: {
 11714                           ;eusart.c: 171: TXREG = eusartTxBuffer[eusartTxTail++];
 11715  0A2B  087A               	movf	_eusartTxTail,w
 11716  0A2C  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
 11717  0A2D  0086               	movwf	6
 11718  0A2E  0187               	clrf	7
 11719  0A2F  0801               	movf	1,w
 11720  0A30  0023               	movlb	3	; select bank3
 11721  0A31  009A               	movwf	26	;volatile
 11722  0A32  3001               	movlw	1
 11723  0A33  00F0               	movwf	??_EUSART_Transmit_ISR
 11724  0A34  0870               	movf	??_EUSART_Transmit_ISR,w
 11725  0A35  07FA               	addwf	_eusartTxTail,f	;volatile
 11726                           
 11727                           ;eusart.c: 172: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 11728  0A36  3010               	movlw	16
 11729  0A37  027A               	subwf	_eusartTxTail,w	;volatile
 11730  0A38  1803               	btfsc	3,0
 11731                           
 11732                           ;eusart.c: 173: {
 11733                           ;eusart.c: 174: eusartTxTail = 0;
 11734  0A39  01FA               	clrf	_eusartTxTail	;volatile
 11735                           
 11736                           ;eusart.c: 175: }
 11737                           ;eusart.c: 176: eusartTxBufferRemaining++;
 11738  0A3A  3001               	movlw	1
 11739  0A3B  00F0               	movwf	??_EUSART_Transmit_ISR
 11740  0A3C  0870               	movf	??_EUSART_Transmit_ISR,w
 11741  0A3D  0020               	movlb	0	; select bank0
 11742  0A3E  07EF               	addwf	_eusartTxBufferRemaining,f	;volatile
 11743                           
 11744                           ;eusart.c: 177: }
 11745  0A3F  0008               	return
 11746  0A40                     i1l119:	
 11747                           
 11748                           ;eusart.c: 178: else
 11749                           ;eusart.c: 179: {
 11750                           ;eusart.c: 180: PIE1bits.TXIE = 0;
 11751  0A40  0021               	movlb	1	; select bank1
 11752  0A41  1211               	bcf	17,4	;volatile
 11753  0A42  0008               	return
 11754  0A43                     __end_of_EUSART_Transmit_ISR:	
 11755                           
 11756                           	psect	text79
 11757  099E                     __ptext79:	
 11758 ;; *************** function _EUSART_Receive_ISR *****************
 11759 ;; Defined at:
 11760 ;;		line 184 in file "mcc_generated_files/eusart.c"
 11761 ;; Parameters:    Size  Location     Type
 11762 ;;		None
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;		None
 11765 ;; Return value:  Size  Location     Type
 11766 ;;                  1    wreg      void 
 11767 ;; Registers used:
 11768 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11769 ;; Tracked objects:
 11770 ;;		On entry : 0/0
 11771 ;;		On exit  : 0/0
 11772 ;;		Unchanged: 0/0
 11773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11774 ;;      Params:         0       0       0       0       0       0       0       0
 11775 ;;      Locals:         0       0       0       0       0       0       0       0
 11776 ;;      Temps:          1       0       0       0       0       0       0       0
 11777 ;;      Totals:         1       0       0       0       0       0       0       0
 11778 ;;Total ram usage:        1 bytes
 11779 ;; Hardware stack levels used:    1
 11780 ;; This function calls:
 11781 ;;		Nothing
 11782 ;; This function is called by:
 11783 ;;		_INTERRUPT_InterruptManager
 11784 ;; This function uses a non-reentrant model
 11785 ;;
 11786                           
 11787                           
 11788                           ;psect for function _EUSART_Receive_ISR
 11789  099E                     _EUSART_Receive_ISR:	
 11790                           
 11791                           ;eusart.c: 187: if(1 == RCSTAbits.OERR)
 11792                           
 11793                           ;incstack = 0
 11794                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 11795  099E  0023               	movlb	3	; select bank3
 11796  099F  1C9D               	btfss	29,1	;volatile
 11797  09A0  29A3               	goto	i1l4161
 11798                           
 11799                           ;eusart.c: 188: {
 11800                           ;eusart.c: 191: RCSTAbits.CREN = 0;
 11801  09A1  121D               	bcf	29,4	;volatile
 11802                           
 11803                           ;eusart.c: 192: RCSTAbits.CREN = 1;
 11804  09A2  161D               	bsf	29,4	;volatile
 11805  09A3                     i1l4161:	
 11806                           
 11807                           ;eusart.c: 193: }
 11808                           ;eusart.c: 196: eusartRxBuffer[eusartRxHead++] = RCREG;
 11809  09A3  0819               	movf	25,w	;volatile
 11810  09A4  00F0               	movwf	??_EUSART_Receive_ISR
 11811  09A5  0020               	movlb	0	; select bank0
 11812  09A6  086E               	movf	_eusartRxHead,w
 11813  09A7  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
 11814  09A8  0086               	movwf	6
 11815  09A9  0187               	clrf	7
 11816  09AA  0870               	movf	??_EUSART_Receive_ISR,w
 11817  09AB  0081               	movwf	1
 11818  09AC  3001               	movlw	1
 11819  09AD  00F0               	movwf	??_EUSART_Receive_ISR
 11820  09AE  0870               	movf	??_EUSART_Receive_ISR,w
 11821  09AF  07EE               	addwf	_eusartRxHead,f	;volatile
 11822                           
 11823                           ;eusart.c: 197: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 11824  09B0  3010               	movlw	16
 11825  09B1  026E               	subwf	_eusartRxHead,w	;volatile
 11826  09B2  1803               	btfsc	3,0
 11827                           
 11828                           ;eusart.c: 198: {
 11829                           ;eusart.c: 199: eusartRxHead = 0;
 11830  09B3  01EE               	clrf	_eusartRxHead	;volatile
 11831                           
 11832                           ;eusart.c: 200: }
 11833                           ;eusart.c: 201: eusartRxCount++;
 11834  09B4  3001               	movlw	1
 11835  09B5  00F0               	movwf	??_EUSART_Receive_ISR
 11836  09B6  0870               	movf	??_EUSART_Receive_ISR,w
 11837  09B7  07EC               	addwf	_eusartRxCount,f	;volatile
 11838  09B8  0008               	return
 11839  09B9                     __end_of_EUSART_Receive_ISR:	
 11840  007E                     btemp	set	126	;btemp
 11841  007E                     int$flags	set	126
 11842  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    109
    Data        77
    BSS         141
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     47      80
    BANK1            80      1      51
    BANK2            80      0      54
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    Button_Service$2518$0	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Proximity_Service$2523$0	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Proximity_Service$2523	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
		 -> Proximity_State_Activated(), Proximity_State_NotActivated(), Proximity_State_Initializing(), 

    Button_Service$2518	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    Proximity_StateMachine$0	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Button_StateMachine$0	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 80
		 -> mtouch_proximity_init(CODE[18]), mtouch_button_init(CODE[80]), 

    __builtin_memcpy$0	PTR void  size(2) Largest target is 80
		 -> mtouch_proximity(BANK1[18]), mtouch_button(BANK3[80]), 

    MTOUCH_Proximity_SetNotActivatedCallback@callback	PTR FTN(enum E3283,)void  size(2) Largest target is 1
		 -> processProximityNotActivate(), 

    MTOUCH_Proximity_SetActivatedCallback@callback	PTR FTN(enum E3283,)void  size(2) Largest target is 1
		 -> processProximityActivate(), 

    Proximity_Baseline_Update@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Proximity_Baseline_Initialize@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Proximity_Reading_Update@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Proximity_Tick_helper@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Proximity_State_Activated@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Proximity_State_NotActivated@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Proximity_State_Initializing@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Proximity_Service@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    MTOUCH_Proximity_Initialize@prox	PTR struct . size(1) Largest target is 18
		 -> mtouch_proximity(BANK1[18]), 

    Proximity_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
		 -> Proximity_State_Activated(), Proximity_State_NotActivated(), Proximity_State_Initializing(), 

    callback_notActivated	PTR FTN(enum E3283,)void  size(2) Largest target is 1
		 -> processProximityNotActivate(), Proximity_DefaultCallback(), 

    callback_activated	PTR FTN(enum E3283,)void  size(2) Largest target is 1
		 -> processProximityActivate(), Proximity_DefaultCallback(), 

    MTOUCH_Button_SetNotPressedCallback@callback	PTR FTN(enum E3231,)void  size(2) Largest target is 1
		 -> processButtonRelease(), 

    MTOUCH_Button_SetPressedCallback@callback	PTR FTN(enum E3231,)void  size(2) Largest target is 1
		 -> processButtonTouch(), 

    Button_Baseline_Update@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Button_Baseline_Initialize@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Button_Reading_Update@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Button_Deviation_Update@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Button_Tick_helper@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Button_State_Pressed@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Button_State_NotPressed@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Button_State_Initializing@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Button_Service@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    MTOUCH_Button_Initialize@button	PTR struct . size(1) Largest target is 80
		 -> mtouch_button(BANK3[80]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    callback_notPressed	PTR FTN(enum E3231,)void  size(2) Largest target is 1
		 -> processButtonRelease(), Button_DefaultCallback(), 

    callback_pressed	PTR FTN(enum E3231,)void  size(2) Largest target is 1
		 -> processButtonTouch(), Button_DefaultCallback(), 

    Sensor_setSampled@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_isCalibratingAcqTime@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_setCalibratAcqTime@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_setCalibrated@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_isCalibrated@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_isActive@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_setInactive@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_setActive@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_isEnabled@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_RawSample_Update@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_Scanfrequency_Evaluation@sensor_adc2	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_Scanfrequency_Evaluation@sensor_adc1	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_autoCalibration@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_Acq_ExecutePacket@sensor_adc2	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_Acq_ExecutePacket@sensor_adc1	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_postAcquisitionProcess@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_Acquisition@sensor_adc2	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_Acquisition@sensor_adc1	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_getScanGroupIndex@sensor	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_Service@sensor_adc2	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    Sensor_Service@sensor_adc1	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    S460$sensor_adc2	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    sensor_scan_group.sensor_adc2	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    S460$sensor_adc1	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    sensor_scan_group.sensor_adc1	PTR struct . size(1) Largest target is 54
		 -> mtouch_sensor(BANK2[54]), 

    callback_sampled	PTR FTN(enum E3328,)void  size(2) Largest target is 1
		 -> Sensor_DefaultCallback(), 


Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_EUSART_Initialize
    _MTOUCH_Tick->_MTOUCH_Button_Tick
    _MTOUCH_Proximity_Tick->_Proximity_Tick_helper
    _MTOUCH_Button_Tick->_Button_Tick_helper
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _Sensor_RawSample_Update->_Sensor_getScanGroupIndex
    _Sensor_Acquisition->_Sensor_postAcquisitionProcess
    _Sensor_postAcquisitionProcess->_Sensor_getScanGroupIndex
    _Sensor_Acq_ExecutePacket->_Sensor_autoCalibration
    _Sensor_autoCalibration->_Sensor_getScanGroupIndex
    _Proximity_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Proximity_Reading_Update->_MTOUCH_Sensor_RawSample_Get
    _MTOUCH_Proximity_Baseline_Get->_Proximity_Baseline_Get_helper
    _Button_Service->_MTOUCH_Button_Initialize
    _MTOUCH_Sensor_wasSampled->___bmul
    _MTOUCH_Sensor_isCalibrated->___bmul
    _Button_State_Pressed->_MTOUCH_Button_Initialize
    _Button_State_NotPressed->_MTOUCH_Button_Initialize
    _MTOUCH_Button_Initialize->_MTOUCH_Sensor_Calibrate
    _MTOUCH_Sensor_Calibrate->___bmul
    _Button_Baseline_Update->_MTOUCH_Sensor_RawSample_Get
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update->_MTOUCH_Sensor_RawSample_Get
    _MTOUCH_Sensor_RawSample_Get->___bmul

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _MTOUCH_Service_Mainloop->_MTOUCH_Sensor_SampleAll
    _MTOUCH_Sensor_SampleAll->_Sensor_Service
    _Sensor_Service->_Sensor_Acquisition
    _Sensor_Acquisition->_Sensor_Scanfrequency_Evaluation
    _Sensor_Scanfrequency_Evaluation->_Sensor_Acq_ExecutePacket
    _Sensor_Acq_ExecutePacket->_Sensor_autoCalibration
    _MTOUCH_Proximity_ServiceAll->_Proximity_Service
    _Proximity_Service->_Proximity_Deviation_Update
    _Proximity_State_NotActivated->_MTOUCH_Proximity_Baseline_Get
    _Proximity_Deviation_Update->_MTOUCH_Proximity_Baseline_Get
    _MTOUCH_Proximity_Baseline_Get->_Proximity_Baseline_Get_helper
    _MTOUCH_Button_ServiceAll->_Button_Service
    _Button_Service->_Button_Deviation_Update
    _Button_Service->_Button_State_Initializing
    _Button_Service->_Button_State_NotPressed
    _Button_Service->_Button_State_Pressed
    _Button_State_NotPressed->_Button_Baseline_Update
    _Button_State_Initializing->_Button_Baseline_Update

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _MTOUCH_Service_Mainloop->_MTOUCH_Sensor_SampleAll

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   31791
_MTOUCH_Button_SetNotPressedCallback
   _MTOUCH_Button_SetPressedCallback
_MTOUCH_Proximity_SetActivatedCallba
_MTOUCH_Proximity_SetNotActivatedCal
            _MTOUCH_Service_Mainloop
                  _SYSTEM_Initialize
                     _USART_SendChar
 ---------------------------------------------------------------------------------
 (1) _USART_SendChar                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Service_Mainloop                              0     0      0   31399
           _MTOUCH_Button_ServiceAll
        _MTOUCH_Proximity_ServiceAll
            _MTOUCH_Sensor_SampleAll
     _MTOUCH_Sensor_Sampled_ResetAll
                        _MTOUCH_Tick
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Tick                                          0     0      0     310
                 _MTOUCH_Button_Tick
              _MTOUCH_Proximity_Tick
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Proximity_Tick                                0     0      0     121
              _Proximity_Tick_helper
 ---------------------------------------------------------------------------------
 (4) _Proximity_Tick_helper                                3     3      0     121
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Tick                                   2     2      0     189
                                              5 COMMON     2     2      0
                 _Button_Tick_helper
 ---------------------------------------------------------------------------------
 (4) _Button_Tick_helper                                   3     3      0     121
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Sensor_Sampled_ResetAll                       2     2      0     156
                                              3 COMMON     2     2      0
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (3) _Sensor_Sampled_Reset                                 1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Sensor_SampleAll                              2     2      0   15344
                                             46 BANK0      1     1      0
                                              0 BANK1      1     1      0
                     _Sensor_Service
 ---------------------------------------------------------------------------------
 (3) _Sensor_Service                                       9     9      0   15245
                                             37 BANK0      9     9      0
                 _Sensor_Acquisition
             _Sensor_DefaultCallback *
            _Sensor_RawSample_Update
                   _Sensor_isEnabled
                  _Sensor_setSampled
 ---------------------------------------------------------------------------------
 (4) _Sensor_setSampled                                    1     1      0     103
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Sensor_RawSample_Update                              3     3      0     530
                                              8 COMMON     1     1      0
                                              0 BANK0      2     2      0
           _Sensor_getScanGroupIndex
 ---------------------------------------------------------------------------------
 (4) _Sensor_DefaultCallback                               1     0      1     130
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _Sensor_Acquisition                                   5     4      1   13653
                                             32 BANK0      5     4      1
           _Sensor_Acq_ExecutePacket
    _Sensor_Scanfrequency_Evaluation
                    _Sensor_isActive
                _Sensor_isCalibrated
      _Sensor_postAcquisitionProcess
 ---------------------------------------------------------------------------------
 (5) _Sensor_postAcquisitionProcess                        6     6      0    1782
                                              8 COMMON     2     2      0
                                              0 BANK0      4     4      0
           _Sensor_getScanGroupIndex
                   _Sensor_isEnabled
                   _Sensor_setActive
                 _Sensor_setInactive
                                _abs
 ---------------------------------------------------------------------------------
 (6) _Sensor_setInactive                                   1     1      0      67
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Sensor_setActive                                     1     1      0      67
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_Scanfrequency_Evaluation                     12    11      1    5680
                                             20 BANK0     12    11      1
           _Sensor_Acq_ExecutePacket
 ---------------------------------------------------------------------------------
 (6) _Sensor_Acq_ExecutePacket                            16    15      1    5174
                                              4 BANK0     16    15      1
      _MTOUCH_Sensor_Scan_Initialize
             _Sensor_autoCalibration
                    _Sensor_isActive
                _Sensor_isCalibrated
        _Sensor_isCalibratingAcqTime
                   _Sensor_isEnabled
            _TMR2_LoadPeriodRegister
                    _TMR2_StartTimer
                     _TMR2_StopTimer
                                _abs
 ---------------------------------------------------------------------------------
 (7) _TMR2_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_LoadPeriodRegister                              1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Sensor_isEnabled                                     2     2      0     386
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_isCalibrated                                  1     1      0     247
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_isActive                                      1     1      0     139
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Sensor_autoCalibration                               6     6      0    1880
                                              8 COMMON     2     2      0
                                              0 BANK0      4     4      0
           _Sensor_getScanGroupIndex
        _Sensor_isCalibratingAcqTime
          _Sensor_setCalibratAcqTime
               _Sensor_setCalibrated
                                _abs
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     633
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _Sensor_setCalibrated                                 1     1      0     134
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Sensor_setCalibratAcqTime                            1     1      0     134
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Sensor_isCalibratingAcqTime                          1     1      0     139
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_getScanGroupIndex                             6     6      0     300
                                              2 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Proximity_ServiceAll                          0     0      0    6149
                  _Proximity_Service
 ---------------------------------------------------------------------------------
 (3) _Proximity_Service                                    3     3      0    6149
                                             21 BANK0      3     3      0
        _MTOUCH_Proximity_Initialize
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
         _Proximity_Deviation_Update
           _Proximity_Reading_Update
          _Proximity_State_Activated *
       _Proximity_State_Initializing *
       _Proximity_State_NotActivated *
 ---------------------------------------------------------------------------------
 (4) _Proximity_State_NotActivated                         9     8      1    1091
                                              7 BANK0      9     8      1
      _MTOUCH_Proximity_Baseline_Get
        _MTOUCH_Proximity_Initialize
       _MTOUCH_Proximity_Reading_Get
          _Proximity_Baseline_Update
          _Proximity_DefaultCallback *
           _processProximityActivate *
 ---------------------------------------------------------------------------------
 (5) _processProximityActivate                             1     0      1      53
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _Proximity_State_Initializing                         3     2      1    1269
                                              7 BANK0      3     2      1
      _Proximity_Baseline_Initialize
          _Proximity_Baseline_Update
 ---------------------------------------------------------------------------------
 (5) _Proximity_Baseline_Update                            5     5      0     260
                                              2 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (5) _Proximity_Baseline_Initialize                        5     5      0     792
                                              0 BANK0      5     5      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (4) _Proximity_State_Activated                            3     2      1     446
                                              7 BANK0      3     2      1
        _MTOUCH_Proximity_Initialize
          _Proximity_DefaultCallback *
        _processProximityNotActivate *
 ---------------------------------------------------------------------------------
 (5) _processProximityNotActivate                          1     0      1     106
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (5) _Proximity_DefaultCallback                            1     0      1       0
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Proximity_Initialize                          3     3      0     111
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _Proximity_Reading_Update                             5     5      0     937
                                              0 BANK0      5     5      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (4) _Proximity_Deviation_Update                          14    14      0     738
                                              7 BANK0     14    14      0
      _MTOUCH_Proximity_Baseline_Get
       _MTOUCH_Proximity_Reading_Get
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Proximity_Reading_Get                         6     1      5      44
                                              2 COMMON     6     1      5
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Proximity_Baseline_Get                        6     1      5      93
                                              1 BANK0      6     1      5
      _Proximity_Baseline_Get_helper
 ---------------------------------------------------------------------------------
 (6) _Proximity_Baseline_Get_helper                        9     5      4      31
                                              2 COMMON     8     4      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Button_ServiceAll                             2     2      0    9440
                                             14 BANK0      2     2      0
                     _Button_Service
 ---------------------------------------------------------------------------------
 (3) _Button_Service                                       4     4      0    9341
                                             10 BANK0      4     4      0
            _Button_Deviation_Update
              _Button_Reading_Update
          _Button_State_Initializing *
            _Button_State_NotPressed *
               _Button_State_Pressed *
           _MTOUCH_Button_Initialize
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_wasSampled                             2     2      0     622
                                              6 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_isCalibrated                           2     2      0     653
                                              6 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Button_State_Pressed                                 3     2      1    1292
                                              7 BANK0      3     2      1
             _Button_DefaultCallback *
           _MTOUCH_Button_Initialize
               _processButtonRelease *
 ---------------------------------------------------------------------------------
 (5) _processButtonRelease                                 1     0      1     106
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _Button_State_NotPressed                              3     2      1    2384
                                              7 BANK0      3     2      1
             _Button_Baseline_Update
             _Button_DefaultCallback *
           _MTOUCH_Button_Initialize
                 _processButtonTouch *
 ---------------------------------------------------------------------------------
 (5) _processButtonTouch                                   1     0      1      53
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_Initialize                             4     4      0     873
                                              8 COMMON     2     2      0
                                              0 BANK0      2     2      0
            _MTOUCH_Sensor_Calibrate
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Calibrate                              2     2      0     684
                                              6 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) _Button_DefaultCallback                               1     0      1       0
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _Button_State_Initializing                            3     2      1    2002
                                              7 BANK0      3     2      1
         _Button_Baseline_Initialize
             _Button_Baseline_Update
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Update                               7     7      0     993
                                              0 BANK0      7     7      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Initialize                           5     5      0     792
                                              0 BANK0      5     5      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (4) _Button_Reading_Update                                3     3      0     937
                                              0 BANK0      3     3      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_RawSample_Get                          4     2      2     653
                                              6 COMMON     4     2      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (7) ___bmul                                               4     3      1     591
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _Button_Deviation_Update                             15    15      0     296
                                              2 COMMON     5     5      0
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Proximity_SetNotActivatedCallback             2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Proximity_SetActivatedCallback                2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Button_SetPressedCallback                     2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Button_SetNotPressedCallback                  2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
 ---------------------------------------------------------------------------------
 (10) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EUSART_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MTOUCH_Button_SetNotPressedCallback
   _MTOUCH_Button_SetPressedCallback
   _MTOUCH_Proximity_SetActivatedCallback
   _MTOUCH_Proximity_SetNotActivatedCallback
   _MTOUCH_Service_Mainloop
     _MTOUCH_Button_ServiceAll
       _Button_Service
         _Button_Deviation_Update
         _Button_Reading_Update
           _MTOUCH_Sensor_RawSample_Get
             ___bmul
         _Button_State_Initializing *
           _Button_Baseline_Initialize
             _MTOUCH_Sensor_RawSample_Get
               ___bmul
           _Button_Baseline_Update
             _MTOUCH_Sensor_RawSample_Get
               ___bmul
         _Button_State_NotPressed *
           _Button_Baseline_Update
             _MTOUCH_Sensor_RawSample_Get
               ___bmul
           _Button_DefaultCallback *
           _MTOUCH_Button_Initialize *
             _MTOUCH_Sensor_Calibrate
               ___bmul
           _processButtonTouch *
         _Button_State_Pressed *
           _Button_DefaultCallback *
           _MTOUCH_Button_Initialize *
             _MTOUCH_Sensor_Calibrate
               ___bmul
           _processButtonRelease *
         _MTOUCH_Button_Initialize *
           _MTOUCH_Sensor_Calibrate
             ___bmul
         _MTOUCH_Sensor_isCalibrated *
           ___bmul
         _MTOUCH_Sensor_wasSampled *
           ___bmul
     _MTOUCH_Proximity_ServiceAll
       _Proximity_Service
         _MTOUCH_Proximity_Initialize
         _MTOUCH_Sensor_isCalibrated
           ___bmul
         _MTOUCH_Sensor_wasSampled
           ___bmul
         _Proximity_Deviation_Update
           _MTOUCH_Proximity_Baseline_Get
             _Proximity_Baseline_Get_helper
           _MTOUCH_Proximity_Reading_Get
         _Proximity_Reading_Update
           _MTOUCH_Sensor_RawSample_Get
             ___bmul
         _Proximity_State_Activated *
           _MTOUCH_Proximity_Initialize
           _Proximity_DefaultCallback *
           _processProximityNotActivate *
         _Proximity_State_Initializing *
           _Proximity_Baseline_Initialize
             _MTOUCH_Sensor_RawSample_Get
               ___bmul
           _Proximity_Baseline_Update
         _Proximity_State_NotActivated *
           _MTOUCH_Proximity_Baseline_Get
             _Proximity_Baseline_Get_helper
           _MTOUCH_Proximity_Initialize
           _MTOUCH_Proximity_Reading_Get
           _Proximity_Baseline_Update
           _Proximity_DefaultCallback *
           _processProximityActivate *
     _MTOUCH_Sensor_SampleAll
       _Sensor_Service
         _Sensor_Acquisition
           _Sensor_Acq_ExecutePacket
             _MTOUCH_Sensor_Scan_Initialize
             _Sensor_autoCalibration
               _Sensor_getScanGroupIndex
               _Sensor_isCalibratingAcqTime
               _Sensor_setCalibratAcqTime
               _Sensor_setCalibrated
               _abs
             _Sensor_isActive
             _Sensor_isCalibrated
             _Sensor_isCalibratingAcqTime
             _Sensor_isEnabled
             _TMR2_LoadPeriodRegister
             _TMR2_StartTimer
             _TMR2_StopTimer
             _abs
           _Sensor_Scanfrequency_Evaluation
             _Sensor_Acq_ExecutePacket
               _MTOUCH_Sensor_Scan_Initialize
               _Sensor_autoCalibration
                 _Sensor_getScanGroupIndex
                 _Sensor_isCalibratingAcqTime
                 _Sensor_setCalibratAcqTime
                 _Sensor_setCalibrated
                 _abs
               _Sensor_isActive
               _Sensor_isCalibrated
               _Sensor_isCalibratingAcqTime
               _Sensor_isEnabled
               _TMR2_LoadPeriodRegister
               _TMR2_StartTimer
               _TMR2_StopTimer
               _abs
           _Sensor_isActive
           _Sensor_isCalibrated
           _Sensor_postAcquisitionProcess
             _Sensor_getScanGroupIndex
             _Sensor_isEnabled
             _Sensor_setActive
             _Sensor_setInactive
             _abs
         _Sensor_DefaultCallback *
         _Sensor_RawSample_Update *
           _Sensor_getScanGroupIndex
         _Sensor_isEnabled *
         _Sensor_setSampled *
     _MTOUCH_Sensor_Sampled_ResetAll
       _Sensor_Sampled_Reset
     _MTOUCH_Tick
       _MTOUCH_Button_Tick
         _Button_Tick_helper
       _MTOUCH_Proximity_Tick
         _Proximity_Tick_helper
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
     _WDT_Initialize
   _USART_SendChar

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     115       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2F      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      1      33       8       63.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      36      10       67.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      50      12      100.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     115      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Sep 27 13:38:07 2017

                        ?_MTOUCH_Sensor_RawSample_Get 0076                                        ___bmul@product 0074  
                                         __CFG_CP$OFF 0000                 Proximity_State_NotActivated@deviation 002C  
                             ?_Sensor_autoCalibration 0070                            __end_of_Sensor_setInactive 085B  
                            _Proximity_Reading_Update 00E4                             _Sensor_setCalibratAcqTime 08AC  
                                         __CFG_LVP$ON 0000                        Proximity_Deviation_Update@name 0034  
                                                 l634 06D3                                                   l627 06D0  
                                                 l644 0781                                                   l629 06C8  
                                                 l827 0E39                                                   l839 02FC  
                                                 _PR2 001B                                                   _abs 089E  
                                     _TMR2_Initialize 087D                                          __CFG_BORV$LO 0000  
                                                 wreg 0009                      ??_MTOUCH_Sensor_Sampled_ResetAll 0073  
                     ?_MTOUCH_Sensor_Sampled_ResetAll 0070                      __size_of_MTOUCH_Sensor_SampleAll 001B  
                      Sensor_getScanGroupIndex@sensor 0076                                                  l1004 0CEE  
                                                l1016 0455                                                  ?_abs 0072  
                                                l5011 091A                                                  l5101 061B  
                                                l5041 03A2                                                  l5033 0362  
                                                l5113 0643                                                  l5051 08FC  
                                                l5035 0366                                                  l5123 0657  
                                                l5221 07BC                                                  l5133 068E  
                                                l5301 0EFA                                                  l5055 0902  
                                                l5215 07A8                                                  l5153 06C3  
                                                l5145 06B7                                                  l5081 05BC  
                                                l5305 0F02                                                  l5331 01B5  
                                                l3707 0A58                                                  l5139 06A1  
                                                l5077 05B1                                                  l5407 096C  
                                                l5503 04D3                                                  l5191 0778  
                                                l5175 071C                                                  l5095 0608  
                                                l5263 0D84                                                  l5433 0265  
                                                l5249 099B                                                  l5425 0F49  
                                                l5513 04FB                                                  l5505 04DB  
                                                l5265 0D87                                                  l5435 026D  
                                                l5347 09CB                                                  l5523 0589  
                                                l5531 0C48                                                  l5187 0757  
                                                l5179 073E                                                  l5371 0DCD  
                                                l5363 0DBE                                                  l5445 0C85  
                                                l5461 02C1                                                  l5509 04EF  
                                                l5269 0D9F                                                  l5381 0DF5  
                                                l5439 0281                                                  l5447 0C8A  
                                                l5519 052C                                                  l5295 0ED9  
                                                l5287 0EC6                                                  l5375 0DDD  
                                                l5367 0DC5                                                  l5359 0DAF  
                                                l3697 0FC1                                                  l5553 044D  
                                                l5529 0C43                                                  l5633 09E3  
                                                l5467 02F3                                                  l5547 0420  
                                                l5379 0DED                                                  l5395 0B58  
                                                l5571 00B1                                                  l5563 0092  
                                                l5627 09DA                                                  l5477 0E75  
                                                l5493 012A                                                  l3949 0D26  
                                                l5581 00D2                                                  l5637 09ED  
                                                l4951 002D                                                  l5583 00E1  
                                                l4963 0055                                                  l4957 003E  
                                                l4967 005D                                                  l5759 0B34  
                                                _LATA 010C                                                  _LATB 010D  
                                                _LATC 010E                                                  u3505 0949  
                                                u5035 06AE                                                  u5205 0A95  
                                                u5305 017D                                                  u5225 0D99  
                                                u5315 01C3                                                  u5325 0B87  
                                                u5255 0EE8                                                  u5610 04BA  
                                                u5275 0BFC                                                  u5285 0BB6  
                                                u5605 0137                                                  u5470 024C  
                                                u5615 04B6                                                  u2975 0F8E  
                                                u5465 0209                                                  u2985 0FCE  
                                                u5475 0248                                                  u5655 0509  
                                                u4855 0345                                                  u4865 034F  
                                                u5595 00F6                                                  u5693 057A  
                                                u5685 0537                                                  u4885 0393  
                                                u5785 0DFD                                                  u4995 0632  
                      ?_Proximity_Baseline_Initialize 0070                            Button_State_Pressed@button 0027  
                                                _TMR2 001A                                     _Proximity_Service 0CB5  
                                                _WPUA 020C                                                  _WPUB 020D  
                   __size_of_Sensor_Acq_ExecutePacket 0235                              _Sensor_getScanGroupIndex 0027  
                           ?_Sensor_Acq_ExecutePacket 0024                                          __CFG_WRT$OFF 0000  
                                                abs@a 0072                                                  _main 0B15  
                           _Proximity_Baseline_Update 0F7D                                                  fsr0h 0005  
                                                fsr1h 0007                                                  indf0 0000  
                                                fsr0l 0004                                                  indf1 0001  
                                                fsr1l 0006                                    ?_Proximity_Service 0070  
                                                btemp 007E                                         __CFG_BOREN$ON 0000  
                         ??_Proximity_State_Activated 0028                                                  start 0023  
                         ?_Proximity_Deviation_Update 0070                                     ___bmul@multiplier 0075  
                                       __CFG_MCLRE$ON 0000                                   ??_Proximity_Service 0035  
                      __end_of_Sensor_autoCalibration 03BD  __end_ofSensor_Scanfrequency_Evaluation@frequency_hop 106D  
        Sensor_Scanfrequency_Evaluation@frequency_hop 1068                              ?_MTOUCH_Service_Mainloop 0070  
                       __size_of_Button_State_Pressed 0058                                                 ??_abs 0074  
                         ?_Button_Baseline_Initialize 0070                                       ?_USART_SendChar 0070  
               Sensor_postAcquisitionProcess@adcIndex 0020                         ??_MTOUCH_Sensor_RawSample_Get 0078  
                       Sensor_RawSample_Update@sensor 0021                                ??_processButtonRelease 0073  
                           __size_of_Sensor_isEnabled 0011                        __size_of_OSCILLATOR_Initialize 0004  
                       __end_of_OSCILLATOR_Initialize 0818     Sensor_Scanfrequency_Evaluation@best_packet_sample 003B  
                 __end_of_Sensor_isCalibratingAcqTime 0874                           _Sensor_isCalibratingAcqTime 086B  
                                               ?_main 0070                                         __CFG_WDTE$OFF 0000  
                                               _T2CON 001C                               __size_of_Button_Service 0055  
                                               i1l119 0A40                                                 i1l380 001E  
                             ??_Proximity_Tick_helper 0072                                                 i1l376 0014  
                                               _RCREG 0199                                                 _RCSTA 019D  
                                               _TRISA 008C                                                 _TRISB 008D  
                                               _TRISC 008E                                                 _TXREG 019A  
                                               _TXSTA 019E                       __size_of_Button_DefaultCallback 0001  
                     __size_of_Sensor_DefaultCallback 0001                             __end_of_Proximity_Service 0D01  
                             __size_of_Sensor_Service 0085                 __end_of_MTOUCH_Sensor_Scan_Initialize 08FA  
              __size_of_MTOUCH_Sensor_Scan_Initialize 0010                         _MTOUCH_Sensor_Scan_Initialize 08EA  
                                      _WDT_Initialize 0818                               Sensor_setSampled@sensor 0072  
                    __size_of_Button_State_NotPressed 0098                                                 pclath 000A  
                                _Sensor_Sampled_Reset 0863                                                 status 0003  
                                               wtemp0 007E                                       _TMR2_StartTimer 0806  
                    __size_of_TMR2_LoadPeriodRegister 0005                             __size_of_Sensor_setActive 0008  
                              Sensor_isEnabled@sensor 0073                                       __initialization 07CB  
                                        __end_of_main 0B3C                                 _MTOUCH_Proximity_Tick 0810  
                                _Sensor_setCalibrated 0890                               __end_of_TMR2_Initialize 0886  
                                      __CFG_LPBOR$OFF 0000                           ?_INTERRUPT_InterruptManager 0070  
                    __end_of_MTOUCH_Button_Initialize 0C2E                                                ??_main 007A  
                           _Proximity_State_Activated 0D01                               _MTOUCH_Sensor_Calibrate 0A61  
                           Sensor_Service@sensor_adc1 004C                             Sensor_Service@sensor_adc2 004D  
                             ??_Button_Reading_Update 0020                  MTOUCH_Sensor_Sampled_ResetAll@sensor 0074  
                            ?_Button_Deviation_Update 0070                                __end_of_WDT_Initialize 081C  
                       __end_of_mtouch_proximity_init 1062                           ??_Proximity_DefaultCallback 0073  
                                        ?_MTOUCH_Tick 0070                          Button_Baseline_Update@button 0026  
                __size_of_MTOUCH_Sensor_RawSample_Get 0019                                                _APFCON 011D  
                                              _ANSELA 018C                                                _ANSELB 018D  
                                              _ANSELC 018E                                                i1l4161 09A3  
                               ?_Sensor_Sampled_Reset 0070                                                _OSCCON 0099  
                                              _SPBRGH 019C                                                _SPBRGL 019B  
                                              _WDTCON 0097                                _Button_DefaultCallback 0801  
                     __end_of_MTOUCH_Service_Mainloop 092E                                        __CFG_PWRTE$OFF 0000  
                                 _Sensor_isCalibrated 0886                                _Sensor_DefaultCallback 0026  
                                       _packet_sample 0066                                      _mtouch_proximity 00C0  
                                              ___bmul 08FA                                 ?_Sensor_setCalibrated 0070  
                        Sensor_DefaultCallback@sensor 0072                                        __CFG_STVREN$ON 0000  
                                 _EUSART_Transmit_ISR 0A26                      __end_of_MTOUCH_Button_ServiceAll 08EA  
                        Sensor_autoCalibration@sensor 0079                                    _processButtonTouch 0802  
                             _MTOUCH_Sensor_SampleAll 09D4                          Button_DefaultCallback@button 0072  
                                ?_Sensor_isCalibrated 0070                                       ?_WDT_Initialize 0070  
                            ?_Sensor_RawSample_Update 0070                            __end_of_Sensor_Acquisition 0DF8  
                             ?_Button_Baseline_Update 0070                   __size_of_Proximity_Deviation_Update 011D  
                          __size_of_Proximity_Service 004C                   Sensor_postAcquisitionProcess@sensor 0023  
                             __end_of_TMR2_StartTimer 0809                    __size_of_Sensor_setCalibratAcqTime 000F  
                                 ?_processButtonTouch 0072              __end_of_MTOUCH_Button_SetPressedCallback 082D  
           __size_of_MTOUCH_Button_SetPressedCallback 0006                    ??_MTOUCH_Button_SetPressedCallback 0074  
                   ?_MTOUCH_Button_SetPressedCallback 0072                      _MTOUCH_Button_SetPressedCallback 0827  
                            __size_of_Sensor_isActive 0009                                  ?_EUSART_Transmit_ISR 0070  
                     MTOUCH_Sensor_RawSample_Get@name 0079                            ??_processProximityActivate 0073  
                 Sensor_getScanGroupIndex@sensorGroup 0077                                     _SYSTEM_Initialize 08BB  
                             __end_of__initialization 07FC                   __size_of_Button_Baseline_Initialize 002F  
                     MTOUCH_Proximity_Initialize@name 0073                        ?_MTOUCH_Sensor_Scan_Initialize 0070  
                     ??_Sensor_postAcquisitionProcess 0078                       MTOUCH_Proximity_Initialize@prox 0074  
                                  ?_SYSTEM_Initialize 0070                                   _Button_StateMachine 0055  
                          __end_of_Button_Tick_helper 0B15                         MTOUCH_Sensor_Calibrate@sensor 0077  
                                 ___bmul@multiplicand 0072                            ??_Proximity_Reading_Update 0020  
                           _Proximity_DefaultCallback 0804                                ?_MTOUCH_Proximity_Tick 0070  
                                      __pcstackCOMMON 0070                                          __pidataBANK0 096E  
                                        __pidataBANK2 0BC1           __end_of_MTOUCH_Button_SetNotPressedCallback 0827  
        __size_of_MTOUCH_Button_SetNotPressedCallback 0006                 ??_MTOUCH_Button_SetNotPressedCallback 0074  
                ?_MTOUCH_Button_SetNotPressedCallback 0072                   _MTOUCH_Button_SetNotPressedCallback 0821  
                                ??_processButtonTouch 0073                                   ??_SYSTEM_Initialize 0073  
                  __size_of_Proximity_Baseline_Update 0083                            __end_of_MTOUCH_Button_Tick 0957  
                    Proximity_State_Initializing@prox 0027                             ??_MTOUCH_Sensor_Calibrate 0076  
                                    _Sensor_isEnabled 090B                                      ?_TMR2_Initialize 0070  
                     __end_of_Button_Deviation_Update 028B                              Sensor_setInactive@sensor 0072  
                                      _Button_Service 0DF8                       ??_Proximity_Baseline_Get_helper 0076  
                    __end_of_Sensor_Acq_ExecutePacket 07CB                            ?_Button_State_Initializing 0027  
                                Button_Service@button 002D                                        _OPTION_REGbits 0095  
                               ??_Sensor_isCalibrated 0072                            ??_Sensor_getScanGroupIndex 0072  
                       Proximity_State_Activated@prox 0027                        __end_of_Button_Baseline_Update 01F9  
                 Sensor_Acq_ExecutePacket@sensor_adc1 0033                   Sensor_Acq_ExecutePacket@sensor_adc2 0024  
                        ?_processProximityNotActivate 0072                              _MTOUCH_Button_Initialize 0BF7  
                                      _Sensor_Service 005F                               _Button_State_NotPressed 028B  
                                  _Sensor_setInactive 0853                                     _sensor_scan_group 1062  
                           __end_of_SYSTEM_Initialize 08CA                                 ??_EUSART_Transmit_ISR 0070  
                    MTOUCH_Sensor_isCalibrated@sensor 0077                                ??_Sensor_Sampled_Reset 0072  
                                          __pbssBANK0 0066                                            __pbssBANK1 00A0  
                                          __pbssBANK3 01A0                               _TMR2_LoadPeriodRegister 081C  
                                 ?_Sensor_setInactive 0070                                      _Sensor_setActive 084B  
                         __size_of_EUSART_Receive_ISR 001B                            __end_of_mtouch_button_init 1050  
                                    ??_USART_SendChar 0070                                ??_Sensor_setCalibrated 0072  
                                          __pmaintext 0B15                                               ?___bmul 0072  
                                             _AD1CON0 0711                                               _AD1CON2 0713  
                                             _AD1CON3 0714                                               _AD2CON0 0791  
                                             _AD2CON2 0793                                               _AD2CON3 0794  
                                             _AAD1CAP 0719                                               _AAD2CAP 0799  
                                             _AAD1GRD 0718                                               _AAD2GRD 0798  
                     ??_Proximity_Baseline_Initialize 0020                        MTOUCH_Sensor_wasSampled@sensor 0077  
                                          __pintentry 0003                   Proximity_Deviation_Update@deviation 0030  
                              __end_of_Button_Service 0E4D                                               _BAUDCON 019F  
                                           _AD1ACQCON 0717                                             _AD2ACQCON 0797  
                        ?_MTOUCH_Proximity_Initialize 0070                             ??_MTOUCH_Sensor_SampleAll 004E  
                     __end_of_Sensor_RawSample_Update 0B66                                  ??_Sensor_setInactive 0072  
                   __size_of_MTOUCH_Sensor_wasSampled 0010                             ?_MTOUCH_Sensor_wasSampled 0070  
                                       _eusartRxCount 006C                                             _AD1PRECON 0716  
                           Sensor_isCalibrated@sensor 0072                                             _AD2PRECON 0796  
                   __end_of_Button_State_Initializing 0CB5                                __end_of_Sensor_Service 00E4  
                             Sensor_Service@scanGroup 004A                        __size_of_Proximity_Tick_helper 0023  
                            _MTOUCH_Button_ServiceAll 08DA                         __end_of_Proximity_Tick_helper 0AC7  
                           __end_of_sensor_scan_group 1068                      __size_of_MTOUCH_Service_Mainloop 0012  
                        __end_of_Button_State_Pressed 0EA5                               __size_of_TMR2_StopTimer 0003  
                       ??_processProximityNotActivate 0073                                      ?_TMR2_StartTimer 0070  
                    Button_Baseline_Initialize@button 0024                       Sensor_setCalibratAcqTime@sensor 0072  
                  __size_of_Proximity_State_Activated 0050                                  __size_of_MTOUCH_Tick 0006  
                __size_of_Sensor_isCalibratingAcqTime 0009                 Sensor_Acq_ExecutePacket@ADCOMCON_temp 0027  
       __end_of_MTOUCH_Proximity_SetActivatedCallback 0833        __size_of_MTOUCH_Proximity_SetActivatedCallback 0006  
             ??_MTOUCH_Proximity_SetActivatedCallback 0074                ?_MTOUCH_Proximity_SetActivatedCallback 0072  
               _MTOUCH_Proximity_SetActivatedCallback 082D      MTOUCH_Proximity_SetNotActivatedCallback@callback 0072  
                                   ??_Sensor_isActive 0072                 __end_of_Sensor_postAcquisitionProcess 0DA4  
              __size_of_Sensor_postAcquisitionProcess 0053                         _Sensor_postAcquisitionProcess 0D51  
                             Sensor_Acquisition@error 0043                                       __size_of___bmul 0011  
                __end_of_Proximity_State_Initializing 0C6F                 __size_of_Proximity_State_Initializing 0041  
                        _Proximity_State_Initializing 0C2E                                           _AD1CON0bits 0711  
                                         _AD1CON2bits 0713                        MTOUCH_Button_Initialize@button 0021  
                                         _AD2CON0bits 0791                                           _AD2CON2bits 0793  
                                     ?_Button_Service 0070                 __end_of_MTOUCH_Proximity_Baseline_Get 09D4  
              __size_of_MTOUCH_Proximity_Baseline_Get 001B                         _MTOUCH_Proximity_Baseline_Get 09B9  
                        ?_MTOUCH_Proximity_ServiceAll 0070            Sensor_Scanfrequency_Evaluation@sensor_adc1 0037  
          Sensor_Scanfrequency_Evaluation@sensor_adc2 0034                                               __ptext1 08BB  
                                             __ptext2 0818                                               __ptext3 087D  
                                             __ptext4 0A0A                                               __ptext5 0814  
                                             __ptext6 09EF                                               __ptext7 091C  
                                             __ptext8 0839                                               __ptext9 0810  
                         Button_Reading_Update@button 0022                         __size_of_processButtonRelease 0001  
                       ??_MTOUCH_Proximity_Initialize 0072                                 _OSCILLATOR_Initialize 0814  
                                           _T2CONbits 001C                                          __size_of_abs 000E  
                           ??_Button_State_NotPressed 0028                                       ?_Sensor_Service 0070  
                            ??_PIN_MANAGER_Initialize 0072                        __size_of_Button_Reading_Update 006E  
                       __end_of_Button_Reading_Update 0F7D                              _Sensor_Acq_ExecutePacket 0596  
                                    _callback_sampled 0063                             ??_TMR2_LoadPeriodRegister 0072  
                     Sensor_RawSample_Update@adcIndex 0020                            __size_of_SYSTEM_Initialize 000F  
                                             clrloop0 0840                      __end_of_processProximityActivate 0804  
                                    _callback_pressed 0061                                  end_of_initialization 07FC  
                             ?_Button_DefaultCallback 0072                                               init_ram 0845  
                                             initloop 0846                     Proximity_Baseline_Initialize@prox 0024  
                             ?_Sensor_DefaultCallback 0072                         Sensor_Acquisition@sensor_adc1 0044  
                       Sensor_Acquisition@sensor_adc2 0040                      __size_of_Button_Deviation_Update 0092  
                                   _EUSART_Initialize 09EF                          ??_MTOUCH_Sensor_isCalibrated 0076  
       MTOUCH_Proximity_SetActivatedCallback@callback 0072                                    ?_EUSART_Initialize 0070  
                           Proximity_Tick_helper@prox 0074                  __size_of_processProximityNotActivate 0001  
                 __end_of_MTOUCH_Sensor_RawSample_Get 099E                           _MTOUCH_Sensor_RawSample_Get 0985  
                                           _RCSTAbits 019D                  __end_of_Proximity_State_NotActivated 0479  
               __size_of_Proximity_State_NotActivated 00BC                          _Proximity_State_NotActivated 03BD  
                       ?_Proximity_State_Initializing 0027                                   ??_EUSART_Initialize 0072  
                                    ??_WDT_Initialize 0072                    __size_of_Proximity_DefaultCallback 0001  
                       ??_MTOUCH_Proximity_ServiceAll 007A                                Sensor_setActive@sensor 0072  
                                    __CFG_FOSC$INTOSC 0000     Sensor_Scanfrequency_Evaluation@best_sample_period 003A  
                       Button_Deviation_Update@button 0072                                             _TRISAbits 008C  
                Sensor_Acq_ExecutePacket@AD1CON2_temp 0028                                             _TRISBbits 008D  
                                           _TRISCbits 008E              MTOUCH_Button_SetPressedCallback@callback 0072  
                Sensor_Acq_ExecutePacket@AD2CON2_temp 0029                                   _callback_notPressed 005F  
                               _mtouch_proximity_init 1050                   __size_of_MTOUCH_Sensor_isCalibrated 0017  
                      __end_of_Button_DefaultCallback 0802       Sensor_Scanfrequency_Evaluation@packet_noise_Max 0038  
                    Proximity_State_NotActivated@prox 0027                              __end_of_Sensor_isEnabled 091C  
                          Sensor_setCalibrated@sensor 0072                        __end_of_Sensor_DefaultCallback 0027  
                __size_of_MTOUCH_Proximity_Initialize 0027                             __end_of_EUSART_Initialize 0A0A  
                            ??_Sensor_autoCalibration 0020                               ??_MTOUCH_Proximity_Tick 0075  
                    __size_of_Sensor_RawSample_Update 002A                                    _Sensor_Acquisition 0DA4  
                                _Button_State_Pressed 0E4D                                        __end_of___bmul 090B  
                                 ?_Sensor_Acquisition 0040                            ??_MTOUCH_Button_Initialize 0078  
         MTOUCH_Button_SetNotPressedCallback@callback 0072                       ??_MTOUCH_Sensor_Scan_Initialize 0072  
                      ?_Sensor_postAcquisitionProcess 0070                         ?_Proximity_State_NotActivated 0027  
                       Sensor_Acq_ExecutePacket@error 002B                                    _Button_Tick_helper 0AEE  
                              ?_OSCILLATOR_Initialize 0070                                   MTOUCH_Button_Tick@i 0076  
                            __end_of_Sensor_setActive 0853                      TMR2_LoadPeriodRegister@periodVal 0072  
                         ??_Button_State_Initializing 0028                        ?_MTOUCH_Proximity_Baseline_Get 0021  
                                 start_initialization 07CB                               _MTOUCH_Service_Mainloop 091C  
                              _Proximity_StateMachine 004F                       __size_of_PIN_MANAGER_Initialize 001C  
                                  _MTOUCH_Button_Tick 0941                                   ?_Button_Tick_helper 0070  
                                         __end_of_abs 08AC                                        _TMR2_StopTimer 0809  
                                ??_Sensor_Acquisition 0041                  __size_of_MTOUCH_Proximity_ServiceAll 0004  
                                 ?_MTOUCH_Button_Tick 0070                       Button_State_Initializing@button 0027  
                      Sensor_autoCalibration@adcIndex 0078                      __end_of_MTOUCH_Sensor_wasSampled 08DA  
                                ??_Button_Tick_helper 0072                          ??_Proximity_Deviation_Update 0027  
                                        _packet_noise 006A                                              ??___bmul 0073  
                               ?_Button_State_Pressed 0027                           __size_of_processButtonTouch 0001  
                   __size_of_processProximityActivate 0001                            ??_MTOUCH_Button_ServiceAll 002E  
                                         __pdataBANK0 004F                                           __pdataBANK2 0120  
                           ?_processProximityActivate 0072                           __end_of_Sensor_isCalibrated 0890  
                        ??_Button_Baseline_Initialize 0020                                         _sample_period 0065  
                                ??_MTOUCH_Button_Tick 0075                                    _mtouch_button_init 1000  
                          Sensor_Sampled_Reset@sensor 0072                          ?_Sensor_isCalibratingAcqTime 0070  
                         __end_of_EUSART_Transmit_ISR 0A43                        ??_Proximity_State_Initializing 0028  
                              __end_of_TMR2_StopTimer 080C                     __size_of_Proximity_Reading_Update 0086  
                                         __pbssCOMMON 007A                             ?_Proximity_Reading_Update 0070  
                                           ___latbits 0002                                 Proximity_Service@name 0036  
                                       __pcstackBANK0 0020                                         __pcstackBANK1 00D2  
                               Proximity_Service@prox 0037                              __size_of_TMR2_Initialize 0009  
                __end_of_MTOUCH_Proximity_Reading_Get 0A61                 __size_of_MTOUCH_Proximity_Reading_Get 001E  
                        _MTOUCH_Proximity_Reading_Get 0A43                                       _Sensor_isActive 0874  
                      MTOUCH_Button_ServiceAll@button 002F                                   Sensor_Service@error 004B  
                          __end_of_EUSART_Receive_ISR 09B9                         __size_of_Sensor_Sampled_Reset 0008  
                          __size_of_EUSART_Initialize 001B                       processProximityNotActivate@prox 0072  
                             _Button_Deviation_Update 01F9                            ?_Sensor_setCalibratAcqTime 0070  
                        processProximityActivate@prox 0072                          Proximity_Reading_Update@prox 0024  
                           _Button_State_Initializing 0C6F                    __end_of_MTOUCH_Sensor_isCalibrated 096E  
                          _MTOUCH_Sensor_isCalibrated 0957                                             __pnvBANK0 006F  
                     __size_of_Sensor_autoCalibration 009A                     __size_of_Sensor_getScanGroupIndex 0038  
                                   _Sensor_setSampled 085B                             ?_Sensor_getScanGroupIndex 0070  
                              _PIN_MANAGER_Initialize 0A0A                                      ??_Button_Service 002A  
                            ?_MTOUCH_Sensor_Calibrate 0070                                    ?_Sensor_setSampled 0070  
                       __size_of_Sensor_setCalibrated 000E                                              _AAD1CON3 0714  
                                            _AAD2CON3 0794                                              _AAD1RES0 071A  
                                        _eusartRxHead 006E                                              _AAD2RES0 079A  
                                        _eusartTxHead 007B                                          _eusartRxTail 006D  
                                        _eusartTxTail 007A                                      ??_Sensor_Service 0045  
                          ??_Sensor_Acq_ExecutePacket 0025                          ??_INTERRUPT_InterruptManager 0071  
                                 ??_Sensor_setSampled 0072                             ??_MTOUCH_Service_Mainloop 007A  
                                  _callback_activated 005D                            ?_Proximity_Baseline_Update 0070  
                                            _ADCOMCON 0712                               _eusartTxBufferRemaining 006F  
                         __size_of_Sensor_setInactive 0008                        Sensor_Acq_ExecutePacket@last_a 002D  
                      Sensor_Acq_ExecutePacket@last_b 002F                                       ?_TMR2_StopTimer 0070  
                       ??_Sensor_isCalibratingAcqTime 0072                        ??_Proximity_State_NotActivated 0028  
                                       ??_MTOUCH_Tick 0077                                 _Proximity_Tick_helper 0AA4  
                       ?_MTOUCH_Proximity_Reading_Get 0072                                        _eusartRxBuffer 00A0  
          Sensor_Acq_ExecutePacket@sensor_globalFlags 0032                          __end_of_processButtonRelease 0801  
                                      _eusartTxBuffer 00B0                             __end_of_Sensor_setSampled 0863  
                             _Sensor_RawSample_Update 0B3C                     __end_of_Sensor_setCalibratAcqTime 08BB  
                                           clear_ram0 083F                                              _PIE1bits 0091  
                            __size_of_TMR2_StartTimer 0003                   __size_of_INTERRUPT_InterruptManager 0020  
                                            _PIR1bits 0011                Sensor_Acq_ExecutePacket@packet_counter 0031  
                                            _PIR2bits 0012                                ??_Button_State_Pressed 0028  
              __end_of_MTOUCH_Sensor_Sampled_ResetAll 0941               __size_of_MTOUCH_Sensor_Sampled_ResetAll 0013  
                      _MTOUCH_Sensor_Sampled_ResetAll 092E                              ?_MTOUCH_Sensor_SampleAll 0070  
                   Proximity_Baseline_Get_helper@name 0020                    Sensor_Acq_ExecutePacket@ADxIF_flag 002A  
                            _MTOUCH_Sensor_wasSampled 08CA                              ??_Button_Baseline_Update 0020  
                       Proximity_DefaultCallback@name 0072                               __end_of_Sensor_isActive 087D  
                              _Sensor_autoCalibration 0323                     __end_of_Proximity_Baseline_Update 1000  
                                            _WPUAbits 020C                                              _WPUBbits 020D  
                 __end_of_processProximityNotActivate 0806                           _processProximityNotActivate 0805  
    __end_of_MTOUCH_Proximity_SetNotActivatedCallback 0839     __size_of_MTOUCH_Proximity_SetNotActivatedCallback 0006  
          ??_MTOUCH_Proximity_SetNotActivatedCallback 0074             ?_MTOUCH_Proximity_SetNotActivatedCallback 0072  
            _MTOUCH_Proximity_SetNotActivatedCallback 0833                              Button_Tick_helper@button 0074  
                           ??_Button_Deviation_Update 0020                                 _Button_Reading_Update 0F0F  
                                   ?_Sensor_isEnabled 0070                                     ??_TMR2_Initialize 0072  
                                 __end_of_MTOUCH_Tick 083F                       __end_of_MTOUCH_Sensor_Calibrate 0A82  
                          ?_Proximity_State_Activated 0027                                    ??_Sensor_isEnabled 0072  
                  __end_of_Proximity_Deviation_Update 0596                            _Proximity_Deviation_Update 0479  
                      __size_of_MTOUCH_Proximity_Tick 0004                         __end_of_MTOUCH_Proximity_Tick 0814  
              Sensor_postAcquisitionProcess@deviation 0021                                            _APFCONbits 011D  
                             ??_OSCILLATOR_Initialize 0072                    __end_of_Button_Baseline_Initialize 0BC1  
                          _Button_Baseline_Initialize 0B92                   __end_of_MTOUCH_Proximity_Initialize 0AEE  
                         _MTOUCH_Proximity_Initialize 0AC7                              processButtonTouch@button 0072  
                            ?_Button_State_NotPressed 0027                      MTOUCH_Proximity_Reading_Get@name 0077  
                                          _ANSELAbits 018C                                            _ANSELBbits 018D  
                                          _ANSELCbits 018E                                    Button_Service@name 002C  
                                   ?_Sensor_setActive 0070                              ?_TMR2_LoadPeriodRegister 0070  
                               Sensor_isActive@sensor 0072                                    ??_Sensor_setActive 0072  
                              ?_Proximity_Tick_helper 0070                                              __ptext10 0AA4  
                                            __ptext11 0941                                              __ptext20 0DA4  
                                            __ptext12 0AEE                                              __ptext21 0D51  
                                            __ptext13 092E                                              __ptext30 0886  
                                            __ptext22 0853                                              __ptext14 0863  
                                            __ptext31 0874                                              __ptext23 084B  
                                            __ptext15 09D4                                              __ptext40 0CB5  
                                            __ptext32 0323                                              __ptext24 0EA5  
                                            __ptext16 005F                                              __ptext41 0D01  
                                            __ptext33 089E                                              __ptext25 0596  
                                            __ptext17 085B                                              __ptext50 00E4  
                                            __ptext42 0C2E                                              __ptext34 0890  
                                            __ptext26 0809                                              __ptext18 0B3C  
                                            __ptext51 0479                                              __ptext43 03BD  
                                            __ptext35 08AC                                              __ptext27 0806  
                                            __ptext19 0026                                              __ptext60 0C6F  
                                            __ptext52 0A43                                              __ptext44 0805  
                                            __ptext36 086B                                              __ptext28 081C  
                                            __ptext61 0E4D                                              __ptext53 09B9  
                                            __ptext45 0804                                              __ptext37 0027  
                                            __ptext29 090B                                              __ptext70 0985  
                                            __ptext62 0802                                              __ptext54 0A82  
                                            __ptext46 0803                                              __ptext38 08EA  
                                            __ptext71 08FA                                              __ptext63 0801  
                                            __ptext55 08DA                                              __ptext47 0F7D  
                                            __ptext39 080C                                              __ptext72 01F9  
                                            __ptext64 0800                                              __ptext56 0DF8  
                                            __ptext48 0B66                                              __ptext73 0833  
                                            __ptext65 0BF7                                              __ptext57 08CA  
                                            __ptext49 0AC7                                              __ptext74 082D  
                                            __ptext66 0A61                                              __ptext58 0957  
                                            __ptext75 0827                                              __ptext67 016A  
                                            __ptext59 028B                                              __ptext76 0821  
                                            __ptext68 0B92                                              __ptext69 0F0F  
                                            __ptext78 0A26                                              __ptext79 099E  
               __end_of_Proximity_Baseline_Get_helper 0AA4                __size_of_Proximity_Baseline_Get_helper 0022  
                       _Proximity_Baseline_Get_helper 0A82                             ??_Sensor_RawSample_Update 0078  
                          __size_of_Sensor_setSampled 0008                                         __size_of_main 0027  
                      ??_MTOUCH_Proximity_Reading_Get 0077                       ??_MTOUCH_Proximity_Baseline_Get 007A  
                     __end_of_MTOUCH_Sensor_SampleAll 09EF                      Sensor_Scanfrequency_Evaluation@i 003F  
                   __end_of_Proximity_State_Activated 0D51                      __end_of_Proximity_Reading_Update 016A  
                                            int$flags 007E                   __end_of_MTOUCH_Proximity_ServiceAll 0810  
                         _MTOUCH_Proximity_ServiceAll 080C                    __size_of_Button_State_Initializing 0046  
                                   ??_TMR2_StartTimer 0072                    __end_of_INTERRUPT_InterruptManager 0023  
                          _INTERRUPT_InterruptManager 0003                       __size_of_Button_Baseline_Update 008F  
                        MTOUCH_Sensor_SampleAll@group 00D2                                  _processButtonRelease 0800  
                                    ?_Sensor_isActive 0070                                         _mtouch_button 01A0  
                                          _INTCONbits 000B                                         _mtouch_sensor 0120  
               __end_of_Proximity_Baseline_Initialize 0B92                __size_of_Proximity_Baseline_Initialize 002C  
                       _Proximity_Baseline_Initialize 0B66                            ?_Proximity_DefaultCallback 0072  
                    __end_of_Sensor_getScanGroupIndex 005F                                           _MTOUCH_Tick 0839  
                              ?_Button_Reading_Update 0070                      Button_Deviation_Update@deviation 0073  
                             __size_of_WDT_Initialize 0004                            processButtonRelease@button 0072  
                        MTOUCH_Button_Initialize@name 0020                     __size_of_MTOUCH_Button_Initialize 0037  
                                            intlevel1 0000                             ?_MTOUCH_Button_Initialize 0070  
                         __size_of_Sensor_Acquisition 0054               __end_of_Sensor_Scanfrequency_Evaluation 0F0F  
            __size_of_Sensor_Scanfrequency_Evaluation 006A                     ??_Sensor_Scanfrequency_Evaluation 0035  
                    ?_Sensor_Scanfrequency_Evaluation 0034                       _Sensor_Scanfrequency_Evaluation 0EA5  
                             ?_PIN_MANAGER_Initialize 0070                           ??_Sensor_setCalibratAcqTime 0072  
                                   __CFG_CLKOUTEN$OFF 0000                           ?_MTOUCH_Sensor_isCalibrated 0070  
                          __end_of_processButtonTouch 0803                           __size_of_Button_Tick_helper 0027  
                     __end_of_Button_State_NotPressed 0323                                    _EUSART_Receive_ISR 099E  
                        __end_of_Sensor_Sampled_Reset 086B                                 _callback_notActivated 005B  
                                    ??_TMR2_StopTimer 0072                       __end_of_TMR2_LoadPeriodRegister 0821  
                         __size_of_MTOUCH_Button_Tick 0016                                         __pstringtext1 1062  
                                       __pstringtext2 1068                                         __pstringtext3 1000  
                                       __pstringtext4 1050                                        _USART_SendChar 0000  
                               ?_processButtonRelease 0072                           ??_Proximity_Baseline_Update 0072  
                                 ?_EUSART_Receive_ISR 0070                              ??_Button_DefaultCallback 0073  
                Sensor_Acq_ExecutePacket@activeSensor 002C                      __size_of_MTOUCH_Sensor_Calibrate 0021  
                   Sensor_isCalibratingAcqTime@sensor 0072                          __size_of_Sensor_isCalibrated 000A  
                            ??_Sensor_DefaultCallback 0073                          __end_of_Sensor_setCalibrated 089E  
                   __end_of_Proximity_DefaultCallback 0805                     __size_of_MTOUCH_Button_ServiceAll 0010  
                           ?_MTOUCH_Button_ServiceAll 0070                         Button_State_NotPressed@button 0027  
                        __size_of_EUSART_Transmit_ISR 001D                        __end_of_PIN_MANAGER_Initialize 0A26  
                              _Button_Baseline_Update 016A                     MTOUCH_Proximity_Baseline_Get@name 0026  
                                ??_EUSART_Receive_ISR 0070                            ??_MTOUCH_Sensor_wasSampled 0076  
                       Proximity_Baseline_Update@prox 0076                        ?_Proximity_Baseline_Get_helper 0072  
                            _processProximityActivate 0803  
