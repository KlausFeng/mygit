Version 3.2 HI-TECH Software Intermediate Code
"142 mcc_generated_files/mtouch/mtouch_sensor.c
[c E3328 0 1 2 3 4 5 .. ]
[n E3328 mtouch_sensor_names Sensor_AN13 Sensor_AN23 Sensor_AN14 Sensor_AN2 Sensor_AN20 Sensor_AN26  ]
[v F3568 `(v ~T0 @X0 0 tf1`E3328 ]
"133
[v _Sensor_DefaultCallback `(v ~T0 @X0 0 sf1`E3328 ]
"84
[s S455 `CE3328 1 `Cuc 1 `uc 1 `uc 1 `uc 1 `uc 1 `ui 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S455 . sensor adcon0 precharge_time acquisition_time oversampling addcap rawSample sampled active calibrated enabled acqTime_cal ]
"100
[s S456 `*S455 1 `*S455 1 ]
[n S456 . sensor_adc1 sensor_adc2 ]
"190
[c E3335 0 -1 -2 -3 .. ]
[n E3335 mtouch_sensor_error MTOUCH_SENSOR_ERROR_none MTOUCH_SENSOR_ERROR_invalid_index MTOUCH_SENSOR_ERROR_interrupt_notEnabled MTOUCH_SENSOR_ERROR_invalid_calibrate  ]
"2178 C:\Program Files (x86)\Microchip\xc8\v1.43\include\pic16lf1559.h
[s S120 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S120 . ANSC0 ANSC1 ANSC2 ANSC3 ANSC4 ANSC5 ANSC6 ANSC7 ]
"2188
[s S121 :8 `uc 1 ]
[n S121 . ANSELC ]
"2177
[u S119 `S120 1 `S121 1 ]
[n S119 . . . ]
"2192
[v _ANSELCbits `VS119 ~T0 @X0 0 e@398 ]
"1089
[s S67 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S67 . TRISC0 TRISC1 TRISC2 TRISC3 TRISC4 TRISC5 TRISC6 TRISC7 ]
"1088
[u S66 `S67 1 ]
[n S66 . . ]
"1100
[v _TRISCbits `VS66 ~T0 @X0 0 e@142 ]
"2681
[s S149 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S149 . WPUA0 WPUA1 WPUA2 WPUA3 WPUA4 WPUA5 ]
"2689
[s S150 :6 `uc 1 ]
[n S150 . WPUA ]
"2680
[u S148 `S149 1 `S150 1 ]
[n S148 . . . ]
"2693
[v _WPUAbits `VS148 ~T0 @X0 0 e@524 ]
"2078
[s S114 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S114 . ANSA0 ANSA1 ANSA2 . ANSA4 ANSA5 ]
"2086
[s S115 :6 `uc 1 ]
[n S115 . ANSELA ]
"2077
[u S113 `S114 1 `S115 1 ]
[n S113 . . . ]
"2090
[v _ANSELAbits `VS113 ~T0 @X0 0 e@396 ]
"1000
[s S63 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S63 . TRISA0 TRISA1 TRISA2 TRISA3 TRISA4 TRISA5 ]
"999
[u S62 `S63 1 ]
[n S62 . . ]
"1009
[v _TRISAbits `VS62 ~T0 @X0 0 e@140 ]
"2739
[s S152 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S152 . . WPUB4 WPUB5 WPUB6 WPUB7 ]
"2746
[s S153 :8 `uc 1 ]
[n S153 . WPUB ]
"2738
[u S151 `S152 1 `S153 1 ]
[n S151 . . . ]
"2750
[v _WPUBbits `VS151 ~T0 @X0 0 e@525 ]
"2131
[s S117 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S117 . . ANSB4 ANSB5 ANSB6 ANSB7 ]
"2138
[s S118 :8 `uc 1 ]
[n S118 . ANSELB ]
"2130
[u S116 `S117 1 `S118 1 ]
[n S116 . . . ]
"2142
[v _ANSELBbits `VS116 ~T0 @X0 0 e@397 ]
"1050
[s S65 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S65 . . TRISB4 TRISB5 TRISB6 TRISB7 ]
"1049
[u S64 `S65 1 ]
[n S64 . . ]
"1058
[v _TRISBbits `VS64 ~T0 @X0 0 e@141 ]
"95 mcc_generated_files/mtouch/../mtouch/mtouch_sensor.h
[v _MTOUCH_Sensor_Enable `(v ~T0 @X0 0 ef1`E3328 ]
"96
[v _MTOUCH_Sensor_Calibrate `(v ~T0 @X0 0 ef1`E3328 ]
[v F3534 `(v ~T0 @X0 1 tf1`*S455 ]
"117 mcc_generated_files/mtouch/mtouch_sensor.c
[v _Sensor_Sampled_Reset `TF3534 ~T0 @X0 0 s ]
"929 C:\Program Files (x86)\Microchip\xc8\v1.43\include\pic16lf1559.h
[s S60 :2 `uc 1 :1 `uc 1 :4 `uc 1 ]
[n S60 . T2CKPS TMR2ON T2OUTPS ]
"934
[s S61 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S61 . T2CKPS0 T2CKPS1 . T2OUTPS0 T2OUTPS1 T2OUTPS2 T2OUTPS3 ]
"928
[u S59 `S60 1 `S61 1 ]
[n S59 . . . ]
"944
[v _T2CONbits `VS59 ~T0 @X0 0 e@28 ]
"4143
[v _AD1CON0 `Vuc ~T0 @X0 0 e@1809 ]
"6181
[v _AD2CON0 `Vuc ~T0 @X0 0 e@1937 ]
"4377
[v _ADCOMCON `Vuc ~T0 @X0 0 e@1810 ]
"4651
[v _AD1CON3 `Vuc ~T0 @X0 0 e@1812 ]
"6421
[v _AD2CON3 `Vuc ~T0 @X0 0 e@1940 ]
"110 mcc_generated_files/mtouch/mtouch_sensor.c
[v _Sensor_Service `(E3335 ~T0 @X0 0 sf1`uc ]
"111
[v _Sensor_Acquisition `(E3335 ~T0 @X0 0 sf2`*S455`*S455 ]
"122
[v _Sensor_isEnabled `(uc ~T0 @X0 0 sf1`*S455 ]
"131
[v _Sensor_RawSample_Update `(v ~T0 @X0 0 sf1`*S455 ]
[v F3531 `(v ~T0 @X0 1 tf1`*S455 ]
"116
[v _Sensor_setSampled `TF3531 ~T0 @X0 0 s ]
"112
[v _Sensor_Acq_ExecutePacket `(E3335 ~T0 @X0 0 sf2`*S455`*S455 ]
"113
[v _Sensor_postAcquisitionProcess `(E3335 ~T0 @X0 0 sf1`*S455 ]
[v F3543 `(uc ~T0 @X0 1 tf1`*S455 ]
"120
[v _Sensor_isActive `TF3543 ~T0 @X0 0 s ]
[v F3548 `(uc ~T0 @X0 1 tf1`*S455 ]
"124
[v _Sensor_isCalibrated `TF3548 ~T0 @X0 0 s ]
"135
[v _Sensor_Scanfrequency_Evaluation `(v ~T0 @X0 0 sf2`*S455`*S455 ]
"92 C:\Program Files (x86)\Microchip\xc8\v1.43\include\stdlib.h
[v _abs `(i ~T0 @X0 0 ef1`i ]
[v F3537 `(v ~T0 @X0 1 tf1`*S455 ]
"118 mcc_generated_files/mtouch/mtouch_sensor.c
[v _Sensor_setActive `TF3537 ~T0 @X0 0 s ]
[v F3540 `(v ~T0 @X0 1 tf1`*S455 ]
"119
[v _Sensor_setInactive `TF3540 ~T0 @X0 0 s ]
"77
[s S454 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S454 . done check error ]
"4531 C:\Program Files (x86)\Microchip\xc8\v1.43\include\pic16lf1559.h
[v _AD1CON2 `Vuc ~T0 @X0 0 e@1811 ]
"6339
[v _AD2CON2 `Vuc ~T0 @X0 0 e@1939 ]
"5658
[v _AAD1CAP `Vuc ~T0 @X0 0 e@1817 ]
"4546
[s S244 :4 `uc 1 :3 `uc 1 ]
[n S244 . . TRIGSEL ]
"4550
[s S245 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S245 . . TRIGSEL0 TRIGSEL1 TRIGSEL2 ]
"4545
[u S243 `S244 1 `S245 1 ]
[n S243 . . . ]
"4557
[v _AD1CON2bits `VS243 ~T0 @X0 0 e@1811 ]
"5001
[v _AD1PRECON `Vuc ~T0 @X0 0 e@1814 ]
"5247
[v _AD1ACQCON `Vuc ~T0 @X0 0 e@1815 ]
[v F3557 `(uc ~T0 @X0 1 tf1`*S455 ]
"127 mcc_generated_files/mtouch/mtouch_sensor.c
[v _Sensor_isCalibratingAcqTime `TF3557 ~T0 @X0 0 s ]
"584 C:\Program Files (x86)\Microchip\xc8\v1.43\include\pic16lf1559.h
[s S39 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S39 . TMR1IF TMR2IF . SSP1IF TXIF RCIF ADIF TMR1GIF ]
"594
[s S40 :6 `uc 1 :1 `uc 1 ]
[n S40 . . AD1IF ]
"583
[u S38 `S39 1 `S40 1 ]
[n S38 . . . ]
"599
[v _PIR1bits `VS38 ~T0 @X0 0 e@17 ]
"5502
[v _AAD1GRD `Vuc ~T0 @X0 0 e@1816 ]
"6928
[v _AAD2GRD `Vuc ~T0 @X0 0 e@1944 ]
"2039
[s S112 :1 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S112 . GRDASEL GRDBSEL . SDSEL SSSEL ]
"2038
[u S111 `S112 1 ]
[n S111 . . ]
"2047
[v _APFCONbits `VS111 ~T0 @X0 0 e@285 ]
"7034
[v _AAD2CAP `Vuc ~T0 @X0 0 e@1945 ]
"6350
[s S351 :4 `uc 1 :3 `uc 1 ]
[n S351 . . TRIGSEL ]
"6354
[s S352 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S352 . . TRIGSEL0 TRIGSEL1 TRIGSEL2 ]
"6349
[u S350 `S351 1 `S352 1 ]
[n S350 . . . ]
"6361
[v _AD2CON2bits `VS350 ~T0 @X0 0 e@1939 ]
"6551
[v _AD2PRECON `Vuc ~T0 @X0 0 e@1942 ]
"6737
[v _AD2ACQCON `Vuc ~T0 @X0 0 e@1943 ]
"650
[s S42 :3 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S42 . . BCL1IF . AD2IF ]
"649
[u S41 `S42 1 ]
[n S41 . . ]
"657
[v _PIR2bits `VS41 ~T0 @X0 0 e@18 ]
"289 mcc_generated_files/mtouch/../tmr2.h
[v _TMR2_LoadPeriodRegister `(v ~T0 @X0 0 ef1`uc ]
"131
[v _TMR2_StartTimer `(v ~T0 @X0 0 ef ]
"4660 C:\Program Files (x86)\Microchip\xc8\v1.43\include\pic16lf1559.h
[v _AAD1CON3 `Vuc ~T0 @X0 0 e@1812 ]
"6426
[v _AAD2CON3 `Vuc ~T0 @X0 0 e@1940 ]
"5887
[v _AAD1RES0 `Vus ~T0 @X0 0 e@1818 ]
"7209
[v _AAD2RES0 `Vus ~T0 @X0 0 e@1946 ]
"163 mcc_generated_files/mtouch/../tmr2.h
[v _TMR2_StopTimer `(v ~T0 @X0 0 ef ]
"128 mcc_generated_files/mtouch/mtouch_sensor.c
[v _Sensor_autoCalibration `(E3335 ~T0 @X0 0 sf1`*S455 ]
"4158 C:\Program Files (x86)\Microchip\xc8\v1.43\include\pic16lf1559.h
[s S226 :1 `uc 1 :1 `uc 1 :5 `uc 1 ]
[n S226 . ADON GO CHS ]
"4163
[s S227 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S227 . . GO_nDONE CHS0 CHS1 CHS2 CHS3 CHS4 ]
"4172
[s S228 :1 `uc 1 :1 `uc 1 ]
[n S228 . . GO_nDONE1 ]
"4157
[u S225 `S226 1 `S227 1 `S228 1 ]
[n S225 . . . . ]
"4177
[v _AD1CON0bits `VS225 ~T0 @X0 0 e@1809 ]
"6192
[s S343 :1 `uc 1 :1 `uc 1 :5 `uc 1 ]
[n S343 . ADON GO CHS ]
"6197
[s S344 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S344 . . GO_nDONE CHS0 CHS1 CHS2 CHS3 CHS4 ]
"6206
[s S345 :1 `uc 1 :1 `uc 1 ]
[n S345 . . GO_nDONE2 ]
"6191
[u S342 `S343 1 `S344 1 `S345 1 ]
[n S342 . . . . ]
"6211
[v _AD2CON0bits `VS342 ~T0 @X0 0 e@1937 ]
[v F3554 `(v ~T0 @X0 1 tf1`*S455 ]
"126 mcc_generated_files/mtouch/mtouch_sensor.c
[v _Sensor_setCalibratAcqTime `TF3554 ~T0 @X0 0 s ]
[v F3551 `(v ~T0 @X0 1 tf1`*S455 ]
"125
[v _Sensor_setCalibrated `TF3551 ~T0 @X0 0 s ]
"355 C:\Program Files (x86)\Microchip\xc8\v1.43\include\pic16lf1559.h
[s S30 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S30 . IOCIF INTF TMR0IF IOCIE INTE TMR0IE PEIE GIE ]
"365
[s S31 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S31 . . T0IF . T0IE ]
"354
[u S29 `S30 1 `S31 1 ]
[n S29 . . . ]
"372
[v _INTCONbits `VS29 ~T0 @X0 0 e@11 ]
[v F3350 `(v ~T0 @X0 0 tf1`E3328 ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;pic16lf1559.h: 50: extern volatile unsigned char INDF0 @ 0x000;
"52 C:\Program Files (x86)\Microchip\xc8\v1.43\include\pic16lf1559.h
[; ;pic16lf1559.h: 52: asm("INDF0 equ 00h");
[; <" INDF0 equ 00h ;# ">
[; ;pic16lf1559.h: 55: typedef union {
[; ;pic16lf1559.h: 56: struct {
[; ;pic16lf1559.h: 57: unsigned INDF0 :8;
[; ;pic16lf1559.h: 58: };
[; ;pic16lf1559.h: 59: } INDF0bits_t;
[; ;pic16lf1559.h: 60: extern volatile INDF0bits_t INDF0bits @ 0x000;
[; ;pic16lf1559.h: 70: extern volatile unsigned char INDF1 @ 0x001;
"72
[; ;pic16lf1559.h: 72: asm("INDF1 equ 01h");
[; <" INDF1 equ 01h ;# ">
[; ;pic16lf1559.h: 75: typedef union {
[; ;pic16lf1559.h: 76: struct {
[; ;pic16lf1559.h: 77: unsigned INDF1 :8;
[; ;pic16lf1559.h: 78: };
[; ;pic16lf1559.h: 79: } INDF1bits_t;
[; ;pic16lf1559.h: 80: extern volatile INDF1bits_t INDF1bits @ 0x001;
[; ;pic16lf1559.h: 90: extern volatile unsigned char PCL @ 0x002;
"92
[; ;pic16lf1559.h: 92: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16lf1559.h: 95: typedef union {
[; ;pic16lf1559.h: 96: struct {
[; ;pic16lf1559.h: 97: unsigned PCL :8;
[; ;pic16lf1559.h: 98: };
[; ;pic16lf1559.h: 99: } PCLbits_t;
[; ;pic16lf1559.h: 100: extern volatile PCLbits_t PCLbits @ 0x002;
[; ;pic16lf1559.h: 110: extern volatile unsigned char STATUS @ 0x003;
"112
[; ;pic16lf1559.h: 112: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16lf1559.h: 115: typedef union {
[; ;pic16lf1559.h: 116: struct {
[; ;pic16lf1559.h: 117: unsigned C :1;
[; ;pic16lf1559.h: 118: unsigned DC :1;
[; ;pic16lf1559.h: 119: unsigned Z :1;
[; ;pic16lf1559.h: 120: unsigned nPD :1;
[; ;pic16lf1559.h: 121: unsigned nTO :1;
[; ;pic16lf1559.h: 122: };
[; ;pic16lf1559.h: 123: struct {
[; ;pic16lf1559.h: 124: unsigned CARRY :1;
[; ;pic16lf1559.h: 125: unsigned :1;
[; ;pic16lf1559.h: 126: unsigned ZERO :1;
[; ;pic16lf1559.h: 127: };
[; ;pic16lf1559.h: 128: } STATUSbits_t;
[; ;pic16lf1559.h: 129: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16lf1559.h: 169: extern volatile unsigned short FSR0 @ 0x004;
[; ;pic16lf1559.h: 173: extern volatile unsigned char FSR0L @ 0x004;
"175
[; ;pic16lf1559.h: 175: asm("FSR0L equ 04h");
[; <" FSR0L equ 04h ;# ">
[; ;pic16lf1559.h: 178: typedef union {
[; ;pic16lf1559.h: 179: struct {
[; ;pic16lf1559.h: 180: unsigned FSR0L :8;
[; ;pic16lf1559.h: 181: };
[; ;pic16lf1559.h: 182: } FSR0Lbits_t;
[; ;pic16lf1559.h: 183: extern volatile FSR0Lbits_t FSR0Lbits @ 0x004;
[; ;pic16lf1559.h: 193: extern volatile unsigned char FSR0H @ 0x005;
"195
[; ;pic16lf1559.h: 195: asm("FSR0H equ 05h");
[; <" FSR0H equ 05h ;# ">
[; ;pic16lf1559.h: 198: typedef union {
[; ;pic16lf1559.h: 199: struct {
[; ;pic16lf1559.h: 200: unsigned FSR0H :8;
[; ;pic16lf1559.h: 201: };
[; ;pic16lf1559.h: 202: } FSR0Hbits_t;
[; ;pic16lf1559.h: 203: extern volatile FSR0Hbits_t FSR0Hbits @ 0x005;
[; ;pic16lf1559.h: 213: extern volatile unsigned short FSR1 @ 0x006;
[; ;pic16lf1559.h: 217: extern volatile unsigned char FSR1L @ 0x006;
"219
[; ;pic16lf1559.h: 219: asm("FSR1L equ 06h");
[; <" FSR1L equ 06h ;# ">
[; ;pic16lf1559.h: 222: typedef union {
[; ;pic16lf1559.h: 223: struct {
[; ;pic16lf1559.h: 224: unsigned FSR1L :8;
[; ;pic16lf1559.h: 225: };
[; ;pic16lf1559.h: 226: } FSR1Lbits_t;
[; ;pic16lf1559.h: 227: extern volatile FSR1Lbits_t FSR1Lbits @ 0x006;
[; ;pic16lf1559.h: 237: extern volatile unsigned char FSR1H @ 0x007;
"239
[; ;pic16lf1559.h: 239: asm("FSR1H equ 07h");
[; <" FSR1H equ 07h ;# ">
[; ;pic16lf1559.h: 242: typedef union {
[; ;pic16lf1559.h: 243: struct {
[; ;pic16lf1559.h: 244: unsigned FSR1H :8;
[; ;pic16lf1559.h: 245: };
[; ;pic16lf1559.h: 246: } FSR1Hbits_t;
[; ;pic16lf1559.h: 247: extern volatile FSR1Hbits_t FSR1Hbits @ 0x007;
[; ;pic16lf1559.h: 257: extern volatile unsigned char BSR @ 0x008;
"259
[; ;pic16lf1559.h: 259: asm("BSR equ 08h");
[; <" BSR equ 08h ;# ">
[; ;pic16lf1559.h: 262: typedef union {
[; ;pic16lf1559.h: 263: struct {
[; ;pic16lf1559.h: 264: unsigned BSR :5;
[; ;pic16lf1559.h: 265: };
[; ;pic16lf1559.h: 266: struct {
[; ;pic16lf1559.h: 267: unsigned BSR0 :1;
[; ;pic16lf1559.h: 268: unsigned BSR1 :1;
[; ;pic16lf1559.h: 269: unsigned BSR2 :1;
[; ;pic16lf1559.h: 270: unsigned BSR3 :1;
[; ;pic16lf1559.h: 271: unsigned BSR4 :1;
[; ;pic16lf1559.h: 272: };
[; ;pic16lf1559.h: 273: } BSRbits_t;
[; ;pic16lf1559.h: 274: extern volatile BSRbits_t BSRbits @ 0x008;
[; ;pic16lf1559.h: 309: extern volatile unsigned char WREG @ 0x009;
"311
[; ;pic16lf1559.h: 311: asm("WREG equ 09h");
[; <" WREG equ 09h ;# ">
[; ;pic16lf1559.h: 314: typedef union {
[; ;pic16lf1559.h: 315: struct {
[; ;pic16lf1559.h: 316: unsigned WREG0 :8;
[; ;pic16lf1559.h: 317: };
[; ;pic16lf1559.h: 318: } WREGbits_t;
[; ;pic16lf1559.h: 319: extern volatile WREGbits_t WREGbits @ 0x009;
[; ;pic16lf1559.h: 329: extern volatile unsigned char PCLATH @ 0x00A;
"331
[; ;pic16lf1559.h: 331: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16lf1559.h: 334: typedef union {
[; ;pic16lf1559.h: 335: struct {
[; ;pic16lf1559.h: 336: unsigned PCLATH :7;
[; ;pic16lf1559.h: 337: };
[; ;pic16lf1559.h: 338: } PCLATHbits_t;
[; ;pic16lf1559.h: 339: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16lf1559.h: 349: extern volatile unsigned char INTCON @ 0x00B;
"351
[; ;pic16lf1559.h: 351: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16lf1559.h: 354: typedef union {
[; ;pic16lf1559.h: 355: struct {
[; ;pic16lf1559.h: 356: unsigned IOCIF :1;
[; ;pic16lf1559.h: 357: unsigned INTF :1;
[; ;pic16lf1559.h: 358: unsigned TMR0IF :1;
[; ;pic16lf1559.h: 359: unsigned IOCIE :1;
[; ;pic16lf1559.h: 360: unsigned INTE :1;
[; ;pic16lf1559.h: 361: unsigned TMR0IE :1;
[; ;pic16lf1559.h: 362: unsigned PEIE :1;
[; ;pic16lf1559.h: 363: unsigned GIE :1;
[; ;pic16lf1559.h: 364: };
[; ;pic16lf1559.h: 365: struct {
[; ;pic16lf1559.h: 366: unsigned :2;
[; ;pic16lf1559.h: 367: unsigned T0IF :1;
[; ;pic16lf1559.h: 368: unsigned :2;
[; ;pic16lf1559.h: 369: unsigned T0IE :1;
[; ;pic16lf1559.h: 370: };
[; ;pic16lf1559.h: 371: } INTCONbits_t;
[; ;pic16lf1559.h: 372: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16lf1559.h: 427: extern volatile unsigned char PORTA @ 0x00C;
"429
[; ;pic16lf1559.h: 429: asm("PORTA equ 0Ch");
[; <" PORTA equ 0Ch ;# ">
[; ;pic16lf1559.h: 432: typedef union {
[; ;pic16lf1559.h: 433: struct {
[; ;pic16lf1559.h: 434: unsigned RA0 :1;
[; ;pic16lf1559.h: 435: unsigned RA1 :1;
[; ;pic16lf1559.h: 436: unsigned RA2 :1;
[; ;pic16lf1559.h: 437: unsigned RA3 :1;
[; ;pic16lf1559.h: 438: unsigned RA4 :1;
[; ;pic16lf1559.h: 439: unsigned RA5 :1;
[; ;pic16lf1559.h: 440: };
[; ;pic16lf1559.h: 441: } PORTAbits_t;
[; ;pic16lf1559.h: 442: extern volatile PORTAbits_t PORTAbits @ 0x00C;
[; ;pic16lf1559.h: 477: extern volatile unsigned char PORTB @ 0x00D;
"479
[; ;pic16lf1559.h: 479: asm("PORTB equ 0Dh");
[; <" PORTB equ 0Dh ;# ">
[; ;pic16lf1559.h: 482: typedef union {
[; ;pic16lf1559.h: 483: struct {
[; ;pic16lf1559.h: 484: unsigned :4;
[; ;pic16lf1559.h: 485: unsigned RB4 :1;
[; ;pic16lf1559.h: 486: unsigned RB5 :1;
[; ;pic16lf1559.h: 487: unsigned RB6 :1;
[; ;pic16lf1559.h: 488: unsigned RB7 :1;
[; ;pic16lf1559.h: 489: };
[; ;pic16lf1559.h: 490: } PORTBbits_t;
[; ;pic16lf1559.h: 491: extern volatile PORTBbits_t PORTBbits @ 0x00D;
[; ;pic16lf1559.h: 516: extern volatile unsigned char PORTC @ 0x00E;
"518
[; ;pic16lf1559.h: 518: asm("PORTC equ 0Eh");
[; <" PORTC equ 0Eh ;# ">
[; ;pic16lf1559.h: 521: typedef union {
[; ;pic16lf1559.h: 522: struct {
[; ;pic16lf1559.h: 523: unsigned RC0 :1;
[; ;pic16lf1559.h: 524: unsigned RC1 :1;
[; ;pic16lf1559.h: 525: unsigned RC2 :1;
[; ;pic16lf1559.h: 526: unsigned RC3 :1;
[; ;pic16lf1559.h: 527: unsigned RC4 :1;
[; ;pic16lf1559.h: 528: unsigned RC5 :1;
[; ;pic16lf1559.h: 529: unsigned RC6 :1;
[; ;pic16lf1559.h: 530: unsigned RC7 :1;
[; ;pic16lf1559.h: 531: };
[; ;pic16lf1559.h: 532: } PORTCbits_t;
[; ;pic16lf1559.h: 533: extern volatile PORTCbits_t PORTCbits @ 0x00E;
[; ;pic16lf1559.h: 578: extern volatile unsigned char PIR1 @ 0x011;
"580
[; ;pic16lf1559.h: 580: asm("PIR1 equ 011h");
[; <" PIR1 equ 011h ;# ">
[; ;pic16lf1559.h: 583: typedef union {
[; ;pic16lf1559.h: 584: struct {
[; ;pic16lf1559.h: 585: unsigned TMR1IF :1;
[; ;pic16lf1559.h: 586: unsigned TMR2IF :1;
[; ;pic16lf1559.h: 587: unsigned :1;
[; ;pic16lf1559.h: 588: unsigned SSP1IF :1;
[; ;pic16lf1559.h: 589: unsigned TXIF :1;
[; ;pic16lf1559.h: 590: unsigned RCIF :1;
[; ;pic16lf1559.h: 591: unsigned ADIF :1;
[; ;pic16lf1559.h: 592: unsigned TMR1GIF :1;
[; ;pic16lf1559.h: 593: };
[; ;pic16lf1559.h: 594: struct {
[; ;pic16lf1559.h: 595: unsigned :6;
[; ;pic16lf1559.h: 596: unsigned AD1IF :1;
[; ;pic16lf1559.h: 597: };
[; ;pic16lf1559.h: 598: } PIR1bits_t;
[; ;pic16lf1559.h: 599: extern volatile PIR1bits_t PIR1bits @ 0x011;
[; ;pic16lf1559.h: 644: extern volatile unsigned char PIR2 @ 0x012;
"646
[; ;pic16lf1559.h: 646: asm("PIR2 equ 012h");
[; <" PIR2 equ 012h ;# ">
[; ;pic16lf1559.h: 649: typedef union {
[; ;pic16lf1559.h: 650: struct {
[; ;pic16lf1559.h: 651: unsigned :3;
[; ;pic16lf1559.h: 652: unsigned BCL1IF :1;
[; ;pic16lf1559.h: 653: unsigned :2;
[; ;pic16lf1559.h: 654: unsigned AD2IF :1;
[; ;pic16lf1559.h: 655: };
[; ;pic16lf1559.h: 656: } PIR2bits_t;
[; ;pic16lf1559.h: 657: extern volatile PIR2bits_t PIR2bits @ 0x012;
[; ;pic16lf1559.h: 672: extern volatile unsigned char TMR0 @ 0x015;
"674
[; ;pic16lf1559.h: 674: asm("TMR0 equ 015h");
[; <" TMR0 equ 015h ;# ">
[; ;pic16lf1559.h: 677: typedef union {
[; ;pic16lf1559.h: 678: struct {
[; ;pic16lf1559.h: 679: unsigned TMR0 :8;
[; ;pic16lf1559.h: 680: };
[; ;pic16lf1559.h: 681: } TMR0bits_t;
[; ;pic16lf1559.h: 682: extern volatile TMR0bits_t TMR0bits @ 0x015;
[; ;pic16lf1559.h: 692: extern volatile unsigned short TMR1 @ 0x016;
"694
[; ;pic16lf1559.h: 694: asm("TMR1 equ 016h");
[; <" TMR1 equ 016h ;# ">
[; ;pic16lf1559.h: 699: extern volatile unsigned char TMR1L @ 0x016;
"701
[; ;pic16lf1559.h: 701: asm("TMR1L equ 016h");
[; <" TMR1L equ 016h ;# ">
[; ;pic16lf1559.h: 704: typedef union {
[; ;pic16lf1559.h: 705: struct {
[; ;pic16lf1559.h: 706: unsigned TMR1L :8;
[; ;pic16lf1559.h: 707: };
[; ;pic16lf1559.h: 708: } TMR1Lbits_t;
[; ;pic16lf1559.h: 709: extern volatile TMR1Lbits_t TMR1Lbits @ 0x016;
[; ;pic16lf1559.h: 719: extern volatile unsigned char TMR1H @ 0x017;
"721
[; ;pic16lf1559.h: 721: asm("TMR1H equ 017h");
[; <" TMR1H equ 017h ;# ">
[; ;pic16lf1559.h: 724: typedef union {
[; ;pic16lf1559.h: 725: struct {
[; ;pic16lf1559.h: 726: unsigned TMR1H :8;
[; ;pic16lf1559.h: 727: };
[; ;pic16lf1559.h: 728: } TMR1Hbits_t;
[; ;pic16lf1559.h: 729: extern volatile TMR1Hbits_t TMR1Hbits @ 0x017;
[; ;pic16lf1559.h: 739: extern volatile unsigned char T1CON @ 0x018;
"741
[; ;pic16lf1559.h: 741: asm("T1CON equ 018h");
[; <" T1CON equ 018h ;# ">
[; ;pic16lf1559.h: 744: typedef union {
[; ;pic16lf1559.h: 745: struct {
[; ;pic16lf1559.h: 746: unsigned TMR1ON :1;
[; ;pic16lf1559.h: 747: unsigned :1;
[; ;pic16lf1559.h: 748: unsigned nT1SYNC :1;
[; ;pic16lf1559.h: 749: unsigned :1;
[; ;pic16lf1559.h: 750: unsigned T1CKPS :2;
[; ;pic16lf1559.h: 751: unsigned TMR1CS :2;
[; ;pic16lf1559.h: 752: };
[; ;pic16lf1559.h: 753: struct {
[; ;pic16lf1559.h: 754: unsigned :4;
[; ;pic16lf1559.h: 755: unsigned T1CKPS0 :1;
[; ;pic16lf1559.h: 756: unsigned T1CKPS1 :1;
[; ;pic16lf1559.h: 757: unsigned TMR1CS0 :1;
[; ;pic16lf1559.h: 758: unsigned TMR1CS1 :1;
[; ;pic16lf1559.h: 759: };
[; ;pic16lf1559.h: 760: } T1CONbits_t;
[; ;pic16lf1559.h: 761: extern volatile T1CONbits_t T1CONbits @ 0x018;
[; ;pic16lf1559.h: 806: extern volatile unsigned char T1GCON @ 0x019;
"808
[; ;pic16lf1559.h: 808: asm("T1GCON equ 019h");
[; <" T1GCON equ 019h ;# ">
[; ;pic16lf1559.h: 811: typedef union {
[; ;pic16lf1559.h: 812: struct {
[; ;pic16lf1559.h: 813: unsigned T1GSS :2;
[; ;pic16lf1559.h: 814: unsigned T1GVAL :1;
[; ;pic16lf1559.h: 815: unsigned T1GGO_nDONE :1;
[; ;pic16lf1559.h: 816: unsigned T1GSPM :1;
[; ;pic16lf1559.h: 817: unsigned T1GTM :1;
[; ;pic16lf1559.h: 818: unsigned T1GPOL :1;
[; ;pic16lf1559.h: 819: unsigned TMR1GE :1;
[; ;pic16lf1559.h: 820: };
[; ;pic16lf1559.h: 821: struct {
[; ;pic16lf1559.h: 822: unsigned T1GSS0 :1;
[; ;pic16lf1559.h: 823: unsigned T1GSS1 :1;
[; ;pic16lf1559.h: 824: unsigned :1;
[; ;pic16lf1559.h: 825: unsigned GO :1;
[; ;pic16lf1559.h: 826: };
[; ;pic16lf1559.h: 827: } T1GCONbits_t;
[; ;pic16lf1559.h: 828: extern volatile T1GCONbits_t T1GCONbits @ 0x019;
[; ;pic16lf1559.h: 883: extern volatile unsigned char TMR2 @ 0x01A;
"885
[; ;pic16lf1559.h: 885: asm("TMR2 equ 01Ah");
[; <" TMR2 equ 01Ah ;# ">
[; ;pic16lf1559.h: 888: typedef union {
[; ;pic16lf1559.h: 889: struct {
[; ;pic16lf1559.h: 890: unsigned TMR2 :8;
[; ;pic16lf1559.h: 891: };
[; ;pic16lf1559.h: 892: } TMR2bits_t;
[; ;pic16lf1559.h: 893: extern volatile TMR2bits_t TMR2bits @ 0x01A;
[; ;pic16lf1559.h: 903: extern volatile unsigned char PR2 @ 0x01B;
"905
[; ;pic16lf1559.h: 905: asm("PR2 equ 01Bh");
[; <" PR2 equ 01Bh ;# ">
[; ;pic16lf1559.h: 908: typedef union {
[; ;pic16lf1559.h: 909: struct {
[; ;pic16lf1559.h: 910: unsigned PR2 :8;
[; ;pic16lf1559.h: 911: };
[; ;pic16lf1559.h: 912: } PR2bits_t;
[; ;pic16lf1559.h: 913: extern volatile PR2bits_t PR2bits @ 0x01B;
[; ;pic16lf1559.h: 923: extern volatile unsigned char T2CON @ 0x01C;
"925
[; ;pic16lf1559.h: 925: asm("T2CON equ 01Ch");
[; <" T2CON equ 01Ch ;# ">
[; ;pic16lf1559.h: 928: typedef union {
[; ;pic16lf1559.h: 929: struct {
[; ;pic16lf1559.h: 930: unsigned T2CKPS :2;
[; ;pic16lf1559.h: 931: unsigned TMR2ON :1;
[; ;pic16lf1559.h: 932: unsigned T2OUTPS :4;
[; ;pic16lf1559.h: 933: };
[; ;pic16lf1559.h: 934: struct {
[; ;pic16lf1559.h: 935: unsigned T2CKPS0 :1;
[; ;pic16lf1559.h: 936: unsigned T2CKPS1 :1;
[; ;pic16lf1559.h: 937: unsigned :1;
[; ;pic16lf1559.h: 938: unsigned T2OUTPS0 :1;
[; ;pic16lf1559.h: 939: unsigned T2OUTPS1 :1;
[; ;pic16lf1559.h: 940: unsigned T2OUTPS2 :1;
[; ;pic16lf1559.h: 941: unsigned T2OUTPS3 :1;
[; ;pic16lf1559.h: 942: };
[; ;pic16lf1559.h: 943: } T2CONbits_t;
[; ;pic16lf1559.h: 944: extern volatile T2CONbits_t T2CONbits @ 0x01C;
[; ;pic16lf1559.h: 994: extern volatile unsigned char TRISA @ 0x08C;
"996
[; ;pic16lf1559.h: 996: asm("TRISA equ 08Ch");
[; <" TRISA equ 08Ch ;# ">
[; ;pic16lf1559.h: 999: typedef union {
[; ;pic16lf1559.h: 1000: struct {
[; ;pic16lf1559.h: 1001: unsigned TRISA0 :1;
[; ;pic16lf1559.h: 1002: unsigned TRISA1 :1;
[; ;pic16lf1559.h: 1003: unsigned TRISA2 :1;
[; ;pic16lf1559.h: 1004: unsigned TRISA3 :1;
[; ;pic16lf1559.h: 1005: unsigned TRISA4 :1;
[; ;pic16lf1559.h: 1006: unsigned TRISA5 :1;
[; ;pic16lf1559.h: 1007: };
[; ;pic16lf1559.h: 1008: } TRISAbits_t;
[; ;pic16lf1559.h: 1009: extern volatile TRISAbits_t TRISAbits @ 0x08C;
[; ;pic16lf1559.h: 1044: extern volatile unsigned char TRISB @ 0x08D;
"1046
[; ;pic16lf1559.h: 1046: asm("TRISB equ 08Dh");
[; <" TRISB equ 08Dh ;# ">
[; ;pic16lf1559.h: 1049: typedef union {
[; ;pic16lf1559.h: 1050: struct {
[; ;pic16lf1559.h: 1051: unsigned :4;
[; ;pic16lf1559.h: 1052: unsigned TRISB4 :1;
[; ;pic16lf1559.h: 1053: unsigned TRISB5 :1;
[; ;pic16lf1559.h: 1054: unsigned TRISB6 :1;
[; ;pic16lf1559.h: 1055: unsigned TRISB7 :1;
[; ;pic16lf1559.h: 1056: };
[; ;pic16lf1559.h: 1057: } TRISBbits_t;
[; ;pic16lf1559.h: 1058: extern volatile TRISBbits_t TRISBbits @ 0x08D;
[; ;pic16lf1559.h: 1083: extern volatile unsigned char TRISC @ 0x08E;
"1085
[; ;pic16lf1559.h: 1085: asm("TRISC equ 08Eh");
[; <" TRISC equ 08Eh ;# ">
[; ;pic16lf1559.h: 1088: typedef union {
[; ;pic16lf1559.h: 1089: struct {
[; ;pic16lf1559.h: 1090: unsigned TRISC0 :1;
[; ;pic16lf1559.h: 1091: unsigned TRISC1 :1;
[; ;pic16lf1559.h: 1092: unsigned TRISC2 :1;
[; ;pic16lf1559.h: 1093: unsigned TRISC3 :1;
[; ;pic16lf1559.h: 1094: unsigned TRISC4 :1;
[; ;pic16lf1559.h: 1095: unsigned TRISC5 :1;
[; ;pic16lf1559.h: 1096: unsigned TRISC6 :1;
[; ;pic16lf1559.h: 1097: unsigned TRISC7 :1;
[; ;pic16lf1559.h: 1098: };
[; ;pic16lf1559.h: 1099: } TRISCbits_t;
[; ;pic16lf1559.h: 1100: extern volatile TRISCbits_t TRISCbits @ 0x08E;
[; ;pic16lf1559.h: 1145: extern volatile unsigned char PIE1 @ 0x091;
"1147
[; ;pic16lf1559.h: 1147: asm("PIE1 equ 091h");
[; <" PIE1 equ 091h ;# ">
[; ;pic16lf1559.h: 1150: typedef union {
[; ;pic16lf1559.h: 1151: struct {
[; ;pic16lf1559.h: 1152: unsigned TMR1IE :1;
[; ;pic16lf1559.h: 1153: unsigned TMR2IE :1;
[; ;pic16lf1559.h: 1154: unsigned :1;
[; ;pic16lf1559.h: 1155: unsigned SSP1IE :1;
[; ;pic16lf1559.h: 1156: unsigned TXIE :1;
[; ;pic16lf1559.h: 1157: unsigned RCIE :1;
[; ;pic16lf1559.h: 1158: unsigned ADIE :1;
[; ;pic16lf1559.h: 1159: unsigned TMR1GIE :1;
[; ;pic16lf1559.h: 1160: };
[; ;pic16lf1559.h: 1161: struct {
[; ;pic16lf1559.h: 1162: unsigned :6;
[; ;pic16lf1559.h: 1163: unsigned AD1IE :1;
[; ;pic16lf1559.h: 1164: };
[; ;pic16lf1559.h: 1165: } PIE1bits_t;
[; ;pic16lf1559.h: 1166: extern volatile PIE1bits_t PIE1bits @ 0x091;
[; ;pic16lf1559.h: 1211: extern volatile unsigned char PIE2 @ 0x092;
"1213
[; ;pic16lf1559.h: 1213: asm("PIE2 equ 092h");
[; <" PIE2 equ 092h ;# ">
[; ;pic16lf1559.h: 1216: typedef union {
[; ;pic16lf1559.h: 1217: struct {
[; ;pic16lf1559.h: 1218: unsigned :3;
[; ;pic16lf1559.h: 1219: unsigned BCL1IE :1;
[; ;pic16lf1559.h: 1220: unsigned :2;
[; ;pic16lf1559.h: 1221: unsigned AD2IE :1;
[; ;pic16lf1559.h: 1222: };
[; ;pic16lf1559.h: 1223: } PIE2bits_t;
[; ;pic16lf1559.h: 1224: extern volatile PIE2bits_t PIE2bits @ 0x092;
[; ;pic16lf1559.h: 1239: extern volatile unsigned char OPTION_REG @ 0x095;
"1241
[; ;pic16lf1559.h: 1241: asm("OPTION_REG equ 095h");
[; <" OPTION_REG equ 095h ;# ">
[; ;pic16lf1559.h: 1244: typedef union {
[; ;pic16lf1559.h: 1245: struct {
[; ;pic16lf1559.h: 1246: unsigned PS :3;
[; ;pic16lf1559.h: 1247: unsigned PSA :1;
[; ;pic16lf1559.h: 1248: unsigned TMR0SE :1;
[; ;pic16lf1559.h: 1249: unsigned TMR0CS :1;
[; ;pic16lf1559.h: 1250: unsigned INTEDG :1;
[; ;pic16lf1559.h: 1251: unsigned nWPUEN :1;
[; ;pic16lf1559.h: 1252: };
[; ;pic16lf1559.h: 1253: struct {
[; ;pic16lf1559.h: 1254: unsigned PS0 :1;
[; ;pic16lf1559.h: 1255: unsigned PS1 :1;
[; ;pic16lf1559.h: 1256: unsigned PS2 :1;
[; ;pic16lf1559.h: 1257: unsigned :1;
[; ;pic16lf1559.h: 1258: unsigned T0SE :1;
[; ;pic16lf1559.h: 1259: unsigned T0CS :1;
[; ;pic16lf1559.h: 1260: };
[; ;pic16lf1559.h: 1261: } OPTION_REGbits_t;
[; ;pic16lf1559.h: 1262: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x095;
[; ;pic16lf1559.h: 1322: extern volatile unsigned char PCON @ 0x096;
"1324
[; ;pic16lf1559.h: 1324: asm("PCON equ 096h");
[; <" PCON equ 096h ;# ">
[; ;pic16lf1559.h: 1327: typedef union {
[; ;pic16lf1559.h: 1328: struct {
[; ;pic16lf1559.h: 1329: unsigned nBOR :1;
[; ;pic16lf1559.h: 1330: unsigned nPOR :1;
[; ;pic16lf1559.h: 1331: unsigned nRI :1;
[; ;pic16lf1559.h: 1332: unsigned nRMCLR :1;
[; ;pic16lf1559.h: 1333: unsigned nRWDT :1;
[; ;pic16lf1559.h: 1334: unsigned :1;
[; ;pic16lf1559.h: 1335: unsigned STKUNF :1;
[; ;pic16lf1559.h: 1336: unsigned STKOVF :1;
[; ;pic16lf1559.h: 1337: };
[; ;pic16lf1559.h: 1338: } PCONbits_t;
[; ;pic16lf1559.h: 1339: extern volatile PCONbits_t PCONbits @ 0x096;
[; ;pic16lf1559.h: 1379: extern volatile unsigned char WDTCON @ 0x097;
"1381
[; ;pic16lf1559.h: 1381: asm("WDTCON equ 097h");
[; <" WDTCON equ 097h ;# ">
[; ;pic16lf1559.h: 1384: typedef union {
[; ;pic16lf1559.h: 1385: struct {
[; ;pic16lf1559.h: 1386: unsigned SWDTEN :1;
[; ;pic16lf1559.h: 1387: unsigned WDTPS :5;
[; ;pic16lf1559.h: 1388: };
[; ;pic16lf1559.h: 1389: struct {
[; ;pic16lf1559.h: 1390: unsigned :1;
[; ;pic16lf1559.h: 1391: unsigned WDTPS0 :1;
[; ;pic16lf1559.h: 1392: unsigned WDTPS1 :1;
[; ;pic16lf1559.h: 1393: unsigned WDTPS2 :1;
[; ;pic16lf1559.h: 1394: unsigned WDTPS3 :1;
[; ;pic16lf1559.h: 1395: unsigned WDTPS4 :1;
[; ;pic16lf1559.h: 1396: };
[; ;pic16lf1559.h: 1397: } WDTCONbits_t;
[; ;pic16lf1559.h: 1398: extern volatile WDTCONbits_t WDTCONbits @ 0x097;
[; ;pic16lf1559.h: 1438: extern volatile unsigned char OSCCON @ 0x099;
"1440
[; ;pic16lf1559.h: 1440: asm("OSCCON equ 099h");
[; <" OSCCON equ 099h ;# ">
[; ;pic16lf1559.h: 1443: typedef union {
[; ;pic16lf1559.h: 1444: struct {
[; ;pic16lf1559.h: 1445: unsigned SCS :2;
[; ;pic16lf1559.h: 1446: unsigned :1;
[; ;pic16lf1559.h: 1447: unsigned IRCF :4;
[; ;pic16lf1559.h: 1448: unsigned SPLLEN :1;
[; ;pic16lf1559.h: 1449: };
[; ;pic16lf1559.h: 1450: struct {
[; ;pic16lf1559.h: 1451: unsigned SCS0 :1;
[; ;pic16lf1559.h: 1452: unsigned SCS1 :1;
[; ;pic16lf1559.h: 1453: unsigned :1;
[; ;pic16lf1559.h: 1454: unsigned IRCF0 :1;
[; ;pic16lf1559.h: 1455: unsigned IRCF1 :1;
[; ;pic16lf1559.h: 1456: unsigned IRCF2 :1;
[; ;pic16lf1559.h: 1457: unsigned IRCF3 :1;
[; ;pic16lf1559.h: 1458: };
[; ;pic16lf1559.h: 1459: } OSCCONbits_t;
[; ;pic16lf1559.h: 1460: extern volatile OSCCONbits_t OSCCONbits @ 0x099;
[; ;pic16lf1559.h: 1510: extern volatile unsigned char OSCSTAT @ 0x09A;
"1512
[; ;pic16lf1559.h: 1512: asm("OSCSTAT equ 09Ah");
[; <" OSCSTAT equ 09Ah ;# ">
[; ;pic16lf1559.h: 1515: typedef union {
[; ;pic16lf1559.h: 1516: struct {
[; ;pic16lf1559.h: 1517: unsigned HFIOFS :1;
[; ;pic16lf1559.h: 1518: unsigned LFIOFR :1;
[; ;pic16lf1559.h: 1519: unsigned :2;
[; ;pic16lf1559.h: 1520: unsigned HFIOFR :1;
[; ;pic16lf1559.h: 1521: unsigned :1;
[; ;pic16lf1559.h: 1522: unsigned PLLSR :1;
[; ;pic16lf1559.h: 1523: };
[; ;pic16lf1559.h: 1524: } OSCSTATbits_t;
[; ;pic16lf1559.h: 1525: extern volatile OSCSTATbits_t OSCSTATbits @ 0x09A;
[; ;pic16lf1559.h: 1550: extern volatile unsigned short ADRES @ 0x09B;
"1552
[; ;pic16lf1559.h: 1552: asm("ADRES equ 09Bh");
[; <" ADRES equ 09Bh ;# ">
[; ;pic16lf1559.h: 1557: extern volatile unsigned char ADRESL @ 0x09B;
"1559
[; ;pic16lf1559.h: 1559: asm("ADRESL equ 09Bh");
[; <" ADRESL equ 09Bh ;# ">
[; ;pic16lf1559.h: 1562: typedef union {
[; ;pic16lf1559.h: 1563: struct {
[; ;pic16lf1559.h: 1564: unsigned ADRESL :8;
[; ;pic16lf1559.h: 1565: };
[; ;pic16lf1559.h: 1566: } ADRESLbits_t;
[; ;pic16lf1559.h: 1567: extern volatile ADRESLbits_t ADRESLbits @ 0x09B;
[; ;pic16lf1559.h: 1577: extern volatile unsigned char ADRESH @ 0x09C;
"1579
[; ;pic16lf1559.h: 1579: asm("ADRESH equ 09Ch");
[; <" ADRESH equ 09Ch ;# ">
[; ;pic16lf1559.h: 1582: typedef union {
[; ;pic16lf1559.h: 1583: struct {
[; ;pic16lf1559.h: 1584: unsigned ADRESH :8;
[; ;pic16lf1559.h: 1585: };
[; ;pic16lf1559.h: 1586: } ADRESHbits_t;
[; ;pic16lf1559.h: 1587: extern volatile ADRESHbits_t ADRESHbits @ 0x09C;
[; ;pic16lf1559.h: 1597: extern volatile unsigned char ADCON0 @ 0x09D;
"1599
[; ;pic16lf1559.h: 1599: asm("ADCON0 equ 09Dh");
[; <" ADCON0 equ 09Dh ;# ">
[; ;pic16lf1559.h: 1602: typedef union {
[; ;pic16lf1559.h: 1603: struct {
[; ;pic16lf1559.h: 1604: unsigned ADON :1;
[; ;pic16lf1559.h: 1605: unsigned GO_nDONE :1;
[; ;pic16lf1559.h: 1606: unsigned CHS :5;
[; ;pic16lf1559.h: 1607: };
[; ;pic16lf1559.h: 1608: struct {
[; ;pic16lf1559.h: 1609: unsigned AD1ON :1;
[; ;pic16lf1559.h: 1610: unsigned ADGO :1;
[; ;pic16lf1559.h: 1611: unsigned CHS0 :1;
[; ;pic16lf1559.h: 1612: unsigned CHS1 :1;
[; ;pic16lf1559.h: 1613: unsigned CHS2 :1;
[; ;pic16lf1559.h: 1614: unsigned CHS3 :1;
[; ;pic16lf1559.h: 1615: unsigned CHS4 :1;
[; ;pic16lf1559.h: 1616: };
[; ;pic16lf1559.h: 1617: struct {
[; ;pic16lf1559.h: 1618: unsigned :1;
[; ;pic16lf1559.h: 1619: unsigned GO :1;
[; ;pic16lf1559.h: 1620: };
[; ;pic16lf1559.h: 1621: } ADCON0bits_t;
[; ;pic16lf1559.h: 1622: extern volatile ADCON0bits_t ADCON0bits @ 0x09D;
[; ;pic16lf1559.h: 1682: extern volatile unsigned char ADCON1 @ 0x09E;
"1684
[; ;pic16lf1559.h: 1684: asm("ADCON1 equ 09Eh");
[; <" ADCON1 equ 09Eh ;# ">
[; ;pic16lf1559.h: 1687: typedef union {
[; ;pic16lf1559.h: 1688: struct {
[; ;pic16lf1559.h: 1689: unsigned ADPREF :2;
[; ;pic16lf1559.h: 1690: unsigned GO_nDONE_ALL :1;
[; ;pic16lf1559.h: 1691: unsigned :1;
[; ;pic16lf1559.h: 1692: unsigned ADCS :3;
[; ;pic16lf1559.h: 1693: unsigned ADFM :1;
[; ;pic16lf1559.h: 1694: };
[; ;pic16lf1559.h: 1695: struct {
[; ;pic16lf1559.h: 1696: unsigned ADPREF0 :1;
[; ;pic16lf1559.h: 1697: unsigned ADPREF1 :1;
[; ;pic16lf1559.h: 1698: unsigned GO_ALL :1;
[; ;pic16lf1559.h: 1699: };
[; ;pic16lf1559.h: 1700: } ADCON1bits_t;
[; ;pic16lf1559.h: 1701: extern volatile ADCON1bits_t ADCON1bits @ 0x09E;
[; ;pic16lf1559.h: 1741: extern volatile unsigned char ADCON2 @ 0x09F;
"1743
[; ;pic16lf1559.h: 1743: asm("ADCON2 equ 09Fh");
[; <" ADCON2 equ 09Fh ;# ">
[; ;pic16lf1559.h: 1746: typedef union {
[; ;pic16lf1559.h: 1747: struct {
[; ;pic16lf1559.h: 1748: unsigned :4;
[; ;pic16lf1559.h: 1749: unsigned TRIGSEL :3;
[; ;pic16lf1559.h: 1750: };
[; ;pic16lf1559.h: 1751: struct {
[; ;pic16lf1559.h: 1752: unsigned :4;
[; ;pic16lf1559.h: 1753: unsigned TRIGSEL0 :1;
[; ;pic16lf1559.h: 1754: unsigned TRIGSEL1 :1;
[; ;pic16lf1559.h: 1755: unsigned TRIGSEL2 :1;
[; ;pic16lf1559.h: 1756: };
[; ;pic16lf1559.h: 1757: } ADCON2bits_t;
[; ;pic16lf1559.h: 1758: extern volatile ADCON2bits_t ADCON2bits @ 0x09F;
[; ;pic16lf1559.h: 1783: extern volatile unsigned char LATA @ 0x10C;
"1785
[; ;pic16lf1559.h: 1785: asm("LATA equ 010Ch");
[; <" LATA equ 010Ch ;# ">
[; ;pic16lf1559.h: 1788: typedef union {
[; ;pic16lf1559.h: 1789: struct {
[; ;pic16lf1559.h: 1790: unsigned LATA0 :1;
[; ;pic16lf1559.h: 1791: unsigned LATA1 :1;
[; ;pic16lf1559.h: 1792: unsigned LATA2 :1;
[; ;pic16lf1559.h: 1793: unsigned :1;
[; ;pic16lf1559.h: 1794: unsigned LATA4 :1;
[; ;pic16lf1559.h: 1795: unsigned LATA5 :1;
[; ;pic16lf1559.h: 1796: };
[; ;pic16lf1559.h: 1797: } LATAbits_t;
[; ;pic16lf1559.h: 1798: extern volatile LATAbits_t LATAbits @ 0x10C;
[; ;pic16lf1559.h: 1828: extern volatile unsigned char LATB @ 0x10D;
"1830
[; ;pic16lf1559.h: 1830: asm("LATB equ 010Dh");
[; <" LATB equ 010Dh ;# ">
[; ;pic16lf1559.h: 1833: typedef union {
[; ;pic16lf1559.h: 1834: struct {
[; ;pic16lf1559.h: 1835: unsigned :4;
[; ;pic16lf1559.h: 1836: unsigned LATB4 :1;
[; ;pic16lf1559.h: 1837: unsigned LATB5 :1;
[; ;pic16lf1559.h: 1838: unsigned LATB6 :1;
[; ;pic16lf1559.h: 1839: unsigned LATB7 :1;
[; ;pic16lf1559.h: 1840: };
[; ;pic16lf1559.h: 1841: } LATBbits_t;
[; ;pic16lf1559.h: 1842: extern volatile LATBbits_t LATBbits @ 0x10D;
[; ;pic16lf1559.h: 1867: extern volatile unsigned char LATC @ 0x10E;
"1869
[; ;pic16lf1559.h: 1869: asm("LATC equ 010Eh");
[; <" LATC equ 010Eh ;# ">
[; ;pic16lf1559.h: 1872: typedef union {
[; ;pic16lf1559.h: 1873: struct {
[; ;pic16lf1559.h: 1874: unsigned LATC0 :1;
[; ;pic16lf1559.h: 1875: unsigned LATC1 :1;
[; ;pic16lf1559.h: 1876: unsigned LATC2 :1;
[; ;pic16lf1559.h: 1877: unsigned LATC3 :1;
[; ;pic16lf1559.h: 1878: unsigned LATC4 :1;
[; ;pic16lf1559.h: 1879: unsigned LATC5 :1;
[; ;pic16lf1559.h: 1880: unsigned LATC6 :1;
[; ;pic16lf1559.h: 1881: unsigned LATC7 :1;
[; ;pic16lf1559.h: 1882: };
[; ;pic16lf1559.h: 1883: } LATCbits_t;
[; ;pic16lf1559.h: 1884: extern volatile LATCbits_t LATCbits @ 0x10E;
[; ;pic16lf1559.h: 1929: extern volatile unsigned char BORCON @ 0x116;
"1931
[; ;pic16lf1559.h: 1931: asm("BORCON equ 0116h");
[; <" BORCON equ 0116h ;# ">
[; ;pic16lf1559.h: 1934: typedef union {
[; ;pic16lf1559.h: 1935: struct {
[; ;pic16lf1559.h: 1936: unsigned BORRDY :1;
[; ;pic16lf1559.h: 1937: unsigned :5;
[; ;pic16lf1559.h: 1938: unsigned BORFS :1;
[; ;pic16lf1559.h: 1939: unsigned SBOREN :1;
[; ;pic16lf1559.h: 1940: };
[; ;pic16lf1559.h: 1941: } BORCONbits_t;
[; ;pic16lf1559.h: 1942: extern volatile BORCONbits_t BORCONbits @ 0x116;
[; ;pic16lf1559.h: 1962: extern volatile unsigned char FVRCON @ 0x117;
"1964
[; ;pic16lf1559.h: 1964: asm("FVRCON equ 0117h");
[; <" FVRCON equ 0117h ;# ">
[; ;pic16lf1559.h: 1967: typedef union {
[; ;pic16lf1559.h: 1968: struct {
[; ;pic16lf1559.h: 1969: unsigned ADFVR :2;
[; ;pic16lf1559.h: 1970: unsigned :2;
[; ;pic16lf1559.h: 1971: unsigned TSRNG :1;
[; ;pic16lf1559.h: 1972: unsigned TSEN :1;
[; ;pic16lf1559.h: 1973: unsigned FVRRDY :1;
[; ;pic16lf1559.h: 1974: unsigned FVREN :1;
[; ;pic16lf1559.h: 1975: };
[; ;pic16lf1559.h: 1976: struct {
[; ;pic16lf1559.h: 1977: unsigned ADFVR0 :1;
[; ;pic16lf1559.h: 1978: unsigned ADFVR1 :1;
[; ;pic16lf1559.h: 1979: unsigned CDAFVR0 :1;
[; ;pic16lf1559.h: 1980: unsigned CDAFVR1 :1;
[; ;pic16lf1559.h: 1981: };
[; ;pic16lf1559.h: 1982: } FVRCONbits_t;
[; ;pic16lf1559.h: 1983: extern volatile FVRCONbits_t FVRCONbits @ 0x117;
[; ;pic16lf1559.h: 2033: extern volatile unsigned char APFCON @ 0x11D;
"2035
[; ;pic16lf1559.h: 2035: asm("APFCON equ 011Dh");
[; <" APFCON equ 011Dh ;# ">
[; ;pic16lf1559.h: 2038: typedef union {
[; ;pic16lf1559.h: 2039: struct {
[; ;pic16lf1559.h: 2040: unsigned GRDASEL :1;
[; ;pic16lf1559.h: 2041: unsigned GRDBSEL :1;
[; ;pic16lf1559.h: 2042: unsigned :2;
[; ;pic16lf1559.h: 2043: unsigned SDSEL :1;
[; ;pic16lf1559.h: 2044: unsigned SSSEL :1;
[; ;pic16lf1559.h: 2045: };
[; ;pic16lf1559.h: 2046: } APFCONbits_t;
[; ;pic16lf1559.h: 2047: extern volatile APFCONbits_t APFCONbits @ 0x11D;
[; ;pic16lf1559.h: 2072: extern volatile unsigned char ANSELA @ 0x18C;
"2074
[; ;pic16lf1559.h: 2074: asm("ANSELA equ 018Ch");
[; <" ANSELA equ 018Ch ;# ">
[; ;pic16lf1559.h: 2077: typedef union {
[; ;pic16lf1559.h: 2078: struct {
[; ;pic16lf1559.h: 2079: unsigned ANSA0 :1;
[; ;pic16lf1559.h: 2080: unsigned ANSA1 :1;
[; ;pic16lf1559.h: 2081: unsigned ANSA2 :1;
[; ;pic16lf1559.h: 2082: unsigned :1;
[; ;pic16lf1559.h: 2083: unsigned ANSA4 :1;
[; ;pic16lf1559.h: 2084: unsigned ANSA5 :1;
[; ;pic16lf1559.h: 2085: };
[; ;pic16lf1559.h: 2086: struct {
[; ;pic16lf1559.h: 2087: unsigned ANSELA :6;
[; ;pic16lf1559.h: 2088: };
[; ;pic16lf1559.h: 2089: } ANSELAbits_t;
[; ;pic16lf1559.h: 2090: extern volatile ANSELAbits_t ANSELAbits @ 0x18C;
[; ;pic16lf1559.h: 2125: extern volatile unsigned char ANSELB @ 0x18D;
"2127
[; ;pic16lf1559.h: 2127: asm("ANSELB equ 018Dh");
[; <" ANSELB equ 018Dh ;# ">
[; ;pic16lf1559.h: 2130: typedef union {
[; ;pic16lf1559.h: 2131: struct {
[; ;pic16lf1559.h: 2132: unsigned :4;
[; ;pic16lf1559.h: 2133: unsigned ANSB4 :1;
[; ;pic16lf1559.h: 2134: unsigned ANSB5 :1;
[; ;pic16lf1559.h: 2135: unsigned ANSB6 :1;
[; ;pic16lf1559.h: 2136: unsigned ANSB7 :1;
[; ;pic16lf1559.h: 2137: };
[; ;pic16lf1559.h: 2138: struct {
[; ;pic16lf1559.h: 2139: unsigned ANSELB :8;
[; ;pic16lf1559.h: 2140: };
[; ;pic16lf1559.h: 2141: } ANSELBbits_t;
[; ;pic16lf1559.h: 2142: extern volatile ANSELBbits_t ANSELBbits @ 0x18D;
[; ;pic16lf1559.h: 2172: extern volatile unsigned char ANSELC @ 0x18E;
"2174
[; ;pic16lf1559.h: 2174: asm("ANSELC equ 018Eh");
[; <" ANSELC equ 018Eh ;# ">
[; ;pic16lf1559.h: 2177: typedef union {
[; ;pic16lf1559.h: 2178: struct {
[; ;pic16lf1559.h: 2179: unsigned ANSC0 :1;
[; ;pic16lf1559.h: 2180: unsigned ANSC1 :1;
[; ;pic16lf1559.h: 2181: unsigned ANSC2 :1;
[; ;pic16lf1559.h: 2182: unsigned ANSC3 :1;
[; ;pic16lf1559.h: 2183: unsigned ANSC4 :1;
[; ;pic16lf1559.h: 2184: unsigned ANSC5 :1;
[; ;pic16lf1559.h: 2185: unsigned ANSC6 :1;
[; ;pic16lf1559.h: 2186: unsigned ANSC7 :1;
[; ;pic16lf1559.h: 2187: };
[; ;pic16lf1559.h: 2188: struct {
[; ;pic16lf1559.h: 2189: unsigned ANSELC :8;
[; ;pic16lf1559.h: 2190: };
[; ;pic16lf1559.h: 2191: } ANSELCbits_t;
[; ;pic16lf1559.h: 2192: extern volatile ANSELCbits_t ANSELCbits @ 0x18E;
[; ;pic16lf1559.h: 2242: extern volatile unsigned short PMADR @ 0x191;
"2244
[; ;pic16lf1559.h: 2244: asm("PMADR equ 0191h");
[; <" PMADR equ 0191h ;# ">
[; ;pic16lf1559.h: 2249: extern volatile unsigned char PMADRL @ 0x191;
"2251
[; ;pic16lf1559.h: 2251: asm("PMADRL equ 0191h");
[; <" PMADRL equ 0191h ;# ">
[; ;pic16lf1559.h: 2254: typedef union {
[; ;pic16lf1559.h: 2255: struct {
[; ;pic16lf1559.h: 2256: unsigned PMADRL :8;
[; ;pic16lf1559.h: 2257: };
[; ;pic16lf1559.h: 2258: } PMADRLbits_t;
[; ;pic16lf1559.h: 2259: extern volatile PMADRLbits_t PMADRLbits @ 0x191;
[; ;pic16lf1559.h: 2269: extern volatile unsigned char PMADRH @ 0x192;
"2271
[; ;pic16lf1559.h: 2271: asm("PMADRH equ 0192h");
[; <" PMADRH equ 0192h ;# ">
[; ;pic16lf1559.h: 2274: typedef union {
[; ;pic16lf1559.h: 2275: struct {
[; ;pic16lf1559.h: 2276: unsigned PMADRH :7;
[; ;pic16lf1559.h: 2277: };
[; ;pic16lf1559.h: 2278: } PMADRHbits_t;
[; ;pic16lf1559.h: 2279: extern volatile PMADRHbits_t PMADRHbits @ 0x192;
[; ;pic16lf1559.h: 2289: extern volatile unsigned short PMDAT @ 0x193;
"2291
[; ;pic16lf1559.h: 2291: asm("PMDAT equ 0193h");
[; <" PMDAT equ 0193h ;# ">
[; ;pic16lf1559.h: 2296: extern volatile unsigned char PMDATL @ 0x193;
"2298
[; ;pic16lf1559.h: 2298: asm("PMDATL equ 0193h");
[; <" PMDATL equ 0193h ;# ">
[; ;pic16lf1559.h: 2301: typedef union {
[; ;pic16lf1559.h: 2302: struct {
[; ;pic16lf1559.h: 2303: unsigned PMDATL :8;
[; ;pic16lf1559.h: 2304: };
[; ;pic16lf1559.h: 2305: } PMDATLbits_t;
[; ;pic16lf1559.h: 2306: extern volatile PMDATLbits_t PMDATLbits @ 0x193;
[; ;pic16lf1559.h: 2316: extern volatile unsigned char PMDATH @ 0x194;
"2318
[; ;pic16lf1559.h: 2318: asm("PMDATH equ 0194h");
[; <" PMDATH equ 0194h ;# ">
[; ;pic16lf1559.h: 2321: typedef union {
[; ;pic16lf1559.h: 2322: struct {
[; ;pic16lf1559.h: 2323: unsigned PMDATH :6;
[; ;pic16lf1559.h: 2324: };
[; ;pic16lf1559.h: 2325: } PMDATHbits_t;
[; ;pic16lf1559.h: 2326: extern volatile PMDATHbits_t PMDATHbits @ 0x194;
[; ;pic16lf1559.h: 2336: extern volatile unsigned char PMCON1 @ 0x195;
"2338
[; ;pic16lf1559.h: 2338: asm("PMCON1 equ 0195h");
[; <" PMCON1 equ 0195h ;# ">
[; ;pic16lf1559.h: 2341: typedef union {
[; ;pic16lf1559.h: 2342: struct {
[; ;pic16lf1559.h: 2343: unsigned RD :1;
[; ;pic16lf1559.h: 2344: unsigned WR :1;
[; ;pic16lf1559.h: 2345: unsigned WREN :1;
[; ;pic16lf1559.h: 2346: unsigned WRERR :1;
[; ;pic16lf1559.h: 2347: unsigned FREE :1;
[; ;pic16lf1559.h: 2348: unsigned LWLO :1;
[; ;pic16lf1559.h: 2349: unsigned CFGS :1;
[; ;pic16lf1559.h: 2350: };
[; ;pic16lf1559.h: 2351: } PMCON1bits_t;
[; ;pic16lf1559.h: 2352: extern volatile PMCON1bits_t PMCON1bits @ 0x195;
[; ;pic16lf1559.h: 2392: extern volatile unsigned char PMCON2 @ 0x196;
"2394
[; ;pic16lf1559.h: 2394: asm("PMCON2 equ 0196h");
[; <" PMCON2 equ 0196h ;# ">
[; ;pic16lf1559.h: 2397: typedef union {
[; ;pic16lf1559.h: 2398: struct {
[; ;pic16lf1559.h: 2399: unsigned PMCON2 :8;
[; ;pic16lf1559.h: 2400: };
[; ;pic16lf1559.h: 2401: } PMCON2bits_t;
[; ;pic16lf1559.h: 2402: extern volatile PMCON2bits_t PMCON2bits @ 0x196;
[; ;pic16lf1559.h: 2412: extern volatile unsigned char RCREG @ 0x199;
"2414
[; ;pic16lf1559.h: 2414: asm("RCREG equ 0199h");
[; <" RCREG equ 0199h ;# ">
[; ;pic16lf1559.h: 2417: typedef union {
[; ;pic16lf1559.h: 2418: struct {
[; ;pic16lf1559.h: 2419: unsigned RCREG :8;
[; ;pic16lf1559.h: 2420: };
[; ;pic16lf1559.h: 2421: } RCREGbits_t;
[; ;pic16lf1559.h: 2422: extern volatile RCREGbits_t RCREGbits @ 0x199;
[; ;pic16lf1559.h: 2432: extern volatile unsigned char TXREG @ 0x19A;
"2434
[; ;pic16lf1559.h: 2434: asm("TXREG equ 019Ah");
[; <" TXREG equ 019Ah ;# ">
[; ;pic16lf1559.h: 2437: typedef union {
[; ;pic16lf1559.h: 2438: struct {
[; ;pic16lf1559.h: 2439: unsigned TXREG :8;
[; ;pic16lf1559.h: 2440: };
[; ;pic16lf1559.h: 2441: } TXREGbits_t;
[; ;pic16lf1559.h: 2442: extern volatile TXREGbits_t TXREGbits @ 0x19A;
[; ;pic16lf1559.h: 2452: extern volatile unsigned short SPBRG @ 0x19B;
"2454
[; ;pic16lf1559.h: 2454: asm("SPBRG equ 019Bh");
[; <" SPBRG equ 019Bh ;# ">
[; ;pic16lf1559.h: 2459: extern volatile unsigned char SPBRGL @ 0x19B;
"2461
[; ;pic16lf1559.h: 2461: asm("SPBRGL equ 019Bh");
[; <" SPBRGL equ 019Bh ;# ">
[; ;pic16lf1559.h: 2464: typedef union {
[; ;pic16lf1559.h: 2465: struct {
[; ;pic16lf1559.h: 2466: unsigned SPBRGL :8;
[; ;pic16lf1559.h: 2467: };
[; ;pic16lf1559.h: 2468: } SPBRGLbits_t;
[; ;pic16lf1559.h: 2469: extern volatile SPBRGLbits_t SPBRGLbits @ 0x19B;
[; ;pic16lf1559.h: 2479: extern volatile unsigned char SPBRGH @ 0x19C;
"2481
[; ;pic16lf1559.h: 2481: asm("SPBRGH equ 019Ch");
[; <" SPBRGH equ 019Ch ;# ">
[; ;pic16lf1559.h: 2484: typedef union {
[; ;pic16lf1559.h: 2485: struct {
[; ;pic16lf1559.h: 2486: unsigned SPBRGH :8;
[; ;pic16lf1559.h: 2487: };
[; ;pic16lf1559.h: 2488: } SPBRGHbits_t;
[; ;pic16lf1559.h: 2489: extern volatile SPBRGHbits_t SPBRGHbits @ 0x19C;
[; ;pic16lf1559.h: 2499: extern volatile unsigned char RCSTA @ 0x19D;
"2501
[; ;pic16lf1559.h: 2501: asm("RCSTA equ 019Dh");
[; <" RCSTA equ 019Dh ;# ">
[; ;pic16lf1559.h: 2504: typedef union {
[; ;pic16lf1559.h: 2505: struct {
[; ;pic16lf1559.h: 2506: unsigned RX9D :1;
[; ;pic16lf1559.h: 2507: unsigned OERR :1;
[; ;pic16lf1559.h: 2508: unsigned FERR :1;
[; ;pic16lf1559.h: 2509: unsigned ADDEN :1;
[; ;pic16lf1559.h: 2510: unsigned CREN :1;
[; ;pic16lf1559.h: 2511: unsigned SREN :1;
[; ;pic16lf1559.h: 2512: unsigned RX9 :1;
[; ;pic16lf1559.h: 2513: unsigned SPEN :1;
[; ;pic16lf1559.h: 2514: };
[; ;pic16lf1559.h: 2515: } RCSTAbits_t;
[; ;pic16lf1559.h: 2516: extern volatile RCSTAbits_t RCSTAbits @ 0x19D;
[; ;pic16lf1559.h: 2561: extern volatile unsigned char TXSTA @ 0x19E;
"2563
[; ;pic16lf1559.h: 2563: asm("TXSTA equ 019Eh");
[; <" TXSTA equ 019Eh ;# ">
[; ;pic16lf1559.h: 2566: typedef union {
[; ;pic16lf1559.h: 2567: struct {
[; ;pic16lf1559.h: 2568: unsigned TX9D :1;
[; ;pic16lf1559.h: 2569: unsigned TRMT :1;
[; ;pic16lf1559.h: 2570: unsigned BRGH :1;
[; ;pic16lf1559.h: 2571: unsigned SENDB :1;
[; ;pic16lf1559.h: 2572: unsigned SYNC :1;
[; ;pic16lf1559.h: 2573: unsigned TXEN :1;
[; ;pic16lf1559.h: 2574: unsigned TX9 :1;
[; ;pic16lf1559.h: 2575: unsigned CSRC :1;
[; ;pic16lf1559.h: 2576: };
[; ;pic16lf1559.h: 2577: } TXSTAbits_t;
[; ;pic16lf1559.h: 2578: extern volatile TXSTAbits_t TXSTAbits @ 0x19E;
[; ;pic16lf1559.h: 2623: extern volatile unsigned char BAUDCON @ 0x19F;
"2625
[; ;pic16lf1559.h: 2625: asm("BAUDCON equ 019Fh");
[; <" BAUDCON equ 019Fh ;# ">
[; ;pic16lf1559.h: 2628: typedef union {
[; ;pic16lf1559.h: 2629: struct {
[; ;pic16lf1559.h: 2630: unsigned ABDEN :1;
[; ;pic16lf1559.h: 2631: unsigned WUE :1;
[; ;pic16lf1559.h: 2632: unsigned :1;
[; ;pic16lf1559.h: 2633: unsigned BRG16 :1;
[; ;pic16lf1559.h: 2634: unsigned SCKP :1;
[; ;pic16lf1559.h: 2635: unsigned :1;
[; ;pic16lf1559.h: 2636: unsigned RCIDL :1;
[; ;pic16lf1559.h: 2637: unsigned ABDOVF :1;
[; ;pic16lf1559.h: 2638: };
[; ;pic16lf1559.h: 2639: } BAUDCONbits_t;
[; ;pic16lf1559.h: 2640: extern volatile BAUDCONbits_t BAUDCONbits @ 0x19F;
[; ;pic16lf1559.h: 2675: extern volatile unsigned char WPUA @ 0x20C;
"2677
[; ;pic16lf1559.h: 2677: asm("WPUA equ 020Ch");
[; <" WPUA equ 020Ch ;# ">
[; ;pic16lf1559.h: 2680: typedef union {
[; ;pic16lf1559.h: 2681: struct {
[; ;pic16lf1559.h: 2682: unsigned WPUA0 :1;
[; ;pic16lf1559.h: 2683: unsigned WPUA1 :1;
[; ;pic16lf1559.h: 2684: unsigned WPUA2 :1;
[; ;pic16lf1559.h: 2685: unsigned WPUA3 :1;
[; ;pic16lf1559.h: 2686: unsigned WPUA4 :1;
[; ;pic16lf1559.h: 2687: unsigned WPUA5 :1;
[; ;pic16lf1559.h: 2688: };
[; ;pic16lf1559.h: 2689: struct {
[; ;pic16lf1559.h: 2690: unsigned WPUA :6;
[; ;pic16lf1559.h: 2691: };
[; ;pic16lf1559.h: 2692: } WPUAbits_t;
[; ;pic16lf1559.h: 2693: extern volatile WPUAbits_t WPUAbits @ 0x20C;
[; ;pic16lf1559.h: 2733: extern volatile unsigned char WPUB @ 0x20D;
"2735
[; ;pic16lf1559.h: 2735: asm("WPUB equ 020Dh");
[; <" WPUB equ 020Dh ;# ">
[; ;pic16lf1559.h: 2738: typedef union {
[; ;pic16lf1559.h: 2739: struct {
[; ;pic16lf1559.h: 2740: unsigned :4;
[; ;pic16lf1559.h: 2741: unsigned WPUB4 :1;
[; ;pic16lf1559.h: 2742: unsigned WPUB5 :1;
[; ;pic16lf1559.h: 2743: unsigned WPUB6 :1;
[; ;pic16lf1559.h: 2744: unsigned WPUB7 :1;
[; ;pic16lf1559.h: 2745: };
[; ;pic16lf1559.h: 2746: struct {
[; ;pic16lf1559.h: 2747: unsigned WPUB :8;
[; ;pic16lf1559.h: 2748: };
[; ;pic16lf1559.h: 2749: } WPUBbits_t;
[; ;pic16lf1559.h: 2750: extern volatile WPUBbits_t WPUBbits @ 0x20D;
[; ;pic16lf1559.h: 2780: extern volatile unsigned char SSP1BUF @ 0x211;
"2782
[; ;pic16lf1559.h: 2782: asm("SSP1BUF equ 0211h");
[; <" SSP1BUF equ 0211h ;# ">
[; ;pic16lf1559.h: 2785: extern volatile unsigned char SSPBUF @ 0x211;
"2787
[; ;pic16lf1559.h: 2787: asm("SSPBUF equ 0211h");
[; <" SSPBUF equ 0211h ;# ">
[; ;pic16lf1559.h: 2790: typedef union {
[; ;pic16lf1559.h: 2791: struct {
[; ;pic16lf1559.h: 2792: unsigned SSPBUF :8;
[; ;pic16lf1559.h: 2793: };
[; ;pic16lf1559.h: 2794: } SSP1BUFbits_t;
[; ;pic16lf1559.h: 2795: extern volatile SSP1BUFbits_t SSP1BUFbits @ 0x211;
[; ;pic16lf1559.h: 2803: typedef union {
[; ;pic16lf1559.h: 2804: struct {
[; ;pic16lf1559.h: 2805: unsigned SSPBUF :8;
[; ;pic16lf1559.h: 2806: };
[; ;pic16lf1559.h: 2807: } SSPBUFbits_t;
[; ;pic16lf1559.h: 2808: extern volatile SSPBUFbits_t SSPBUFbits @ 0x211;
[; ;pic16lf1559.h: 2818: extern volatile unsigned char SSP1ADD @ 0x212;
"2820
[; ;pic16lf1559.h: 2820: asm("SSP1ADD equ 0212h");
[; <" SSP1ADD equ 0212h ;# ">
[; ;pic16lf1559.h: 2823: extern volatile unsigned char SSPADD @ 0x212;
"2825
[; ;pic16lf1559.h: 2825: asm("SSPADD equ 0212h");
[; <" SSPADD equ 0212h ;# ">
[; ;pic16lf1559.h: 2828: typedef union {
[; ;pic16lf1559.h: 2829: struct {
[; ;pic16lf1559.h: 2830: unsigned ADD :8;
[; ;pic16lf1559.h: 2831: };
[; ;pic16lf1559.h: 2832: } SSP1ADDbits_t;
[; ;pic16lf1559.h: 2833: extern volatile SSP1ADDbits_t SSP1ADDbits @ 0x212;
[; ;pic16lf1559.h: 2841: typedef union {
[; ;pic16lf1559.h: 2842: struct {
[; ;pic16lf1559.h: 2843: unsigned ADD :8;
[; ;pic16lf1559.h: 2844: };
[; ;pic16lf1559.h: 2845: } SSPADDbits_t;
[; ;pic16lf1559.h: 2846: extern volatile SSPADDbits_t SSPADDbits @ 0x212;
[; ;pic16lf1559.h: 2856: extern volatile unsigned char SSP1MSK @ 0x213;
"2858
[; ;pic16lf1559.h: 2858: asm("SSP1MSK equ 0213h");
[; <" SSP1MSK equ 0213h ;# ">
[; ;pic16lf1559.h: 2861: extern volatile unsigned char SSPMSK @ 0x213;
"2863
[; ;pic16lf1559.h: 2863: asm("SSPMSK equ 0213h");
[; <" SSPMSK equ 0213h ;# ">
[; ;pic16lf1559.h: 2866: typedef union {
[; ;pic16lf1559.h: 2867: struct {
[; ;pic16lf1559.h: 2868: unsigned MSK :8;
[; ;pic16lf1559.h: 2869: };
[; ;pic16lf1559.h: 2870: } SSP1MSKbits_t;
[; ;pic16lf1559.h: 2871: extern volatile SSP1MSKbits_t SSP1MSKbits @ 0x213;
[; ;pic16lf1559.h: 2879: typedef union {
[; ;pic16lf1559.h: 2880: struct {
[; ;pic16lf1559.h: 2881: unsigned MSK :8;
[; ;pic16lf1559.h: 2882: };
[; ;pic16lf1559.h: 2883: } SSPMSKbits_t;
[; ;pic16lf1559.h: 2884: extern volatile SSPMSKbits_t SSPMSKbits @ 0x213;
[; ;pic16lf1559.h: 2894: extern volatile unsigned char SSP1STAT @ 0x214;
"2896
[; ;pic16lf1559.h: 2896: asm("SSP1STAT equ 0214h");
[; <" SSP1STAT equ 0214h ;# ">
[; ;pic16lf1559.h: 2899: extern volatile unsigned char SSPSTAT @ 0x214;
"2901
[; ;pic16lf1559.h: 2901: asm("SSPSTAT equ 0214h");
[; <" SSPSTAT equ 0214h ;# ">
[; ;pic16lf1559.h: 2904: typedef union {
[; ;pic16lf1559.h: 2905: struct {
[; ;pic16lf1559.h: 2906: unsigned BF :1;
[; ;pic16lf1559.h: 2907: unsigned UA :1;
[; ;pic16lf1559.h: 2908: unsigned R_nW :1;
[; ;pic16lf1559.h: 2909: unsigned S :1;
[; ;pic16lf1559.h: 2910: unsigned P :1;
[; ;pic16lf1559.h: 2911: unsigned D_nA :1;
[; ;pic16lf1559.h: 2912: unsigned CKE :1;
[; ;pic16lf1559.h: 2913: unsigned SMP :1;
[; ;pic16lf1559.h: 2914: };
[; ;pic16lf1559.h: 2915: } SSP1STATbits_t;
[; ;pic16lf1559.h: 2916: extern volatile SSP1STATbits_t SSP1STATbits @ 0x214;
[; ;pic16lf1559.h: 2959: typedef union {
[; ;pic16lf1559.h: 2960: struct {
[; ;pic16lf1559.h: 2961: unsigned BF :1;
[; ;pic16lf1559.h: 2962: unsigned UA :1;
[; ;pic16lf1559.h: 2963: unsigned R_nW :1;
[; ;pic16lf1559.h: 2964: unsigned S :1;
[; ;pic16lf1559.h: 2965: unsigned P :1;
[; ;pic16lf1559.h: 2966: unsigned D_nA :1;
[; ;pic16lf1559.h: 2967: unsigned CKE :1;
[; ;pic16lf1559.h: 2968: unsigned SMP :1;
[; ;pic16lf1559.h: 2969: };
[; ;pic16lf1559.h: 2970: } SSPSTATbits_t;
[; ;pic16lf1559.h: 2971: extern volatile SSPSTATbits_t SSPSTATbits @ 0x214;
[; ;pic16lf1559.h: 3016: extern volatile unsigned char SSP1CON1 @ 0x215;
"3018
[; ;pic16lf1559.h: 3018: asm("SSP1CON1 equ 0215h");
[; <" SSP1CON1 equ 0215h ;# ">
[; ;pic16lf1559.h: 3021: extern volatile unsigned char SSPCON @ 0x215;
"3023
[; ;pic16lf1559.h: 3023: asm("SSPCON equ 0215h");
[; <" SSPCON equ 0215h ;# ">
[; ;pic16lf1559.h: 3025: extern volatile unsigned char SSPCON1 @ 0x215;
"3027
[; ;pic16lf1559.h: 3027: asm("SSPCON1 equ 0215h");
[; <" SSPCON1 equ 0215h ;# ">
[; ;pic16lf1559.h: 3030: typedef union {
[; ;pic16lf1559.h: 3031: struct {
[; ;pic16lf1559.h: 3032: unsigned SSPM0 :1;
[; ;pic16lf1559.h: 3033: unsigned SSPM1 :1;
[; ;pic16lf1559.h: 3034: unsigned SSPM2 :1;
[; ;pic16lf1559.h: 3035: unsigned SSPM3 :1;
[; ;pic16lf1559.h: 3036: unsigned CKP :1;
[; ;pic16lf1559.h: 3037: unsigned SSPEN :1;
[; ;pic16lf1559.h: 3038: unsigned SSPOV :1;
[; ;pic16lf1559.h: 3039: unsigned WCOL :1;
[; ;pic16lf1559.h: 3040: };
[; ;pic16lf1559.h: 3041: struct {
[; ;pic16lf1559.h: 3042: unsigned SSPM :4;
[; ;pic16lf1559.h: 3043: };
[; ;pic16lf1559.h: 3044: } SSP1CON1bits_t;
[; ;pic16lf1559.h: 3045: extern volatile SSP1CON1bits_t SSP1CON1bits @ 0x215;
[; ;pic16lf1559.h: 3093: typedef union {
[; ;pic16lf1559.h: 3094: struct {
[; ;pic16lf1559.h: 3095: unsigned SSPM0 :1;
[; ;pic16lf1559.h: 3096: unsigned SSPM1 :1;
[; ;pic16lf1559.h: 3097: unsigned SSPM2 :1;
[; ;pic16lf1559.h: 3098: unsigned SSPM3 :1;
[; ;pic16lf1559.h: 3099: unsigned CKP :1;
[; ;pic16lf1559.h: 3100: unsigned SSPEN :1;
[; ;pic16lf1559.h: 3101: unsigned SSPOV :1;
[; ;pic16lf1559.h: 3102: unsigned WCOL :1;
[; ;pic16lf1559.h: 3103: };
[; ;pic16lf1559.h: 3104: struct {
[; ;pic16lf1559.h: 3105: unsigned SSPM :4;
[; ;pic16lf1559.h: 3106: };
[; ;pic16lf1559.h: 3107: } SSPCONbits_t;
[; ;pic16lf1559.h: 3108: extern volatile SSPCONbits_t SSPCONbits @ 0x215;
[; ;pic16lf1559.h: 3155: typedef union {
[; ;pic16lf1559.h: 3156: struct {
[; ;pic16lf1559.h: 3157: unsigned SSPM0 :1;
[; ;pic16lf1559.h: 3158: unsigned SSPM1 :1;
[; ;pic16lf1559.h: 3159: unsigned SSPM2 :1;
[; ;pic16lf1559.h: 3160: unsigned SSPM3 :1;
[; ;pic16lf1559.h: 3161: unsigned CKP :1;
[; ;pic16lf1559.h: 3162: unsigned SSPEN :1;
[; ;pic16lf1559.h: 3163: unsigned SSPOV :1;
[; ;pic16lf1559.h: 3164: unsigned WCOL :1;
[; ;pic16lf1559.h: 3165: };
[; ;pic16lf1559.h: 3166: struct {
[; ;pic16lf1559.h: 3167: unsigned SSPM :4;
[; ;pic16lf1559.h: 3168: };
[; ;pic16lf1559.h: 3169: } SSPCON1bits_t;
[; ;pic16lf1559.h: 3170: extern volatile SSPCON1bits_t SSPCON1bits @ 0x215;
[; ;pic16lf1559.h: 3220: extern volatile unsigned char SSP1CON2 @ 0x216;
"3222
[; ;pic16lf1559.h: 3222: asm("SSP1CON2 equ 0216h");
[; <" SSP1CON2 equ 0216h ;# ">
[; ;pic16lf1559.h: 3225: extern volatile unsigned char SSPCON2 @ 0x216;
"3227
[; ;pic16lf1559.h: 3227: asm("SSPCON2 equ 0216h");
[; <" SSPCON2 equ 0216h ;# ">
[; ;pic16lf1559.h: 3230: typedef union {
[; ;pic16lf1559.h: 3231: struct {
[; ;pic16lf1559.h: 3232: unsigned SEN :1;
[; ;pic16lf1559.h: 3233: unsigned RSEN :1;
[; ;pic16lf1559.h: 3234: unsigned PEN :1;
[; ;pic16lf1559.h: 3235: unsigned RCEN :1;
[; ;pic16lf1559.h: 3236: unsigned ACKEN :1;
[; ;pic16lf1559.h: 3237: unsigned ACKDT :1;
[; ;pic16lf1559.h: 3238: unsigned ACKSTAT :1;
[; ;pic16lf1559.h: 3239: unsigned GCEN :1;
[; ;pic16lf1559.h: 3240: };
[; ;pic16lf1559.h: 3241: } SSP1CON2bits_t;
[; ;pic16lf1559.h: 3242: extern volatile SSP1CON2bits_t SSP1CON2bits @ 0x216;
[; ;pic16lf1559.h: 3285: typedef union {
[; ;pic16lf1559.h: 3286: struct {
[; ;pic16lf1559.h: 3287: unsigned SEN :1;
[; ;pic16lf1559.h: 3288: unsigned RSEN :1;
[; ;pic16lf1559.h: 3289: unsigned PEN :1;
[; ;pic16lf1559.h: 3290: unsigned RCEN :1;
[; ;pic16lf1559.h: 3291: unsigned ACKEN :1;
[; ;pic16lf1559.h: 3292: unsigned ACKDT :1;
[; ;pic16lf1559.h: 3293: unsigned ACKSTAT :1;
[; ;pic16lf1559.h: 3294: unsigned GCEN :1;
[; ;pic16lf1559.h: 3295: };
[; ;pic16lf1559.h: 3296: } SSPCON2bits_t;
[; ;pic16lf1559.h: 3297: extern volatile SSPCON2bits_t SSPCON2bits @ 0x216;
[; ;pic16lf1559.h: 3342: extern volatile unsigned char SSP1CON3 @ 0x217;
"3344
[; ;pic16lf1559.h: 3344: asm("SSP1CON3 equ 0217h");
[; <" SSP1CON3 equ 0217h ;# ">
[; ;pic16lf1559.h: 3347: extern volatile unsigned char SSPCON3 @ 0x217;
"3349
[; ;pic16lf1559.h: 3349: asm("SSPCON3 equ 0217h");
[; <" SSPCON3 equ 0217h ;# ">
[; ;pic16lf1559.h: 3352: typedef union {
[; ;pic16lf1559.h: 3353: struct {
[; ;pic16lf1559.h: 3354: unsigned DHEN :1;
[; ;pic16lf1559.h: 3355: unsigned AHEN :1;
[; ;pic16lf1559.h: 3356: unsigned SBCDE :1;
[; ;pic16lf1559.h: 3357: unsigned SDAHT :1;
[; ;pic16lf1559.h: 3358: unsigned BOEN :1;
[; ;pic16lf1559.h: 3359: unsigned SCIE :1;
[; ;pic16lf1559.h: 3360: unsigned PCIE :1;
[; ;pic16lf1559.h: 3361: unsigned ACKTIM :1;
[; ;pic16lf1559.h: 3362: };
[; ;pic16lf1559.h: 3363: } SSP1CON3bits_t;
[; ;pic16lf1559.h: 3364: extern volatile SSP1CON3bits_t SSP1CON3bits @ 0x217;
[; ;pic16lf1559.h: 3407: typedef union {
[; ;pic16lf1559.h: 3408: struct {
[; ;pic16lf1559.h: 3409: unsigned DHEN :1;
[; ;pic16lf1559.h: 3410: unsigned AHEN :1;
[; ;pic16lf1559.h: 3411: unsigned SBCDE :1;
[; ;pic16lf1559.h: 3412: unsigned SDAHT :1;
[; ;pic16lf1559.h: 3413: unsigned BOEN :1;
[; ;pic16lf1559.h: 3414: unsigned SCIE :1;
[; ;pic16lf1559.h: 3415: unsigned PCIE :1;
[; ;pic16lf1559.h: 3416: unsigned ACKTIM :1;
[; ;pic16lf1559.h: 3417: };
[; ;pic16lf1559.h: 3418: } SSPCON3bits_t;
[; ;pic16lf1559.h: 3419: extern volatile SSPCON3bits_t SSPCON3bits @ 0x217;
[; ;pic16lf1559.h: 3464: extern volatile unsigned char IOCAP @ 0x391;
"3466
[; ;pic16lf1559.h: 3466: asm("IOCAP equ 0391h");
[; <" IOCAP equ 0391h ;# ">
[; ;pic16lf1559.h: 3469: typedef union {
[; ;pic16lf1559.h: 3470: struct {
[; ;pic16lf1559.h: 3471: unsigned IOCAP0 :1;
[; ;pic16lf1559.h: 3472: unsigned IOCAP1 :1;
[; ;pic16lf1559.h: 3473: unsigned IOCAP2 :1;
[; ;pic16lf1559.h: 3474: unsigned IOCAP3 :1;
[; ;pic16lf1559.h: 3475: unsigned IOCAP4 :1;
[; ;pic16lf1559.h: 3476: unsigned IOCAP5 :1;
[; ;pic16lf1559.h: 3477: };
[; ;pic16lf1559.h: 3478: struct {
[; ;pic16lf1559.h: 3479: unsigned IOCAP :6;
[; ;pic16lf1559.h: 3480: };
[; ;pic16lf1559.h: 3481: } IOCAPbits_t;
[; ;pic16lf1559.h: 3482: extern volatile IOCAPbits_t IOCAPbits @ 0x391;
[; ;pic16lf1559.h: 3522: extern volatile unsigned char IOCAN @ 0x392;
"3524
[; ;pic16lf1559.h: 3524: asm("IOCAN equ 0392h");
[; <" IOCAN equ 0392h ;# ">
[; ;pic16lf1559.h: 3527: typedef union {
[; ;pic16lf1559.h: 3528: struct {
[; ;pic16lf1559.h: 3529: unsigned IOCAN0 :1;
[; ;pic16lf1559.h: 3530: unsigned IOCAN1 :1;
[; ;pic16lf1559.h: 3531: unsigned IOCAN2 :1;
[; ;pic16lf1559.h: 3532: unsigned IOCAN3 :1;
[; ;pic16lf1559.h: 3533: unsigned IOCAN4 :1;
[; ;pic16lf1559.h: 3534: unsigned IOCAN5 :1;
[; ;pic16lf1559.h: 3535: };
[; ;pic16lf1559.h: 3536: struct {
[; ;pic16lf1559.h: 3537: unsigned IOCAN :6;
[; ;pic16lf1559.h: 3538: };
[; ;pic16lf1559.h: 3539: } IOCANbits_t;
[; ;pic16lf1559.h: 3540: extern volatile IOCANbits_t IOCANbits @ 0x392;
[; ;pic16lf1559.h: 3580: extern volatile unsigned char IOCAF @ 0x393;
"3582
[; ;pic16lf1559.h: 3582: asm("IOCAF equ 0393h");
[; <" IOCAF equ 0393h ;# ">
[; ;pic16lf1559.h: 3585: typedef union {
[; ;pic16lf1559.h: 3586: struct {
[; ;pic16lf1559.h: 3587: unsigned IOCAF0 :1;
[; ;pic16lf1559.h: 3588: unsigned IOCAF1 :1;
[; ;pic16lf1559.h: 3589: unsigned IOCAF2 :1;
[; ;pic16lf1559.h: 3590: unsigned IOCAF3 :1;
[; ;pic16lf1559.h: 3591: unsigned IOCAF4 :1;
[; ;pic16lf1559.h: 3592: unsigned IOCAF5 :1;
[; ;pic16lf1559.h: 3593: };
[; ;pic16lf1559.h: 3594: struct {
[; ;pic16lf1559.h: 3595: unsigned IOCAF :6;
[; ;pic16lf1559.h: 3596: };
[; ;pic16lf1559.h: 3597: } IOCAFbits_t;
[; ;pic16lf1559.h: 3598: extern volatile IOCAFbits_t IOCAFbits @ 0x393;
[; ;pic16lf1559.h: 3638: extern volatile unsigned char IOCBP @ 0x394;
"3640
[; ;pic16lf1559.h: 3640: asm("IOCBP equ 0394h");
[; <" IOCBP equ 0394h ;# ">
[; ;pic16lf1559.h: 3643: typedef union {
[; ;pic16lf1559.h: 3644: struct {
[; ;pic16lf1559.h: 3645: unsigned :4;
[; ;pic16lf1559.h: 3646: unsigned IOCBP4 :1;
[; ;pic16lf1559.h: 3647: unsigned IOCBP5 :1;
[; ;pic16lf1559.h: 3648: unsigned IOCBP6 :1;
[; ;pic16lf1559.h: 3649: unsigned IOCBP7 :1;
[; ;pic16lf1559.h: 3650: };
[; ;pic16lf1559.h: 3651: struct {
[; ;pic16lf1559.h: 3652: unsigned IOCBP :8;
[; ;pic16lf1559.h: 3653: };
[; ;pic16lf1559.h: 3654: } IOCBPbits_t;
[; ;pic16lf1559.h: 3655: extern volatile IOCBPbits_t IOCBPbits @ 0x394;
[; ;pic16lf1559.h: 3685: extern volatile unsigned char IOCBN @ 0x395;
"3687
[; ;pic16lf1559.h: 3687: asm("IOCBN equ 0395h");
[; <" IOCBN equ 0395h ;# ">
[; ;pic16lf1559.h: 3690: typedef union {
[; ;pic16lf1559.h: 3691: struct {
[; ;pic16lf1559.h: 3692: unsigned :4;
[; ;pic16lf1559.h: 3693: unsigned IOCBN4 :1;
[; ;pic16lf1559.h: 3694: unsigned IOCBN5 :1;
[; ;pic16lf1559.h: 3695: unsigned IOCBN6 :1;
[; ;pic16lf1559.h: 3696: unsigned IOCBN7 :1;
[; ;pic16lf1559.h: 3697: };
[; ;pic16lf1559.h: 3698: struct {
[; ;pic16lf1559.h: 3699: unsigned IOCBN :8;
[; ;pic16lf1559.h: 3700: };
[; ;pic16lf1559.h: 3701: } IOCBNbits_t;
[; ;pic16lf1559.h: 3702: extern volatile IOCBNbits_t IOCBNbits @ 0x395;
[; ;pic16lf1559.h: 3732: extern volatile unsigned char IOCBF @ 0x396;
"3734
[; ;pic16lf1559.h: 3734: asm("IOCBF equ 0396h");
[; <" IOCBF equ 0396h ;# ">
[; ;pic16lf1559.h: 3737: typedef union {
[; ;pic16lf1559.h: 3738: struct {
[; ;pic16lf1559.h: 3739: unsigned :4;
[; ;pic16lf1559.h: 3740: unsigned IOCBF4 :1;
[; ;pic16lf1559.h: 3741: unsigned IOCBF5 :1;
[; ;pic16lf1559.h: 3742: unsigned IOCBF6 :1;
[; ;pic16lf1559.h: 3743: unsigned IOCBF7 :1;
[; ;pic16lf1559.h: 3744: };
[; ;pic16lf1559.h: 3745: struct {
[; ;pic16lf1559.h: 3746: unsigned IOCBF :8;
[; ;pic16lf1559.h: 3747: };
[; ;pic16lf1559.h: 3748: } IOCBFbits_t;
[; ;pic16lf1559.h: 3749: extern volatile IOCBFbits_t IOCBFbits @ 0x396;
[; ;pic16lf1559.h: 3779: extern volatile unsigned char PWM1DCL @ 0x611;
"3781
[; ;pic16lf1559.h: 3781: asm("PWM1DCL equ 0611h");
[; <" PWM1DCL equ 0611h ;# ">
[; ;pic16lf1559.h: 3784: typedef union {
[; ;pic16lf1559.h: 3785: struct {
[; ;pic16lf1559.h: 3786: unsigned :6;
[; ;pic16lf1559.h: 3787: unsigned PWM1DCL :2;
[; ;pic16lf1559.h: 3788: };
[; ;pic16lf1559.h: 3789: struct {
[; ;pic16lf1559.h: 3790: unsigned :6;
[; ;pic16lf1559.h: 3791: unsigned PWM1DCL0 :1;
[; ;pic16lf1559.h: 3792: unsigned PWM1DCL1 :1;
[; ;pic16lf1559.h: 3793: };
[; ;pic16lf1559.h: 3794: } PWM1DCLbits_t;
[; ;pic16lf1559.h: 3795: extern volatile PWM1DCLbits_t PWM1DCLbits @ 0x611;
[; ;pic16lf1559.h: 3815: extern volatile unsigned char PWM1DCH @ 0x612;
"3817
[; ;pic16lf1559.h: 3817: asm("PWM1DCH equ 0612h");
[; <" PWM1DCH equ 0612h ;# ">
[; ;pic16lf1559.h: 3820: typedef union {
[; ;pic16lf1559.h: 3821: struct {
[; ;pic16lf1559.h: 3822: unsigned PWM1DCH :8;
[; ;pic16lf1559.h: 3823: };
[; ;pic16lf1559.h: 3824: struct {
[; ;pic16lf1559.h: 3825: unsigned PWM1DCH0 :1;
[; ;pic16lf1559.h: 3826: unsigned PWM1DCH1 :1;
[; ;pic16lf1559.h: 3827: unsigned PWM1DCH2 :1;
[; ;pic16lf1559.h: 3828: unsigned PWM1DCH3 :1;
[; ;pic16lf1559.h: 3829: unsigned PWM1DCH4 :1;
[; ;pic16lf1559.h: 3830: unsigned PWM1DCH5 :1;
[; ;pic16lf1559.h: 3831: unsigned PWM1DCH6 :1;
[; ;pic16lf1559.h: 3832: unsigned PWM1DCH7 :1;
[; ;pic16lf1559.h: 3833: };
[; ;pic16lf1559.h: 3834: } PWM1DCHbits_t;
[; ;pic16lf1559.h: 3835: extern volatile PWM1DCHbits_t PWM1DCHbits @ 0x612;
[; ;pic16lf1559.h: 3885: extern volatile unsigned char PWM1CON @ 0x613;
"3887
[; ;pic16lf1559.h: 3887: asm("PWM1CON equ 0613h");
[; <" PWM1CON equ 0613h ;# ">
[; ;pic16lf1559.h: 3890: extern volatile unsigned char PWM1CON0 @ 0x613;
"3892
[; ;pic16lf1559.h: 3892: asm("PWM1CON0 equ 0613h");
[; <" PWM1CON0 equ 0613h ;# ">
[; ;pic16lf1559.h: 3895: typedef union {
[; ;pic16lf1559.h: 3896: struct {
[; ;pic16lf1559.h: 3897: unsigned :4;
[; ;pic16lf1559.h: 3898: unsigned PWM1POL :1;
[; ;pic16lf1559.h: 3899: unsigned PWM1OUT :1;
[; ;pic16lf1559.h: 3900: unsigned PWM1OE :1;
[; ;pic16lf1559.h: 3901: unsigned PWM1EN :1;
[; ;pic16lf1559.h: 3902: };
[; ;pic16lf1559.h: 3903: } PWM1CONbits_t;
[; ;pic16lf1559.h: 3904: extern volatile PWM1CONbits_t PWM1CONbits @ 0x613;
[; ;pic16lf1559.h: 3927: typedef union {
[; ;pic16lf1559.h: 3928: struct {
[; ;pic16lf1559.h: 3929: unsigned :4;
[; ;pic16lf1559.h: 3930: unsigned PWM1POL :1;
[; ;pic16lf1559.h: 3931: unsigned PWM1OUT :1;
[; ;pic16lf1559.h: 3932: unsigned PWM1OE :1;
[; ;pic16lf1559.h: 3933: unsigned PWM1EN :1;
[; ;pic16lf1559.h: 3934: };
[; ;pic16lf1559.h: 3935: } PWM1CON0bits_t;
[; ;pic16lf1559.h: 3936: extern volatile PWM1CON0bits_t PWM1CON0bits @ 0x613;
[; ;pic16lf1559.h: 3961: extern volatile unsigned char PWM2DCL @ 0x614;
"3963
[; ;pic16lf1559.h: 3963: asm("PWM2DCL equ 0614h");
[; <" PWM2DCL equ 0614h ;# ">
[; ;pic16lf1559.h: 3966: typedef union {
[; ;pic16lf1559.h: 3967: struct {
[; ;pic16lf1559.h: 3968: unsigned :6;
[; ;pic16lf1559.h: 3969: unsigned PWM2DCL :2;
[; ;pic16lf1559.h: 3970: };
[; ;pic16lf1559.h: 3971: struct {
[; ;pic16lf1559.h: 3972: unsigned :6;
[; ;pic16lf1559.h: 3973: unsigned PWM2DCL0 :1;
[; ;pic16lf1559.h: 3974: unsigned PWM2DCL1 :1;
[; ;pic16lf1559.h: 3975: };
[; ;pic16lf1559.h: 3976: } PWM2DCLbits_t;
[; ;pic16lf1559.h: 3977: extern volatile PWM2DCLbits_t PWM2DCLbits @ 0x614;
[; ;pic16lf1559.h: 3997: extern volatile unsigned char PWM2DCH @ 0x615;
"3999
[; ;pic16lf1559.h: 3999: asm("PWM2DCH equ 0615h");
[; <" PWM2DCH equ 0615h ;# ">
[; ;pic16lf1559.h: 4002: typedef union {
[; ;pic16lf1559.h: 4003: struct {
[; ;pic16lf1559.h: 4004: unsigned PWM2DCH :8;
[; ;pic16lf1559.h: 4005: };
[; ;pic16lf1559.h: 4006: struct {
[; ;pic16lf1559.h: 4007: unsigned PWM2DCH0 :1;
[; ;pic16lf1559.h: 4008: unsigned PWM2DCH1 :1;
[; ;pic16lf1559.h: 4009: unsigned PWM2DCH2 :1;
[; ;pic16lf1559.h: 4010: unsigned PWM2DCH3 :1;
[; ;pic16lf1559.h: 4011: unsigned PWM2DCH4 :1;
[; ;pic16lf1559.h: 4012: unsigned PWM2DCH5 :1;
[; ;pic16lf1559.h: 4013: unsigned PWM2DCH6 :1;
[; ;pic16lf1559.h: 4014: unsigned PWM2DCH7 :1;
[; ;pic16lf1559.h: 4015: };
[; ;pic16lf1559.h: 4016: } PWM2DCHbits_t;
[; ;pic16lf1559.h: 4017: extern volatile PWM2DCHbits_t PWM2DCHbits @ 0x615;
[; ;pic16lf1559.h: 4067: extern volatile unsigned char PWM2CON @ 0x616;
"4069
[; ;pic16lf1559.h: 4069: asm("PWM2CON equ 0616h");
[; <" PWM2CON equ 0616h ;# ">
[; ;pic16lf1559.h: 4072: extern volatile unsigned char PWM2CON0 @ 0x616;
"4074
[; ;pic16lf1559.h: 4074: asm("PWM2CON0 equ 0616h");
[; <" PWM2CON0 equ 0616h ;# ">
[; ;pic16lf1559.h: 4077: typedef union {
[; ;pic16lf1559.h: 4078: struct {
[; ;pic16lf1559.h: 4079: unsigned :4;
[; ;pic16lf1559.h: 4080: unsigned PWM2POL :1;
[; ;pic16lf1559.h: 4081: unsigned PWM2OUT :1;
[; ;pic16lf1559.h: 4082: unsigned PWM2OE :1;
[; ;pic16lf1559.h: 4083: unsigned PWM2EN :1;
[; ;pic16lf1559.h: 4084: };
[; ;pic16lf1559.h: 4085: } PWM2CONbits_t;
[; ;pic16lf1559.h: 4086: extern volatile PWM2CONbits_t PWM2CONbits @ 0x616;
[; ;pic16lf1559.h: 4109: typedef union {
[; ;pic16lf1559.h: 4110: struct {
[; ;pic16lf1559.h: 4111: unsigned :4;
[; ;pic16lf1559.h: 4112: unsigned PWM2POL :1;
[; ;pic16lf1559.h: 4113: unsigned PWM2OUT :1;
[; ;pic16lf1559.h: 4114: unsigned PWM2OE :1;
[; ;pic16lf1559.h: 4115: unsigned PWM2EN :1;
[; ;pic16lf1559.h: 4116: };
[; ;pic16lf1559.h: 4117: } PWM2CON0bits_t;
[; ;pic16lf1559.h: 4118: extern volatile PWM2CON0bits_t PWM2CON0bits @ 0x616;
[; ;pic16lf1559.h: 4143: extern volatile unsigned char AD1CON0 @ 0x711;
"4145
[; ;pic16lf1559.h: 4145: asm("AD1CON0 equ 0711h");
[; <" AD1CON0 equ 0711h ;# ">
[; ;pic16lf1559.h: 4148: extern volatile unsigned char AADCON0 @ 0x711;
"4150
[; ;pic16lf1559.h: 4150: asm("AADCON0 equ 0711h");
[; <" AADCON0 equ 0711h ;# ">
[; ;pic16lf1559.h: 4152: extern volatile unsigned char AAD1CON0 @ 0x711;
"4154
[; ;pic16lf1559.h: 4154: asm("AAD1CON0 equ 0711h");
[; <" AAD1CON0 equ 0711h ;# ">
[; ;pic16lf1559.h: 4157: typedef union {
[; ;pic16lf1559.h: 4158: struct {
[; ;pic16lf1559.h: 4159: unsigned ADON :1;
[; ;pic16lf1559.h: 4160: unsigned GO :1;
[; ;pic16lf1559.h: 4161: unsigned CHS :5;
[; ;pic16lf1559.h: 4162: };
[; ;pic16lf1559.h: 4163: struct {
[; ;pic16lf1559.h: 4164: unsigned :1;
[; ;pic16lf1559.h: 4165: unsigned GO_nDONE :1;
[; ;pic16lf1559.h: 4166: unsigned CHS0 :1;
[; ;pic16lf1559.h: 4167: unsigned CHS1 :1;
[; ;pic16lf1559.h: 4168: unsigned CHS2 :1;
[; ;pic16lf1559.h: 4169: unsigned CHS3 :1;
[; ;pic16lf1559.h: 4170: unsigned CHS4 :1;
[; ;pic16lf1559.h: 4171: };
[; ;pic16lf1559.h: 4172: struct {
[; ;pic16lf1559.h: 4173: unsigned :1;
[; ;pic16lf1559.h: 4174: unsigned GO_nDONE1 :1;
[; ;pic16lf1559.h: 4175: };
[; ;pic16lf1559.h: 4176: } AD1CON0bits_t;
[; ;pic16lf1559.h: 4177: extern volatile AD1CON0bits_t AD1CON0bits @ 0x711;
[; ;pic16lf1559.h: 4230: typedef union {
[; ;pic16lf1559.h: 4231: struct {
[; ;pic16lf1559.h: 4232: unsigned ADON :1;
[; ;pic16lf1559.h: 4233: unsigned GO :1;
[; ;pic16lf1559.h: 4234: unsigned CHS :5;
[; ;pic16lf1559.h: 4235: };
[; ;pic16lf1559.h: 4236: struct {
[; ;pic16lf1559.h: 4237: unsigned :1;
[; ;pic16lf1559.h: 4238: unsigned GO_nDONE :1;
[; ;pic16lf1559.h: 4239: unsigned CHS0 :1;
[; ;pic16lf1559.h: 4240: unsigned CHS1 :1;
[; ;pic16lf1559.h: 4241: unsigned CHS2 :1;
[; ;pic16lf1559.h: 4242: unsigned CHS3 :1;
[; ;pic16lf1559.h: 4243: unsigned CHS4 :1;
[; ;pic16lf1559.h: 4244: };
[; ;pic16lf1559.h: 4245: struct {
[; ;pic16lf1559.h: 4246: unsigned :1;
[; ;pic16lf1559.h: 4247: unsigned GO_nDONE1 :1;
[; ;pic16lf1559.h: 4248: };
[; ;pic16lf1559.h: 4249: } AADCON0bits_t;
[; ;pic16lf1559.h: 4250: extern volatile AADCON0bits_t AADCON0bits @ 0x711;
[; ;pic16lf1559.h: 4302: typedef union {
[; ;pic16lf1559.h: 4303: struct {
[; ;pic16lf1559.h: 4304: unsigned ADON :1;
[; ;pic16lf1559.h: 4305: unsigned GO :1;
[; ;pic16lf1559.h: 4306: unsigned CHS :5;
[; ;pic16lf1559.h: 4307: };
[; ;pic16lf1559.h: 4308: struct {
[; ;pic16lf1559.h: 4309: unsigned :1;
[; ;pic16lf1559.h: 4310: unsigned GO_nDONE :1;
[; ;pic16lf1559.h: 4311: unsigned CHS0 :1;
[; ;pic16lf1559.h: 4312: unsigned CHS1 :1;
[; ;pic16lf1559.h: 4313: unsigned CHS2 :1;
[; ;pic16lf1559.h: 4314: unsigned CHS3 :1;
[; ;pic16lf1559.h: 4315: unsigned CHS4 :1;
[; ;pic16lf1559.h: 4316: };
[; ;pic16lf1559.h: 4317: struct {
[; ;pic16lf1559.h: 4318: unsigned :1;
[; ;pic16lf1559.h: 4319: unsigned GO_nDONE1 :1;
[; ;pic16lf1559.h: 4320: };
[; ;pic16lf1559.h: 4321: } AAD1CON0bits_t;
[; ;pic16lf1559.h: 4322: extern volatile AAD1CON0bits_t AAD1CON0bits @ 0x711;
[; ;pic16lf1559.h: 4377: extern volatile unsigned char ADCOMCON @ 0x712;
"4379
[; ;pic16lf1559.h: 4379: asm("ADCOMCON equ 0712h");
[; <" ADCOMCON equ 0712h ;# ">
[; ;pic16lf1559.h: 4382: extern volatile unsigned char AADCON1 @ 0x712;
"4384
[; ;pic16lf1559.h: 4384: asm("AADCON1 equ 0712h");
[; <" AADCON1 equ 0712h ;# ">
[; ;pic16lf1559.h: 4387: typedef union {
[; ;pic16lf1559.h: 4388: struct {
[; ;pic16lf1559.h: 4389: unsigned ADPREF :2;
[; ;pic16lf1559.h: 4390: unsigned GO_nDONE_ALL :1;
[; ;pic16lf1559.h: 4391: unsigned :1;
[; ;pic16lf1559.h: 4392: unsigned ADCS :3;
[; ;pic16lf1559.h: 4393: unsigned ADFM :1;
[; ;pic16lf1559.h: 4394: };
[; ;pic16lf1559.h: 4395: struct {
[; ;pic16lf1559.h: 4396: unsigned ADPREF0 :1;
[; ;pic16lf1559.h: 4397: unsigned ADPREF1 :1;
[; ;pic16lf1559.h: 4398: unsigned GO_ALL :1;
[; ;pic16lf1559.h: 4399: unsigned :1;
[; ;pic16lf1559.h: 4400: unsigned ADCS0 :1;
[; ;pic16lf1559.h: 4401: unsigned ADCS1 :1;
[; ;pic16lf1559.h: 4402: unsigned ADCS2 :1;
[; ;pic16lf1559.h: 4403: };
[; ;pic16lf1559.h: 4404: } ADCOMCONbits_t;
[; ;pic16lf1559.h: 4405: extern volatile ADCOMCONbits_t ADCOMCONbits @ 0x712;
[; ;pic16lf1559.h: 4458: typedef union {
[; ;pic16lf1559.h: 4459: struct {
[; ;pic16lf1559.h: 4460: unsigned ADPREF :2;
[; ;pic16lf1559.h: 4461: unsigned GO_nDONE_ALL :1;
[; ;pic16lf1559.h: 4462: unsigned :1;
[; ;pic16lf1559.h: 4463: unsigned ADCS :3;
[; ;pic16lf1559.h: 4464: unsigned ADFM :1;
[; ;pic16lf1559.h: 4465: };
[; ;pic16lf1559.h: 4466: struct {
[; ;pic16lf1559.h: 4467: unsigned ADPREF0 :1;
[; ;pic16lf1559.h: 4468: unsigned ADPREF1 :1;
[; ;pic16lf1559.h: 4469: unsigned GO_ALL :1;
[; ;pic16lf1559.h: 4470: unsigned :1;
[; ;pic16lf1559.h: 4471: unsigned ADCS0 :1;
[; ;pic16lf1559.h: 4472: unsigned ADCS1 :1;
[; ;pic16lf1559.h: 4473: unsigned ADCS2 :1;
[; ;pic16lf1559.h: 4474: };
[; ;pic16lf1559.h: 4475: } AADCON1bits_t;
[; ;pic16lf1559.h: 4476: extern volatile AADCON1bits_t AADCON1bits @ 0x712;
[; ;pic16lf1559.h: 4531: extern volatile unsigned char AD1CON2 @ 0x713;
"4533
[; ;pic16lf1559.h: 4533: asm("AD1CON2 equ 0713h");
[; <" AD1CON2 equ 0713h ;# ">
[; ;pic16lf1559.h: 4536: extern volatile unsigned char AADCON2 @ 0x713;
"4538
[; ;pic16lf1559.h: 4538: asm("AADCON2 equ 0713h");
[; <" AADCON2 equ 0713h ;# ">
[; ;pic16lf1559.h: 4540: extern volatile unsigned char AAD1CON2 @ 0x713;
"4542
[; ;pic16lf1559.h: 4542: asm("AAD1CON2 equ 0713h");
[; <" AAD1CON2 equ 0713h ;# ">
[; ;pic16lf1559.h: 4545: typedef union {
[; ;pic16lf1559.h: 4546: struct {
[; ;pic16lf1559.h: 4547: unsigned :4;
[; ;pic16lf1559.h: 4548: unsigned TRIGSEL :3;
[; ;pic16lf1559.h: 4549: };
[; ;pic16lf1559.h: 4550: struct {
[; ;pic16lf1559.h: 4551: unsigned :4;
[; ;pic16lf1559.h: 4552: unsigned TRIGSEL0 :1;
[; ;pic16lf1559.h: 4553: unsigned TRIGSEL1 :1;
[; ;pic16lf1559.h: 4554: unsigned TRIGSEL2 :1;
[; ;pic16lf1559.h: 4555: };
[; ;pic16lf1559.h: 4556: } AD1CON2bits_t;
[; ;pic16lf1559.h: 4557: extern volatile AD1CON2bits_t AD1CON2bits @ 0x713;
[; ;pic16lf1559.h: 4580: typedef union {
[; ;pic16lf1559.h: 4581: struct {
[; ;pic16lf1559.h: 4582: unsigned :4;
[; ;pic16lf1559.h: 4583: unsigned TRIGSEL :3;
[; ;pic16lf1559.h: 4584: };
[; ;pic16lf1559.h: 4585: struct {
[; ;pic16lf1559.h: 4586: unsigned :4;
[; ;pic16lf1559.h: 4587: unsigned TRIGSEL0 :1;
[; ;pic16lf1559.h: 4588: unsigned TRIGSEL1 :1;
[; ;pic16lf1559.h: 4589: unsigned TRIGSEL2 :1;
[; ;pic16lf1559.h: 4590: };
[; ;pic16lf1559.h: 4591: } AADCON2bits_t;
[; ;pic16lf1559.h: 4592: extern volatile AADCON2bits_t AADCON2bits @ 0x713;
[; ;pic16lf1559.h: 4614: typedef union {
[; ;pic16lf1559.h: 4615: struct {
[; ;pic16lf1559.h: 4616: unsigned :4;
[; ;pic16lf1559.h: 4617: unsigned TRIGSEL :3;
[; ;pic16lf1559.h: 4618: };
[; ;pic16lf1559.h: 4619: struct {
[; ;pic16lf1559.h: 4620: unsigned :4;
[; ;pic16lf1559.h: 4621: unsigned TRIGSEL0 :1;
[; ;pic16lf1559.h: 4622: unsigned TRIGSEL1 :1;
[; ;pic16lf1559.h: 4623: unsigned TRIGSEL2 :1;
[; ;pic16lf1559.h: 4624: };
[; ;pic16lf1559.h: 4625: } AAD1CON2bits_t;
[; ;pic16lf1559.h: 4626: extern volatile AAD1CON2bits_t AAD1CON2bits @ 0x713;
[; ;pic16lf1559.h: 4651: extern volatile unsigned char AD1CON3 @ 0x714;
"4653
[; ;pic16lf1559.h: 4653: asm("AD1CON3 equ 0714h");
[; <" AD1CON3 equ 0714h ;# ">
[; ;pic16lf1559.h: 4656: extern volatile unsigned char AADCON3 @ 0x714;
"4658
[; ;pic16lf1559.h: 4658: asm("AADCON3 equ 0714h");
[; <" AADCON3 equ 0714h ;# ">
[; ;pic16lf1559.h: 4660: extern volatile unsigned char AAD1CON3 @ 0x714;
"4662
[; ;pic16lf1559.h: 4662: asm("AAD1CON3 equ 0714h");
[; <" AAD1CON3 equ 0714h ;# ">
[; ;pic16lf1559.h: 4665: typedef union {
[; ;pic16lf1559.h: 4666: struct {
[; ;pic16lf1559.h: 4667: unsigned AD1DSEN :1;
[; ;pic16lf1559.h: 4668: unsigned AD1IPEN :1;
[; ;pic16lf1559.h: 4669: unsigned :4;
[; ;pic16lf1559.h: 4670: unsigned AD1IPPOL :1;
[; ;pic16lf1559.h: 4671: unsigned AD1EPPOL :1;
[; ;pic16lf1559.h: 4672: };
[; ;pic16lf1559.h: 4673: struct {
[; ;pic16lf1559.h: 4674: unsigned ADDSEN :1;
[; ;pic16lf1559.h: 4675: unsigned ADIPEN :1;
[; ;pic16lf1559.h: 4676: unsigned :4;
[; ;pic16lf1559.h: 4677: unsigned ADIPPOL :1;
[; ;pic16lf1559.h: 4678: unsigned ADEPPOL :1;
[; ;pic16lf1559.h: 4679: };
[; ;pic16lf1559.h: 4680: } AD1CON3bits_t;
[; ;pic16lf1559.h: 4681: extern volatile AD1CON3bits_t AD1CON3bits @ 0x714;
[; ;pic16lf1559.h: 4724: typedef union {
[; ;pic16lf1559.h: 4725: struct {
[; ;pic16lf1559.h: 4726: unsigned AD1DSEN :1;
[; ;pic16lf1559.h: 4727: unsigned AD1IPEN :1;
[; ;pic16lf1559.h: 4728: unsigned :4;
[; ;pic16lf1559.h: 4729: unsigned AD1IPPOL :1;
[; ;pic16lf1559.h: 4730: unsigned AD1EPPOL :1;
[; ;pic16lf1559.h: 4731: };
[; ;pic16lf1559.h: 4732: struct {
[; ;pic16lf1559.h: 4733: unsigned ADDSEN :1;
[; ;pic16lf1559.h: 4734: unsigned ADIPEN :1;
[; ;pic16lf1559.h: 4735: unsigned :4;
[; ;pic16lf1559.h: 4736: unsigned ADIPPOL :1;
[; ;pic16lf1559.h: 4737: unsigned ADEPPOL :1;
[; ;pic16lf1559.h: 4738: };
[; ;pic16lf1559.h: 4739: } AADCON3bits_t;
[; ;pic16lf1559.h: 4740: extern volatile AADCON3bits_t AADCON3bits @ 0x714;
[; ;pic16lf1559.h: 4782: typedef union {
[; ;pic16lf1559.h: 4783: struct {
[; ;pic16lf1559.h: 4784: unsigned AD1DSEN :1;
[; ;pic16lf1559.h: 4785: unsigned AD1IPEN :1;
[; ;pic16lf1559.h: 4786: unsigned :4;
[; ;pic16lf1559.h: 4787: unsigned AD1IPPOL :1;
[; ;pic16lf1559.h: 4788: unsigned AD1EPPOL :1;
[; ;pic16lf1559.h: 4789: };
[; ;pic16lf1559.h: 4790: struct {
[; ;pic16lf1559.h: 4791: unsigned ADDSEN :1;
[; ;pic16lf1559.h: 4792: unsigned ADIPEN :1;
[; ;pic16lf1559.h: 4793: unsigned :4;
[; ;pic16lf1559.h: 4794: unsigned ADIPPOL :1;
[; ;pic16lf1559.h: 4795: unsigned ADEPPOL :1;
[; ;pic16lf1559.h: 4796: };
[; ;pic16lf1559.h: 4797: } AAD1CON3bits_t;
[; ;pic16lf1559.h: 4798: extern volatile AAD1CON3bits_t AAD1CON3bits @ 0x714;
[; ;pic16lf1559.h: 4843: extern volatile unsigned char ADSTAT @ 0x715;
"4845
[; ;pic16lf1559.h: 4845: asm("ADSTAT equ 0715h");
[; <" ADSTAT equ 0715h ;# ">
[; ;pic16lf1559.h: 4848: extern volatile unsigned char AADSTAT @ 0x715;
"4850
[; ;pic16lf1559.h: 4850: asm("AADSTAT equ 0715h");
[; <" AADSTAT equ 0715h ;# ">
[; ;pic16lf1559.h: 4853: typedef union {
[; ;pic16lf1559.h: 4854: struct {
[; ;pic16lf1559.h: 4855: unsigned AD1STG :2;
[; ;pic16lf1559.h: 4856: unsigned AD1CONV :1;
[; ;pic16lf1559.h: 4857: unsigned :1;
[; ;pic16lf1559.h: 4858: unsigned AD2STG :2;
[; ;pic16lf1559.h: 4859: unsigned AD2CONV :1;
[; ;pic16lf1559.h: 4860: };
[; ;pic16lf1559.h: 4861: struct {
[; ;pic16lf1559.h: 4862: unsigned ADSTG :2;
[; ;pic16lf1559.h: 4863: unsigned ADCONV :1;
[; ;pic16lf1559.h: 4864: };
[; ;pic16lf1559.h: 4865: struct {
[; ;pic16lf1559.h: 4866: unsigned AD1STG0 :1;
[; ;pic16lf1559.h: 4867: unsigned AD1STG1 :1;
[; ;pic16lf1559.h: 4868: unsigned :2;
[; ;pic16lf1559.h: 4869: unsigned AD2STG0 :1;
[; ;pic16lf1559.h: 4870: unsigned AD2STG1 :1;
[; ;pic16lf1559.h: 4871: };
[; ;pic16lf1559.h: 4872: } ADSTATbits_t;
[; ;pic16lf1559.h: 4873: extern volatile ADSTATbits_t ADSTATbits @ 0x715;
[; ;pic16lf1559.h: 4926: typedef union {
[; ;pic16lf1559.h: 4927: struct {
[; ;pic16lf1559.h: 4928: unsigned AD1STG :2;
[; ;pic16lf1559.h: 4929: unsigned AD1CONV :1;
[; ;pic16lf1559.h: 4930: unsigned :1;
[; ;pic16lf1559.h: 4931: unsigned AD2STG :2;
[; ;pic16lf1559.h: 4932: unsigned AD2CONV :1;
[; ;pic16lf1559.h: 4933: };
[; ;pic16lf1559.h: 4934: struct {
[; ;pic16lf1559.h: 4935: unsigned ADSTG :2;
[; ;pic16lf1559.h: 4936: unsigned ADCONV :1;
[; ;pic16lf1559.h: 4937: };
[; ;pic16lf1559.h: 4938: struct {
[; ;pic16lf1559.h: 4939: unsigned AD1STG0 :1;
[; ;pic16lf1559.h: 4940: unsigned AD1STG1 :1;
[; ;pic16lf1559.h: 4941: unsigned :2;
[; ;pic16lf1559.h: 4942: unsigned AD2STG0 :1;
[; ;pic16lf1559.h: 4943: unsigned AD2STG1 :1;
[; ;pic16lf1559.h: 4944: };
[; ;pic16lf1559.h: 4945: } AADSTATbits_t;
[; ;pic16lf1559.h: 4946: extern volatile AADSTATbits_t AADSTATbits @ 0x715;
[; ;pic16lf1559.h: 5001: extern volatile unsigned char AD1PRECON @ 0x716;
"5003
[; ;pic16lf1559.h: 5003: asm("AD1PRECON equ 0716h");
[; <" AD1PRECON equ 0716h ;# ">
[; ;pic16lf1559.h: 5006: extern volatile unsigned char AADPRE @ 0x716;
"5008
[; ;pic16lf1559.h: 5008: asm("AADPRE equ 0716h");
[; <" AADPRE equ 0716h ;# ">
[; ;pic16lf1559.h: 5010: extern volatile unsigned char AD1PRE @ 0x716;
"5012
[; ;pic16lf1559.h: 5012: asm("AD1PRE equ 0716h");
[; <" AD1PRE equ 0716h ;# ">
[; ;pic16lf1559.h: 5014: extern volatile unsigned char AAD1PRE @ 0x716;
"5016
[; ;pic16lf1559.h: 5016: asm("AAD1PRE equ 0716h");
[; <" AAD1PRE equ 0716h ;# ">
[; ;pic16lf1559.h: 5019: typedef union {
[; ;pic16lf1559.h: 5020: struct {
[; ;pic16lf1559.h: 5021: unsigned ADPRE :7;
[; ;pic16lf1559.h: 5022: };
[; ;pic16lf1559.h: 5023: struct {
[; ;pic16lf1559.h: 5024: unsigned ADPRE0 :1;
[; ;pic16lf1559.h: 5025: unsigned ADPRE1 :1;
[; ;pic16lf1559.h: 5026: unsigned ADPRE2 :1;
[; ;pic16lf1559.h: 5027: unsigned ADPRE3 :1;
[; ;pic16lf1559.h: 5028: unsigned ADPRE4 :1;
[; ;pic16lf1559.h: 5029: unsigned ADPRE5 :1;
[; ;pic16lf1559.h: 5030: unsigned ADPRE6 :1;
[; ;pic16lf1559.h: 5031: };
[; ;pic16lf1559.h: 5032: } AD1PRECONbits_t;
[; ;pic16lf1559.h: 5033: extern volatile AD1PRECONbits_t AD1PRECONbits @ 0x716;
[; ;pic16lf1559.h: 5076: typedef union {
[; ;pic16lf1559.h: 5077: struct {
[; ;pic16lf1559.h: 5078: unsigned ADPRE :7;
[; ;pic16lf1559.h: 5079: };
[; ;pic16lf1559.h: 5080: struct {
[; ;pic16lf1559.h: 5081: unsigned ADPRE0 :1;
[; ;pic16lf1559.h: 5082: unsigned ADPRE1 :1;
[; ;pic16lf1559.h: 5083: unsigned ADPRE2 :1;
[; ;pic16lf1559.h: 5084: unsigned ADPRE3 :1;
[; ;pic16lf1559.h: 5085: unsigned ADPRE4 :1;
[; ;pic16lf1559.h: 5086: unsigned ADPRE5 :1;
[; ;pic16lf1559.h: 5087: unsigned ADPRE6 :1;
[; ;pic16lf1559.h: 5088: };
[; ;pic16lf1559.h: 5089: } AADPREbits_t;
[; ;pic16lf1559.h: 5090: extern volatile AADPREbits_t AADPREbits @ 0x716;
[; ;pic16lf1559.h: 5132: typedef union {
[; ;pic16lf1559.h: 5133: struct {
[; ;pic16lf1559.h: 5134: unsigned ADPRE :7;
[; ;pic16lf1559.h: 5135: };
[; ;pic16lf1559.h: 5136: struct {
[; ;pic16lf1559.h: 5137: unsigned ADPRE0 :1;
[; ;pic16lf1559.h: 5138: unsigned ADPRE1 :1;
[; ;pic16lf1559.h: 5139: unsigned ADPRE2 :1;
[; ;pic16lf1559.h: 5140: unsigned ADPRE3 :1;
[; ;pic16lf1559.h: 5141: unsigned ADPRE4 :1;
[; ;pic16lf1559.h: 5142: unsigned ADPRE5 :1;
[; ;pic16lf1559.h: 5143: unsigned ADPRE6 :1;
[; ;pic16lf1559.h: 5144: };
[; ;pic16lf1559.h: 5145: } AD1PREbits_t;
[; ;pic16lf1559.h: 5146: extern volatile AD1PREbits_t AD1PREbits @ 0x716;
[; ;pic16lf1559.h: 5188: typedef union {
[; ;pic16lf1559.h: 5189: struct {
[; ;pic16lf1559.h: 5190: unsigned ADPRE :7;
[; ;pic16lf1559.h: 5191: };
[; ;pic16lf1559.h: 5192: struct {
[; ;pic16lf1559.h: 5193: unsigned ADPRE0 :1;
[; ;pic16lf1559.h: 5194: unsigned ADPRE1 :1;
[; ;pic16lf1559.h: 5195: unsigned ADPRE2 :1;
[; ;pic16lf1559.h: 5196: unsigned ADPRE3 :1;
[; ;pic16lf1559.h: 5197: unsigned ADPRE4 :1;
[; ;pic16lf1559.h: 5198: unsigned ADPRE5 :1;
[; ;pic16lf1559.h: 5199: unsigned ADPRE6 :1;
[; ;pic16lf1559.h: 5200: };
[; ;pic16lf1559.h: 5201: } AAD1PREbits_t;
[; ;pic16lf1559.h: 5202: extern volatile AAD1PREbits_t AAD1PREbits @ 0x716;
[; ;pic16lf1559.h: 5247: extern volatile unsigned char AD1ACQCON @ 0x717;
"5249
[; ;pic16lf1559.h: 5249: asm("AD1ACQCON equ 0717h");
[; <" AD1ACQCON equ 0717h ;# ">
[; ;pic16lf1559.h: 5252: extern volatile unsigned char AADACQ @ 0x717;
"5254
[; ;pic16lf1559.h: 5254: asm("AADACQ equ 0717h");
[; <" AADACQ equ 0717h ;# ">
[; ;pic16lf1559.h: 5256: extern volatile unsigned char AD1ACQ @ 0x717;
"5258
[; ;pic16lf1559.h: 5258: asm("AD1ACQ equ 0717h");
[; <" AD1ACQ equ 0717h ;# ">
[; ;pic16lf1559.h: 5260: extern volatile unsigned char AAD1ACQ @ 0x717;
"5262
[; ;pic16lf1559.h: 5262: asm("AAD1ACQ equ 0717h");
[; <" AAD1ACQ equ 0717h ;# ">
[; ;pic16lf1559.h: 5265: typedef union {
[; ;pic16lf1559.h: 5266: struct {
[; ;pic16lf1559.h: 5267: unsigned ADACQ :7;
[; ;pic16lf1559.h: 5268: };
[; ;pic16lf1559.h: 5269: struct {
[; ;pic16lf1559.h: 5270: unsigned ADACQ0 :1;
[; ;pic16lf1559.h: 5271: unsigned ADACQ1 :1;
[; ;pic16lf1559.h: 5272: unsigned ADACQ2 :1;
[; ;pic16lf1559.h: 5273: unsigned ADACQ3 :1;
[; ;pic16lf1559.h: 5274: unsigned ADACQ4 :1;
[; ;pic16lf1559.h: 5275: unsigned ADACQ5 :1;
[; ;pic16lf1559.h: 5276: unsigned ADACQ6 :1;
[; ;pic16lf1559.h: 5277: };
[; ;pic16lf1559.h: 5278: } AD1ACQCONbits_t;
[; ;pic16lf1559.h: 5279: extern volatile AD1ACQCONbits_t AD1ACQCONbits @ 0x717;
[; ;pic16lf1559.h: 5322: typedef union {
[; ;pic16lf1559.h: 5323: struct {
[; ;pic16lf1559.h: 5324: unsigned ADACQ :7;
[; ;pic16lf1559.h: 5325: };
[; ;pic16lf1559.h: 5326: struct {
[; ;pic16lf1559.h: 5327: unsigned ADACQ0 :1;
[; ;pic16lf1559.h: 5328: unsigned ADACQ1 :1;
[; ;pic16lf1559.h: 5329: unsigned ADACQ2 :1;
[; ;pic16lf1559.h: 5330: unsigned ADACQ3 :1;
[; ;pic16lf1559.h: 5331: unsigned ADACQ4 :1;
[; ;pic16lf1559.h: 5332: unsigned ADACQ5 :1;
[; ;pic16lf1559.h: 5333: unsigned ADACQ6 :1;
[; ;pic16lf1559.h: 5334: };
[; ;pic16lf1559.h: 5335: } AADACQbits_t;
[; ;pic16lf1559.h: 5336: extern volatile AADACQbits_t AADACQbits @ 0x717;
[; ;pic16lf1559.h: 5378: typedef union {
[; ;pic16lf1559.h: 5379: struct {
[; ;pic16lf1559.h: 5380: unsigned ADACQ :7;
[; ;pic16lf1559.h: 5381: };
[; ;pic16lf1559.h: 5382: struct {
[; ;pic16lf1559.h: 5383: unsigned ADACQ0 :1;
[; ;pic16lf1559.h: 5384: unsigned ADACQ1 :1;
[; ;pic16lf1559.h: 5385: unsigned ADACQ2 :1;
[; ;pic16lf1559.h: 5386: unsigned ADACQ3 :1;
[; ;pic16lf1559.h: 5387: unsigned ADACQ4 :1;
[; ;pic16lf1559.h: 5388: unsigned ADACQ5 :1;
[; ;pic16lf1559.h: 5389: unsigned ADACQ6 :1;
[; ;pic16lf1559.h: 5390: };
[; ;pic16lf1559.h: 5391: } AD1ACQbits_t;
[; ;pic16lf1559.h: 5392: extern volatile AD1ACQbits_t AD1ACQbits @ 0x717;
[; ;pic16lf1559.h: 5434: typedef union {
[; ;pic16lf1559.h: 5435: struct {
[; ;pic16lf1559.h: 5436: unsigned ADACQ :7;
[; ;pic16lf1559.h: 5437: };
[; ;pic16lf1559.h: 5438: struct {
[; ;pic16lf1559.h: 5439: unsigned ADACQ0 :1;
[; ;pic16lf1559.h: 5440: unsigned ADACQ1 :1;
[; ;pic16lf1559.h: 5441: unsigned ADACQ2 :1;
[; ;pic16lf1559.h: 5442: unsigned ADACQ3 :1;
[; ;pic16lf1559.h: 5443: unsigned ADACQ4 :1;
[; ;pic16lf1559.h: 5444: unsigned ADACQ5 :1;
[; ;pic16lf1559.h: 5445: unsigned ADACQ6 :1;
[; ;pic16lf1559.h: 5446: };
[; ;pic16lf1559.h: 5447: } AAD1ACQbits_t;
[; ;pic16lf1559.h: 5448: extern volatile AAD1ACQbits_t AAD1ACQbits @ 0x717;
[; ;pic16lf1559.h: 5493: extern volatile unsigned char AD1GRD @ 0x718;
"5495
[; ;pic16lf1559.h: 5495: asm("AD1GRD equ 0718h");
[; <" AD1GRD equ 0718h ;# ">
[; ;pic16lf1559.h: 5498: extern volatile unsigned char AADGRD @ 0x718;
"5500
[; ;pic16lf1559.h: 5500: asm("AADGRD equ 0718h");
[; <" AADGRD equ 0718h ;# ">
[; ;pic16lf1559.h: 5502: extern volatile unsigned char AAD1GRD @ 0x718;
"5504
[; ;pic16lf1559.h: 5504: asm("AAD1GRD equ 0718h");
[; <" AAD1GRD equ 0718h ;# ">
[; ;pic16lf1559.h: 5507: typedef union {
[; ;pic16lf1559.h: 5508: struct {
[; ;pic16lf1559.h: 5509: unsigned :5;
[; ;pic16lf1559.h: 5510: unsigned GRD1POL :1;
[; ;pic16lf1559.h: 5511: unsigned GRD1AOE :1;
[; ;pic16lf1559.h: 5512: unsigned GRD1BOE :1;
[; ;pic16lf1559.h: 5513: };
[; ;pic16lf1559.h: 5514: struct {
[; ;pic16lf1559.h: 5515: unsigned :5;
[; ;pic16lf1559.h: 5516: unsigned GRDPOL :1;
[; ;pic16lf1559.h: 5517: unsigned GRDAOE :1;
[; ;pic16lf1559.h: 5518: unsigned GRDBOE :1;
[; ;pic16lf1559.h: 5519: };
[; ;pic16lf1559.h: 5520: } AD1GRDbits_t;
[; ;pic16lf1559.h: 5521: extern volatile AD1GRDbits_t AD1GRDbits @ 0x718;
[; ;pic16lf1559.h: 5554: typedef union {
[; ;pic16lf1559.h: 5555: struct {
[; ;pic16lf1559.h: 5556: unsigned :5;
[; ;pic16lf1559.h: 5557: unsigned GRD1POL :1;
[; ;pic16lf1559.h: 5558: unsigned GRD1AOE :1;
[; ;pic16lf1559.h: 5559: unsigned GRD1BOE :1;
[; ;pic16lf1559.h: 5560: };
[; ;pic16lf1559.h: 5561: struct {
[; ;pic16lf1559.h: 5562: unsigned :5;
[; ;pic16lf1559.h: 5563: unsigned GRDPOL :1;
[; ;pic16lf1559.h: 5564: unsigned GRDAOE :1;
[; ;pic16lf1559.h: 5565: unsigned GRDBOE :1;
[; ;pic16lf1559.h: 5566: };
[; ;pic16lf1559.h: 5567: } AADGRDbits_t;
[; ;pic16lf1559.h: 5568: extern volatile AADGRDbits_t AADGRDbits @ 0x718;
[; ;pic16lf1559.h: 5600: typedef union {
[; ;pic16lf1559.h: 5601: struct {
[; ;pic16lf1559.h: 5602: unsigned :5;
[; ;pic16lf1559.h: 5603: unsigned GRD1POL :1;
[; ;pic16lf1559.h: 5604: unsigned GRD1AOE :1;
[; ;pic16lf1559.h: 5605: unsigned GRD1BOE :1;
[; ;pic16lf1559.h: 5606: };
[; ;pic16lf1559.h: 5607: struct {
[; ;pic16lf1559.h: 5608: unsigned :5;
[; ;pic16lf1559.h: 5609: unsigned GRDPOL :1;
[; ;pic16lf1559.h: 5610: unsigned GRDAOE :1;
[; ;pic16lf1559.h: 5611: unsigned GRDBOE :1;
[; ;pic16lf1559.h: 5612: };
[; ;pic16lf1559.h: 5613: } AAD1GRDbits_t;
[; ;pic16lf1559.h: 5614: extern volatile AAD1GRDbits_t AAD1GRDbits @ 0x718;
[; ;pic16lf1559.h: 5649: extern volatile unsigned char AD1CAPCON @ 0x719;
"5651
[; ;pic16lf1559.h: 5651: asm("AD1CAPCON equ 0719h");
[; <" AD1CAPCON equ 0719h ;# ">
[; ;pic16lf1559.h: 5654: extern volatile unsigned char AADCAP @ 0x719;
"5656
[; ;pic16lf1559.h: 5656: asm("AADCAP equ 0719h");
[; <" AADCAP equ 0719h ;# ">
[; ;pic16lf1559.h: 5658: extern volatile unsigned char AAD1CAP @ 0x719;
"5660
[; ;pic16lf1559.h: 5660: asm("AAD1CAP equ 0719h");
[; <" AAD1CAP equ 0719h ;# ">
[; ;pic16lf1559.h: 5662: extern volatile unsigned char AAD1CAPCON @ 0x719;
"5664
[; ;pic16lf1559.h: 5664: asm("AAD1CAPCON equ 0719h");
[; <" AAD1CAPCON equ 0719h ;# ">
[; ;pic16lf1559.h: 5667: typedef union {
[; ;pic16lf1559.h: 5668: struct {
[; ;pic16lf1559.h: 5669: unsigned ADDCAP :4;
[; ;pic16lf1559.h: 5670: };
[; ;pic16lf1559.h: 5671: struct {
[; ;pic16lf1559.h: 5672: unsigned ADCAP :4;
[; ;pic16lf1559.h: 5673: };
[; ;pic16lf1559.h: 5674: struct {
[; ;pic16lf1559.h: 5675: unsigned ADDCAP0 :1;
[; ;pic16lf1559.h: 5676: unsigned ADDCAP1 :1;
[; ;pic16lf1559.h: 5677: unsigned ADDCAP2 :1;
[; ;pic16lf1559.h: 5678: unsigned ADDCAP3 :1;
[; ;pic16lf1559.h: 5679: };
[; ;pic16lf1559.h: 5680: struct {
[; ;pic16lf1559.h: 5681: unsigned ADD1CAP :4;
[; ;pic16lf1559.h: 5682: };
[; ;pic16lf1559.h: 5683: } AD1CAPCONbits_t;
[; ;pic16lf1559.h: 5684: extern volatile AD1CAPCONbits_t AD1CAPCONbits @ 0x719;
[; ;pic16lf1559.h: 5722: typedef union {
[; ;pic16lf1559.h: 5723: struct {
[; ;pic16lf1559.h: 5724: unsigned ADDCAP :4;
[; ;pic16lf1559.h: 5725: };
[; ;pic16lf1559.h: 5726: struct {
[; ;pic16lf1559.h: 5727: unsigned ADCAP :4;
[; ;pic16lf1559.h: 5728: };
[; ;pic16lf1559.h: 5729: struct {
[; ;pic16lf1559.h: 5730: unsigned ADDCAP0 :1;
[; ;pic16lf1559.h: 5731: unsigned ADDCAP1 :1;
[; ;pic16lf1559.h: 5732: unsigned ADDCAP2 :1;
[; ;pic16lf1559.h: 5733: unsigned ADDCAP3 :1;
[; ;pic16lf1559.h: 5734: };
[; ;pic16lf1559.h: 5735: struct {
[; ;pic16lf1559.h: 5736: unsigned ADD1CAP :4;
[; ;pic16lf1559.h: 5737: };
[; ;pic16lf1559.h: 5738: } AADCAPbits_t;
[; ;pic16lf1559.h: 5739: extern volatile AADCAPbits_t AADCAPbits @ 0x719;
[; ;pic16lf1559.h: 5776: typedef union {
[; ;pic16lf1559.h: 5777: struct {
[; ;pic16lf1559.h: 5778: unsigned ADDCAP :4;
[; ;pic16lf1559.h: 5779: };
[; ;pic16lf1559.h: 5780: struct {
[; ;pic16lf1559.h: 5781: unsigned ADCAP :4;
[; ;pic16lf1559.h: 5782: };
[; ;pic16lf1559.h: 5783: struct {
[; ;pic16lf1559.h: 5784: unsigned ADDCAP0 :1;
[; ;pic16lf1559.h: 5785: unsigned ADDCAP1 :1;
[; ;pic16lf1559.h: 5786: unsigned ADDCAP2 :1;
[; ;pic16lf1559.h: 5787: unsigned ADDCAP3 :1;
[; ;pic16lf1559.h: 5788: };
[; ;pic16lf1559.h: 5789: struct {
[; ;pic16lf1559.h: 5790: unsigned ADD1CAP :4;
[; ;pic16lf1559.h: 5791: };
[; ;pic16lf1559.h: 5792: } AAD1CAPbits_t;
[; ;pic16lf1559.h: 5793: extern volatile AAD1CAPbits_t AAD1CAPbits @ 0x719;
[; ;pic16lf1559.h: 5830: typedef union {
[; ;pic16lf1559.h: 5831: struct {
[; ;pic16lf1559.h: 5832: unsigned ADDCAP :4;
[; ;pic16lf1559.h: 5833: };
[; ;pic16lf1559.h: 5834: struct {
[; ;pic16lf1559.h: 5835: unsigned ADCAP :4;
[; ;pic16lf1559.h: 5836: };
[; ;pic16lf1559.h: 5837: struct {
[; ;pic16lf1559.h: 5838: unsigned ADDCAP0 :1;
[; ;pic16lf1559.h: 5839: unsigned ADDCAP1 :1;
[; ;pic16lf1559.h: 5840: unsigned ADDCAP2 :1;
[; ;pic16lf1559.h: 5841: unsigned ADDCAP3 :1;
[; ;pic16lf1559.h: 5842: };
[; ;pic16lf1559.h: 5843: struct {
[; ;pic16lf1559.h: 5844: unsigned ADD1CAP :4;
[; ;pic16lf1559.h: 5845: };
[; ;pic16lf1559.h: 5846: } AAD1CAPCONbits_t;
[; ;pic16lf1559.h: 5847: extern volatile AAD1CAPCONbits_t AAD1CAPCONbits @ 0x719;
[; ;pic16lf1559.h: 5887: extern volatile unsigned short AAD1RES0 @ 0x71A;
"5889
[; ;pic16lf1559.h: 5889: asm("AAD1RES0 equ 071Ah");
[; <" AAD1RES0 equ 071Ah ;# ">
[; ;pic16lf1559.h: 5892: extern volatile unsigned short AD1RES0 @ 0x71A;
"5894
[; ;pic16lf1559.h: 5894: asm("AD1RES0 equ 071Ah");
[; <" AD1RES0 equ 071Ah ;# ">
[; ;pic16lf1559.h: 5896: extern volatile unsigned short ADRES0 @ 0x71A;
"5898
[; ;pic16lf1559.h: 5898: asm("ADRES0 equ 071Ah");
[; <" ADRES0 equ 071Ah ;# ">
[; ;pic16lf1559.h: 5903: extern volatile unsigned char AAD1RES0L @ 0x71A;
"5905
[; ;pic16lf1559.h: 5905: asm("AAD1RES0L equ 071Ah");
[; <" AAD1RES0L equ 071Ah ;# ">
[; ;pic16lf1559.h: 5908: extern volatile unsigned char AD1RES0L @ 0x71A;
"5910
[; ;pic16lf1559.h: 5910: asm("AD1RES0L equ 071Ah");
[; <" AD1RES0L equ 071Ah ;# ">
[; ;pic16lf1559.h: 5913: typedef union {
[; ;pic16lf1559.h: 5914: struct {
[; ;pic16lf1559.h: 5915: unsigned ADRESL :8;
[; ;pic16lf1559.h: 5916: };
[; ;pic16lf1559.h: 5917: } AAD1RES0Lbits_t;
[; ;pic16lf1559.h: 5918: extern volatile AAD1RES0Lbits_t AAD1RES0Lbits @ 0x71A;
[; ;pic16lf1559.h: 5926: typedef union {
[; ;pic16lf1559.h: 5927: struct {
[; ;pic16lf1559.h: 5928: unsigned ADRESL :8;
[; ;pic16lf1559.h: 5929: };
[; ;pic16lf1559.h: 5930: } AD1RES0Lbits_t;
[; ;pic16lf1559.h: 5931: extern volatile AD1RES0Lbits_t AD1RES0Lbits @ 0x71A;
[; ;pic16lf1559.h: 5941: extern volatile unsigned char AAD1RES0H @ 0x71B;
"5943
[; ;pic16lf1559.h: 5943: asm("AAD1RES0H equ 071Bh");
[; <" AAD1RES0H equ 071Bh ;# ">
[; ;pic16lf1559.h: 5946: extern volatile unsigned char AD1RES0H @ 0x71B;
"5948
[; ;pic16lf1559.h: 5948: asm("AD1RES0H equ 071Bh");
[; <" AD1RES0H equ 071Bh ;# ">
[; ;pic16lf1559.h: 5951: typedef union {
[; ;pic16lf1559.h: 5952: struct {
[; ;pic16lf1559.h: 5953: unsigned ADRESH :8;
[; ;pic16lf1559.h: 5954: };
[; ;pic16lf1559.h: 5955: } AAD1RES0Hbits_t;
[; ;pic16lf1559.h: 5956: extern volatile AAD1RES0Hbits_t AAD1RES0Hbits @ 0x71B;
[; ;pic16lf1559.h: 5964: typedef union {
[; ;pic16lf1559.h: 5965: struct {
[; ;pic16lf1559.h: 5966: unsigned ADRESH :8;
[; ;pic16lf1559.h: 5967: };
[; ;pic16lf1559.h: 5968: } AD1RES0Hbits_t;
[; ;pic16lf1559.h: 5969: extern volatile AD1RES0Hbits_t AD1RES0Hbits @ 0x71B;
[; ;pic16lf1559.h: 5979: extern volatile unsigned short AAD1RES1 @ 0x71C;
"5981
[; ;pic16lf1559.h: 5981: asm("AAD1RES1 equ 071Ch");
[; <" AAD1RES1 equ 071Ch ;# ">
[; ;pic16lf1559.h: 5984: extern volatile unsigned short AD1RES1 @ 0x71C;
"5986
[; ;pic16lf1559.h: 5986: asm("AD1RES1 equ 071Ch");
[; <" AD1RES1 equ 071Ch ;# ">
[; ;pic16lf1559.h: 5988: extern volatile unsigned short ADRES1 @ 0x71C;
"5990
[; ;pic16lf1559.h: 5990: asm("ADRES1 equ 071Ch");
[; <" ADRES1 equ 071Ch ;# ">
[; ;pic16lf1559.h: 5995: extern volatile unsigned char AAD1RES1L @ 0x71C;
"5997
[; ;pic16lf1559.h: 5997: asm("AAD1RES1L equ 071Ch");
[; <" AAD1RES1L equ 071Ch ;# ">
[; ;pic16lf1559.h: 6000: extern volatile unsigned char AD1RES1L @ 0x71C;
"6002
[; ;pic16lf1559.h: 6002: asm("AD1RES1L equ 071Ch");
[; <" AD1RES1L equ 071Ch ;# ">
[; ;pic16lf1559.h: 6005: typedef union {
[; ;pic16lf1559.h: 6006: struct {
[; ;pic16lf1559.h: 6007: unsigned ADRESL :8;
[; ;pic16lf1559.h: 6008: };
[; ;pic16lf1559.h: 6009: } AAD1RES1Lbits_t;
[; ;pic16lf1559.h: 6010: extern volatile AAD1RES1Lbits_t AAD1RES1Lbits @ 0x71C;
[; ;pic16lf1559.h: 6018: typedef union {
[; ;pic16lf1559.h: 6019: struct {
[; ;pic16lf1559.h: 6020: unsigned ADRESL :8;
[; ;pic16lf1559.h: 6021: };
[; ;pic16lf1559.h: 6022: } AD1RES1Lbits_t;
[; ;pic16lf1559.h: 6023: extern volatile AD1RES1Lbits_t AD1RES1Lbits @ 0x71C;
[; ;pic16lf1559.h: 6033: extern volatile unsigned char AAD1RES1H @ 0x71D;
"6035
[; ;pic16lf1559.h: 6035: asm("AAD1RES1H equ 071Dh");
[; <" AAD1RES1H equ 071Dh ;# ">
[; ;pic16lf1559.h: 6038: extern volatile unsigned char AD1RES1H @ 0x71D;
"6040
[; ;pic16lf1559.h: 6040: asm("AD1RES1H equ 071Dh");
[; <" AD1RES1H equ 071Dh ;# ">
[; ;pic16lf1559.h: 6043: typedef union {
[; ;pic16lf1559.h: 6044: struct {
[; ;pic16lf1559.h: 6045: unsigned ADRESH :8;
[; ;pic16lf1559.h: 6046: };
[; ;pic16lf1559.h: 6047: } AAD1RES1Hbits_t;
[; ;pic16lf1559.h: 6048: extern volatile AAD1RES1Hbits_t AAD1RES1Hbits @ 0x71D;
[; ;pic16lf1559.h: 6056: typedef union {
[; ;pic16lf1559.h: 6057: struct {
[; ;pic16lf1559.h: 6058: unsigned ADRESH :8;
[; ;pic16lf1559.h: 6059: };
[; ;pic16lf1559.h: 6060: } AD1RES1Hbits_t;
[; ;pic16lf1559.h: 6061: extern volatile AD1RES1Hbits_t AD1RES1Hbits @ 0x71D;
[; ;pic16lf1559.h: 6071: extern volatile unsigned char AD1CH @ 0x71E;
"6073
[; ;pic16lf1559.h: 6073: asm("AD1CH equ 071Eh");
[; <" AD1CH equ 071Eh ;# ">
[; ;pic16lf1559.h: 6076: extern volatile unsigned char AAD1CH @ 0x71E;
"6078
[; ;pic16lf1559.h: 6078: asm("AAD1CH equ 071Eh");
[; <" AAD1CH equ 071Eh ;# ">
[; ;pic16lf1559.h: 6081: typedef union {
[; ;pic16lf1559.h: 6082: struct {
[; ;pic16lf1559.h: 6083: unsigned CH10 :1;
[; ;pic16lf1559.h: 6084: unsigned CH11 :1;
[; ;pic16lf1559.h: 6085: unsigned CH12 :1;
[; ;pic16lf1559.h: 6086: unsigned CH13 :1;
[; ;pic16lf1559.h: 6087: unsigned CH14 :1;
[; ;pic16lf1559.h: 6088: unsigned CH15 :1;
[; ;pic16lf1559.h: 6089: unsigned CH16 :1;
[; ;pic16lf1559.h: 6090: };
[; ;pic16lf1559.h: 6091: } AD1CHbits_t;
[; ;pic16lf1559.h: 6092: extern volatile AD1CHbits_t AD1CHbits @ 0x71E;
[; ;pic16lf1559.h: 6130: typedef union {
[; ;pic16lf1559.h: 6131: struct {
[; ;pic16lf1559.h: 6132: unsigned CH10 :1;
[; ;pic16lf1559.h: 6133: unsigned CH11 :1;
[; ;pic16lf1559.h: 6134: unsigned CH12 :1;
[; ;pic16lf1559.h: 6135: unsigned CH13 :1;
[; ;pic16lf1559.h: 6136: unsigned CH14 :1;
[; ;pic16lf1559.h: 6137: unsigned CH15 :1;
[; ;pic16lf1559.h: 6138: unsigned CH16 :1;
[; ;pic16lf1559.h: 6139: };
[; ;pic16lf1559.h: 6140: } AAD1CHbits_t;
[; ;pic16lf1559.h: 6141: extern volatile AAD1CHbits_t AAD1CHbits @ 0x71E;
[; ;pic16lf1559.h: 6181: extern volatile unsigned char AD2CON0 @ 0x791;
"6183
[; ;pic16lf1559.h: 6183: asm("AD2CON0 equ 0791h");
[; <" AD2CON0 equ 0791h ;# ">
[; ;pic16lf1559.h: 6186: extern volatile unsigned char AAD2CON0 @ 0x791;
"6188
[; ;pic16lf1559.h: 6188: asm("AAD2CON0 equ 0791h");
[; <" AAD2CON0 equ 0791h ;# ">
[; ;pic16lf1559.h: 6191: typedef union {
[; ;pic16lf1559.h: 6192: struct {
[; ;pic16lf1559.h: 6193: unsigned ADON :1;
[; ;pic16lf1559.h: 6194: unsigned GO :1;
[; ;pic16lf1559.h: 6195: unsigned CHS :5;
[; ;pic16lf1559.h: 6196: };
[; ;pic16lf1559.h: 6197: struct {
[; ;pic16lf1559.h: 6198: unsigned :1;
[; ;pic16lf1559.h: 6199: unsigned GO_nDONE :1;
[; ;pic16lf1559.h: 6200: unsigned CHS0 :1;
[; ;pic16lf1559.h: 6201: unsigned CHS1 :1;
[; ;pic16lf1559.h: 6202: unsigned CHS2 :1;
[; ;pic16lf1559.h: 6203: unsigned CHS3 :1;
[; ;pic16lf1559.h: 6204: unsigned CHS4 :1;
[; ;pic16lf1559.h: 6205: };
[; ;pic16lf1559.h: 6206: struct {
[; ;pic16lf1559.h: 6207: unsigned :1;
[; ;pic16lf1559.h: 6208: unsigned GO_nDONE2 :1;
[; ;pic16lf1559.h: 6209: };
[; ;pic16lf1559.h: 6210: } AD2CON0bits_t;
[; ;pic16lf1559.h: 6211: extern volatile AD2CON0bits_t AD2CON0bits @ 0x791;
[; ;pic16lf1559.h: 6264: typedef union {
[; ;pic16lf1559.h: 6265: struct {
[; ;pic16lf1559.h: 6266: unsigned ADON :1;
[; ;pic16lf1559.h: 6267: unsigned GO :1;
[; ;pic16lf1559.h: 6268: unsigned CHS :5;
[; ;pic16lf1559.h: 6269: };
[; ;pic16lf1559.h: 6270: struct {
[; ;pic16lf1559.h: 6271: unsigned :1;
[; ;pic16lf1559.h: 6272: unsigned GO_nDONE :1;
[; ;pic16lf1559.h: 6273: unsigned CHS0 :1;
[; ;pic16lf1559.h: 6274: unsigned CHS1 :1;
[; ;pic16lf1559.h: 6275: unsigned CHS2 :1;
[; ;pic16lf1559.h: 6276: unsigned CHS3 :1;
[; ;pic16lf1559.h: 6277: unsigned CHS4 :1;
[; ;pic16lf1559.h: 6278: };
[; ;pic16lf1559.h: 6279: struct {
[; ;pic16lf1559.h: 6280: unsigned :1;
[; ;pic16lf1559.h: 6281: unsigned GO_nDONE2 :1;
[; ;pic16lf1559.h: 6282: };
[; ;pic16lf1559.h: 6283: } AAD2CON0bits_t;
[; ;pic16lf1559.h: 6284: extern volatile AAD2CON0bits_t AAD2CON0bits @ 0x791;
[; ;pic16lf1559.h: 6339: extern volatile unsigned char AD2CON2 @ 0x793;
"6341
[; ;pic16lf1559.h: 6341: asm("AD2CON2 equ 0793h");
[; <" AD2CON2 equ 0793h ;# ">
[; ;pic16lf1559.h: 6344: extern volatile unsigned char AAD2CON2 @ 0x793;
"6346
[; ;pic16lf1559.h: 6346: asm("AAD2CON2 equ 0793h");
[; <" AAD2CON2 equ 0793h ;# ">
[; ;pic16lf1559.h: 6349: typedef union {
[; ;pic16lf1559.h: 6350: struct {
[; ;pic16lf1559.h: 6351: unsigned :4;
[; ;pic16lf1559.h: 6352: unsigned TRIGSEL :3;
[; ;pic16lf1559.h: 6353: };
[; ;pic16lf1559.h: 6354: struct {
[; ;pic16lf1559.h: 6355: unsigned :4;
[; ;pic16lf1559.h: 6356: unsigned TRIGSEL0 :1;
[; ;pic16lf1559.h: 6357: unsigned TRIGSEL1 :1;
[; ;pic16lf1559.h: 6358: unsigned TRIGSEL2 :1;
[; ;pic16lf1559.h: 6359: };
[; ;pic16lf1559.h: 6360: } AD2CON2bits_t;
[; ;pic16lf1559.h: 6361: extern volatile AD2CON2bits_t AD2CON2bits @ 0x793;
[; ;pic16lf1559.h: 6384: typedef union {
[; ;pic16lf1559.h: 6385: struct {
[; ;pic16lf1559.h: 6386: unsigned :4;
[; ;pic16lf1559.h: 6387: unsigned TRIGSEL :3;
[; ;pic16lf1559.h: 6388: };
[; ;pic16lf1559.h: 6389: struct {
[; ;pic16lf1559.h: 6390: unsigned :4;
[; ;pic16lf1559.h: 6391: unsigned TRIGSEL0 :1;
[; ;pic16lf1559.h: 6392: unsigned TRIGSEL1 :1;
[; ;pic16lf1559.h: 6393: unsigned TRIGSEL2 :1;
[; ;pic16lf1559.h: 6394: };
[; ;pic16lf1559.h: 6395: } AAD2CON2bits_t;
[; ;pic16lf1559.h: 6396: extern volatile AAD2CON2bits_t AAD2CON2bits @ 0x793;
[; ;pic16lf1559.h: 6421: extern volatile unsigned char AD2CON3 @ 0x794;
"6423
[; ;pic16lf1559.h: 6423: asm("AD2CON3 equ 0794h");
[; <" AD2CON3 equ 0794h ;# ">
[; ;pic16lf1559.h: 6426: extern volatile unsigned char AAD2CON3 @ 0x794;
"6428
[; ;pic16lf1559.h: 6428: asm("AAD2CON3 equ 0794h");
[; <" AAD2CON3 equ 0794h ;# ">
[; ;pic16lf1559.h: 6431: typedef union {
[; ;pic16lf1559.h: 6432: struct {
[; ;pic16lf1559.h: 6433: unsigned AD2DSEN :1;
[; ;pic16lf1559.h: 6434: unsigned AD2IPEN :1;
[; ;pic16lf1559.h: 6435: unsigned :4;
[; ;pic16lf1559.h: 6436: unsigned AD2IPPOL :1;
[; ;pic16lf1559.h: 6437: unsigned AD2EPPOL :1;
[; ;pic16lf1559.h: 6438: };
[; ;pic16lf1559.h: 6439: struct {
[; ;pic16lf1559.h: 6440: unsigned ADDSEN :1;
[; ;pic16lf1559.h: 6441: unsigned ADIPEN :1;
[; ;pic16lf1559.h: 6442: unsigned :4;
[; ;pic16lf1559.h: 6443: unsigned ADIPPOL :1;
[; ;pic16lf1559.h: 6444: unsigned ADEPPOL :1;
[; ;pic16lf1559.h: 6445: };
[; ;pic16lf1559.h: 6446: } AD2CON3bits_t;
[; ;pic16lf1559.h: 6447: extern volatile AD2CON3bits_t AD2CON3bits @ 0x794;
[; ;pic16lf1559.h: 6490: typedef union {
[; ;pic16lf1559.h: 6491: struct {
[; ;pic16lf1559.h: 6492: unsigned AD2DSEN :1;
[; ;pic16lf1559.h: 6493: unsigned AD2IPEN :1;
[; ;pic16lf1559.h: 6494: unsigned :4;
[; ;pic16lf1559.h: 6495: unsigned AD2IPPOL :1;
[; ;pic16lf1559.h: 6496: unsigned AD2EPPOL :1;
[; ;pic16lf1559.h: 6497: };
[; ;pic16lf1559.h: 6498: struct {
[; ;pic16lf1559.h: 6499: unsigned ADDSEN :1;
[; ;pic16lf1559.h: 6500: unsigned ADIPEN :1;
[; ;pic16lf1559.h: 6501: unsigned :4;
[; ;pic16lf1559.h: 6502: unsigned ADIPPOL :1;
[; ;pic16lf1559.h: 6503: unsigned ADEPPOL :1;
[; ;pic16lf1559.h: 6504: };
[; ;pic16lf1559.h: 6505: } AAD2CON3bits_t;
[; ;pic16lf1559.h: 6506: extern volatile AAD2CON3bits_t AAD2CON3bits @ 0x794;
[; ;pic16lf1559.h: 6551: extern volatile unsigned char AD2PRECON @ 0x796;
"6553
[; ;pic16lf1559.h: 6553: asm("AD2PRECON equ 0796h");
[; <" AD2PRECON equ 0796h ;# ">
[; ;pic16lf1559.h: 6556: extern volatile unsigned char AD2PRE @ 0x796;
"6558
[; ;pic16lf1559.h: 6558: asm("AD2PRE equ 0796h");
[; <" AD2PRE equ 0796h ;# ">
[; ;pic16lf1559.h: 6560: extern volatile unsigned char AAD2PRE @ 0x796;
"6562
[; ;pic16lf1559.h: 6562: asm("AAD2PRE equ 0796h");
[; <" AAD2PRE equ 0796h ;# ">
[; ;pic16lf1559.h: 6565: typedef union {
[; ;pic16lf1559.h: 6566: struct {
[; ;pic16lf1559.h: 6567: unsigned ADPRE :7;
[; ;pic16lf1559.h: 6568: };
[; ;pic16lf1559.h: 6569: struct {
[; ;pic16lf1559.h: 6570: unsigned ADPRE0 :1;
[; ;pic16lf1559.h: 6571: unsigned ADPRE1 :1;
[; ;pic16lf1559.h: 6572: unsigned ADPRE2 :1;
[; ;pic16lf1559.h: 6573: unsigned ADPRE3 :1;
[; ;pic16lf1559.h: 6574: unsigned ADPRE4 :1;
[; ;pic16lf1559.h: 6575: unsigned ADPRE5 :1;
[; ;pic16lf1559.h: 6576: unsigned ADPRE6 :1;
[; ;pic16lf1559.h: 6577: };
[; ;pic16lf1559.h: 6578: } AD2PRECONbits_t;
[; ;pic16lf1559.h: 6579: extern volatile AD2PRECONbits_t AD2PRECONbits @ 0x796;
[; ;pic16lf1559.h: 6622: typedef union {
[; ;pic16lf1559.h: 6623: struct {
[; ;pic16lf1559.h: 6624: unsigned ADPRE :7;
[; ;pic16lf1559.h: 6625: };
[; ;pic16lf1559.h: 6626: struct {
[; ;pic16lf1559.h: 6627: unsigned ADPRE0 :1;
[; ;pic16lf1559.h: 6628: unsigned ADPRE1 :1;
[; ;pic16lf1559.h: 6629: unsigned ADPRE2 :1;
[; ;pic16lf1559.h: 6630: unsigned ADPRE3 :1;
[; ;pic16lf1559.h: 6631: unsigned ADPRE4 :1;
[; ;pic16lf1559.h: 6632: unsigned ADPRE5 :1;
[; ;pic16lf1559.h: 6633: unsigned ADPRE6 :1;
[; ;pic16lf1559.h: 6634: };
[; ;pic16lf1559.h: 6635: } AD2PREbits_t;
[; ;pic16lf1559.h: 6636: extern volatile AD2PREbits_t AD2PREbits @ 0x796;
[; ;pic16lf1559.h: 6678: typedef union {
[; ;pic16lf1559.h: 6679: struct {
[; ;pic16lf1559.h: 6680: unsigned ADPRE :7;
[; ;pic16lf1559.h: 6681: };
[; ;pic16lf1559.h: 6682: struct {
[; ;pic16lf1559.h: 6683: unsigned ADPRE0 :1;
[; ;pic16lf1559.h: 6684: unsigned ADPRE1 :1;
[; ;pic16lf1559.h: 6685: unsigned ADPRE2 :1;
[; ;pic16lf1559.h: 6686: unsigned ADPRE3 :1;
[; ;pic16lf1559.h: 6687: unsigned ADPRE4 :1;
[; ;pic16lf1559.h: 6688: unsigned ADPRE5 :1;
[; ;pic16lf1559.h: 6689: unsigned ADPRE6 :1;
[; ;pic16lf1559.h: 6690: };
[; ;pic16lf1559.h: 6691: } AAD2PREbits_t;
[; ;pic16lf1559.h: 6692: extern volatile AAD2PREbits_t AAD2PREbits @ 0x796;
[; ;pic16lf1559.h: 6737: extern volatile unsigned char AD2ACQCON @ 0x797;
"6739
[; ;pic16lf1559.h: 6739: asm("AD2ACQCON equ 0797h");
[; <" AD2ACQCON equ 0797h ;# ">
[; ;pic16lf1559.h: 6742: extern volatile unsigned char AD2ACQ @ 0x797;
"6744
[; ;pic16lf1559.h: 6744: asm("AD2ACQ equ 0797h");
[; <" AD2ACQ equ 0797h ;# ">
[; ;pic16lf1559.h: 6746: extern volatile unsigned char AAD2ACQ @ 0x797;
"6748
[; ;pic16lf1559.h: 6748: asm("AAD2ACQ equ 0797h");
[; <" AAD2ACQ equ 0797h ;# ">
[; ;pic16lf1559.h: 6751: typedef union {
[; ;pic16lf1559.h: 6752: struct {
[; ;pic16lf1559.h: 6753: unsigned ADACQ :7;
[; ;pic16lf1559.h: 6754: };
[; ;pic16lf1559.h: 6755: struct {
[; ;pic16lf1559.h: 6756: unsigned ADACQ0 :1;
[; ;pic16lf1559.h: 6757: unsigned ADACQ1 :1;
[; ;pic16lf1559.h: 6758: unsigned ADACQ2 :1;
[; ;pic16lf1559.h: 6759: unsigned ADACQ3 :1;
[; ;pic16lf1559.h: 6760: unsigned ADACQ4 :1;
[; ;pic16lf1559.h: 6761: unsigned ADACQ5 :1;
[; ;pic16lf1559.h: 6762: unsigned ADACQ6 :1;
[; ;pic16lf1559.h: 6763: };
[; ;pic16lf1559.h: 6764: } AD2ACQCONbits_t;
[; ;pic16lf1559.h: 6765: extern volatile AD2ACQCONbits_t AD2ACQCONbits @ 0x797;
[; ;pic16lf1559.h: 6808: typedef union {
[; ;pic16lf1559.h: 6809: struct {
[; ;pic16lf1559.h: 6810: unsigned ADACQ :7;
[; ;pic16lf1559.h: 6811: };
[; ;pic16lf1559.h: 6812: struct {
[; ;pic16lf1559.h: 6813: unsigned ADACQ0 :1;
[; ;pic16lf1559.h: 6814: unsigned ADACQ1 :1;
[; ;pic16lf1559.h: 6815: unsigned ADACQ2 :1;
[; ;pic16lf1559.h: 6816: unsigned ADACQ3 :1;
[; ;pic16lf1559.h: 6817: unsigned ADACQ4 :1;
[; ;pic16lf1559.h: 6818: unsigned ADACQ5 :1;
[; ;pic16lf1559.h: 6819: unsigned ADACQ6 :1;
[; ;pic16lf1559.h: 6820: };
[; ;pic16lf1559.h: 6821: } AD2ACQbits_t;
[; ;pic16lf1559.h: 6822: extern volatile AD2ACQbits_t AD2ACQbits @ 0x797;
[; ;pic16lf1559.h: 6864: typedef union {
[; ;pic16lf1559.h: 6865: struct {
[; ;pic16lf1559.h: 6866: unsigned ADACQ :7;
[; ;pic16lf1559.h: 6867: };
[; ;pic16lf1559.h: 6868: struct {
[; ;pic16lf1559.h: 6869: unsigned ADACQ0 :1;
[; ;pic16lf1559.h: 6870: unsigned ADACQ1 :1;
[; ;pic16lf1559.h: 6871: unsigned ADACQ2 :1;
[; ;pic16lf1559.h: 6872: unsigned ADACQ3 :1;
[; ;pic16lf1559.h: 6873: unsigned ADACQ4 :1;
[; ;pic16lf1559.h: 6874: unsigned ADACQ5 :1;
[; ;pic16lf1559.h: 6875: unsigned ADACQ6 :1;
[; ;pic16lf1559.h: 6876: };
[; ;pic16lf1559.h: 6877: } AAD2ACQbits_t;
[; ;pic16lf1559.h: 6878: extern volatile AAD2ACQbits_t AAD2ACQbits @ 0x797;
[; ;pic16lf1559.h: 6923: extern volatile unsigned char AD2GRD @ 0x798;
"6925
[; ;pic16lf1559.h: 6925: asm("AD2GRD equ 0798h");
[; <" AD2GRD equ 0798h ;# ">
[; ;pic16lf1559.h: 6928: extern volatile unsigned char AAD2GRD @ 0x798;
"6930
[; ;pic16lf1559.h: 6930: asm("AAD2GRD equ 0798h");
[; <" AAD2GRD equ 0798h ;# ">
[; ;pic16lf1559.h: 6933: typedef union {
[; ;pic16lf1559.h: 6934: struct {
[; ;pic16lf1559.h: 6935: unsigned :5;
[; ;pic16lf1559.h: 6936: unsigned GRD2POL :1;
[; ;pic16lf1559.h: 6937: unsigned GRD2AOE :1;
[; ;pic16lf1559.h: 6938: unsigned GRD2BOE :1;
[; ;pic16lf1559.h: 6939: };
[; ;pic16lf1559.h: 6940: struct {
[; ;pic16lf1559.h: 6941: unsigned :5;
[; ;pic16lf1559.h: 6942: unsigned GRDPOL :1;
[; ;pic16lf1559.h: 6943: unsigned GRDAOE :1;
[; ;pic16lf1559.h: 6944: unsigned GRDBOE :1;
[; ;pic16lf1559.h: 6945: };
[; ;pic16lf1559.h: 6946: } AD2GRDbits_t;
[; ;pic16lf1559.h: 6947: extern volatile AD2GRDbits_t AD2GRDbits @ 0x798;
[; ;pic16lf1559.h: 6980: typedef union {
[; ;pic16lf1559.h: 6981: struct {
[; ;pic16lf1559.h: 6982: unsigned :5;
[; ;pic16lf1559.h: 6983: unsigned GRD2POL :1;
[; ;pic16lf1559.h: 6984: unsigned GRD2AOE :1;
[; ;pic16lf1559.h: 6985: unsigned GRD2BOE :1;
[; ;pic16lf1559.h: 6986: };
[; ;pic16lf1559.h: 6987: struct {
[; ;pic16lf1559.h: 6988: unsigned :5;
[; ;pic16lf1559.h: 6989: unsigned GRDPOL :1;
[; ;pic16lf1559.h: 6990: unsigned GRDAOE :1;
[; ;pic16lf1559.h: 6991: unsigned GRDBOE :1;
[; ;pic16lf1559.h: 6992: };
[; ;pic16lf1559.h: 6993: } AAD2GRDbits_t;
[; ;pic16lf1559.h: 6994: extern volatile AAD2GRDbits_t AAD2GRDbits @ 0x798;
[; ;pic16lf1559.h: 7029: extern volatile unsigned char AD2CAPCON @ 0x799;
"7031
[; ;pic16lf1559.h: 7031: asm("AD2CAPCON equ 0799h");
[; <" AD2CAPCON equ 0799h ;# ">
[; ;pic16lf1559.h: 7034: extern volatile unsigned char AAD2CAP @ 0x799;
"7036
[; ;pic16lf1559.h: 7036: asm("AAD2CAP equ 0799h");
[; <" AAD2CAP equ 0799h ;# ">
[; ;pic16lf1559.h: 7038: extern volatile unsigned char AAD2CAPCON @ 0x799;
"7040
[; ;pic16lf1559.h: 7040: asm("AAD2CAPCON equ 0799h");
[; <" AAD2CAPCON equ 0799h ;# ">
[; ;pic16lf1559.h: 7043: typedef union {
[; ;pic16lf1559.h: 7044: struct {
[; ;pic16lf1559.h: 7045: unsigned ADDCAP :4;
[; ;pic16lf1559.h: 7046: };
[; ;pic16lf1559.h: 7047: struct {
[; ;pic16lf1559.h: 7048: unsigned ADCAP :4;
[; ;pic16lf1559.h: 7049: };
[; ;pic16lf1559.h: 7050: struct {
[; ;pic16lf1559.h: 7051: unsigned ADDCAP0 :1;
[; ;pic16lf1559.h: 7052: unsigned ADDCAP1 :1;
[; ;pic16lf1559.h: 7053: unsigned ADDCAP2 :1;
[; ;pic16lf1559.h: 7054: unsigned ADDCAP3 :1;
[; ;pic16lf1559.h: 7055: };
[; ;pic16lf1559.h: 7056: struct {
[; ;pic16lf1559.h: 7057: unsigned ADD2CAP :4;
[; ;pic16lf1559.h: 7058: };
[; ;pic16lf1559.h: 7059: } AD2CAPCONbits_t;
[; ;pic16lf1559.h: 7060: extern volatile AD2CAPCONbits_t AD2CAPCONbits @ 0x799;
[; ;pic16lf1559.h: 7098: typedef union {
[; ;pic16lf1559.h: 7099: struct {
[; ;pic16lf1559.h: 7100: unsigned ADDCAP :4;
[; ;pic16lf1559.h: 7101: };
[; ;pic16lf1559.h: 7102: struct {
[; ;pic16lf1559.h: 7103: unsigned ADCAP :4;
[; ;pic16lf1559.h: 7104: };
[; ;pic16lf1559.h: 7105: struct {
[; ;pic16lf1559.h: 7106: unsigned ADDCAP0 :1;
[; ;pic16lf1559.h: 7107: unsigned ADDCAP1 :1;
[; ;pic16lf1559.h: 7108: unsigned ADDCAP2 :1;
[; ;pic16lf1559.h: 7109: unsigned ADDCAP3 :1;
[; ;pic16lf1559.h: 7110: };
[; ;pic16lf1559.h: 7111: struct {
[; ;pic16lf1559.h: 7112: unsigned ADD2CAP :4;
[; ;pic16lf1559.h: 7113: };
[; ;pic16lf1559.h: 7114: } AAD2CAPbits_t;
[; ;pic16lf1559.h: 7115: extern volatile AAD2CAPbits_t AAD2CAPbits @ 0x799;
[; ;pic16lf1559.h: 7152: typedef union {
[; ;pic16lf1559.h: 7153: struct {
[; ;pic16lf1559.h: 7154: unsigned ADDCAP :4;
[; ;pic16lf1559.h: 7155: };
[; ;pic16lf1559.h: 7156: struct {
[; ;pic16lf1559.h: 7157: unsigned ADCAP :4;
[; ;pic16lf1559.h: 7158: };
[; ;pic16lf1559.h: 7159: struct {
[; ;pic16lf1559.h: 7160: unsigned ADDCAP0 :1;
[; ;pic16lf1559.h: 7161: unsigned ADDCAP1 :1;
[; ;pic16lf1559.h: 7162: unsigned ADDCAP2 :1;
[; ;pic16lf1559.h: 7163: unsigned ADDCAP3 :1;
[; ;pic16lf1559.h: 7164: };
[; ;pic16lf1559.h: 7165: struct {
[; ;pic16lf1559.h: 7166: unsigned ADD2CAP :4;
[; ;pic16lf1559.h: 7167: };
[; ;pic16lf1559.h: 7168: } AAD2CAPCONbits_t;
[; ;pic16lf1559.h: 7169: extern volatile AAD2CAPCONbits_t AAD2CAPCONbits @ 0x799;
[; ;pic16lf1559.h: 7209: extern volatile unsigned short AAD2RES0 @ 0x79A;
"7211
[; ;pic16lf1559.h: 7211: asm("AAD2RES0 equ 079Ah");
[; <" AAD2RES0 equ 079Ah ;# ">
[; ;pic16lf1559.h: 7214: extern volatile unsigned short AD2RES0 @ 0x79A;
"7216
[; ;pic16lf1559.h: 7216: asm("AD2RES0 equ 079Ah");
[; <" AD2RES0 equ 079Ah ;# ">
[; ;pic16lf1559.h: 7221: extern volatile unsigned char AAD2RES0L @ 0x79A;
"7223
[; ;pic16lf1559.h: 7223: asm("AAD2RES0L equ 079Ah");
[; <" AAD2RES0L equ 079Ah ;# ">
[; ;pic16lf1559.h: 7226: typedef union {
[; ;pic16lf1559.h: 7227: struct {
[; ;pic16lf1559.h: 7228: unsigned ADRESL :8;
[; ;pic16lf1559.h: 7229: };
[; ;pic16lf1559.h: 7230: } AAD2RES0Lbits_t;
[; ;pic16lf1559.h: 7231: extern volatile AAD2RES0Lbits_t AAD2RES0Lbits @ 0x79A;
[; ;pic16lf1559.h: 7241: extern volatile unsigned char AAD2RES0H @ 0x79B;
"7243
[; ;pic16lf1559.h: 7243: asm("AAD2RES0H equ 079Bh");
[; <" AAD2RES0H equ 079Bh ;# ">
[; ;pic16lf1559.h: 7246: typedef union {
[; ;pic16lf1559.h: 7247: struct {
[; ;pic16lf1559.h: 7248: unsigned ADRESH :8;
[; ;pic16lf1559.h: 7249: };
[; ;pic16lf1559.h: 7250: } AAD2RES0Hbits_t;
[; ;pic16lf1559.h: 7251: extern volatile AAD2RES0Hbits_t AAD2RES0Hbits @ 0x79B;
[; ;pic16lf1559.h: 7261: extern volatile unsigned short AAD2RES1 @ 0x79C;
"7263
[; ;pic16lf1559.h: 7263: asm("AAD2RES1 equ 079Ch");
[; <" AAD2RES1 equ 079Ch ;# ">
[; ;pic16lf1559.h: 7266: extern volatile unsigned short AD2RES1 @ 0x79C;
"7268
[; ;pic16lf1559.h: 7268: asm("AD2RES1 equ 079Ch");
[; <" AD2RES1 equ 079Ch ;# ">
[; ;pic16lf1559.h: 7273: extern volatile unsigned char AAD2RES1L @ 0x79C;
"7275
[; ;pic16lf1559.h: 7275: asm("AAD2RES1L equ 079Ch");
[; <" AAD2RES1L equ 079Ch ;# ">
[; ;pic16lf1559.h: 7278: typedef union {
[; ;pic16lf1559.h: 7279: struct {
[; ;pic16lf1559.h: 7280: unsigned ADRESL :8;
[; ;pic16lf1559.h: 7281: };
[; ;pic16lf1559.h: 7282: } AAD2RES1Lbits_t;
[; ;pic16lf1559.h: 7283: extern volatile AAD2RES1Lbits_t AAD2RES1Lbits @ 0x79C;
[; ;pic16lf1559.h: 7293: extern volatile unsigned char AAD2RES1H @ 0x79D;
"7295
[; ;pic16lf1559.h: 7295: asm("AAD2RES1H equ 079Dh");
[; <" AAD2RES1H equ 079Dh ;# ">
[; ;pic16lf1559.h: 7298: typedef union {
[; ;pic16lf1559.h: 7299: struct {
[; ;pic16lf1559.h: 7300: unsigned ADRESH :8;
[; ;pic16lf1559.h: 7301: };
[; ;pic16lf1559.h: 7302: } AAD2RES1Hbits_t;
[; ;pic16lf1559.h: 7303: extern volatile AAD2RES1Hbits_t AAD2RES1Hbits @ 0x79D;
[; ;pic16lf1559.h: 7313: extern volatile unsigned char AD2CH @ 0x79E;
"7315
[; ;pic16lf1559.h: 7315: asm("AD2CH equ 079Eh");
[; <" AD2CH equ 079Eh ;# ">
[; ;pic16lf1559.h: 7318: extern volatile unsigned char AAD2CH @ 0x79E;
"7320
[; ;pic16lf1559.h: 7320: asm("AAD2CH equ 079Eh");
[; <" AAD2CH equ 079Eh ;# ">
[; ;pic16lf1559.h: 7323: typedef union {
[; ;pic16lf1559.h: 7324: struct {
[; ;pic16lf1559.h: 7325: unsigned CH20 :1;
[; ;pic16lf1559.h: 7326: unsigned CH21 :1;
[; ;pic16lf1559.h: 7327: unsigned CH22 :1;
[; ;pic16lf1559.h: 7328: unsigned CH23 :1;
[; ;pic16lf1559.h: 7329: unsigned CH24 :1;
[; ;pic16lf1559.h: 7330: unsigned CH25 :1;
[; ;pic16lf1559.h: 7331: unsigned CH26 :1;
[; ;pic16lf1559.h: 7332: };
[; ;pic16lf1559.h: 7333: } AD2CHbits_t;
[; ;pic16lf1559.h: 7334: extern volatile AD2CHbits_t AD2CHbits @ 0x79E;
[; ;pic16lf1559.h: 7372: typedef union {
[; ;pic16lf1559.h: 7373: struct {
[; ;pic16lf1559.h: 7374: unsigned CH20 :1;
[; ;pic16lf1559.h: 7375: unsigned CH21 :1;
[; ;pic16lf1559.h: 7376: unsigned CH22 :1;
[; ;pic16lf1559.h: 7377: unsigned CH23 :1;
[; ;pic16lf1559.h: 7378: unsigned CH24 :1;
[; ;pic16lf1559.h: 7379: unsigned CH25 :1;
[; ;pic16lf1559.h: 7380: unsigned CH26 :1;
[; ;pic16lf1559.h: 7381: };
[; ;pic16lf1559.h: 7382: } AAD2CHbits_t;
[; ;pic16lf1559.h: 7383: extern volatile AAD2CHbits_t AAD2CHbits @ 0x79E;
[; ;pic16lf1559.h: 7423: extern volatile unsigned char ICDIO @ 0xF8C;
"7425
[; ;pic16lf1559.h: 7425: asm("ICDIO equ 0F8Ch");
[; <" ICDIO equ 0F8Ch ;# ">
[; ;pic16lf1559.h: 7428: typedef union {
[; ;pic16lf1559.h: 7429: struct {
[; ;pic16lf1559.h: 7430: unsigned :2;
[; ;pic16lf1559.h: 7431: unsigned TRIS_ICDCLK :1;
[; ;pic16lf1559.h: 7432: unsigned TRIS_ICDDAT :1;
[; ;pic16lf1559.h: 7433: unsigned LAT_ICDCLK :1;
[; ;pic16lf1559.h: 7434: unsigned LAT_ICDDAT :1;
[; ;pic16lf1559.h: 7435: unsigned PORT_ICDCLK :1;
[; ;pic16lf1559.h: 7436: unsigned PORT_ICDDAT :1;
[; ;pic16lf1559.h: 7437: };
[; ;pic16lf1559.h: 7438: } ICDIObits_t;
[; ;pic16lf1559.h: 7439: extern volatile ICDIObits_t ICDIObits @ 0xF8C;
[; ;pic16lf1559.h: 7474: extern volatile unsigned char ICDCON0 @ 0xF8D;
"7476
[; ;pic16lf1559.h: 7476: asm("ICDCON0 equ 0F8Dh");
[; <" ICDCON0 equ 0F8Dh ;# ">
[; ;pic16lf1559.h: 7479: typedef union {
[; ;pic16lf1559.h: 7480: struct {
[; ;pic16lf1559.h: 7481: unsigned RSTVEC :1;
[; ;pic16lf1559.h: 7482: unsigned :2;
[; ;pic16lf1559.h: 7483: unsigned DBGINEX :1;
[; ;pic16lf1559.h: 7484: unsigned :1;
[; ;pic16lf1559.h: 7485: unsigned SSTEP :1;
[; ;pic16lf1559.h: 7486: unsigned FREEZ :1;
[; ;pic16lf1559.h: 7487: unsigned INBUG :1;
[; ;pic16lf1559.h: 7488: };
[; ;pic16lf1559.h: 7489: } ICDCON0bits_t;
[; ;pic16lf1559.h: 7490: extern volatile ICDCON0bits_t ICDCON0bits @ 0xF8D;
[; ;pic16lf1559.h: 7520: extern volatile unsigned char ICDSTAT @ 0xF91;
"7522
[; ;pic16lf1559.h: 7522: asm("ICDSTAT equ 0F91h");
[; <" ICDSTAT equ 0F91h ;# ">
[; ;pic16lf1559.h: 7525: typedef union {
[; ;pic16lf1559.h: 7526: struct {
[; ;pic16lf1559.h: 7527: unsigned :1;
[; ;pic16lf1559.h: 7528: unsigned USRHLTF :1;
[; ;pic16lf1559.h: 7529: unsigned :4;
[; ;pic16lf1559.h: 7530: unsigned TRP0HLTF :1;
[; ;pic16lf1559.h: 7531: unsigned TRP1HLTF :1;
[; ;pic16lf1559.h: 7532: };
[; ;pic16lf1559.h: 7533: } ICDSTATbits_t;
[; ;pic16lf1559.h: 7534: extern volatile ICDSTATbits_t ICDSTATbits @ 0xF91;
[; ;pic16lf1559.h: 7554: extern volatile unsigned char ICDINSTL @ 0xF96;
"7556
[; ;pic16lf1559.h: 7556: asm("ICDINSTL equ 0F96h");
[; <" ICDINSTL equ 0F96h ;# ">
[; ;pic16lf1559.h: 7559: typedef union {
[; ;pic16lf1559.h: 7560: struct {
[; ;pic16lf1559.h: 7561: unsigned DBGIN0 :1;
[; ;pic16lf1559.h: 7562: unsigned DBGIN1 :1;
[; ;pic16lf1559.h: 7563: unsigned DBGIN2 :1;
[; ;pic16lf1559.h: 7564: unsigned DBGIN3 :1;
[; ;pic16lf1559.h: 7565: unsigned DBGIN4 :1;
[; ;pic16lf1559.h: 7566: unsigned DBGIN5 :1;
[; ;pic16lf1559.h: 7567: unsigned DBGIN6 :1;
[; ;pic16lf1559.h: 7568: unsigned DBGIN7 :1;
[; ;pic16lf1559.h: 7569: };
[; ;pic16lf1559.h: 7570: } ICDINSTLbits_t;
[; ;pic16lf1559.h: 7571: extern volatile ICDINSTLbits_t ICDINSTLbits @ 0xF96;
[; ;pic16lf1559.h: 7616: extern volatile unsigned char ICDINSTH @ 0xF97;
"7618
[; ;pic16lf1559.h: 7618: asm("ICDINSTH equ 0F97h");
[; <" ICDINSTH equ 0F97h ;# ">
[; ;pic16lf1559.h: 7621: typedef union {
[; ;pic16lf1559.h: 7622: struct {
[; ;pic16lf1559.h: 7623: unsigned DBGIN8 :1;
[; ;pic16lf1559.h: 7624: unsigned DBGIN9 :1;
[; ;pic16lf1559.h: 7625: unsigned DBGIN10 :1;
[; ;pic16lf1559.h: 7626: unsigned DBGIN11 :1;
[; ;pic16lf1559.h: 7627: unsigned DBGIN12 :1;
[; ;pic16lf1559.h: 7628: unsigned DBGIN13 :1;
[; ;pic16lf1559.h: 7629: };
[; ;pic16lf1559.h: 7630: } ICDINSTHbits_t;
[; ;pic16lf1559.h: 7631: extern volatile ICDINSTHbits_t ICDINSTHbits @ 0xF97;
[; ;pic16lf1559.h: 7666: extern volatile unsigned char ICDBK0CON @ 0xF9C;
"7668
[; ;pic16lf1559.h: 7668: asm("ICDBK0CON equ 0F9Ch");
[; <" ICDBK0CON equ 0F9Ch ;# ">
[; ;pic16lf1559.h: 7671: typedef union {
[; ;pic16lf1559.h: 7672: struct {
[; ;pic16lf1559.h: 7673: unsigned BKHLT :1;
[; ;pic16lf1559.h: 7674: unsigned :6;
[; ;pic16lf1559.h: 7675: unsigned BKEN :1;
[; ;pic16lf1559.h: 7676: };
[; ;pic16lf1559.h: 7677: } ICDBK0CONbits_t;
[; ;pic16lf1559.h: 7678: extern volatile ICDBK0CONbits_t ICDBK0CONbits @ 0xF9C;
[; ;pic16lf1559.h: 7693: extern volatile unsigned char ICDBK0L @ 0xF9D;
"7695
[; ;pic16lf1559.h: 7695: asm("ICDBK0L equ 0F9Dh");
[; <" ICDBK0L equ 0F9Dh ;# ">
[; ;pic16lf1559.h: 7698: typedef union {
[; ;pic16lf1559.h: 7699: struct {
[; ;pic16lf1559.h: 7700: unsigned BKA0 :1;
[; ;pic16lf1559.h: 7701: unsigned BKA1 :1;
[; ;pic16lf1559.h: 7702: unsigned BKA2 :1;
[; ;pic16lf1559.h: 7703: unsigned BKA3 :1;
[; ;pic16lf1559.h: 7704: unsigned BKA4 :1;
[; ;pic16lf1559.h: 7705: unsigned BKA5 :1;
[; ;pic16lf1559.h: 7706: unsigned BKA6 :1;
[; ;pic16lf1559.h: 7707: unsigned BKA7 :1;
[; ;pic16lf1559.h: 7708: };
[; ;pic16lf1559.h: 7709: } ICDBK0Lbits_t;
[; ;pic16lf1559.h: 7710: extern volatile ICDBK0Lbits_t ICDBK0Lbits @ 0xF9D;
[; ;pic16lf1559.h: 7755: extern volatile unsigned char ICDBK0H @ 0xF9E;
"7757
[; ;pic16lf1559.h: 7757: asm("ICDBK0H equ 0F9Eh");
[; <" ICDBK0H equ 0F9Eh ;# ">
[; ;pic16lf1559.h: 7760: typedef union {
[; ;pic16lf1559.h: 7761: struct {
[; ;pic16lf1559.h: 7762: unsigned BKA8 :1;
[; ;pic16lf1559.h: 7763: unsigned BKA9 :1;
[; ;pic16lf1559.h: 7764: unsigned BKA10 :1;
[; ;pic16lf1559.h: 7765: unsigned BKA11 :1;
[; ;pic16lf1559.h: 7766: unsigned BKA12 :1;
[; ;pic16lf1559.h: 7767: unsigned BKA13 :1;
[; ;pic16lf1559.h: 7768: unsigned BKA14 :1;
[; ;pic16lf1559.h: 7769: };
[; ;pic16lf1559.h: 7770: } ICDBK0Hbits_t;
[; ;pic16lf1559.h: 7771: extern volatile ICDBK0Hbits_t ICDBK0Hbits @ 0xF9E;
[; ;pic16lf1559.h: 7811: extern volatile unsigned char BSRICDSHAD @ 0xFE3;
"7813
[; ;pic16lf1559.h: 7813: asm("BSRICDSHAD equ 0FE3h");
[; <" BSRICDSHAD equ 0FE3h ;# ">
[; ;pic16lf1559.h: 7816: typedef union {
[; ;pic16lf1559.h: 7817: struct {
[; ;pic16lf1559.h: 7818: unsigned BSR_ICDSHAD :5;
[; ;pic16lf1559.h: 7819: };
[; ;pic16lf1559.h: 7820: } BSRICDSHADbits_t;
[; ;pic16lf1559.h: 7821: extern volatile BSRICDSHADbits_t BSRICDSHADbits @ 0xFE3;
[; ;pic16lf1559.h: 7831: extern volatile unsigned char STATUS_SHAD @ 0xFE4;
"7833
[; ;pic16lf1559.h: 7833: asm("STATUS_SHAD equ 0FE4h");
[; <" STATUS_SHAD equ 0FE4h ;# ">
[; ;pic16lf1559.h: 7836: typedef union {
[; ;pic16lf1559.h: 7837: struct {
[; ;pic16lf1559.h: 7838: unsigned C_SHAD :1;
[; ;pic16lf1559.h: 7839: unsigned DC_SHAD :1;
[; ;pic16lf1559.h: 7840: unsigned Z_SHAD :1;
[; ;pic16lf1559.h: 7841: };
[; ;pic16lf1559.h: 7842: } STATUS_SHADbits_t;
[; ;pic16lf1559.h: 7843: extern volatile STATUS_SHADbits_t STATUS_SHADbits @ 0xFE4;
[; ;pic16lf1559.h: 7863: extern volatile unsigned char WREG_SHAD @ 0xFE5;
"7865
[; ;pic16lf1559.h: 7865: asm("WREG_SHAD equ 0FE5h");
[; <" WREG_SHAD equ 0FE5h ;# ">
[; ;pic16lf1559.h: 7868: typedef union {
[; ;pic16lf1559.h: 7869: struct {
[; ;pic16lf1559.h: 7870: unsigned WREG_SHAD :8;
[; ;pic16lf1559.h: 7871: };
[; ;pic16lf1559.h: 7872: } WREG_SHADbits_t;
[; ;pic16lf1559.h: 7873: extern volatile WREG_SHADbits_t WREG_SHADbits @ 0xFE5;
[; ;pic16lf1559.h: 7883: extern volatile unsigned char BSR_SHAD @ 0xFE6;
"7885
[; ;pic16lf1559.h: 7885: asm("BSR_SHAD equ 0FE6h");
[; <" BSR_SHAD equ 0FE6h ;# ">
[; ;pic16lf1559.h: 7888: typedef union {
[; ;pic16lf1559.h: 7889: struct {
[; ;pic16lf1559.h: 7890: unsigned BSR_SHAD :5;
[; ;pic16lf1559.h: 7891: };
[; ;pic16lf1559.h: 7892: } BSR_SHADbits_t;
[; ;pic16lf1559.h: 7893: extern volatile BSR_SHADbits_t BSR_SHADbits @ 0xFE6;
[; ;pic16lf1559.h: 7903: extern volatile unsigned char PCLATH_SHAD @ 0xFE7;
"7905
[; ;pic16lf1559.h: 7905: asm("PCLATH_SHAD equ 0FE7h");
[; <" PCLATH_SHAD equ 0FE7h ;# ">
[; ;pic16lf1559.h: 7908: typedef union {
[; ;pic16lf1559.h: 7909: struct {
[; ;pic16lf1559.h: 7910: unsigned PCLATH_SHAD :7;
[; ;pic16lf1559.h: 7911: };
[; ;pic16lf1559.h: 7912: } PCLATH_SHADbits_t;
[; ;pic16lf1559.h: 7913: extern volatile PCLATH_SHADbits_t PCLATH_SHADbits @ 0xFE7;
[; ;pic16lf1559.h: 7923: extern volatile unsigned char FSR0L_SHAD @ 0xFE8;
"7925
[; ;pic16lf1559.h: 7925: asm("FSR0L_SHAD equ 0FE8h");
[; <" FSR0L_SHAD equ 0FE8h ;# ">
[; ;pic16lf1559.h: 7928: typedef union {
[; ;pic16lf1559.h: 7929: struct {
[; ;pic16lf1559.h: 7930: unsigned FSR0L_SHAD :8;
[; ;pic16lf1559.h: 7931: };
[; ;pic16lf1559.h: 7932: } FSR0L_SHADbits_t;
[; ;pic16lf1559.h: 7933: extern volatile FSR0L_SHADbits_t FSR0L_SHADbits @ 0xFE8;
[; ;pic16lf1559.h: 7943: extern volatile unsigned char FSR0H_SHAD @ 0xFE9;
"7945
[; ;pic16lf1559.h: 7945: asm("FSR0H_SHAD equ 0FE9h");
[; <" FSR0H_SHAD equ 0FE9h ;# ">
[; ;pic16lf1559.h: 7948: typedef union {
[; ;pic16lf1559.h: 7949: struct {
[; ;pic16lf1559.h: 7950: unsigned FSR0H_SHAD :8;
[; ;pic16lf1559.h: 7951: };
[; ;pic16lf1559.h: 7952: } FSR0H_SHADbits_t;
[; ;pic16lf1559.h: 7953: extern volatile FSR0H_SHADbits_t FSR0H_SHADbits @ 0xFE9;
[; ;pic16lf1559.h: 7963: extern volatile unsigned char FSR1L_SHAD @ 0xFEA;
"7965
[; ;pic16lf1559.h: 7965: asm("FSR1L_SHAD equ 0FEAh");
[; <" FSR1L_SHAD equ 0FEAh ;# ">
[; ;pic16lf1559.h: 7968: typedef union {
[; ;pic16lf1559.h: 7969: struct {
[; ;pic16lf1559.h: 7970: unsigned FSR1L_SHAD :8;
[; ;pic16lf1559.h: 7971: };
[; ;pic16lf1559.h: 7972: } FSR1L_SHADbits_t;
[; ;pic16lf1559.h: 7973: extern volatile FSR1L_SHADbits_t FSR1L_SHADbits @ 0xFEA;
[; ;pic16lf1559.h: 7983: extern volatile unsigned char FSR1H_SHAD @ 0xFEB;
"7985
[; ;pic16lf1559.h: 7985: asm("FSR1H_SHAD equ 0FEBh");
[; <" FSR1H_SHAD equ 0FEBh ;# ">
[; ;pic16lf1559.h: 7988: typedef union {
[; ;pic16lf1559.h: 7989: struct {
[; ;pic16lf1559.h: 7990: unsigned FSR1H_SHAD :8;
[; ;pic16lf1559.h: 7991: };
[; ;pic16lf1559.h: 7992: } FSR1H_SHADbits_t;
[; ;pic16lf1559.h: 7993: extern volatile FSR1H_SHADbits_t FSR1H_SHADbits @ 0xFEB;
[; ;pic16lf1559.h: 8003: extern volatile unsigned char STKPTR @ 0xFED;
"8005
[; ;pic16lf1559.h: 8005: asm("STKPTR equ 0FEDh");
[; <" STKPTR equ 0FEDh ;# ">
[; ;pic16lf1559.h: 8008: typedef union {
[; ;pic16lf1559.h: 8009: struct {
[; ;pic16lf1559.h: 8010: unsigned STKPTR :5;
[; ;pic16lf1559.h: 8011: };
[; ;pic16lf1559.h: 8012: } STKPTRbits_t;
[; ;pic16lf1559.h: 8013: extern volatile STKPTRbits_t STKPTRbits @ 0xFED;
[; ;pic16lf1559.h: 8023: extern volatile unsigned char TOSL @ 0xFEE;
"8025
[; ;pic16lf1559.h: 8025: asm("TOSL equ 0FEEh");
[; <" TOSL equ 0FEEh ;# ">
[; ;pic16lf1559.h: 8028: typedef union {
[; ;pic16lf1559.h: 8029: struct {
[; ;pic16lf1559.h: 8030: unsigned TOSL :8;
[; ;pic16lf1559.h: 8031: };
[; ;pic16lf1559.h: 8032: } TOSLbits_t;
[; ;pic16lf1559.h: 8033: extern volatile TOSLbits_t TOSLbits @ 0xFEE;
[; ;pic16lf1559.h: 8043: extern volatile unsigned char TOSH @ 0xFEF;
"8045
[; ;pic16lf1559.h: 8045: asm("TOSH equ 0FEFh");
[; <" TOSH equ 0FEFh ;# ">
[; ;pic16lf1559.h: 8048: typedef union {
[; ;pic16lf1559.h: 8049: struct {
[; ;pic16lf1559.h: 8050: unsigned TOSH :7;
[; ;pic16lf1559.h: 8051: };
[; ;pic16lf1559.h: 8052: } TOSHbits_t;
[; ;pic16lf1559.h: 8053: extern volatile TOSHbits_t TOSHbits @ 0xFEF;
[; ;pic16lf1559.h: 8068: extern volatile __bit ABDEN @ (((unsigned) &BAUDCON)*8) + 0;
[; ;pic16lf1559.h: 8070: extern volatile __bit ABDOVF @ (((unsigned) &BAUDCON)*8) + 7;
[; ;pic16lf1559.h: 8072: extern volatile __bit ACKDT @ (((unsigned) &SSP1CON2)*8) + 5;
[; ;pic16lf1559.h: 8074: extern volatile __bit ACKEN @ (((unsigned) &SSP1CON2)*8) + 4;
[; ;pic16lf1559.h: 8076: extern volatile __bit ACKSTAT @ (((unsigned) &SSP1CON2)*8) + 6;
[; ;pic16lf1559.h: 8078: extern volatile __bit ACKTIM @ (((unsigned) &SSP1CON3)*8) + 7;
[; ;pic16lf1559.h: 8080: extern volatile __bit AD1CONV @ (((unsigned) &ADSTAT)*8) + 2;
[; ;pic16lf1559.h: 8082: extern volatile __bit AD1DSEN @ (((unsigned) &AD1CON3)*8) + 0;
[; ;pic16lf1559.h: 8084: extern volatile __bit AD1EPPOL @ (((unsigned) &AD1CON3)*8) + 7;
[; ;pic16lf1559.h: 8086: extern volatile __bit AD1IE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16lf1559.h: 8088: extern volatile __bit AD1IF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16lf1559.h: 8090: extern volatile __bit AD1IPEN @ (((unsigned) &AD1CON3)*8) + 1;
[; ;pic16lf1559.h: 8092: extern volatile __bit AD1IPPOL @ (((unsigned) &AD1CON3)*8) + 6;
[; ;pic16lf1559.h: 8094: extern volatile __bit AD1ON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16lf1559.h: 8096: extern volatile __bit AD1STG0 @ (((unsigned) &ADSTAT)*8) + 0;
[; ;pic16lf1559.h: 8098: extern volatile __bit AD1STG1 @ (((unsigned) &ADSTAT)*8) + 1;
[; ;pic16lf1559.h: 8100: extern volatile __bit AD2CONV @ (((unsigned) &ADSTAT)*8) + 6;
[; ;pic16lf1559.h: 8102: extern volatile __bit AD2DSEN @ (((unsigned) &AD2CON3)*8) + 0;
[; ;pic16lf1559.h: 8104: extern volatile __bit AD2EPPOL @ (((unsigned) &AD2CON3)*8) + 7;
[; ;pic16lf1559.h: 8106: extern volatile __bit AD2IE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16lf1559.h: 8108: extern volatile __bit AD2IF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16lf1559.h: 8110: extern volatile __bit AD2IPEN @ (((unsigned) &AD2CON3)*8) + 1;
[; ;pic16lf1559.h: 8112: extern volatile __bit AD2IPPOL @ (((unsigned) &AD2CON3)*8) + 6;
[; ;pic16lf1559.h: 8114: extern volatile __bit AD2STG0 @ (((unsigned) &ADSTAT)*8) + 4;
[; ;pic16lf1559.h: 8116: extern volatile __bit AD2STG1 @ (((unsigned) &ADSTAT)*8) + 5;
[; ;pic16lf1559.h: 8118: extern volatile __bit ADCONV @ (((unsigned) &ADSTAT)*8) + 2;
[; ;pic16lf1559.h: 8120: extern volatile __bit ADCS0 @ (((unsigned) &ADCOMCON)*8) + 4;
[; ;pic16lf1559.h: 8122: extern volatile __bit ADCS1 @ (((unsigned) &ADCOMCON)*8) + 5;
[; ;pic16lf1559.h: 8124: extern volatile __bit ADCS2 @ (((unsigned) &ADCOMCON)*8) + 6;
[; ;pic16lf1559.h: 8126: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16lf1559.h: 8128: extern volatile __bit ADFVR0 @ (((unsigned) &FVRCON)*8) + 0;
[; ;pic16lf1559.h: 8130: extern volatile __bit ADFVR1 @ (((unsigned) &FVRCON)*8) + 1;
[; ;pic16lf1559.h: 8132: extern volatile __bit ADGO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16lf1559.h: 8134: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16lf1559.h: 8136: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16lf1559.h: 8138: extern volatile __bit AHEN @ (((unsigned) &SSP1CON3)*8) + 1;
[; ;pic16lf1559.h: 8140: extern volatile __bit ANSA0 @ (((unsigned) &ANSELA)*8) + 0;
[; ;pic16lf1559.h: 8142: extern volatile __bit ANSA1 @ (((unsigned) &ANSELA)*8) + 1;
[; ;pic16lf1559.h: 8144: extern volatile __bit ANSA2 @ (((unsigned) &ANSELA)*8) + 2;
[; ;pic16lf1559.h: 8146: extern volatile __bit ANSA4 @ (((unsigned) &ANSELA)*8) + 4;
[; ;pic16lf1559.h: 8148: extern volatile __bit ANSA5 @ (((unsigned) &ANSELA)*8) + 5;
[; ;pic16lf1559.h: 8150: extern volatile __bit ANSB4 @ (((unsigned) &ANSELB)*8) + 4;
[; ;pic16lf1559.h: 8152: extern volatile __bit ANSB5 @ (((unsigned) &ANSELB)*8) + 5;
[; ;pic16lf1559.h: 8154: extern volatile __bit ANSB6 @ (((unsigned) &ANSELB)*8) + 6;
[; ;pic16lf1559.h: 8156: extern volatile __bit ANSB7 @ (((unsigned) &ANSELB)*8) + 7;
[; ;pic16lf1559.h: 8158: extern volatile __bit ANSC0 @ (((unsigned) &ANSELC)*8) + 0;
[; ;pic16lf1559.h: 8160: extern volatile __bit ANSC1 @ (((unsigned) &ANSELC)*8) + 1;
[; ;pic16lf1559.h: 8162: extern volatile __bit ANSC2 @ (((unsigned) &ANSELC)*8) + 2;
[; ;pic16lf1559.h: 8164: extern volatile __bit ANSC3 @ (((unsigned) &ANSELC)*8) + 3;
[; ;pic16lf1559.h: 8166: extern volatile __bit ANSC4 @ (((unsigned) &ANSELC)*8) + 4;
[; ;pic16lf1559.h: 8168: extern volatile __bit ANSC5 @ (((unsigned) &ANSELC)*8) + 5;
[; ;pic16lf1559.h: 8170: extern volatile __bit ANSC6 @ (((unsigned) &ANSELC)*8) + 6;
[; ;pic16lf1559.h: 8172: extern volatile __bit ANSC7 @ (((unsigned) &ANSELC)*8) + 7;
[; ;pic16lf1559.h: 8174: extern volatile __bit BCL1IE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16lf1559.h: 8176: extern volatile __bit BCL1IF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16lf1559.h: 8178: extern volatile __bit BF @ (((unsigned) &SSP1STAT)*8) + 0;
[; ;pic16lf1559.h: 8180: extern volatile __bit BKA0 @ (((unsigned) &ICDBK0L)*8) + 0;
[; ;pic16lf1559.h: 8182: extern volatile __bit BKA1 @ (((unsigned) &ICDBK0L)*8) + 1;
[; ;pic16lf1559.h: 8184: extern volatile __bit BKA10 @ (((unsigned) &ICDBK0H)*8) + 2;
[; ;pic16lf1559.h: 8186: extern volatile __bit BKA11 @ (((unsigned) &ICDBK0H)*8) + 3;
[; ;pic16lf1559.h: 8188: extern volatile __bit BKA12 @ (((unsigned) &ICDBK0H)*8) + 4;
[; ;pic16lf1559.h: 8190: extern volatile __bit BKA13 @ (((unsigned) &ICDBK0H)*8) + 5;
[; ;pic16lf1559.h: 8192: extern volatile __bit BKA14 @ (((unsigned) &ICDBK0H)*8) + 6;
[; ;pic16lf1559.h: 8194: extern volatile __bit BKA2 @ (((unsigned) &ICDBK0L)*8) + 2;
[; ;pic16lf1559.h: 8196: extern volatile __bit BKA3 @ (((unsigned) &ICDBK0L)*8) + 3;
[; ;pic16lf1559.h: 8198: extern volatile __bit BKA4 @ (((unsigned) &ICDBK0L)*8) + 4;
[; ;pic16lf1559.h: 8200: extern volatile __bit BKA5 @ (((unsigned) &ICDBK0L)*8) + 5;
[; ;pic16lf1559.h: 8202: extern volatile __bit BKA6 @ (((unsigned) &ICDBK0L)*8) + 6;
[; ;pic16lf1559.h: 8204: extern volatile __bit BKA7 @ (((unsigned) &ICDBK0L)*8) + 7;
[; ;pic16lf1559.h: 8206: extern volatile __bit BKA8 @ (((unsigned) &ICDBK0H)*8) + 0;
[; ;pic16lf1559.h: 8208: extern volatile __bit BKA9 @ (((unsigned) &ICDBK0H)*8) + 1;
[; ;pic16lf1559.h: 8210: extern volatile __bit BKEN @ (((unsigned) &ICDBK0CON)*8) + 7;
[; ;pic16lf1559.h: 8212: extern volatile __bit BKHLT @ (((unsigned) &ICDBK0CON)*8) + 0;
[; ;pic16lf1559.h: 8214: extern volatile __bit BOEN @ (((unsigned) &SSP1CON3)*8) + 4;
[; ;pic16lf1559.h: 8216: extern volatile __bit BORFS @ (((unsigned) &BORCON)*8) + 6;
[; ;pic16lf1559.h: 8218: extern volatile __bit BORRDY @ (((unsigned) &BORCON)*8) + 0;
[; ;pic16lf1559.h: 8220: extern volatile __bit BRG16 @ (((unsigned) &BAUDCON)*8) + 3;
[; ;pic16lf1559.h: 8222: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16lf1559.h: 8224: extern volatile __bit BSR0 @ (((unsigned) &BSR)*8) + 0;
[; ;pic16lf1559.h: 8226: extern volatile __bit BSR1 @ (((unsigned) &BSR)*8) + 1;
[; ;pic16lf1559.h: 8228: extern volatile __bit BSR2 @ (((unsigned) &BSR)*8) + 2;
[; ;pic16lf1559.h: 8230: extern volatile __bit BSR3 @ (((unsigned) &BSR)*8) + 3;
[; ;pic16lf1559.h: 8232: extern volatile __bit BSR4 @ (((unsigned) &BSR)*8) + 4;
[; ;pic16lf1559.h: 8234: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16lf1559.h: 8236: extern volatile __bit CDAFVR0 @ (((unsigned) &FVRCON)*8) + 2;
[; ;pic16lf1559.h: 8238: extern volatile __bit CDAFVR1 @ (((unsigned) &FVRCON)*8) + 3;
[; ;pic16lf1559.h: 8240: extern volatile __bit CFGS @ (((unsigned) &PMCON1)*8) + 6;
[; ;pic16lf1559.h: 8242: extern volatile __bit CH10 @ (((unsigned) &AD1CH)*8) + 0;
[; ;pic16lf1559.h: 8244: extern volatile __bit CH11 @ (((unsigned) &AD1CH)*8) + 1;
[; ;pic16lf1559.h: 8246: extern volatile __bit CH12 @ (((unsigned) &AD1CH)*8) + 2;
[; ;pic16lf1559.h: 8248: extern volatile __bit CH13 @ (((unsigned) &AD1CH)*8) + 3;
[; ;pic16lf1559.h: 8250: extern volatile __bit CH14 @ (((unsigned) &AD1CH)*8) + 4;
[; ;pic16lf1559.h: 8252: extern volatile __bit CH15 @ (((unsigned) &AD1CH)*8) + 5;
[; ;pic16lf1559.h: 8254: extern volatile __bit CH16 @ (((unsigned) &AD1CH)*8) + 6;
[; ;pic16lf1559.h: 8256: extern volatile __bit CH20 @ (((unsigned) &AD2CH)*8) + 0;
[; ;pic16lf1559.h: 8258: extern volatile __bit CH21 @ (((unsigned) &AD2CH)*8) + 1;
[; ;pic16lf1559.h: 8260: extern volatile __bit CH22 @ (((unsigned) &AD2CH)*8) + 2;
[; ;pic16lf1559.h: 8262: extern volatile __bit CH23 @ (((unsigned) &AD2CH)*8) + 3;
[; ;pic16lf1559.h: 8264: extern volatile __bit CH24 @ (((unsigned) &AD2CH)*8) + 4;
[; ;pic16lf1559.h: 8266: extern volatile __bit CH25 @ (((unsigned) &AD2CH)*8) + 5;
[; ;pic16lf1559.h: 8268: extern volatile __bit CH26 @ (((unsigned) &AD2CH)*8) + 6;
[; ;pic16lf1559.h: 8270: extern volatile __bit CKE @ (((unsigned) &SSP1STAT)*8) + 6;
[; ;pic16lf1559.h: 8272: extern volatile __bit CKP @ (((unsigned) &SSP1CON1)*8) + 4;
[; ;pic16lf1559.h: 8274: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16lf1559.h: 8276: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16lf1559.h: 8278: extern volatile __bit C_SHAD @ (((unsigned) &STATUS_SHAD)*8) + 0;
[; ;pic16lf1559.h: 8280: extern volatile __bit DBGIN0 @ (((unsigned) &ICDINSTL)*8) + 0;
[; ;pic16lf1559.h: 8282: extern volatile __bit DBGIN1 @ (((unsigned) &ICDINSTL)*8) + 1;
[; ;pic16lf1559.h: 8284: extern volatile __bit DBGIN10 @ (((unsigned) &ICDINSTH)*8) + 2;
[; ;pic16lf1559.h: 8286: extern volatile __bit DBGIN11 @ (((unsigned) &ICDINSTH)*8) + 3;
[; ;pic16lf1559.h: 8288: extern volatile __bit DBGIN12 @ (((unsigned) &ICDINSTH)*8) + 4;
[; ;pic16lf1559.h: 8290: extern volatile __bit DBGIN13 @ (((unsigned) &ICDINSTH)*8) + 5;
[; ;pic16lf1559.h: 8292: extern volatile __bit DBGIN2 @ (((unsigned) &ICDINSTL)*8) + 2;
[; ;pic16lf1559.h: 8294: extern volatile __bit DBGIN3 @ (((unsigned) &ICDINSTL)*8) + 3;
[; ;pic16lf1559.h: 8296: extern volatile __bit DBGIN4 @ (((unsigned) &ICDINSTL)*8) + 4;
[; ;pic16lf1559.h: 8298: extern volatile __bit DBGIN5 @ (((unsigned) &ICDINSTL)*8) + 5;
[; ;pic16lf1559.h: 8300: extern volatile __bit DBGIN6 @ (((unsigned) &ICDINSTL)*8) + 6;
[; ;pic16lf1559.h: 8302: extern volatile __bit DBGIN7 @ (((unsigned) &ICDINSTL)*8) + 7;
[; ;pic16lf1559.h: 8304: extern volatile __bit DBGIN8 @ (((unsigned) &ICDINSTH)*8) + 0;
[; ;pic16lf1559.h: 8306: extern volatile __bit DBGIN9 @ (((unsigned) &ICDINSTH)*8) + 1;
[; ;pic16lf1559.h: 8308: extern volatile __bit DBGINEX @ (((unsigned) &ICDCON0)*8) + 3;
[; ;pic16lf1559.h: 8310: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16lf1559.h: 8312: extern volatile __bit DC_SHAD @ (((unsigned) &STATUS_SHAD)*8) + 1;
[; ;pic16lf1559.h: 8314: extern volatile __bit DHEN @ (((unsigned) &SSP1CON3)*8) + 0;
[; ;pic16lf1559.h: 8316: extern volatile __bit D_nA @ (((unsigned) &SSP1STAT)*8) + 5;
[; ;pic16lf1559.h: 8318: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16lf1559.h: 8320: extern volatile __bit FREE @ (((unsigned) &PMCON1)*8) + 4;
[; ;pic16lf1559.h: 8322: extern volatile __bit FREEZ @ (((unsigned) &ICDCON0)*8) + 6;
[; ;pic16lf1559.h: 8324: extern volatile __bit FVREN @ (((unsigned) &FVRCON)*8) + 7;
[; ;pic16lf1559.h: 8326: extern volatile __bit FVRRDY @ (((unsigned) &FVRCON)*8) + 6;
[; ;pic16lf1559.h: 8328: extern volatile __bit GCEN @ (((unsigned) &SSP1CON2)*8) + 7;
[; ;pic16lf1559.h: 8330: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16lf1559.h: 8332: extern volatile __bit GO_nDONE1 @ (((unsigned) &AD1CON0)*8) + 1;
[; ;pic16lf1559.h: 8334: extern volatile __bit GO_nDONE2 @ (((unsigned) &AD2CON0)*8) + 1;
[; ;pic16lf1559.h: 8336: extern volatile __bit GRD1AOE @ (((unsigned) &AD1GRD)*8) + 6;
[; ;pic16lf1559.h: 8338: extern volatile __bit GRD1BOE @ (((unsigned) &AD1GRD)*8) + 7;
[; ;pic16lf1559.h: 8340: extern volatile __bit GRD1POL @ (((unsigned) &AD1GRD)*8) + 5;
[; ;pic16lf1559.h: 8342: extern volatile __bit GRD2AOE @ (((unsigned) &AD2GRD)*8) + 6;
[; ;pic16lf1559.h: 8344: extern volatile __bit GRD2BOE @ (((unsigned) &AD2GRD)*8) + 7;
[; ;pic16lf1559.h: 8346: extern volatile __bit GRD2POL @ (((unsigned) &AD2GRD)*8) + 5;
[; ;pic16lf1559.h: 8348: extern volatile __bit GRDASEL @ (((unsigned) &APFCON)*8) + 0;
[; ;pic16lf1559.h: 8350: extern volatile __bit GRDBSEL @ (((unsigned) &APFCON)*8) + 1;
[; ;pic16lf1559.h: 8352: extern volatile __bit HFIOFR @ (((unsigned) &OSCSTAT)*8) + 4;
[; ;pic16lf1559.h: 8354: extern volatile __bit HFIOFS @ (((unsigned) &OSCSTAT)*8) + 0;
[; ;pic16lf1559.h: 8356: extern volatile __bit INBUG @ (((unsigned) &ICDCON0)*8) + 7;
[; ;pic16lf1559.h: 8358: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16lf1559.h: 8360: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16lf1559.h: 8362: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16lf1559.h: 8364: extern volatile __bit IOCAF0 @ (((unsigned) &IOCAF)*8) + 0;
[; ;pic16lf1559.h: 8366: extern volatile __bit IOCAF1 @ (((unsigned) &IOCAF)*8) + 1;
[; ;pic16lf1559.h: 8368: extern volatile __bit IOCAF2 @ (((unsigned) &IOCAF)*8) + 2;
[; ;pic16lf1559.h: 8370: extern volatile __bit IOCAF3 @ (((unsigned) &IOCAF)*8) + 3;
[; ;pic16lf1559.h: 8372: extern volatile __bit IOCAF4 @ (((unsigned) &IOCAF)*8) + 4;
[; ;pic16lf1559.h: 8374: extern volatile __bit IOCAF5 @ (((unsigned) &IOCAF)*8) + 5;
[; ;pic16lf1559.h: 8376: extern volatile __bit IOCAN0 @ (((unsigned) &IOCAN)*8) + 0;
[; ;pic16lf1559.h: 8378: extern volatile __bit IOCAN1 @ (((unsigned) &IOCAN)*8) + 1;
[; ;pic16lf1559.h: 8380: extern volatile __bit IOCAN2 @ (((unsigned) &IOCAN)*8) + 2;
[; ;pic16lf1559.h: 8382: extern volatile __bit IOCAN3 @ (((unsigned) &IOCAN)*8) + 3;
[; ;pic16lf1559.h: 8384: extern volatile __bit IOCAN4 @ (((unsigned) &IOCAN)*8) + 4;
[; ;pic16lf1559.h: 8386: extern volatile __bit IOCAN5 @ (((unsigned) &IOCAN)*8) + 5;
[; ;pic16lf1559.h: 8388: extern volatile __bit IOCAP0 @ (((unsigned) &IOCAP)*8) + 0;
[; ;pic16lf1559.h: 8390: extern volatile __bit IOCAP1 @ (((unsigned) &IOCAP)*8) + 1;
[; ;pic16lf1559.h: 8392: extern volatile __bit IOCAP2 @ (((unsigned) &IOCAP)*8) + 2;
[; ;pic16lf1559.h: 8394: extern volatile __bit IOCAP3 @ (((unsigned) &IOCAP)*8) + 3;
[; ;pic16lf1559.h: 8396: extern volatile __bit IOCAP4 @ (((unsigned) &IOCAP)*8) + 4;
[; ;pic16lf1559.h: 8398: extern volatile __bit IOCAP5 @ (((unsigned) &IOCAP)*8) + 5;
[; ;pic16lf1559.h: 8400: extern volatile __bit IOCBF4 @ (((unsigned) &IOCBF)*8) + 4;
[; ;pic16lf1559.h: 8402: extern volatile __bit IOCBF5 @ (((unsigned) &IOCBF)*8) + 5;
[; ;pic16lf1559.h: 8404: extern volatile __bit IOCBF6 @ (((unsigned) &IOCBF)*8) + 6;
[; ;pic16lf1559.h: 8406: extern volatile __bit IOCBF7 @ (((unsigned) &IOCBF)*8) + 7;
[; ;pic16lf1559.h: 8408: extern volatile __bit IOCBN4 @ (((unsigned) &IOCBN)*8) + 4;
[; ;pic16lf1559.h: 8410: extern volatile __bit IOCBN5 @ (((unsigned) &IOCBN)*8) + 5;
[; ;pic16lf1559.h: 8412: extern volatile __bit IOCBN6 @ (((unsigned) &IOCBN)*8) + 6;
[; ;pic16lf1559.h: 8414: extern volatile __bit IOCBN7 @ (((unsigned) &IOCBN)*8) + 7;
[; ;pic16lf1559.h: 8416: extern volatile __bit IOCBP4 @ (((unsigned) &IOCBP)*8) + 4;
[; ;pic16lf1559.h: 8418: extern volatile __bit IOCBP5 @ (((unsigned) &IOCBP)*8) + 5;
[; ;pic16lf1559.h: 8420: extern volatile __bit IOCBP6 @ (((unsigned) &IOCBP)*8) + 6;
[; ;pic16lf1559.h: 8422: extern volatile __bit IOCBP7 @ (((unsigned) &IOCBP)*8) + 7;
[; ;pic16lf1559.h: 8424: extern volatile __bit IOCIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16lf1559.h: 8426: extern volatile __bit IOCIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16lf1559.h: 8428: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic16lf1559.h: 8430: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic16lf1559.h: 8432: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic16lf1559.h: 8434: extern volatile __bit IRCF3 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic16lf1559.h: 8436: extern volatile __bit LATA0 @ (((unsigned) &LATA)*8) + 0;
[; ;pic16lf1559.h: 8438: extern volatile __bit LATA1 @ (((unsigned) &LATA)*8) + 1;
[; ;pic16lf1559.h: 8440: extern volatile __bit LATA2 @ (((unsigned) &LATA)*8) + 2;
[; ;pic16lf1559.h: 8442: extern volatile __bit LATA4 @ (((unsigned) &LATA)*8) + 4;
[; ;pic16lf1559.h: 8444: extern volatile __bit LATA5 @ (((unsigned) &LATA)*8) + 5;
[; ;pic16lf1559.h: 8446: extern volatile __bit LATB4 @ (((unsigned) &LATB)*8) + 4;
[; ;pic16lf1559.h: 8448: extern volatile __bit LATB5 @ (((unsigned) &LATB)*8) + 5;
[; ;pic16lf1559.h: 8450: extern volatile __bit LATB6 @ (((unsigned) &LATB)*8) + 6;
[; ;pic16lf1559.h: 8452: extern volatile __bit LATB7 @ (((unsigned) &LATB)*8) + 7;
[; ;pic16lf1559.h: 8454: extern volatile __bit LATC0 @ (((unsigned) &LATC)*8) + 0;
[; ;pic16lf1559.h: 8456: extern volatile __bit LATC1 @ (((unsigned) &LATC)*8) + 1;
[; ;pic16lf1559.h: 8458: extern volatile __bit LATC2 @ (((unsigned) &LATC)*8) + 2;
[; ;pic16lf1559.h: 8460: extern volatile __bit LATC3 @ (((unsigned) &LATC)*8) + 3;
[; ;pic16lf1559.h: 8462: extern volatile __bit LATC4 @ (((unsigned) &LATC)*8) + 4;
[; ;pic16lf1559.h: 8464: extern volatile __bit LATC5 @ (((unsigned) &LATC)*8) + 5;
[; ;pic16lf1559.h: 8466: extern volatile __bit LATC6 @ (((unsigned) &LATC)*8) + 6;
[; ;pic16lf1559.h: 8468: extern volatile __bit LATC7 @ (((unsigned) &LATC)*8) + 7;
[; ;pic16lf1559.h: 8470: extern volatile __bit LAT_ICDCLK @ (((unsigned) &ICDIO)*8) + 4;
[; ;pic16lf1559.h: 8472: extern volatile __bit LAT_ICDDAT @ (((unsigned) &ICDIO)*8) + 5;
[; ;pic16lf1559.h: 8474: extern volatile __bit LFIOFR @ (((unsigned) &OSCSTAT)*8) + 1;
[; ;pic16lf1559.h: 8476: extern volatile __bit LWLO @ (((unsigned) &PMCON1)*8) + 5;
[; ;pic16lf1559.h: 8478: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16lf1559.h: 8480: extern volatile __bit PCIE @ (((unsigned) &SSP1CON3)*8) + 6;
[; ;pic16lf1559.h: 8482: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16lf1559.h: 8484: extern volatile __bit PEN @ (((unsigned) &SSP1CON2)*8) + 2;
[; ;pic16lf1559.h: 8486: extern volatile __bit PLLSR @ (((unsigned) &OSCSTAT)*8) + 6;
[; ;pic16lf1559.h: 8488: extern volatile __bit PORT_ICDCLK @ (((unsigned) &ICDIO)*8) + 6;
[; ;pic16lf1559.h: 8490: extern volatile __bit PORT_ICDDAT @ (((unsigned) &ICDIO)*8) + 7;
[; ;pic16lf1559.h: 8492: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16lf1559.h: 8494: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16lf1559.h: 8496: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16lf1559.h: 8498: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16lf1559.h: 8500: extern volatile __bit PWM1DCH0 @ (((unsigned) &PWM1DCH)*8) + 0;
[; ;pic16lf1559.h: 8502: extern volatile __bit PWM1DCH1 @ (((unsigned) &PWM1DCH)*8) + 1;
[; ;pic16lf1559.h: 8504: extern volatile __bit PWM1DCH2 @ (((unsigned) &PWM1DCH)*8) + 2;
[; ;pic16lf1559.h: 8506: extern volatile __bit PWM1DCH3 @ (((unsigned) &PWM1DCH)*8) + 3;
[; ;pic16lf1559.h: 8508: extern volatile __bit PWM1DCH4 @ (((unsigned) &PWM1DCH)*8) + 4;
[; ;pic16lf1559.h: 8510: extern volatile __bit PWM1DCH5 @ (((unsigned) &PWM1DCH)*8) + 5;
[; ;pic16lf1559.h: 8512: extern volatile __bit PWM1DCH6 @ (((unsigned) &PWM1DCH)*8) + 6;
[; ;pic16lf1559.h: 8514: extern volatile __bit PWM1DCH7 @ (((unsigned) &PWM1DCH)*8) + 7;
[; ;pic16lf1559.h: 8516: extern volatile __bit PWM1DCL0 @ (((unsigned) &PWM1DCL)*8) + 6;
[; ;pic16lf1559.h: 8518: extern volatile __bit PWM1DCL1 @ (((unsigned) &PWM1DCL)*8) + 7;
[; ;pic16lf1559.h: 8520: extern volatile __bit PWM1EN @ (((unsigned) &PWM1CON)*8) + 7;
[; ;pic16lf1559.h: 8522: extern volatile __bit PWM1OE @ (((unsigned) &PWM1CON)*8) + 6;
[; ;pic16lf1559.h: 8524: extern volatile __bit PWM1OUT @ (((unsigned) &PWM1CON)*8) + 5;
[; ;pic16lf1559.h: 8526: extern volatile __bit PWM1POL @ (((unsigned) &PWM1CON)*8) + 4;
[; ;pic16lf1559.h: 8528: extern volatile __bit PWM2DCH0 @ (((unsigned) &PWM2DCH)*8) + 0;
[; ;pic16lf1559.h: 8530: extern volatile __bit PWM2DCH1 @ (((unsigned) &PWM2DCH)*8) + 1;
[; ;pic16lf1559.h: 8532: extern volatile __bit PWM2DCH2 @ (((unsigned) &PWM2DCH)*8) + 2;
[; ;pic16lf1559.h: 8534: extern volatile __bit PWM2DCH3 @ (((unsigned) &PWM2DCH)*8) + 3;
[; ;pic16lf1559.h: 8536: extern volatile __bit PWM2DCH4 @ (((unsigned) &PWM2DCH)*8) + 4;
[; ;pic16lf1559.h: 8538: extern volatile __bit PWM2DCH5 @ (((unsigned) &PWM2DCH)*8) + 5;
[; ;pic16lf1559.h: 8540: extern volatile __bit PWM2DCH6 @ (((unsigned) &PWM2DCH)*8) + 6;
[; ;pic16lf1559.h: 8542: extern volatile __bit PWM2DCH7 @ (((unsigned) &PWM2DCH)*8) + 7;
[; ;pic16lf1559.h: 8544: extern volatile __bit PWM2DCL0 @ (((unsigned) &PWM2DCL)*8) + 6;
[; ;pic16lf1559.h: 8546: extern volatile __bit PWM2DCL1 @ (((unsigned) &PWM2DCL)*8) + 7;
[; ;pic16lf1559.h: 8548: extern volatile __bit PWM2EN @ (((unsigned) &PWM2CON)*8) + 7;
[; ;pic16lf1559.h: 8550: extern volatile __bit PWM2OE @ (((unsigned) &PWM2CON)*8) + 6;
[; ;pic16lf1559.h: 8552: extern volatile __bit PWM2OUT @ (((unsigned) &PWM2CON)*8) + 5;
[; ;pic16lf1559.h: 8554: extern volatile __bit PWM2POL @ (((unsigned) &PWM2CON)*8) + 4;
[; ;pic16lf1559.h: 8556: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16lf1559.h: 8558: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16lf1559.h: 8560: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16lf1559.h: 8562: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16lf1559.h: 8564: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16lf1559.h: 8566: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16lf1559.h: 8568: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16lf1559.h: 8570: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16lf1559.h: 8572: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16lf1559.h: 8574: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16lf1559.h: 8576: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16lf1559.h: 8578: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16lf1559.h: 8580: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16lf1559.h: 8582: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16lf1559.h: 8584: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16lf1559.h: 8586: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16lf1559.h: 8588: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16lf1559.h: 8590: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16lf1559.h: 8592: extern volatile __bit RCEN @ (((unsigned) &SSP1CON2)*8) + 3;
[; ;pic16lf1559.h: 8594: extern volatile __bit RCIDL @ (((unsigned) &BAUDCON)*8) + 6;
[; ;pic16lf1559.h: 8596: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16lf1559.h: 8598: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16lf1559.h: 8600: extern volatile __bit RD @ (((unsigned) &PMCON1)*8) + 0;
[; ;pic16lf1559.h: 8602: extern volatile __bit RSEN @ (((unsigned) &SSP1CON2)*8) + 1;
[; ;pic16lf1559.h: 8604: extern volatile __bit RSTVEC @ (((unsigned) &ICDCON0)*8) + 0;
[; ;pic16lf1559.h: 8606: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16lf1559.h: 8608: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16lf1559.h: 8610: extern volatile __bit R_nW @ (((unsigned) &SSP1STAT)*8) + 2;
[; ;pic16lf1559.h: 8612: extern volatile __bit SBCDE @ (((unsigned) &SSP1CON3)*8) + 2;
[; ;pic16lf1559.h: 8614: extern volatile __bit SBOREN @ (((unsigned) &BORCON)*8) + 7;
[; ;pic16lf1559.h: 8616: extern volatile __bit SCIE @ (((unsigned) &SSP1CON3)*8) + 5;
[; ;pic16lf1559.h: 8618: extern volatile __bit SCKP @ (((unsigned) &BAUDCON)*8) + 4;
[; ;pic16lf1559.h: 8620: extern volatile __bit SCS0 @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic16lf1559.h: 8622: extern volatile __bit SCS1 @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic16lf1559.h: 8624: extern volatile __bit SDAHT @ (((unsigned) &SSP1CON3)*8) + 3;
[; ;pic16lf1559.h: 8626: extern volatile __bit SDSEL @ (((unsigned) &APFCON)*8) + 4;
[; ;pic16lf1559.h: 8628: extern volatile __bit SEN @ (((unsigned) &SSP1CON2)*8) + 0;
[; ;pic16lf1559.h: 8630: extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;
[; ;pic16lf1559.h: 8632: extern volatile __bit SMP @ (((unsigned) &SSP1STAT)*8) + 7;
[; ;pic16lf1559.h: 8634: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16lf1559.h: 8636: extern volatile __bit SPLLEN @ (((unsigned) &OSCCON)*8) + 7;
[; ;pic16lf1559.h: 8638: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16lf1559.h: 8640: extern volatile __bit SSP1IE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16lf1559.h: 8642: extern volatile __bit SSP1IF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16lf1559.h: 8644: extern volatile __bit SSPEN @ (((unsigned) &SSP1CON1)*8) + 5;
[; ;pic16lf1559.h: 8646: extern volatile __bit SSPM0 @ (((unsigned) &SSP1CON1)*8) + 0;
[; ;pic16lf1559.h: 8648: extern volatile __bit SSPM1 @ (((unsigned) &SSP1CON1)*8) + 1;
[; ;pic16lf1559.h: 8650: extern volatile __bit SSPM2 @ (((unsigned) &SSP1CON1)*8) + 2;
[; ;pic16lf1559.h: 8652: extern volatile __bit SSPM3 @ (((unsigned) &SSP1CON1)*8) + 3;
[; ;pic16lf1559.h: 8654: extern volatile __bit SSPOV @ (((unsigned) &SSP1CON1)*8) + 6;
[; ;pic16lf1559.h: 8656: extern volatile __bit SSSEL @ (((unsigned) &APFCON)*8) + 5;
[; ;pic16lf1559.h: 8658: extern volatile __bit SSTEP @ (((unsigned) &ICDCON0)*8) + 5;
[; ;pic16lf1559.h: 8660: extern volatile __bit STKOVF @ (((unsigned) &PCON)*8) + 7;
[; ;pic16lf1559.h: 8662: extern volatile __bit STKUNF @ (((unsigned) &PCON)*8) + 6;
[; ;pic16lf1559.h: 8664: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic16lf1559.h: 8666: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16lf1559.h: 8668: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16lf1559.h: 8670: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16lf1559.h: 8672: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16lf1559.h: 8674: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16lf1559.h: 8676: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16lf1559.h: 8678: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16lf1559.h: 8680: extern volatile __bit T1GGO_nDONE @ (((unsigned) &T1GCON)*8) + 3;
[; ;pic16lf1559.h: 8682: extern volatile __bit T1GPOL @ (((unsigned) &T1GCON)*8) + 6;
[; ;pic16lf1559.h: 8684: extern volatile __bit T1GSPM @ (((unsigned) &T1GCON)*8) + 4;
[; ;pic16lf1559.h: 8686: extern volatile __bit T1GSS0 @ (((unsigned) &T1GCON)*8) + 0;
[; ;pic16lf1559.h: 8688: extern volatile __bit T1GSS1 @ (((unsigned) &T1GCON)*8) + 1;
[; ;pic16lf1559.h: 8690: extern volatile __bit T1GTM @ (((unsigned) &T1GCON)*8) + 5;
[; ;pic16lf1559.h: 8692: extern volatile __bit T1GVAL @ (((unsigned) &T1GCON)*8) + 2;
[; ;pic16lf1559.h: 8694: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16lf1559.h: 8696: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16lf1559.h: 8698: extern volatile __bit T2OUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16lf1559.h: 8700: extern volatile __bit T2OUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16lf1559.h: 8702: extern volatile __bit T2OUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16lf1559.h: 8704: extern volatile __bit T2OUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16lf1559.h: 8706: extern volatile __bit TMR0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16lf1559.h: 8708: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16lf1559.h: 8710: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16lf1559.h: 8712: extern volatile __bit TMR0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16lf1559.h: 8714: extern volatile __bit TMR1CS0 @ (((unsigned) &T1CON)*8) + 6;
[; ;pic16lf1559.h: 8716: extern volatile __bit TMR1CS1 @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16lf1559.h: 8718: extern volatile __bit TMR1GE @ (((unsigned) &T1GCON)*8) + 7;
[; ;pic16lf1559.h: 8720: extern volatile __bit TMR1GIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16lf1559.h: 8722: extern volatile __bit TMR1GIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16lf1559.h: 8724: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16lf1559.h: 8726: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16lf1559.h: 8728: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16lf1559.h: 8730: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16lf1559.h: 8732: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16lf1559.h: 8734: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16lf1559.h: 8736: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16lf1559.h: 8738: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16lf1559.h: 8740: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16lf1559.h: 8742: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16lf1559.h: 8744: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16lf1559.h: 8746: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16lf1559.h: 8748: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16lf1559.h: 8750: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16lf1559.h: 8752: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16lf1559.h: 8754: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16lf1559.h: 8756: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16lf1559.h: 8758: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16lf1559.h: 8760: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16lf1559.h: 8762: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16lf1559.h: 8764: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16lf1559.h: 8766: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16lf1559.h: 8768: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16lf1559.h: 8770: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16lf1559.h: 8772: extern volatile __bit TRIS_ICDCLK @ (((unsigned) &ICDIO)*8) + 2;
[; ;pic16lf1559.h: 8774: extern volatile __bit TRIS_ICDDAT @ (((unsigned) &ICDIO)*8) + 3;
[; ;pic16lf1559.h: 8776: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16lf1559.h: 8778: extern volatile __bit TRP0HLTF @ (((unsigned) &ICDSTAT)*8) + 6;
[; ;pic16lf1559.h: 8780: extern volatile __bit TRP1HLTF @ (((unsigned) &ICDSTAT)*8) + 7;
[; ;pic16lf1559.h: 8782: extern volatile __bit TSEN @ (((unsigned) &FVRCON)*8) + 5;
[; ;pic16lf1559.h: 8784: extern volatile __bit TSRNG @ (((unsigned) &FVRCON)*8) + 4;
[; ;pic16lf1559.h: 8786: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16lf1559.h: 8788: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16lf1559.h: 8790: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16lf1559.h: 8792: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16lf1559.h: 8794: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16lf1559.h: 8796: extern volatile __bit UA @ (((unsigned) &SSP1STAT)*8) + 1;
[; ;pic16lf1559.h: 8798: extern volatile __bit USRHLTF @ (((unsigned) &ICDSTAT)*8) + 1;
[; ;pic16lf1559.h: 8800: extern volatile __bit WCOL @ (((unsigned) &SSP1CON1)*8) + 7;
[; ;pic16lf1559.h: 8802: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;pic16lf1559.h: 8804: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;pic16lf1559.h: 8806: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;pic16lf1559.h: 8808: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;pic16lf1559.h: 8810: extern volatile __bit WDTPS4 @ (((unsigned) &WDTCON)*8) + 5;
[; ;pic16lf1559.h: 8812: extern volatile __bit WPUA0 @ (((unsigned) &WPUA)*8) + 0;
[; ;pic16lf1559.h: 8814: extern volatile __bit WPUA1 @ (((unsigned) &WPUA)*8) + 1;
[; ;pic16lf1559.h: 8816: extern volatile __bit WPUA2 @ (((unsigned) &WPUA)*8) + 2;
[; ;pic16lf1559.h: 8818: extern volatile __bit WPUA3 @ (((unsigned) &WPUA)*8) + 3;
[; ;pic16lf1559.h: 8820: extern volatile __bit WPUA4 @ (((unsigned) &WPUA)*8) + 4;
[; ;pic16lf1559.h: 8822: extern volatile __bit WPUA5 @ (((unsigned) &WPUA)*8) + 5;
[; ;pic16lf1559.h: 8824: extern volatile __bit WPUB4 @ (((unsigned) &WPUB)*8) + 4;
[; ;pic16lf1559.h: 8826: extern volatile __bit WPUB5 @ (((unsigned) &WPUB)*8) + 5;
[; ;pic16lf1559.h: 8828: extern volatile __bit WPUB6 @ (((unsigned) &WPUB)*8) + 6;
[; ;pic16lf1559.h: 8830: extern volatile __bit WPUB7 @ (((unsigned) &WPUB)*8) + 7;
[; ;pic16lf1559.h: 8832: extern volatile __bit WR @ (((unsigned) &PMCON1)*8) + 1;
[; ;pic16lf1559.h: 8834: extern volatile __bit WREN @ (((unsigned) &PMCON1)*8) + 2;
[; ;pic16lf1559.h: 8836: extern volatile __bit WRERR @ (((unsigned) &PMCON1)*8) + 3;
[; ;pic16lf1559.h: 8838: extern volatile __bit WUE @ (((unsigned) &BAUDCON)*8) + 1;
[; ;pic16lf1559.h: 8840: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16lf1559.h: 8842: extern volatile __bit Z_SHAD @ (((unsigned) &STATUS_SHAD)*8) + 2;
[; ;pic16lf1559.h: 8844: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16lf1559.h: 8846: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16lf1559.h: 8848: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16lf1559.h: 8850: extern volatile __bit nRI @ (((unsigned) &PCON)*8) + 2;
[; ;pic16lf1559.h: 8852: extern volatile __bit nRMCLR @ (((unsigned) &PCON)*8) + 3;
[; ;pic16lf1559.h: 8854: extern volatile __bit nRWDT @ (((unsigned) &PCON)*8) + 4;
[; ;pic16lf1559.h: 8856: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16lf1559.h: 8858: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16lf1559.h: 8860: extern volatile __bit nWPUEN @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 77: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 152: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 154: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 157: extern __nonreentrant void _delay3(unsigned char);
[; ;pic.h: 192: extern unsigned char __resetbits;
[; ;pic.h: 193: extern __bit __powerdown;
[; ;pic.h: 194: extern __bit __timeout;
[; ;pin_manager.h: 96: void PIN_MANAGER_Initialize (void);
[; ;pin_manager.h: 108: void PIN_MANAGER_IOC(void);
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
[; ;stdbool.h: 12: typedef unsigned char bool;
[; ;interrupt_manager.h: 110: void interrupt INTERRUPT_InterruptManager(void);
[; ;tmr2.h: 102: void TMR2_Initialize(void);
[; ;tmr2.h: 131: void TMR2_StartTimer(void);
[; ;tmr2.h: 163: void TMR2_StopTimer(void);
[; ;tmr2.h: 198: uint8_t TMR2_ReadTimer(void);
[; ;tmr2.h: 237: void TMR2_WriteTimer(uint8_t timerVal);
[; ;tmr2.h: 289: void TMR2_LoadPeriodRegister(uint8_t periodVal);
[; ;tmr2.h: 324: bool TMR2_HasOverflowOccured(void);
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;eusart.h: 79: extern volatile uint8_t eusartTxBufferRemaining;
[; ;eusart.h: 80: extern volatile uint8_t eusartRxCount;
[; ;eusart.h: 108: void EUSART_Initialize(void);
[; ;eusart.h: 157: uint8_t EUSART_Read(void);
[; ;eusart.h: 182: void EUSART_Write(uint8_t txData);
[; ;eusart.h: 203: void EUSART_Transmit_ISR(void);
[; ;eusart.h: 224: void EUSART_Receive_ISR(void);
[; ;eusart.h: 226: char getch(void);
[; ;eusart.h: 227: void putch(char txData);
[; ;eusart.h: 228: void USART_SendChar(uint8_t value);
[; ;eusart.h: 229: void USART_SendSignedChar(int8_t value);
[; ;eusart.h: 230: void USART_SendChar_Hex(uint8_t value);
[; ;eusart.h: 235: void USART_SendNewLine(void);
[; ;eusart.h: 236: void USART_SendSignedLong(int32_t value);
[; ;eusart.h: 237: void USART_SendLong(uint32_t value);
[; ;eusart.h: 238: void USART_SendShortLong(uint24_t value);
[; ;eusart.h: 239: void USART_SendSignedShortLong(int24_t value);
[; ;eusart.h: 240: void USART_SendInt(uint16_t value);
[; ;eusart.h: 241: void USART_SendSignedInt(int16_t value);
[; ;mtouch_sensor.h: 46: enum mtouch_sensor_names
[; ;mtouch_sensor.h: 47: {
[; ;mtouch_sensor.h: 48: Sensor_AN13 = 0,
[; ;mtouch_sensor.h: 49: Sensor_AN23 = 1,
[; ;mtouch_sensor.h: 50: Sensor_AN14 = 2,
[; ;mtouch_sensor.h: 51: Sensor_AN2 = 3,
[; ;mtouch_sensor.h: 52: Sensor_AN20 = 4,
[; ;mtouch_sensor.h: 53: Sensor_AN26 = 5
[; ;mtouch_sensor.h: 54: };
[; ;mtouch_sensor.h: 56: enum mtouch_sensor_error
[; ;mtouch_sensor.h: 57: {
[; ;mtouch_sensor.h: 58: MTOUCH_SENSOR_ERROR_none = 0,
[; ;mtouch_sensor.h: 59: MTOUCH_SENSOR_ERROR_invalid_index = -1,
[; ;mtouch_sensor.h: 60: MTOUCH_SENSOR_ERROR_interrupt_notEnabled = -2,
[; ;mtouch_sensor.h: 61: MTOUCH_SENSOR_ERROR_invalid_calibrate= -3
[; ;mtouch_sensor.h: 62: };
[; ;mtouch_sensor.h: 69: typedef uint16_t mtouch_sensor_sample_t;
[; ;mtouch_sensor.h: 73: typedef uint8_t mtouch_sensor_mask_t;
[; ;mtouch_sensor.h: 83: enum mtouch_sensor_error MTOUCH_Sensor_Initialize (enum mtouch_sensor_names sensor);
[; ;mtouch_sensor.h: 84: void MTOUCH_Sensor_Scan_Initialize (void);
[; ;mtouch_sensor.h: 85: void MTOUCH_Sensor_InitializeAll (void);
[; ;mtouch_sensor.h: 86: void MTOUCH_Sensor_SetSampledCallback(void (*callback)(enum mtouch_sensor_names sensor));
[; ;mtouch_sensor.h: 87: bool MTOUCH_Sensor_SampleAll (void);
[; ;mtouch_sensor.h: 89: bool MTOUCH_Sensor_isActive (enum mtouch_sensor_names sensor);
[; ;mtouch_sensor.h: 90: bool MTOUCH_Sensor_wasSampled (enum mtouch_sensor_names sensor);
[; ;mtouch_sensor.h: 91: bool MTOUCH_Sensor_isCalibrated (enum mtouch_sensor_names sensor);
[; ;mtouch_sensor.h: 92: bool MTOUCH_Sensor_isEnabled (enum mtouch_sensor_names sensor);
[; ;mtouch_sensor.h: 93: void MTOUCH_Sensor_Sampled_ResetAll (void);
[; ;mtouch_sensor.h: 94: void MTOUCH_Sensor_Disable (enum mtouch_sensor_names sensor);
[; ;mtouch_sensor.h: 95: void MTOUCH_Sensor_Enable (enum mtouch_sensor_names sensor);
[; ;mtouch_sensor.h: 96: void MTOUCH_Sensor_Calibrate (enum mtouch_sensor_names sensor);
[; ;mtouch_sensor.h: 97: mtouch_sensor_sample_t MTOUCH_Sensor_RawSample_Get (enum mtouch_sensor_names sensor);
[; ;mtouch_sensor.h: 98: uint8_t MTOUCH_Sensor_AdditionalCap_Get (enum mtouch_sensor_names sensor);
[; ;mtouch_sensor.h: 99: uint8_t MTOUCH_Sensor_AcquisitionTime_Get(enum mtouch_sensor_names sensor);
[; ;mtouch_sensor.h: 100: uint8_t MTOUCH_Sensor_PreChargeTime_Get (enum mtouch_sensor_names sensor);
[; ;mtouch_button.h: 50: enum mtouch_button_names
[; ;mtouch_button.h: 51: {
[; ;mtouch_button.h: 52: Button0 = 0,
[; ;mtouch_button.h: 53: Button1 = 1,
[; ;mtouch_button.h: 54: Button2 = 2,
[; ;mtouch_button.h: 55: Button3 = 3,
[; ;mtouch_button.h: 56: Button4 = 4
[; ;mtouch_button.h: 57: };
[; ;mtouch_button.h: 76: typedef uint8_t mtouch_buttonmask_t;
[; ;mtouch_button.h: 78: typedef uint16_t mtouch_button_statecounter_t;
[; ;mtouch_button.h: 84: typedef uint16_t mtouch_button_baselinecounter_t;
[; ;mtouch_button.h: 88: typedef uint16_t mtouch_button_reading_t;
[; ;mtouch_button.h: 93: typedef uint32_t mtouch_button_baseline_t;
[; ;mtouch_button.h: 100: typedef int8_t mtouch_button_deviation_t;
[; ;mtouch_button.h: 105: typedef uint8_t mtouch_button_threshold_t;
[; ;mtouch_button.h: 109: typedef uint8_t mtouch_button_scaling_t;
[; ;mtouch_button.h: 119: void MTOUCH_Button_SetPressedCallback (void (*callback)(enum mtouch_button_names button));
[; ;mtouch_button.h: 120: void MTOUCH_Button_SetNotPressedCallback(void (*callback)(enum mtouch_button_names button));
[; ;mtouch_button.h: 122: void MTOUCH_Button_Initialize (enum mtouch_button_names button);
[; ;mtouch_button.h: 123: void MTOUCH_Button_InitializeAll (void);
[; ;mtouch_button.h: 124: void MTOUCH_Button_ServiceAll (void);
[; ;mtouch_button.h: 125: void MTOUCH_Button_Tick (void);
[; ;mtouch_button.h: 127: mtouch_button_deviation_t MTOUCH_Button_Deviation_Get (enum mtouch_button_names button);
[; ;mtouch_button.h: 128: mtouch_button_reading_t MTOUCH_Button_Reading_Get (enum mtouch_button_names button);
[; ;mtouch_button.h: 129: mtouch_button_reading_t MTOUCH_Button_Baseline_Get (enum mtouch_button_names button);
[; ;mtouch_button.h: 130: mtouch_button_scaling_t MTOUCH_Button_Scaling_Get (enum mtouch_button_names button);
[; ;mtouch_button.h: 131: void MTOUCH_Button_Scaling_Set (enum mtouch_button_names button,mtouch_button_scaling_t scaling);
[; ;mtouch_button.h: 132: mtouch_button_threshold_t MTOUCH_Button_Threshold_Get (enum mtouch_button_names button);
[; ;mtouch_button.h: 133: void MTOUCH_Button_Threshold_Set (enum mtouch_button_names button,mtouch_button_threshold_t threshold);
[; ;mtouch_button.h: 135: bool MTOUCH_Button_isPressed (enum mtouch_button_names button);
[; ;mtouch_button.h: 136: bool MTOUCH_Button_isInitialized (enum mtouch_button_names button);
[; ;mtouch_button.h: 137: mtouch_buttonmask_t MTOUCH_Button_Buttonmask_Get(void);
[; ;mtouch_proximity.h: 50: enum mtouch_proximity_names
[; ;mtouch_proximity.h: 51: {
[; ;mtouch_proximity.h: 52: Proximity0 = 0
[; ;mtouch_proximity.h: 53: };
[; ;mtouch_proximity.h: 64: typedef uint16_t mtouch_prox_statecounter_t;
[; ;mtouch_proximity.h: 70: typedef uint16_t mtouch_prox_baselinecounter_t;
[; ;mtouch_proximity.h: 74: typedef uint32_t mtouch_prox_reading_t;
[; ;mtouch_proximity.h: 79: typedef uint32_t mtouch_prox_baseline_t;
[; ;mtouch_proximity.h: 86: typedef int8_t mtouch_prox_deviation_t;
[; ;mtouch_proximity.h: 92: typedef uint8_t mtouch_prox_threshold_t;
[; ;mtouch_proximity.h: 96: typedef uint8_t mtouch_prox_scaling_t;
[; ;mtouch_proximity.h: 105: void MTOUCH_Proximity_SetActivatedCallback (void (*callback)(enum mtouch_proximity_names prox));
[; ;mtouch_proximity.h: 106: void MTOUCH_Proximity_SetNotActivatedCallback(void (*callback)(enum mtouch_proximity_names prox));
[; ;mtouch_proximity.h: 107: void MTOUCH_Proximity_Initialize (enum mtouch_proximity_names prox);
[; ;mtouch_proximity.h: 108: void MTOUCH_Proximity_InitializeAll (void);
[; ;mtouch_proximity.h: 109: void MTOUCH_Proximity_ServiceAll (void);
[; ;mtouch_proximity.h: 110: void MTOUCH_Proximity_Tick (void);
[; ;mtouch_proximity.h: 111: void MTOUCH_Proximity_Recalibrate (void);
[; ;mtouch_proximity.h: 113: mtouch_prox_deviation_t MTOUCH_Proximity_Deviation_Get (enum mtouch_proximity_names prox);
[; ;mtouch_proximity.h: 114: mtouch_prox_reading_t MTOUCH_Proximity_Reading_Get (enum mtouch_proximity_names prox);
[; ;mtouch_proximity.h: 115: mtouch_prox_reading_t MTOUCH_Proximity_Baseline_Get (enum mtouch_proximity_names prox);
[; ;mtouch_proximity.h: 116: mtouch_prox_scaling_t MTOUCH_Proximity_Scaling_Get (enum mtouch_proximity_names prox);
[; ;mtouch_proximity.h: 117: void MTOUCH_Proximity_Scaling_Set (enum mtouch_proximity_names prox,mtouch_prox_scaling_t scaling);
[; ;mtouch_proximity.h: 118: void MTOUCH_Proximity_Threshold_Set (enum mtouch_proximity_names prox,mtouch_prox_threshold_t threshold);
[; ;mtouch_proximity.h: 119: mtouch_prox_threshold_t MTOUCH_Proximity_Threshold_Get (enum mtouch_proximity_names prox);
[; ;mtouch_proximity.h: 120: bool MTOUCH_Proximity_isActivated (enum mtouch_proximity_names prox);
[; ;mtouch.h: 54: void MTOUCH_Initialize (void);
[; ;mtouch.h: 55: bool MTOUCH_Service_Mainloop (void);
[; ;mtouch.h: 56: void MTOUCH_Tick (void);
[; ;mcc.h: 72: void SYSTEM_Initialize(void);
[; ;mcc.h: 85: void OSCILLATOR_Initialize(void);
[; ;mcc.h: 98: void WDT_Initialize(void);
[; ;mtouch_sensor.c: 45: typedef uint16_t mtouch_sensor_adcsample_t;
[; ;mtouch_sensor.c: 49: typedef uint8_t mtouch_sensor_packetcounter_t;
[; ;mtouch_sensor.c: 53: typedef uint16_t mtouch_sensor_packetsample_t;
[; ;mtouch_sensor.c: 57: typedef uint8_t mtouch_sensor_addcap_t;
[; ;mtouch_sensor.c: 60: typedef uint8_t mtouch_sensor_time_t;
[; ;mtouch_sensor.c: 67: typedef uint16_t mtouch_sensor_packetnoise_t;
[; ;mtouch_sensor.c: 71: typedef uint8_t mtouch_sensor_sampleperiod_t;
[; ;mtouch_sensor.c: 76: typedef struct
[; ;mtouch_sensor.c: 77: {
[; ;mtouch_sensor.c: 78: unsigned done:1;
[; ;mtouch_sensor.c: 79: unsigned check:1;
[; ;mtouch_sensor.c: 80: unsigned error:1;
[; ;mtouch_sensor.c: 81: } mtouch_sensor_globalflags_t;
[; ;mtouch_sensor.c: 83: typedef struct
[; ;mtouch_sensor.c: 84: {
[; ;mtouch_sensor.c: 85: const enum mtouch_sensor_names sensor;
[; ;mtouch_sensor.c: 86: const uint8_t adcon0;
[; ;mtouch_sensor.c: 87: mtouch_sensor_time_t precharge_time;
[; ;mtouch_sensor.c: 88: mtouch_sensor_time_t acquisition_time;
[; ;mtouch_sensor.c: 89: mtouch_sensor_packetcounter_t oversampling;
[; ;mtouch_sensor.c: 90: mtouch_sensor_addcap_t addcap;
[; ;mtouch_sensor.c: 91: mtouch_sensor_sample_t rawSample;
[; ;mtouch_sensor.c: 92: unsigned sampled:1;
[; ;mtouch_sensor.c: 93: unsigned active:1;
[; ;mtouch_sensor.c: 94: unsigned calibrated:1;
[; ;mtouch_sensor.c: 95: unsigned enabled:1;
[; ;mtouch_sensor.c: 96: unsigned acqTime_cal:1;
[; ;mtouch_sensor.c: 97: } mtouch_sensor_t;
[; ;mtouch_sensor.c: 99: typedef struct
[; ;mtouch_sensor.c: 100: {
[; ;mtouch_sensor.c: 101: mtouch_sensor_t* sensor_adc1;
[; ;mtouch_sensor.c: 102: mtouch_sensor_t* sensor_adc2;
[; ;mtouch_sensor.c: 103: }mtouch_scan_group_t;
[; ;mtouch_sensor.c: 110: static enum mtouch_sensor_error Sensor_Service (uint8_t scanGroup);
[; ;mtouch_sensor.c: 111: static enum mtouch_sensor_error Sensor_Acquisition (mtouch_sensor_t* sensor_adc1,mtouch_sensor_t* sensor_adc2);
[; ;mtouch_sensor.c: 112: static enum mtouch_sensor_error Sensor_Acq_ExecutePacket (mtouch_sensor_t* sensor_adc1,mtouch_sensor_t* sensor_adc2);
[; ;mtouch_sensor.c: 113: static enum mtouch_sensor_error Sensor_postAcquisitionProcess(mtouch_sensor_t* sensor);
[; ;mtouch_sensor.c: 115: static uint8_t Sensor_getScanGroupIndex (mtouch_sensor_t* sensor);
[; ;mtouch_sensor.c: 116: static inline void Sensor_setSampled (mtouch_sensor_t* sensor);
[; ;mtouch_sensor.c: 117: static inline void Sensor_Sampled_Reset (mtouch_sensor_t* sensor);
[; ;mtouch_sensor.c: 118: static inline void Sensor_setActive (mtouch_sensor_t* sensor);
[; ;mtouch_sensor.c: 119: static inline void Sensor_setInactive (mtouch_sensor_t* sensor);
[; ;mtouch_sensor.c: 120: static inline bool Sensor_isActive (mtouch_sensor_t* sensor);
[; ;mtouch_sensor.c: 122: static bool Sensor_isEnabled (mtouch_sensor_t* sensor);
[; ;mtouch_sensor.c: 124: static inline bool Sensor_isCalibrated (mtouch_sensor_t* sensor);
[; ;mtouch_sensor.c: 125: static inline void Sensor_setCalibrated (mtouch_sensor_t* sensor);
[; ;mtouch_sensor.c: 126: static inline void Sensor_setCalibratAcqTime (mtouch_sensor_t* sensor);
[; ;mtouch_sensor.c: 127: static inline bool Sensor_isCalibratingAcqTime (mtouch_sensor_t* sensor);
[; ;mtouch_sensor.c: 128: static enum mtouch_sensor_error Sensor_autoCalibration (mtouch_sensor_t* sensor);
[; ;mtouch_sensor.c: 131: static void Sensor_RawSample_Update (mtouch_sensor_t* sensor);
[; ;mtouch_sensor.c: 133: static void Sensor_DefaultCallback (enum mtouch_sensor_names sensor);
[; ;mtouch_sensor.c: 135: static void Sensor_Scanfrequency_Evaluation(mtouch_sensor_t* sensor_adc1,mtouch_sensor_t* sensor_adc2);
"142 mcc_generated_files/mtouch/mtouch_sensor.c
[v _callback_sampled `*F3568 ~T0 @X0 1 s ]
[i _callback_sampled
&U _Sensor_DefaultCallback
]
[; ;mtouch_sensor.c: 142: static void (*callback_sampled)(enum mtouch_sensor_names sensor) = Sensor_DefaultCallback;
"149
[v _packet_sample `ui ~T0 @X0 -> 2 `i s ]
[; ;mtouch_sensor.c: 149: static mtouch_sensor_packetsample_t packet_sample[2];
"150
[v _packet_noise `ui ~T0 @X0 1 s ]
[; ;mtouch_sensor.c: 150: static mtouch_sensor_packetsample_t packet_noise;
"157
[v _sample_period `uc ~T0 @X0 1 s ]
[i _sample_period
-> + + -> -> -> 32 `i `uc `i -> -> -> 32 `i `uc `i -> -> -> 110 `i `uc `i `uc
]
[; ;mtouch_sensor.c: 157: static mtouch_sensor_sampleperiod_t sample_period = ((mtouch_sensor_sampleperiod_t)(mtouch_sensor_time_t)32+(mtouch_sensor_time_t)32+(mtouch_sensor_time_t)110);
"164
[v _mtouch_sensor `S455 ~T0 @X0 -> 6 `i s ]
[i _mtouch_sensor
:U ..
:U ..
"165
. `E3328 0
-> | << -> 13 `i -> 2 `i -> 1 `i `uc
-> -> 10 `i `uc
-> -> 5 `i `uc
-> -> 32 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `ui
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"166
. `E3328 1
-> | << -> 23 `i -> 2 `i -> 1 `i `uc
-> -> 10 `i `uc
-> -> 5 `i `uc
-> -> 32 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `ui
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"167
. `E3328 2
-> | << -> 14 `i -> 2 `i -> 1 `i `uc
-> -> 10 `i `uc
-> -> 5 `i `uc
-> -> 32 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `ui
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"168
. `E3328 3
-> | << -> 2 `i -> 2 `i -> 1 `i `uc
-> -> 10 `i `uc
-> -> 5 `i `uc
-> -> 32 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `ui
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"169
. `E3328 4
-> | << -> 20 `i -> 2 `i -> 1 `i `uc
-> -> 10 `i `uc
-> -> 5 `i `uc
-> -> 32 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `ui
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"170
. `E3328 5
-> | << -> 26 `i -> 2 `i -> 1 `i `uc
-> -> 10 `i `uc
-> -> 5 `i `uc
-> -> 32 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `ui
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
..
]
[; ;mtouch_sensor.c: 164: static mtouch_sensor_t mtouch_sensor[6] = {
[; ;mtouch_sensor.c: 165: {Sensor_AN13,( 0xd<<2 | 0x1 ),10,5,32,0,0,0,0,0,0,0},
[; ;mtouch_sensor.c: 166: {Sensor_AN23,( 0x17<<2 | 0x1 ),10,5,32,0,0,0,0,0,0,0},
[; ;mtouch_sensor.c: 167: {Sensor_AN14,( 0xe<<2 | 0x1 ),10,5,32,0,0,0,0,0,0,0},
[; ;mtouch_sensor.c: 168: {Sensor_AN2,( 0x2<<2 | 0x1 ),10,5,32,0,0,0,0,0,0,0},
[; ;mtouch_sensor.c: 169: {Sensor_AN20,( 0x14<<2 | 0x1 ),10,5,32,0,0,0,0,0,0,0},
[; ;mtouch_sensor.c: 170: {Sensor_AN26,( 0x1a<<2 | 0x1 ),10,5,32,0,0,0,0,0,0,0},
[; ;mtouch_sensor.c: 171: };
"178
[v _sensor_scan_group `CS456 ~T0 @X0 -> 3 `i s ]
[i _sensor_scan_group
:U ..
:U ..
"179
&U *U + &U _mtouch_sensor * -> . `E3328 0 `ux -> -> # *U &U _mtouch_sensor `ui `ux
&U *U + &U _mtouch_sensor * -> . `E3328 1 `ux -> -> # *U &U _mtouch_sensor `ui `ux
..
:U ..
"180
&U *U + &U _mtouch_sensor * -> . `E3328 2 `ux -> -> # *U &U _mtouch_sensor `ui `ux
&U *U + &U _mtouch_sensor * -> . `E3328 4 `ux -> -> # *U &U _mtouch_sensor `ui `ux
..
:U ..
"181
&U *U + &U _mtouch_sensor * -> . `E3328 3 `ux -> -> # *U &U _mtouch_sensor `ui `ux
&U *U + &U _mtouch_sensor * -> . `E3328 5 `ux -> -> # *U &U _mtouch_sensor `ui `ux
..
..
]
[; ;mtouch_sensor.c: 178: static mtouch_scan_group_t const sensor_scan_group[3] = {
[; ;mtouch_sensor.c: 179: { &(mtouch_sensor[Sensor_AN13]),&(mtouch_sensor[Sensor_AN23])},
[; ;mtouch_sensor.c: 180: { &(mtouch_sensor[Sensor_AN14]),&(mtouch_sensor[Sensor_AN20])},
[; ;mtouch_sensor.c: 181: { &(mtouch_sensor[Sensor_AN2]),&(mtouch_sensor[Sensor_AN26])},
[; ;mtouch_sensor.c: 182: };
"189
[v _MTOUCH_Sensor_Initialize `(E3335 ~T0 @X0 1 ef1`E3328 ]
"190
{
[; ;mtouch_sensor.c: 189: enum mtouch_sensor_error MTOUCH_Sensor_Initialize(enum mtouch_sensor_names sensor)
[; ;mtouch_sensor.c: 190: {
[e :U _MTOUCH_Sensor_Initialize ]
"189
[v _sensor `E3328 ~T0 @X0 1 r1 ]
"190
[f ]
[; ;mtouch_sensor.c: 191: switch(sensor)
"191
[e $U 459  ]
[; ;mtouch_sensor.c: 192: {
"192
{
[; ;mtouch_sensor.c: 193: case 0:
"193
[e :U 460 ]
[; ;mtouch_sensor.c: 194: ANSELCbits.ANSC0 = 0;
"194
[e = . . _ANSELCbits 0 0 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 195: TRISCbits.TRISC0 = 0;
"195
[e = . . _TRISCbits 0 0 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 196: break;
"196
[e $U 458  ]
[; ;mtouch_sensor.c: 197: case 1:
"197
[e :U 461 ]
[; ;mtouch_sensor.c: 198: ANSELCbits.ANSC1 = 0;
"198
[e = . . _ANSELCbits 0 1 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 199: TRISCbits.TRISC1 = 0;
"199
[e = . . _TRISCbits 0 1 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 200: break;
"200
[e $U 458  ]
[; ;mtouch_sensor.c: 201: case 2:
"201
[e :U 462 ]
[; ;mtouch_sensor.c: 202: ANSELCbits.ANSC6 = 0;
"202
[e = . . _ANSELCbits 0 6 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 203: TRISCbits.TRISC6 = 0;
"203
[e = . . _TRISCbits 0 6 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 204: break;
"204
[e $U 458  ]
[; ;mtouch_sensor.c: 205: case 3:
"205
[e :U 463 ]
[; ;mtouch_sensor.c: 206: WPUAbits.WPUA2 = 0;
"206
[e = . . _WPUAbits 0 2 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 207: ANSELAbits.ANSA2 = 0;
"207
[e = . . _ANSELAbits 0 2 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 208: TRISAbits.TRISA2 = 0;
"208
[e = . . _TRISAbits 0 2 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 209: break;
"209
[e $U 458  ]
[; ;mtouch_sensor.c: 210: case 4:
"210
[e :U 464 ]
[; ;mtouch_sensor.c: 211: WPUAbits.WPUA5 = 0;
"211
[e = . . _WPUAbits 0 5 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 212: ANSELAbits.ANSA5 = 0;
"212
[e = . . _ANSELAbits 0 5 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 213: TRISAbits.TRISA5 = 0;
"213
[e = . . _TRISAbits 0 5 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 214: break;
"214
[e $U 458  ]
[; ;mtouch_sensor.c: 215: case 5:
"215
[e :U 465 ]
[; ;mtouch_sensor.c: 216: WPUBbits.WPUB4 = 0;
"216
[e = . . _WPUBbits 0 1 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 217: ANSELBbits.ANSB4 = 0;
"217
[e = . . _ANSELBbits 0 1 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 218: TRISBbits.TRISB4 = 0;
"218
[e = . . _TRISBbits 0 1 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 219: break;
"219
[e $U 458  ]
[; ;mtouch_sensor.c: 220: default: return MTOUCH_SENSOR_ERROR_invalid_index;
"220
[e :U 466 ]
[e ) . `E3335 1 ]
[e $UE 457  ]
"221
}
[; ;mtouch_sensor.c: 221: }
[e $U 458  ]
"191
[e :U 459 ]
[e [\ _sensor , $ -> -> 0 `i `E3328 460
 , $ -> -> 1 `i `E3328 461
 , $ -> -> 2 `i `E3328 462
 , $ -> -> 3 `i `E3328 463
 , $ -> -> 4 `i `E3328 464
 , $ -> -> 5 `i `E3328 465
 466 ]
"221
[e :U 458 ]
[; ;mtouch_sensor.c: 223: MTOUCH_Sensor_Enable(sensor);
"223
[e ( _MTOUCH_Sensor_Enable (1 _sensor ]
[; ;mtouch_sensor.c: 224: MTOUCH_Sensor_Calibrate(sensor);
"224
[e ( _MTOUCH_Sensor_Calibrate (1 _sensor ]
[; ;mtouch_sensor.c: 225: Sensor_Sampled_Reset(&mtouch_sensor[sensor]);
"225
[e ( _Sensor_Sampled_Reset (1 &U *U + &U _mtouch_sensor * -> _sensor `ux -> -> # *U &U _mtouch_sensor `ui `ux ]
[; ;mtouch_sensor.c: 227: return MTOUCH_SENSOR_ERROR_none;
"227
[e ) . `E3335 0 ]
[e $UE 457  ]
[; ;mtouch_sensor.c: 228: }
"228
[e :UE 457 ]
}
"235
[v _MTOUCH_Sensor_InitializeAll `(v ~T0 @X0 1 ef ]
"236
{
[; ;mtouch_sensor.c: 235: void MTOUCH_Sensor_InitializeAll(void)
[; ;mtouch_sensor.c: 236: {
[e :U _MTOUCH_Sensor_InitializeAll ]
[f ]
"237
[v _sensor `E3328 ~T0 @X0 1 a ]
[; ;mtouch_sensor.c: 237: enum mtouch_sensor_names sensor;
[; ;mtouch_sensor.c: 239: for (sensor = 0; sensor < 6; sensor++)
"239
{
[e = _sensor -> -> 0 `i `E3328 ]
[e $ < -> _sensor `i -> 6 `i 468  ]
[e $U 469  ]
"240
[e :U 468 ]
[; ;mtouch_sensor.c: 240: {
{
[; ;mtouch_sensor.c: 241: MTOUCH_Sensor_Initialize(sensor);
"241
[e ( _MTOUCH_Sensor_Initialize (1 _sensor ]
"242
}
"239
[e ++ _sensor -> -> 1 `i `E3328 ]
[e $ < -> _sensor `i -> 6 `i 468  ]
[e :U 469 ]
"242
}
[; ;mtouch_sensor.c: 242: }
[; ;mtouch_sensor.c: 243: }
"243
[e :UE 467 ]
}
"251
[v _MTOUCH_Sensor_Scan_Initialize `(v ~T0 @X0 1 ef ]
"252
{
[; ;mtouch_sensor.c: 251: void MTOUCH_Sensor_Scan_Initialize(void)
[; ;mtouch_sensor.c: 252: {
[e :U _MTOUCH_Sensor_Scan_Initialize ]
[f ]
[; ;mtouch_sensor.c: 253: T2CONbits.T2CKPS = 0x0;
"253
[e = . . _T2CONbits 0 0 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 255: AD1CON0 = (uint8_t)0;
"255
[e = _AD1CON0 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 256: AD2CON0 = (uint8_t)0;
"256
[e = _AD2CON0 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 257: ADCOMCON = (uint8_t)( 0x1<<7 | 0x1<<4 | 0x0 );
"257
[e = _ADCOMCON -> | | << -> 1 `i -> 7 `i << -> 1 `i -> 4 `i -> 0 `i `uc ]
[; ;mtouch_sensor.c: 258: AD1CON3 = (uint8_t)0b01000000;
"258
[e = _AD1CON3 -> -> 64 `i `uc ]
[; ;mtouch_sensor.c: 259: AD2CON3 = (uint8_t)0b01000000;
"259
[e = _AD2CON3 -> -> 64 `i `uc ]
[; ;mtouch_sensor.c: 260: }
"260
[e :UE 471 ]
}
"269
[v _MTOUCH_Sensor_SampleAll `(uc ~T0 @X0 1 ef ]
"270
{
[; ;mtouch_sensor.c: 269: bool MTOUCH_Sensor_SampleAll(void)
[; ;mtouch_sensor.c: 270: {
[e :U _MTOUCH_Sensor_SampleAll ]
[f ]
"271
[v _group `uc ~T0 @X0 1 a ]
[; ;mtouch_sensor.c: 271: uint8_t group;
[; ;mtouch_sensor.c: 272: for (group = 0; group < 3; group++)
"272
{
[e = _group -> -> 0 `i `uc ]
[e $ < -> _group `i -> 3 `i 473  ]
[e $U 474  ]
"273
[e :U 473 ]
[; ;mtouch_sensor.c: 273: {
{
[; ;mtouch_sensor.c: 274: if(Sensor_Service(group)!= MTOUCH_SENSOR_ERROR_none)
"274
[e $ ! != -> ( _Sensor_Service (1 _group `i -> . `E3335 0 `i 476  ]
[; ;mtouch_sensor.c: 275: return 0;
"275
[e ) -> -> 0 `i `uc ]
[e $UE 472  ]
[e :U 476 ]
"276
}
"272
[e ++ _group -> -> 1 `i `uc ]
[e $ < -> _group `i -> 3 `i 473  ]
[e :U 474 ]
"276
}
[; ;mtouch_sensor.c: 276: }
[; ;mtouch_sensor.c: 277: return 1;
"277
[e ) -> -> 1 `i `uc ]
[e $UE 472  ]
[; ;mtouch_sensor.c: 278: }
"278
[e :UE 472 ]
}
"285
[v _Sensor_Service `(E3335 ~T0 @X0 1 sf1`uc ]
"286
{
[; ;mtouch_sensor.c: 285: static enum mtouch_sensor_error Sensor_Service(uint8_t scanGroup)
[; ;mtouch_sensor.c: 286: {
[e :U _Sensor_Service ]
"285
[v _scanGroup `uc ~T0 @X0 1 r1 ]
"286
[f ]
"287
[v _sensor_adc1 `*S455 ~T0 @X0 1 a ]
"288
[v _sensor_adc2 `*S455 ~T0 @X0 1 a ]
[; ;mtouch_sensor.c: 287: mtouch_sensor_t* sensor_adc1;
[; ;mtouch_sensor.c: 288: mtouch_sensor_t* sensor_adc2;
[; ;mtouch_sensor.c: 290: sensor_adc1 = (mtouch_sensor_t*)sensor_scan_group[scanGroup].sensor_adc1;
"290
[e = _sensor_adc1 -> . *U + &U _sensor_scan_group * -> _scanGroup `ux -> -> # *U &U _sensor_scan_group `ui `ux 0 `*S455 ]
[; ;mtouch_sensor.c: 291: sensor_adc2 = (mtouch_sensor_t*)sensor_scan_group[scanGroup].sensor_adc2;
"291
[e = _sensor_adc2 -> . *U + &U _sensor_scan_group * -> _scanGroup `ux -> -> # *U &U _sensor_scan_group `ui `ux 1 `*S455 ]
"293
[v _error `E3335 ~T0 @X0 1 a ]
[; ;mtouch_sensor.c: 293: enum mtouch_sensor_error error = Sensor_Acquisition(sensor_adc1,sensor_adc2);
[e = _error ( _Sensor_Acquisition (2 , _sensor_adc1 _sensor_adc2 ]
[; ;mtouch_sensor.c: 296: switch(error)
"296
[e $U 479  ]
[; ;mtouch_sensor.c: 297: {
"297
{
[; ;mtouch_sensor.c: 298: case MTOUCH_SENSOR_ERROR_none:
"298
[e :U 480 ]
[; ;mtouch_sensor.c: 299: {
"299
{
[; ;mtouch_sensor.c: 300: if(Sensor_isEnabled(sensor_adc1))
"300
[e $ ! != -> ( _Sensor_isEnabled (1 _sensor_adc1 `i -> -> -> 0 `i `uc `i 481  ]
[; ;mtouch_sensor.c: 301: {
"301
{
[; ;mtouch_sensor.c: 302: Sensor_RawSample_Update(sensor_adc1);
"302
[e ( _Sensor_RawSample_Update (1 _sensor_adc1 ]
[; ;mtouch_sensor.c: 303: Sensor_setSampled(sensor_adc1);
"303
[e ( _Sensor_setSampled (1 _sensor_adc1 ]
[; ;mtouch_sensor.c: 304: callback_sampled(sensor_adc1->sensor);
"304
[e ( *U _callback_sampled (1 . *U _sensor_adc1 0 ]
"305
}
[e :U 481 ]
[; ;mtouch_sensor.c: 305: }
[; ;mtouch_sensor.c: 306: if(Sensor_isEnabled(sensor_adc2))
"306
[e $ ! != -> ( _Sensor_isEnabled (1 _sensor_adc2 `i -> -> -> 0 `i `uc `i 482  ]
[; ;mtouch_sensor.c: 307: {
"307
{
[; ;mtouch_sensor.c: 308: Sensor_RawSample_Update(sensor_adc2);
"308
[e ( _Sensor_RawSample_Update (1 _sensor_adc2 ]
[; ;mtouch_sensor.c: 309: Sensor_setSampled(sensor_adc2);
"309
[e ( _Sensor_setSampled (1 _sensor_adc2 ]
[; ;mtouch_sensor.c: 310: callback_sampled(sensor_adc2->sensor);
"310
[e ( *U _callback_sampled (1 . *U _sensor_adc2 0 ]
"311
}
[e :U 482 ]
"312
}
[; ;mtouch_sensor.c: 311: }
[; ;mtouch_sensor.c: 312: }
[; ;mtouch_sensor.c: 313: break;
"313
[e $U 478  ]
[; ;mtouch_sensor.c: 315: case MTOUCH_SENSOR_ERROR_invalid_index: break;
"315
[e :U 483 ]
[e $U 478  ]
[; ;mtouch_sensor.c: 316: case MTOUCH_SENSOR_ERROR_interrupt_notEnabled: break;
"316
[e :U 484 ]
[e $U 478  ]
[; ;mtouch_sensor.c: 317: case MTOUCH_SENSOR_ERROR_invalid_calibrate: break;
"317
[e :U 485 ]
[e $U 478  ]
[; ;mtouch_sensor.c: 318: default: break;
"318
[e :U 486 ]
[e $U 478  ]
"319
}
[; ;mtouch_sensor.c: 319: }
[e $U 478  ]
"296
[e :U 479 ]
[e [\ _error , $ . `E3335 0 480
 , $ . `E3335 1 483
 , $ . `E3335 2 484
 , $ . `E3335 3 485
 486 ]
"319
[e :U 478 ]
[; ;mtouch_sensor.c: 321: return error;
"321
[e ) _error ]
[e $UE 477  ]
[; ;mtouch_sensor.c: 322: }
"322
[e :UE 477 ]
}
"324
[v _Sensor_getScanGroupIndex `(uc ~T0 @X0 1 sf1`*S455 ]
"325
{
[; ;mtouch_sensor.c: 324: static uint8_t Sensor_getScanGroupIndex(mtouch_sensor_t* sensor)
[; ;mtouch_sensor.c: 325: {
[e :U _Sensor_getScanGroupIndex ]
"324
[v _sensor `*S455 ~T0 @X0 1 r1 ]
"325
[f ]
"326
[v _sensorGroup `uc ~T0 @X0 1 a ]
[; ;mtouch_sensor.c: 326: uint8_t sensorGroup;
[; ;mtouch_sensor.c: 327: for(sensorGroup = 0; sensorGroup < 3; sensorGroup++)
"327
{
[e = _sensorGroup -> -> 0 `i `uc ]
[e $ < -> _sensorGroup `i -> 3 `i 488  ]
[e $U 489  ]
"328
[e :U 488 ]
[; ;mtouch_sensor.c: 328: {
{
[; ;mtouch_sensor.c: 329: if(sensor_scan_group[sensorGroup].sensor_adc1 == sensor)
[v F3601 `*S455 ~T0 @X0 1 t ]
"329
[e $ ! == . *U + &U _sensor_scan_group * -> _sensorGroup `ux -> -> # *U &U _sensor_scan_group `ui `ux 0 -> _sensor `C*S455 491  ]
[; ;mtouch_sensor.c: 330: return 0;
"330
[e ) -> -> 0 `i `uc ]
[e $UE 487  ]
[e :U 491 ]
[; ;mtouch_sensor.c: 331: if(sensor_scan_group[sensorGroup].sensor_adc2 == sensor)
[v F3602 `*S455 ~T0 @X0 1 t ]
"331
[e $ ! == . *U + &U _sensor_scan_group * -> _sensorGroup `ux -> -> # *U &U _sensor_scan_group `ui `ux 1 -> _sensor `C*S455 492  ]
[; ;mtouch_sensor.c: 332: return 1;
"332
[e ) -> -> 1 `i `uc ]
[e $UE 487  ]
[e :U 492 ]
"333
}
"327
[e ++ _sensorGroup -> -> 1 `i `uc ]
[e $ < -> _sensorGroup `i -> 3 `i 488  ]
[e :U 489 ]
"333
}
[; ;mtouch_sensor.c: 333: }
[; ;mtouch_sensor.c: 334: return 0;
"334
[e ) -> -> 0 `i `uc ]
[e $UE 487  ]
[; ;mtouch_sensor.c: 335: }
"335
[e :UE 487 ]
}
"342
[v _Sensor_Acquisition `(E3335 ~T0 @X0 1 sf2`*S455`*S455 ]
"343
{
[; ;mtouch_sensor.c: 342: static enum mtouch_sensor_error Sensor_Acquisition(mtouch_sensor_t* sensor_adc1,mtouch_sensor_t* sensor_adc2)
[; ;mtouch_sensor.c: 343: {
[e :U _Sensor_Acquisition ]
"342
[v _sensor_adc1 `*S455 ~T0 @X0 1 r1 ]
[v _sensor_adc2 `*S455 ~T0 @X0 1 r2 ]
"343
[f ]
"344
[v _error `E3335 ~T0 @X0 1 a ]
[; ;mtouch_sensor.c: 344: enum mtouch_sensor_error error = MTOUCH_SENSOR_ERROR_none;
[e = _error . `E3335 0 ]
[; ;mtouch_sensor.c: 347: if (sensor_adc1 == (0) && sensor_adc2 == (0))
"347
[e $ ! && == _sensor_adc1 -> -> 0 `i `*S455 == _sensor_adc2 -> -> 0 `i `*S455 494  ]
[; ;mtouch_sensor.c: 348: {
"348
{
[; ;mtouch_sensor.c: 349: error = MTOUCH_SENSOR_ERROR_invalid_index;
"349
[e = _error . `E3335 1 ]
"350
}
[e :U 494 ]
[; ;mtouch_sensor.c: 350: }
[; ;mtouch_sensor.c: 357: if (error == MTOUCH_SENSOR_ERROR_none)
"357
[e $ ! == -> _error `i -> . `E3335 0 `i 495  ]
[; ;mtouch_sensor.c: 358: error = Sensor_Acq_ExecutePacket(sensor_adc1,sensor_adc2);
"358
[e = _error ( _Sensor_Acq_ExecutePacket (2 , _sensor_adc1 _sensor_adc2 ]
[e :U 495 ]
[; ;mtouch_sensor.c: 360: if(sensor_adc1 != (0))
"360
[e $ ! != _sensor_adc1 -> -> 0 `i `*S455 496  ]
[; ;mtouch_sensor.c: 361: {
"361
{
[; ;mtouch_sensor.c: 362: Sensor_postAcquisitionProcess(sensor_adc1);
"362
[e ( _Sensor_postAcquisitionProcess (1 _sensor_adc1 ]
"363
}
[e :U 496 ]
[; ;mtouch_sensor.c: 363: }
[; ;mtouch_sensor.c: 365: if(sensor_adc2 !=(0))
"365
[e $ ! != _sensor_adc2 -> -> 0 `i `*S455 497  ]
[; ;mtouch_sensor.c: 366: {
"366
{
[; ;mtouch_sensor.c: 367: Sensor_postAcquisitionProcess(sensor_adc2);
"367
[e ( _Sensor_postAcquisitionProcess (1 _sensor_adc2 ]
"368
}
[e :U 497 ]
[; ;mtouch_sensor.c: 368: }
[; ;mtouch_sensor.c: 370: if((Sensor_isActive(sensor_adc1) && Sensor_isCalibrated(sensor_adc1))
[; ;mtouch_sensor.c: 371: ||(Sensor_isActive(sensor_adc2) && Sensor_isCalibrated(sensor_adc2)))
"371
[e $ ! || && != -> ( _Sensor_isActive (1 _sensor_adc1 `i -> -> -> 0 `i `uc `i != -> ( _Sensor_isCalibrated (1 _sensor_adc1 `i -> -> -> 0 `i `uc `i && != -> ( _Sensor_isActive (1 _sensor_adc2 `i -> -> -> 0 `i `uc `i != -> ( _Sensor_isCalibrated (1 _sensor_adc2 `i -> -> -> 0 `i `uc `i 498  ]
[; ;mtouch_sensor.c: 372: {
"372
{
[; ;mtouch_sensor.c: 373: Sensor_Scanfrequency_Evaluation(sensor_adc1,sensor_adc2);
"373
[e ( _Sensor_Scanfrequency_Evaluation (2 , _sensor_adc1 _sensor_adc2 ]
"374
}
[e :U 498 ]
[; ;mtouch_sensor.c: 374: }
[; ;mtouch_sensor.c: 376: return error;
"376
[e ) _error ]
[e $UE 493  ]
[; ;mtouch_sensor.c: 377: }
"377
[e :UE 493 ]
}
"379
[v _Sensor_postAcquisitionProcess `(E3335 ~T0 @X0 1 sf1`*S455 ]
"380
{
[; ;mtouch_sensor.c: 379: static enum mtouch_sensor_error Sensor_postAcquisitionProcess(mtouch_sensor_t* sensor)
[; ;mtouch_sensor.c: 380: {
[e :U _Sensor_postAcquisitionProcess ]
"379
[v _sensor `*S455 ~T0 @X0 1 r1 ]
"380
[f ]
"381
[v _deviation `ui ~T0 @X0 1 a ]
"382
[v _adcIndex `uc ~T0 @X0 1 a ]
[; ;mtouch_sensor.c: 381: mtouch_sensor_sample_t deviation;
[; ;mtouch_sensor.c: 382: uint8_t adcIndex = Sensor_getScanGroupIndex(sensor);
[e = _adcIndex ( _Sensor_getScanGroupIndex (1 _sensor ]
[; ;mtouch_sensor.c: 384: if(Sensor_isEnabled(sensor))
"384
[e $ ! != -> ( _Sensor_isEnabled (1 _sensor `i -> -> -> 0 `i `uc `i 500  ]
[; ;mtouch_sensor.c: 385: deviation = abs(packet_sample[adcIndex] - sensor->rawSample);
"385
[e = _deviation -> ( _abs (1 -> - *U + &U _packet_sample * -> _adcIndex `ux -> -> # *U &U _packet_sample `ui `ux . *U _sensor 6 `i `ui ]
[e $U 501  ]
"386
[e :U 500 ]
[; ;mtouch_sensor.c: 386: else
[; ;mtouch_sensor.c: 387: deviation = 0;
"387
[e = _deviation -> -> 0 `i `ui ]
[e :U 501 ]
[; ;mtouch_sensor.c: 389: if(deviation > (mtouch_sensor_packetsample_t)(sensor->oversampling)<<2)
"389
[e $ ! > _deviation << -> . *U _sensor 4 `ui -> 2 `i 502  ]
[; ;mtouch_sensor.c: 390: Sensor_setActive(sensor);
"390
[e ( _Sensor_setActive (1 _sensor ]
[e $U 503  ]
"391
[e :U 502 ]
[; ;mtouch_sensor.c: 391: else
[; ;mtouch_sensor.c: 392: Sensor_setInactive(sensor);
"392
[e ( _Sensor_setInactive (1 _sensor ]
[e :U 503 ]
[; ;mtouch_sensor.c: 394: return MTOUCH_SENSOR_ERROR_none;
"394
[e ) . `E3335 0 ]
[e $UE 499  ]
[; ;mtouch_sensor.c: 395: }
"395
[e :UE 499 ]
}
"402
[v _Sensor_Acq_ExecutePacket `(E3335 ~T0 @X0 1 sf2`*S455`*S455 ]
"403
{
[; ;mtouch_sensor.c: 402: static enum mtouch_sensor_error Sensor_Acq_ExecutePacket(mtouch_sensor_t* sensor_adc1,mtouch_sensor_t* sensor_adc2)
[; ;mtouch_sensor.c: 403: {
[e :U _Sensor_Acq_ExecutePacket ]
"402
[v _sensor_adc1 `*S455 ~T0 @X0 1 r1 ]
[v _sensor_adc2 `*S455 ~T0 @X0 1 r2 ]
"403
[f ]
"404
[v _error `E3335 ~T0 @X0 1 a ]
[; ;mtouch_sensor.c: 404: enum mtouch_sensor_error error = MTOUCH_SENSOR_ERROR_none;
[e = _error . `E3335 0 ]
"405
[v _ADCOMCON_temp `uc ~T0 @X0 1 a ]
"406
[v _ADxIF_flag `uc ~T0 @X0 1 a ]
[; ;mtouch_sensor.c: 405: uint8_t ADCOMCON_temp;
[; ;mtouch_sensor.c: 406: uint8_t ADxIF_flag = 0;
[e = _ADxIF_flag -> -> 0 `i `uc ]
"407
[v _sensor_globalFlags `S454 ~T0 @X0 1 a ]
"408
[v _packet_counter `uc ~T0 @X0 1 a ]
"410
[v _last_a `ui ~T0 @X0 1 a ]
[; ;mtouch_sensor.c: 407: mtouch_sensor_globalflags_t sensor_globalFlags;
[; ;mtouch_sensor.c: 408: mtouch_sensor_packetcounter_t packet_counter;
[; ;mtouch_sensor.c: 410: mtouch_sensor_adcsample_t last_a = 0;
[e = _last_a -> -> 0 `i `ui ]
"411
[v _last_b `ui ~T0 @X0 1 a ]
[; ;mtouch_sensor.c: 411: mtouch_sensor_adcsample_t last_b = 0;
[e = _last_b -> -> 0 `i `ui ]
"412
[v _activeSensor `uc ~T0 @X0 1 a ]
[; ;mtouch_sensor.c: 412: uint8_t activeSensor = 0;
[e = _activeSensor -> -> 0 `i `uc ]
"415
[v _AD1CON2_temp `uc ~T0 @X0 1 a ]
[v _AD2CON2_temp `uc ~T0 @X0 1 a ]
[; ;mtouch_sensor.c: 414: uint8_t ADCOMCON_temp;
[; ;mtouch_sensor.c: 415: uint8_t AD1CON2_temp,AD2CON2_temp;
[; ;mtouch_sensor.c: 418: if(Sensor_isEnabled(sensor_adc1)== 0 && Sensor_isEnabled(sensor_adc2)== 0)
"418
[e $ ! && == -> ( _Sensor_isEnabled (1 _sensor_adc1 `i -> 0 `i == -> ( _Sensor_isEnabled (1 _sensor_adc2 `i -> 0 `i 505  ]
[; ;mtouch_sensor.c: 419: return error;
"419
[e ) _error ]
[e $UE 504  ]
[e :U 505 ]
[; ;mtouch_sensor.c: 421: if(Sensor_isActive(sensor_adc2))
"421
[e $ ! != -> ( _Sensor_isActive (1 _sensor_adc2 `i -> -> -> 0 `i `uc `i 506  ]
[; ;mtouch_sensor.c: 422: activeSensor = 1;
"422
[e = _activeSensor -> -> 1 `i `uc ]
[e $U 507  ]
"423
[e :U 506 ]
[; ;mtouch_sensor.c: 423: else
[; ;mtouch_sensor.c: 424: {
"424
{
"426
}
[e :U 507 ]
[; ;mtouch_sensor.c: 426: }
[; ;mtouch_sensor.c: 428: ADCOMCON_temp = ADCOMCON;
"428
[e = _ADCOMCON_temp _ADCOMCON ]
[; ;mtouch_sensor.c: 429: AD1CON2_temp = AD1CON2;
"429
[e = _AD1CON2_temp _AD1CON2 ]
[; ;mtouch_sensor.c: 430: AD2CON2_temp = AD2CON2;
"430
[e = _AD2CON2_temp _AD2CON2 ]
[; ;mtouch_sensor.c: 431: MTOUCH_Sensor_Scan_Initialize();
"431
[e ( _MTOUCH_Sensor_Scan_Initialize ..  ]
[; ;mtouch_sensor.c: 433: if(Sensor_isEnabled(sensor_adc1))
"433
[e $ ! != -> ( _Sensor_isEnabled (1 _sensor_adc1 `i -> -> -> 0 `i `uc `i 508  ]
[; ;mtouch_sensor.c: 434: {
"434
{
[; ;mtouch_sensor.c: 435: AD1CON0 = (uint8_t)sensor_adc1->adcon0;
"435
[e = _AD1CON0 . *U _sensor_adc1 1 ]
[; ;mtouch_sensor.c: 436: AAD1CAP = (uint8_t)sensor_adc1->addcap;
"436
[e = _AAD1CAP . *U _sensor_adc1 5 ]
[; ;mtouch_sensor.c: 437: AD1CON2bits.TRIGSEL = (uint8_t)0b101;
"437
[e = . . _AD1CON2bits 0 1 -> -> 5 `i `uc ]
[; ;mtouch_sensor.c: 439: if(Sensor_isCalibrated(sensor_adc1))
"439
[e $ ! != -> ( _Sensor_isCalibrated (1 _sensor_adc1 `i -> -> -> 0 `i `uc `i 509  ]
[; ;mtouch_sensor.c: 440: {
"440
{
[; ;mtouch_sensor.c: 441: AD1PRECON = (uint8_t)sensor_adc1->precharge_time;
"441
[e = _AD1PRECON . *U _sensor_adc1 2 ]
[; ;mtouch_sensor.c: 442: AD1ACQCON = (uint8_t)sensor_adc1->acquisition_time;
"442
[e = _AD1ACQCON . *U _sensor_adc1 3 ]
"443
}
[; ;mtouch_sensor.c: 443: }
[e $U 510  ]
"444
[e :U 509 ]
[; ;mtouch_sensor.c: 444: else
[; ;mtouch_sensor.c: 445: {
"445
{
[; ;mtouch_sensor.c: 446: AD1PRECON = (mtouch_sensor_time_t)32;
"446
[e = _AD1PRECON -> -> 32 `i `uc ]
[; ;mtouch_sensor.c: 447: if(Sensor_isCalibratingAcqTime(sensor_adc1))
"447
[e $ ! != -> ( _Sensor_isCalibratingAcqTime (1 _sensor_adc1 `i -> -> -> 0 `i `uc `i 511  ]
[; ;mtouch_sensor.c: 448: AD1ACQCON = (uint8_t)sensor_adc1->acquisition_time;
"448
[e = _AD1ACQCON . *U _sensor_adc1 3 ]
[e $U 512  ]
"449
[e :U 511 ]
[; ;mtouch_sensor.c: 449: else
[; ;mtouch_sensor.c: 450: AD1ACQCON = (mtouch_sensor_time_t)32;
"450
[e = _AD1ACQCON -> -> 32 `i `uc ]
[e :U 512 ]
"451
}
[e :U 510 ]
[; ;mtouch_sensor.c: 451: }
[; ;mtouch_sensor.c: 453: packet_counter = sensor_adc1->oversampling-(mtouch_sensor_packetcounter_t)1;
"453
[e = _packet_counter -> - -> . *U _sensor_adc1 4 `i -> -> -> 1 `i `uc `i `uc ]
[; ;mtouch_sensor.c: 454: packet_sample[0] = (mtouch_sensor_packetsample_t)(sensor_adc1->oversampling)<<9;
"454
[e = *U + &U _packet_sample * -> -> -> 0 `i `ui `ux -> -> # *U &U _packet_sample `ui `ux << -> . *U _sensor_adc1 4 `ui -> 9 `i ]
[; ;mtouch_sensor.c: 456: PIR1bits.AD1IF = 0;
"456
[e = . . _PIR1bits 1 1 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 457: AAD1GRD = 0b01000000;
"457
[e = _AAD1GRD -> -> 64 `i `uc ]
[; ;mtouch_sensor.c: 458: AAD2GRD = 0b00000000;
"458
[e = _AAD2GRD -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 459: APFCONbits.GRDASEL = 0x0;
"459
[e = . . _APFCONbits 0 0 -> -> 0 `i `uc ]
"461
}
[; ;mtouch_sensor.c: 461: }
[e $U 513  ]
"462
[e :U 508 ]
[; ;mtouch_sensor.c: 462: else
[; ;mtouch_sensor.c: 463: {
"463
{
[; ;mtouch_sensor.c: 464: packet_counter = sensor_adc2->oversampling-(mtouch_sensor_packetcounter_t)1;
"464
[e = _packet_counter -> - -> . *U _sensor_adc2 4 `i -> -> -> 1 `i `uc `i `uc ]
[; ;mtouch_sensor.c: 465: ADxIF_flag = 1;
"465
[e = _ADxIF_flag -> -> 1 `i `uc ]
[; ;mtouch_sensor.c: 466: AAD1GRD = 0b00000000;
"466
[e = _AAD1GRD -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 467: AAD2GRD = 0b01000000;
"467
[e = _AAD2GRD -> -> 64 `i `uc ]
[; ;mtouch_sensor.c: 468: APFCONbits.GRDASEL = 0x1;
"468
[e = . . _APFCONbits 0 0 -> -> 1 `i `uc ]
"469
}
[e :U 513 ]
[; ;mtouch_sensor.c: 469: }
[; ;mtouch_sensor.c: 471: if(Sensor_isEnabled(sensor_adc2))
"471
[e $ ! != -> ( _Sensor_isEnabled (1 _sensor_adc2 `i -> -> -> 0 `i `uc `i 514  ]
[; ;mtouch_sensor.c: 472: {
"472
{
[; ;mtouch_sensor.c: 473: AD2CON0 = (uint8_t)sensor_adc2->adcon0;
"473
[e = _AD2CON0 . *U _sensor_adc2 1 ]
[; ;mtouch_sensor.c: 474: AAD2CAP = (uint8_t)sensor_adc2->addcap;
"474
[e = _AAD2CAP . *U _sensor_adc2 5 ]
[; ;mtouch_sensor.c: 475: AD2CON2bits.TRIGSEL = (uint8_t)0b101;
"475
[e = . . _AD2CON2bits 0 1 -> -> 5 `i `uc ]
[; ;mtouch_sensor.c: 476: if(Sensor_isCalibrated(sensor_adc2))
"476
[e $ ! != -> ( _Sensor_isCalibrated (1 _sensor_adc2 `i -> -> -> 0 `i `uc `i 515  ]
[; ;mtouch_sensor.c: 477: {
"477
{
[; ;mtouch_sensor.c: 478: AD2PRECON = (uint8_t)sensor_adc2->precharge_time;
"478
[e = _AD2PRECON . *U _sensor_adc2 2 ]
[; ;mtouch_sensor.c: 479: AD2ACQCON = (uint8_t)sensor_adc2->acquisition_time;
"479
[e = _AD2ACQCON . *U _sensor_adc2 3 ]
"480
}
[; ;mtouch_sensor.c: 480: }
[e $U 516  ]
"481
[e :U 515 ]
[; ;mtouch_sensor.c: 481: else
[; ;mtouch_sensor.c: 482: {
"482
{
[; ;mtouch_sensor.c: 483: AD2PRECON = (mtouch_sensor_time_t)32;
"483
[e = _AD2PRECON -> -> 32 `i `uc ]
[; ;mtouch_sensor.c: 484: if(Sensor_isCalibratingAcqTime(sensor_adc2))
"484
[e $ ! != -> ( _Sensor_isCalibratingAcqTime (1 _sensor_adc2 `i -> -> -> 0 `i `uc `i 517  ]
[; ;mtouch_sensor.c: 485: AD2ACQCON = (uint8_t)sensor_adc2->acquisition_time;
"485
[e = _AD2ACQCON . *U _sensor_adc2 3 ]
[e $U 518  ]
"486
[e :U 517 ]
[; ;mtouch_sensor.c: 486: else
[; ;mtouch_sensor.c: 487: AD2ACQCON = (mtouch_sensor_time_t)32;
"487
[e = _AD2ACQCON -> -> 32 `i `uc ]
[e :U 518 ]
"488
}
[e :U 516 ]
[; ;mtouch_sensor.c: 488: }
[; ;mtouch_sensor.c: 489: packet_sample[1] = (mtouch_sensor_packetsample_t)(sensor_adc2->oversampling)<<9;
"489
[e = *U + &U _packet_sample * -> -> -> 1 `i `ui `ux -> -> # *U &U _packet_sample `ui `ux << -> . *U _sensor_adc2 4 `ui -> 9 `i ]
[; ;mtouch_sensor.c: 490: PIR2bits.AD2IF = 0;
"490
[e = . . _PIR2bits 0 3 -> -> 0 `i `uc ]
"491
}
[e :U 514 ]
[; ;mtouch_sensor.c: 491: }
[; ;mtouch_sensor.c: 493: sensor_globalFlags.done = 0;
"493
[e = . _sensor_globalFlags 0 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 495: TMR2_LoadPeriodRegister(sample_period);
"495
[e ( _TMR2_LoadPeriodRegister (1 _sample_period ]
[; ;mtouch_sensor.c: 496: TMR2_StartTimer();
"496
[e ( _TMR2_StartTimer ..  ]
[; ;mtouch_sensor.c: 497: packet_noise = 0;
"497
[e = _packet_noise -> -> 0 `i `ui ]
[; ;mtouch_sensor.c: 499: do
"499
[e :U 521 ]
[; ;mtouch_sensor.c: 500: {
"500
{
[; ;mtouch_sensor.c: 501: if(ADxIF_flag == 0)
"501
[e $ ! == -> _ADxIF_flag `i -> 0 `i 522  ]
[; ;mtouch_sensor.c: 502: {
"502
{
[; ;mtouch_sensor.c: 503: if (PIR1bits.AD1IF == 0) { sensor_globalFlags.check = 0; }
"503
[e $ ! == -> . . _PIR1bits 1 1 `i -> 0 `i 523  ]
{
[e = . _sensor_globalFlags 1 -> -> 0 `i `uc ]
}
[e :U 523 ]
[; ;mtouch_sensor.c: 504: while (PIR1bits.AD1IF == 0) { }
"504
[e $U 524  ]
[e :U 525 ]
{
}
[e :U 524 ]
[e $ == -> . . _PIR1bits 1 1 `i -> 0 `i 525  ]
[e :U 526 ]
[; ;mtouch_sensor.c: 505: PIR1bits.AD1IF = 0;
"505
[e = . . _PIR1bits 1 1 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 506: AAD1GRD ^= 0b00100000;
"506
[e =^ _AAD1GRD -> -> 32 `i `uc ]
"507
}
[; ;mtouch_sensor.c: 507: }
[e $U 527  ]
"508
[e :U 522 ]
[; ;mtouch_sensor.c: 508: else
[; ;mtouch_sensor.c: 509: {
"509
{
[; ;mtouch_sensor.c: 510: if (PIR2bits.AD2IF == 0) { sensor_globalFlags.check = 0; }
"510
[e $ ! == -> . . _PIR2bits 0 3 `i -> 0 `i 528  ]
{
[e = . _sensor_globalFlags 1 -> -> 0 `i `uc ]
}
[e :U 528 ]
[; ;mtouch_sensor.c: 511: while (PIR2bits.AD2IF == 0) { }
"511
[e $U 529  ]
[e :U 530 ]
{
}
[e :U 529 ]
[e $ == -> . . _PIR2bits 0 3 `i -> 0 `i 530  ]
[e :U 531 ]
[; ;mtouch_sensor.c: 512: PIR2bits.AD2IF = 0;
"512
[e = . . _PIR2bits 0 3 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 513: AAD2GRD ^= 0b00100000;
"513
[e =^ _AAD2GRD -> -> 32 `i `uc ]
"514
}
[e :U 527 ]
[; ;mtouch_sensor.c: 514: }
[; ;mtouch_sensor.c: 516: AAD1CON3 ^= 0b11000000;
"516
[e =^ _AAD1CON3 -> -> 192 `i `uc ]
[; ;mtouch_sensor.c: 517: AAD2CON3 ^= 0b11000000;
"517
[e =^ _AAD2CON3 -> -> 192 `i `uc ]
[; ;mtouch_sensor.c: 520: if ((packet_counter & 0x01) == 0)
"520
[e $ ! == & -> _packet_counter `i -> 1 `i -> 0 `i 532  ]
[; ;mtouch_sensor.c: 521: {
"521
{
[; ;mtouch_sensor.c: 522: packet_sample[0] += AAD1RES0;
"522
[e =+ *U + &U _packet_sample * -> -> -> 0 `i `ui `ux -> -> # *U &U _packet_sample `ui `ux -> _AAD1RES0 `ui ]
[; ;mtouch_sensor.c: 523: packet_sample[1] += AAD2RES0;
"523
[e =+ *U + &U _packet_sample * -> -> -> 1 `i `ui `ux -> -> # *U &U _packet_sample `ui `ux -> _AAD2RES0 `ui ]
[; ;mtouch_sensor.c: 524: if(activeSensor ==0)
"524
[e $ ! == -> _activeSensor `i -> 0 `i 533  ]
[; ;mtouch_sensor.c: 525: {
"525
{
[; ;mtouch_sensor.c: 526: packet_noise += abs(last_b-AAD1RES0);
"526
[e =+ _packet_noise -> ( _abs (1 -> - _last_b -> _AAD1RES0 `ui `i `ui ]
[; ;mtouch_sensor.c: 527: last_b = AAD1RES0;
"527
[e = _last_b -> _AAD1RES0 `ui ]
"528
}
[; ;mtouch_sensor.c: 528: }
[e $U 534  ]
"529
[e :U 533 ]
[; ;mtouch_sensor.c: 529: else
[; ;mtouch_sensor.c: 530: {
"530
{
[; ;mtouch_sensor.c: 531: packet_noise += abs(last_b-AAD2RES0);
"531
[e =+ _packet_noise -> ( _abs (1 -> - _last_b -> _AAD2RES0 `ui `i `ui ]
[; ;mtouch_sensor.c: 532: last_b = AAD2RES0;
"532
[e = _last_b -> _AAD2RES0 `ui ]
"533
}
[e :U 534 ]
"534
}
[; ;mtouch_sensor.c: 533: }
[; ;mtouch_sensor.c: 534: }
[e $U 535  ]
"535
[e :U 532 ]
[; ;mtouch_sensor.c: 535: else
[; ;mtouch_sensor.c: 536: {
"536
{
[; ;mtouch_sensor.c: 537: packet_sample[0] -= AAD1RES0;
"537
[e =- *U + &U _packet_sample * -> -> -> 0 `i `ui `ux -> -> # *U &U _packet_sample `ui `ux -> _AAD1RES0 `ui ]
[; ;mtouch_sensor.c: 538: packet_sample[1] -= AAD2RES0;
"538
[e =- *U + &U _packet_sample * -> -> -> 1 `i `ui `ux -> -> # *U &U _packet_sample `ui `ux -> _AAD2RES0 `ui ]
[; ;mtouch_sensor.c: 539: if(activeSensor ==0)
"539
[e $ ! == -> _activeSensor `i -> 0 `i 536  ]
[; ;mtouch_sensor.c: 540: {
"540
{
[; ;mtouch_sensor.c: 541: packet_noise +=abs(last_a-AAD1RES0);
"541
[e =+ _packet_noise -> ( _abs (1 -> - _last_a -> _AAD1RES0 `ui `i `ui ]
[; ;mtouch_sensor.c: 542: last_a = AAD1RES0;
"542
[e = _last_a -> _AAD1RES0 `ui ]
"543
}
[; ;mtouch_sensor.c: 543: }
[e $U 537  ]
"544
[e :U 536 ]
[; ;mtouch_sensor.c: 544: else
[; ;mtouch_sensor.c: 545: {
"545
{
[; ;mtouch_sensor.c: 546: packet_noise +=abs(last_a-AAD2RES0);
"546
[e =+ _packet_noise -> ( _abs (1 -> - _last_a -> _AAD2RES0 `ui `i `ui ]
[; ;mtouch_sensor.c: 547: last_a = AAD1RES0;
"547
[e = _last_a -> _AAD1RES0 `ui ]
"548
}
[e :U 537 ]
"549
}
[e :U 535 ]
[; ;mtouch_sensor.c: 548: }
[; ;mtouch_sensor.c: 549: }
[; ;mtouch_sensor.c: 552: if (packet_counter == 0)
"552
[e $ ! == -> _packet_counter `i -> 0 `i 538  ]
[; ;mtouch_sensor.c: 553: {
"553
{
[; ;mtouch_sensor.c: 555: sensor_globalFlags.done = (uint8_t)1;
"555
[e = . _sensor_globalFlags 0 -> -> 1 `i `uc ]
"556
}
[e :U 538 ]
[; ;mtouch_sensor.c: 556: }
[; ;mtouch_sensor.c: 557: packet_counter--;
"557
[e -- _packet_counter -> -> 1 `i `uc ]
[; ;mtouch_sensor.c: 559: if (sensor_globalFlags.check != 0)
"559
[e $ ! != -> . _sensor_globalFlags 1 `i -> 0 `i 539  ]
[; ;mtouch_sensor.c: 560: {
"560
{
[; ;mtouch_sensor.c: 561: sensor_globalFlags.error = 1;
"561
[e = . _sensor_globalFlags 2 -> -> 1 `i `uc ]
[; ;mtouch_sensor.c: 562: sensor_globalFlags.done = 1;
"562
[e = . _sensor_globalFlags 0 -> -> 1 `i `uc ]
"563
}
[e :U 539 ]
[; ;mtouch_sensor.c: 563: }
[; ;mtouch_sensor.c: 564: sensor_globalFlags.check = 1;
"564
[e = . _sensor_globalFlags 1 -> -> 1 `i `uc ]
"565
}
[; ;mtouch_sensor.c: 565: } while(sensor_globalFlags.done == 0);
[e $ == -> . _sensor_globalFlags 0 `i -> 0 `i 521  ]
[e :U 520 ]
[; ;mtouch_sensor.c: 567: TMR2_StopTimer();
"567
[e ( _TMR2_StopTimer ..  ]
[; ;mtouch_sensor.c: 568: ADCOMCON = ADCOMCON_temp;
"568
[e = _ADCOMCON _ADCOMCON_temp ]
[; ;mtouch_sensor.c: 569: AD1CON2 = AD1CON2_temp;
"569
[e = _AD1CON2 _AD1CON2_temp ]
[; ;mtouch_sensor.c: 570: AD2CON2 = AD2CON2_temp;
"570
[e = _AD2CON2 _AD2CON2_temp ]
[; ;mtouch_sensor.c: 573: if(Sensor_isEnabled(sensor_adc1) && !Sensor_isCalibrated(sensor_adc1))
"573
[e $ ! && != -> ( _Sensor_isEnabled (1 _sensor_adc1 `i -> -> -> 0 `i `uc `i ! != -> ( _Sensor_isCalibrated (1 _sensor_adc1 `i -> -> -> 0 `i `uc `i 540  ]
[; ;mtouch_sensor.c: 574: Sensor_autoCalibration(sensor_adc1);
"574
[e ( _Sensor_autoCalibration (1 _sensor_adc1 ]
[e :U 540 ]
[; ;mtouch_sensor.c: 576: if(Sensor_isEnabled(sensor_adc2) && !Sensor_isCalibrated(sensor_adc2))
"576
[e $ ! && != -> ( _Sensor_isEnabled (1 _sensor_adc2 `i -> -> -> 0 `i `uc `i ! != -> ( _Sensor_isCalibrated (1 _sensor_adc2 `i -> -> -> 0 `i `uc `i 541  ]
[; ;mtouch_sensor.c: 577: Sensor_autoCalibration(sensor_adc2);
"577
[e ( _Sensor_autoCalibration (1 _sensor_adc2 ]
[e :U 541 ]
[; ;mtouch_sensor.c: 579: AD1PRECON = 0;
"579
[e = _AD1PRECON -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 580: AD2PRECON = 0;
"580
[e = _AD2PRECON -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 581: AD1ACQCON = 0;
"581
[e = _AD1ACQCON -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 582: AD2ACQCON = 0;
"582
[e = _AD2ACQCON -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 583: AD1CON0bits.ADON = 0;
"583
[e = . . _AD1CON0bits 0 0 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 584: AD2CON0bits.ADON = 0;
"584
[e = . . _AD2CON0bits 0 0 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 586: return error;
"586
[e ) _error ]
[e $UE 504  ]
[; ;mtouch_sensor.c: 587: }
"587
[e :UE 504 ]
}
"597
[v _Sensor_autoCalibration `(E3335 ~T0 @X0 1 sf1`*S455 ]
"598
{
[; ;mtouch_sensor.c: 597: static enum mtouch_sensor_error Sensor_autoCalibration(mtouch_sensor_t* sensor)
[; ;mtouch_sensor.c: 598: {
[e :U _Sensor_autoCalibration ]
"597
[v _sensor `*S455 ~T0 @X0 1 r1 ]
"598
[f ]
"599
[v _adcIndex `uc ~T0 @X0 1 a ]
[; ;mtouch_sensor.c: 599: uint8_t adcIndex = Sensor_getScanGroupIndex(sensor);
[e = _adcIndex ( _Sensor_getScanGroupIndex (1 _sensor ]
[; ;mtouch_sensor.c: 601: if(!Sensor_isCalibratingAcqTime(sensor))
"601
[e $ ! ! != -> ( _Sensor_isCalibratingAcqTime (1 _sensor `i -> -> -> 0 `i `uc `i 543  ]
[; ;mtouch_sensor.c: 602: {
"602
{
[; ;mtouch_sensor.c: 603: if(packet_sample[adcIndex] > (mtouch_sensor_packetsample_t)(sensor->oversampling)<<9)
"603
[e $ ! > *U + &U _packet_sample * -> _adcIndex `ux -> -> # *U &U _packet_sample `ui `ux << -> . *U _sensor 4 `ui -> 9 `i 544  ]
[; ;mtouch_sensor.c: 604: {
"604
{
[; ;mtouch_sensor.c: 605: if(++(sensor->addcap) >= (uint8_t)0x0F)
"605
[e $ ! >= -> =+ . *U _sensor 5 -> -> 1 `i `uc `i -> -> -> 15 `i `uc `i 545  ]
[; ;mtouch_sensor.c: 606: Sensor_setCalibratAcqTime(sensor);
"606
[e ( _Sensor_setCalibratAcqTime (1 _sensor ]
[e :U 545 ]
"607
}
[; ;mtouch_sensor.c: 607: }
[e $U 546  ]
"608
[e :U 544 ]
[; ;mtouch_sensor.c: 608: else
[; ;mtouch_sensor.c: 609: {
"609
{
[; ;mtouch_sensor.c: 610: Sensor_setCalibratAcqTime(sensor);
"610
[e ( _Sensor_setCalibratAcqTime (1 _sensor ]
"611
}
[e :U 546 ]
"612
}
[; ;mtouch_sensor.c: 611: }
[; ;mtouch_sensor.c: 612: }
[e $U 547  ]
"613
[e :U 543 ]
[; ;mtouch_sensor.c: 613: else
[; ;mtouch_sensor.c: 614: {
"614
{
[; ;mtouch_sensor.c: 615: if(abs(packet_sample[adcIndex] - sensor->rawSample) < (mtouch_sensor_packetsample_t)(sensor->oversampling)<<1)
"615
[e $ ! < -> ( _abs (1 -> - *U + &U _packet_sample * -> _adcIndex `ux -> -> # *U &U _packet_sample `ui `ux . *U _sensor 6 `i `ui << -> . *U _sensor 4 `ui -> 1 `i 548  ]
[; ;mtouch_sensor.c: 616: {
"616
{
[; ;mtouch_sensor.c: 617: sensor->precharge_time = (mtouch_sensor_time_t)32;
"617
[e = . *U _sensor 2 -> -> 32 `i `uc ]
[; ;mtouch_sensor.c: 618: Sensor_setCalibrated(sensor);
"618
[e ( _Sensor_setCalibrated (1 _sensor ]
"619
}
[; ;mtouch_sensor.c: 619: }
[e $U 549  ]
"620
[e :U 548 ]
[; ;mtouch_sensor.c: 620: else
[; ;mtouch_sensor.c: 621: {
"621
{
[; ;mtouch_sensor.c: 622: if(++(sensor->acquisition_time)>=(mtouch_sensor_time_t)32)
"622
[e $ ! >= -> =+ . *U _sensor 3 -> -> 1 `i `uc `i -> -> -> 32 `i `uc `i 550  ]
[; ;mtouch_sensor.c: 623: {
"623
{
[; ;mtouch_sensor.c: 624: sensor->precharge_time = (mtouch_sensor_time_t)32;
"624
[e = . *U _sensor 2 -> -> 32 `i `uc ]
[; ;mtouch_sensor.c: 625: Sensor_setCalibrated(sensor);
"625
[e ( _Sensor_setCalibrated (1 _sensor ]
"626
}
[e :U 550 ]
"627
}
[e :U 549 ]
"628
}
[e :U 547 ]
[; ;mtouch_sensor.c: 626: }
[; ;mtouch_sensor.c: 627: }
[; ;mtouch_sensor.c: 628: }
[; ;mtouch_sensor.c: 630: return MTOUCH_SENSOR_ERROR_none;
"630
[e ) . `E3335 0 ]
[e $UE 542  ]
[; ;mtouch_sensor.c: 631: }
"631
[e :UE 542 ]
}
"640
[v _Sensor_Scanfrequency_Evaluation `(v ~T0 @X0 1 sf2`*S455`*S455 ]
"641
{
[; ;mtouch_sensor.c: 640: static void Sensor_Scanfrequency_Evaluation(mtouch_sensor_t* sensor_adc1,mtouch_sensor_t* sensor_adc2)
[; ;mtouch_sensor.c: 641: {
[e :U _Sensor_Scanfrequency_Evaluation ]
"640
[v _sensor_adc1 `*S455 ~T0 @X0 1 r1 ]
[v _sensor_adc2 `*S455 ~T0 @X0 1 r2 ]
"641
[f ]
"642
[v _i `uc ~T0 @X0 1 a ]
"643
[v F3654 `Cuc ~T0 @X0 -> 5 `i s frequency_hop ]
[i F3654
:U ..
-> -> 0 `i `uc
-> -> 13 `i `uc
-> -> 28 `i `uc
-> -> 30 `i `uc
-> -> 23 `i `uc
..
]
"644
[v _packet_noise_Max `ui ~T0 @X0 1 a ]
"645
[v _best_sample_period `uc ~T0 @X0 1 a ]
"646
[v _best_packet_sample `ui ~T0 @X0 -> 2 `i a ]
[; ;mtouch_sensor.c: 642: uint8_t i;
[; ;mtouch_sensor.c: 643: const mtouch_sensor_sampleperiod_t frequency_hop[5] = {0,13,28,30,23};
[; ;mtouch_sensor.c: 644: mtouch_sensor_packetnoise_t packet_noise_Max;
[; ;mtouch_sensor.c: 645: mtouch_sensor_sampleperiod_t best_sample_period;
[; ;mtouch_sensor.c: 646: mtouch_sensor_packetsample_t best_packet_sample[2];
[; ;mtouch_sensor.c: 648: packet_noise_Max = packet_noise + (packet_noise>>2);
"648
[e = _packet_noise_Max + _packet_noise >> _packet_noise -> 2 `i ]
[; ;mtouch_sensor.c: 649: best_sample_period = sample_period;
"649
[e = _best_sample_period _sample_period ]
[; ;mtouch_sensor.c: 650: best_packet_sample[0] = packet_sample[0];
"650
[e = *U + &U _best_packet_sample * -> -> -> 0 `i `ui `ux -> -> # *U &U _best_packet_sample `ui `ux *U + &U _packet_sample * -> -> -> 0 `i `ui `ux -> -> # *U &U _packet_sample `ui `ux ]
[; ;mtouch_sensor.c: 651: best_packet_sample[1] = packet_sample[1];
"651
[e = *U + &U _best_packet_sample * -> -> -> 1 `i `ui `ux -> -> # *U &U _best_packet_sample `ui `ux *U + &U _packet_sample * -> -> -> 1 `i `ui `ux -> -> # *U &U _packet_sample `ui `ux ]
[; ;mtouch_sensor.c: 653: for(i=(uint8_t)0;i<(uint8_t)5;i++)
"653
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> -> -> 5 `i `uc `i 552  ]
[e $U 553  ]
"654
[e :U 552 ]
[; ;mtouch_sensor.c: 654: {
{
[; ;mtouch_sensor.c: 655: sample_period += frequency_hop[i];
"655
[e =+ _sample_period *U + &U F3654 * -> _i `ux -> -> # *U &U F3654 `ui `ux ]
[; ;mtouch_sensor.c: 656: if(sample_period > ((mtouch_sensor_sampleperiod_t)255))
"656
[e $ ! > -> _sample_period `i -> -> -> 255 `i `uc `i 555  ]
[; ;mtouch_sensor.c: 657: {
"657
{
[; ;mtouch_sensor.c: 658: sample_period-=((mtouch_sensor_sampleperiod_t)255);
"658
[e =- _sample_period -> -> 255 `i `uc ]
[; ;mtouch_sensor.c: 659: sample_period+=((mtouch_sensor_sampleperiod_t)(mtouch_sensor_time_t)32+(mtouch_sensor_time_t)32+(mtouch_sensor_time_t)110);
"659
[e =+ _sample_period -> + + -> -> -> 32 `i `uc `i -> -> -> 32 `i `uc `i -> -> -> 110 `i `uc `i `uc ]
"660
}
[; ;mtouch_sensor.c: 660: }
[e $U 556  ]
"661
[e :U 555 ]
[; ;mtouch_sensor.c: 661: else if(sample_period < ((mtouch_sensor_sampleperiod_t)(mtouch_sensor_time_t)32+(mtouch_sensor_time_t)32+(mtouch_sensor_time_t)110))
[e $ ! < -> _sample_period `i + + -> -> -> 32 `i `uc `i -> -> -> 32 `i `uc `i -> -> -> 110 `i `uc `i 557  ]
[; ;mtouch_sensor.c: 662: {
"662
{
[; ;mtouch_sensor.c: 663: sample_period += ((mtouch_sensor_sampleperiod_t)(mtouch_sensor_time_t)32+(mtouch_sensor_time_t)32+(mtouch_sensor_time_t)110);
"663
[e =+ _sample_period -> + + -> -> -> 32 `i `uc `i -> -> -> 32 `i `uc `i -> -> -> 110 `i `uc `i `uc ]
"664
}
[e :U 557 ]
"665
[e :U 556 ]
[; ;mtouch_sensor.c: 664: }
[; ;mtouch_sensor.c: 665: Sensor_Acq_ExecutePacket(sensor_adc1,sensor_adc2);
[e ( _Sensor_Acq_ExecutePacket (2 , _sensor_adc1 _sensor_adc2 ]
[; ;mtouch_sensor.c: 666: if(packet_noise_Max < packet_noise)
"666
[e $ ! < _packet_noise_Max _packet_noise 558  ]
[; ;mtouch_sensor.c: 667: {
"667
{
[; ;mtouch_sensor.c: 668: packet_noise_Max = packet_noise;
"668
[e = _packet_noise_Max _packet_noise ]
[; ;mtouch_sensor.c: 669: best_sample_period = sample_period;
"669
[e = _best_sample_period _sample_period ]
[; ;mtouch_sensor.c: 670: best_packet_sample[0] = packet_sample[0];
"670
[e = *U + &U _best_packet_sample * -> -> -> 0 `i `ui `ux -> -> # *U &U _best_packet_sample `ui `ux *U + &U _packet_sample * -> -> -> 0 `i `ui `ux -> -> # *U &U _packet_sample `ui `ux ]
[; ;mtouch_sensor.c: 671: best_packet_sample[1] = packet_sample[1];
"671
[e = *U + &U _best_packet_sample * -> -> -> 1 `i `ui `ux -> -> # *U &U _best_packet_sample `ui `ux *U + &U _packet_sample * -> -> -> 1 `i `ui `ux -> -> # *U &U _packet_sample `ui `ux ]
"672
}
[e :U 558 ]
"673
}
"653
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> -> -> 5 `i `uc `i 552  ]
[e :U 553 ]
"673
}
[; ;mtouch_sensor.c: 672: }
[; ;mtouch_sensor.c: 673: }
[; ;mtouch_sensor.c: 675: sample_period = best_sample_period;
"675
[e = _sample_period _best_sample_period ]
[; ;mtouch_sensor.c: 676: packet_sample[0] = best_packet_sample[0];
"676
[e = *U + &U _packet_sample * -> -> -> 0 `i `ui `ux -> -> # *U &U _packet_sample `ui `ux *U + &U _best_packet_sample * -> -> -> 0 `i `ui `ux -> -> # *U &U _best_packet_sample `ui `ux ]
[; ;mtouch_sensor.c: 677: packet_sample[1] = best_packet_sample[1];
"677
[e = *U + &U _packet_sample * -> -> -> 1 `i `ui `ux -> -> # *U &U _packet_sample `ui `ux *U + &U _best_packet_sample * -> -> -> 1 `i `ui `ux -> -> # *U &U _best_packet_sample `ui `ux ]
[; ;mtouch_sensor.c: 678: }
"678
[e :UE 551 ]
}
"685
[v _MTOUCH_Sensor_RawSample_Get `(ui ~T0 @X0 1 ef1`E3328 ]
"686
{
[; ;mtouch_sensor.c: 685: mtouch_sensor_sample_t MTOUCH_Sensor_RawSample_Get(enum mtouch_sensor_names name)
[; ;mtouch_sensor.c: 686: {
[e :U _MTOUCH_Sensor_RawSample_Get ]
"685
[v _name `E3328 ~T0 @X0 1 r1 ]
"686
[f ]
[; ;mtouch_sensor.c: 687: if (name < 6)
"687
[e $ ! < -> _name `i -> 6 `i 560  ]
[; ;mtouch_sensor.c: 688: {
"688
{
[; ;mtouch_sensor.c: 689: return mtouch_sensor[name].rawSample;
"689
[e ) . *U + &U _mtouch_sensor * -> _name `ux -> -> # *U &U _mtouch_sensor `ui `ux 6 ]
[e $UE 559  ]
"690
}
[; ;mtouch_sensor.c: 690: }
[e $U 561  ]
"691
[e :U 560 ]
[; ;mtouch_sensor.c: 691: else
[; ;mtouch_sensor.c: 692: return (mtouch_sensor_sample_t)0;
"692
[e ) -> -> 0 `i `ui ]
[e $UE 559  ]
[e :U 561 ]
[; ;mtouch_sensor.c: 693: }
"693
[e :UE 559 ]
}
"695
[v _Sensor_RawSample_Update `(v ~T0 @X0 1 sf1`*S455 ]
"696
{
[; ;mtouch_sensor.c: 695: static void Sensor_RawSample_Update(mtouch_sensor_t* sensor)
[; ;mtouch_sensor.c: 696: {
[e :U _Sensor_RawSample_Update ]
"695
[v _sensor `*S455 ~T0 @X0 1 r1 ]
"696
[f ]
"697
[v _adcIndex `uc ~T0 @X0 1 a ]
[; ;mtouch_sensor.c: 697: uint8_t adcIndex = Sensor_getScanGroupIndex(sensor);
[e = _adcIndex ( _Sensor_getScanGroupIndex (1 _sensor ]
[; ;mtouch_sensor.c: 699: if (INTCONbits.GIE == (uint8_t)1)
"699
[e $ ! == -> . . _INTCONbits 0 7 `i -> -> -> 1 `i `uc `i 563  ]
[; ;mtouch_sensor.c: 700: {
"700
{
[; ;mtouch_sensor.c: 701: INTCONbits.GIE = (uint8_t)0;
"701
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 702: sensor->rawSample = packet_sample[adcIndex];
"702
[e = . *U _sensor 6 *U + &U _packet_sample * -> _adcIndex `ux -> -> # *U &U _packet_sample `ui `ux ]
[; ;mtouch_sensor.c: 703: INTCONbits.GIE = (uint8_t)1;
"703
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
"704
}
[; ;mtouch_sensor.c: 704: }
[e $U 564  ]
"705
[e :U 563 ]
[; ;mtouch_sensor.c: 705: else
[; ;mtouch_sensor.c: 706: {
"706
{
[; ;mtouch_sensor.c: 707: sensor->rawSample = packet_sample[adcIndex];
"707
[e = . *U _sensor 6 *U + &U _packet_sample * -> _adcIndex `ux -> -> # *U &U _packet_sample `ui `ux ]
"708
}
[e :U 564 ]
[; ;mtouch_sensor.c: 708: }
[; ;mtouch_sensor.c: 709: }
"709
[e :UE 562 ]
}
"716
[v _Sensor_DefaultCallback `(v ~T0 @X0 1 sf1`E3328 ]
{
[; ;mtouch_sensor.c: 716: static void Sensor_DefaultCallback(enum mtouch_sensor_names sensor) { }
[e :U _Sensor_DefaultCallback ]
[v _sensor `E3328 ~T0 @X0 1 r1 ]
[f ]
[e :UE 565 ]
}
"717
[v _MTOUCH_Sensor_SetSampledCallback `(v ~T0 @X0 1 ef1`*F3350 ]
"718
{
[; ;mtouch_sensor.c: 717: void MTOUCH_Sensor_SetSampledCallback(void (*callback)(enum mtouch_sensor_names sensor))
[; ;mtouch_sensor.c: 718: {
[e :U _MTOUCH_Sensor_SetSampledCallback ]
[v F3683 `(v ~T0 @X0 0 tf1`E3328 ]
"717
[v _callback `*F3683 ~T0 @X0 1 r1 ]
"718
[f ]
[; ;mtouch_sensor.c: 719: callback_sampled = callback;
"719
[e = _callback_sampled _callback ]
[; ;mtouch_sensor.c: 720: }
"720
[e :UE 566 ]
}
"728
[v _MTOUCH_Sensor_Disable `(v ~T0 @X0 1 ef1`E3328 ]
"729
{
[; ;mtouch_sensor.c: 728: void MTOUCH_Sensor_Disable(enum mtouch_sensor_names sensor)
[; ;mtouch_sensor.c: 729: {
[e :U _MTOUCH_Sensor_Disable ]
"728
[v _sensor `E3328 ~T0 @X0 1 r1 ]
"729
[f ]
[; ;mtouch_sensor.c: 730: if(sensor < 6)
"730
[e $ ! < -> _sensor `i -> 6 `i 568  ]
[; ;mtouch_sensor.c: 731: mtouch_sensor[sensor].enabled = 0;
"731
[e = . *U + &U _mtouch_sensor * -> _sensor `ux -> -> # *U &U _mtouch_sensor `ui `ux 10 -> -> 0 `i `uc ]
[e :U 568 ]
[; ;mtouch_sensor.c: 732: }
"732
[e :UE 567 ]
}
"734
[v _MTOUCH_Sensor_Enable `(v ~T0 @X0 1 ef1`E3328 ]
"735
{
[; ;mtouch_sensor.c: 734: void MTOUCH_Sensor_Enable(enum mtouch_sensor_names sensor)
[; ;mtouch_sensor.c: 735: {
[e :U _MTOUCH_Sensor_Enable ]
"734
[v _sensor `E3328 ~T0 @X0 1 r1 ]
"735
[f ]
[; ;mtouch_sensor.c: 736: if(sensor < 6)
"736
[e $ ! < -> _sensor `i -> 6 `i 570  ]
[; ;mtouch_sensor.c: 737: mtouch_sensor[sensor].enabled = 1;
"737
[e = . *U + &U _mtouch_sensor * -> _sensor `ux -> -> # *U &U _mtouch_sensor `ui `ux 10 -> -> 1 `i `uc ]
[e :U 570 ]
[; ;mtouch_sensor.c: 738: }
"738
[e :UE 569 ]
}
"740
[v _MTOUCH_Sensor_isEnabled `(uc ~T0 @X0 1 ef1`E3328 ]
"741
{
[; ;mtouch_sensor.c: 740: bool MTOUCH_Sensor_isEnabled(enum mtouch_sensor_names sensor)
[; ;mtouch_sensor.c: 741: {
[e :U _MTOUCH_Sensor_isEnabled ]
"740
[v _sensor `E3328 ~T0 @X0 1 r1 ]
"741
[f ]
[; ;mtouch_sensor.c: 742: if(sensor < 6)
"742
[e $ ! < -> _sensor `i -> 6 `i 572  ]
[; ;mtouch_sensor.c: 743: return (bool)mtouch_sensor[sensor].enabled;
"743
[e ) . *U + &U _mtouch_sensor * -> _sensor `ux -> -> # *U &U _mtouch_sensor `ui `ux 10 ]
[e $UE 571  ]
[e $U 573  ]
"744
[e :U 572 ]
[; ;mtouch_sensor.c: 744: else
[; ;mtouch_sensor.c: 745: return 0;
"745
[e ) -> -> 0 `i `uc ]
[e $UE 571  ]
[e :U 573 ]
[; ;mtouch_sensor.c: 746: }
"746
[e :UE 571 ]
}
"748
[v _Sensor_isEnabled `(uc ~T0 @X0 1 sf1`*S455 ]
"749
{
[; ;mtouch_sensor.c: 748: static bool Sensor_isEnabled(mtouch_sensor_t* sensor)
[; ;mtouch_sensor.c: 749: {
[e :U _Sensor_isEnabled ]
"748
[v _sensor `*S455 ~T0 @X0 1 r1 ]
"749
[f ]
[; ;mtouch_sensor.c: 750: if(sensor!=(0))
"750
[e $ ! != _sensor -> -> 0 `i `*S455 575  ]
[; ;mtouch_sensor.c: 751: return (bool)sensor->enabled;
"751
[e ) . *U _sensor 10 ]
[e $UE 574  ]
[e $U 576  ]
"752
[e :U 575 ]
[; ;mtouch_sensor.c: 752: else
[; ;mtouch_sensor.c: 753: return 0;
"753
[e ) -> -> 0 `i `uc ]
[e $UE 574  ]
[e :U 576 ]
[; ;mtouch_sensor.c: 754: }
"754
[e :UE 574 ]
}
"765
[v _Sensor_setActive `TF3537 ~T0 @X0 1 s ]
"766
{
[; ;mtouch_sensor.c: 765: static inline void Sensor_setActive(mtouch_sensor_t* sensor)
[; ;mtouch_sensor.c: 766: {
[e :U _Sensor_setActive ]
"765
[v _sensor `*S455 ~T0 @X0 1 r1 ]
"766
[f ]
[; ;mtouch_sensor.c: 767: sensor->active = 1;
"767
[e = . *U _sensor 8 -> -> 1 `i `uc ]
[; ;mtouch_sensor.c: 768: }
"768
[e :UE 577 ]
}
"770
[v _Sensor_setInactive `TF3540 ~T0 @X0 1 s ]
"771
{
[; ;mtouch_sensor.c: 770: static inline void Sensor_setInactive(mtouch_sensor_t* sensor)
[; ;mtouch_sensor.c: 771: {
[e :U _Sensor_setInactive ]
"770
[v _sensor `*S455 ~T0 @X0 1 r1 ]
"771
[f ]
[; ;mtouch_sensor.c: 772: sensor->active = 0;
"772
[e = . *U _sensor 8 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 773: }
"773
[e :UE 578 ]
}
"775
[v _Sensor_isActive `TF3543 ~T0 @X0 1 s ]
"776
{
[; ;mtouch_sensor.c: 775: static inline bool Sensor_isActive(mtouch_sensor_t* sensor)
[; ;mtouch_sensor.c: 776: {
[e :U _Sensor_isActive ]
"775
[v _sensor `*S455 ~T0 @X0 1 r1 ]
"776
[f ]
[; ;mtouch_sensor.c: 777: return (bool)sensor->active;
"777
[e ) . *U _sensor 8 ]
[e $UE 579  ]
[; ;mtouch_sensor.c: 778: }
"778
[e :UE 579 ]
}
"780
[v _MTOUCH_Sensor_isActive `(uc ~T0 @X0 1 ef1`E3328 ]
"781
{
[; ;mtouch_sensor.c: 780: bool MTOUCH_Sensor_isActive(enum mtouch_sensor_names sensor)
[; ;mtouch_sensor.c: 781: {
[e :U _MTOUCH_Sensor_isActive ]
"780
[v _sensor `E3328 ~T0 @X0 1 r1 ]
"781
[f ]
[; ;mtouch_sensor.c: 782: if(sensor<=6)
"782
[e $ ! <= -> _sensor `i -> 6 `i 581  ]
[; ;mtouch_sensor.c: 783: return (bool)mtouch_sensor[sensor].active;
"783
[e ) . *U + &U _mtouch_sensor * -> _sensor `ux -> -> # *U &U _mtouch_sensor `ui `ux 8 ]
[e $UE 580  ]
[e :U 581 ]
[; ;mtouch_sensor.c: 784: return 0;
"784
[e ) -> -> 0 `i `uc ]
[e $UE 580  ]
[; ;mtouch_sensor.c: 785: }
"785
[e :UE 580 ]
}
"794
[v _MTOUCH_Sensor_Calibrate `(v ~T0 @X0 1 ef1`E3328 ]
"795
{
[; ;mtouch_sensor.c: 794: void MTOUCH_Sensor_Calibrate(enum mtouch_sensor_names sensor)
[; ;mtouch_sensor.c: 795: {
[e :U _MTOUCH_Sensor_Calibrate ]
"794
[v _sensor `E3328 ~T0 @X0 1 r1 ]
"795
[f ]
[; ;mtouch_sensor.c: 796: if(sensor < 6)
"796
[e $ ! < -> _sensor `i -> 6 `i 583  ]
[; ;mtouch_sensor.c: 797: {
"797
{
[; ;mtouch_sensor.c: 798: mtouch_sensor[sensor].calibrated = 0;
"798
[e = . *U + &U _mtouch_sensor * -> _sensor `ux -> -> # *U &U _mtouch_sensor `ui `ux 9 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 799: mtouch_sensor[sensor].addcap = 0;
"799
[e = . *U + &U _mtouch_sensor * -> _sensor `ux -> -> # *U &U _mtouch_sensor `ui `ux 5 -> -> 0 `i `uc ]
"800
}
[e :U 583 ]
[; ;mtouch_sensor.c: 800: }
[; ;mtouch_sensor.c: 801: }
"801
[e :UE 582 ]
}
"803
[v _MTOUCH_Sensor_isCalibrated `(uc ~T0 @X0 1 ef1`E3328 ]
"804
{
[; ;mtouch_sensor.c: 803: bool MTOUCH_Sensor_isCalibrated(enum mtouch_sensor_names sensor)
[; ;mtouch_sensor.c: 804: {
[e :U _MTOUCH_Sensor_isCalibrated ]
"803
[v _sensor `E3328 ~T0 @X0 1 r1 ]
"804
[f ]
[; ;mtouch_sensor.c: 805: if(sensor < 6)
"805
[e $ ! < -> _sensor `i -> 6 `i 585  ]
[; ;mtouch_sensor.c: 806: return (bool)mtouch_sensor[sensor].calibrated;
"806
[e ) . *U + &U _mtouch_sensor * -> _sensor `ux -> -> # *U &U _mtouch_sensor `ui `ux 9 ]
[e $UE 584  ]
[e $U 586  ]
"807
[e :U 585 ]
[; ;mtouch_sensor.c: 807: else
[; ;mtouch_sensor.c: 808: return 0;
"808
[e ) -> -> 0 `i `uc ]
[e $UE 584  ]
[e :U 586 ]
[; ;mtouch_sensor.c: 809: }
"809
[e :UE 584 ]
}
"811
[v _Sensor_isCalibrated `TF3548 ~T0 @X0 1 s ]
"812
{
[; ;mtouch_sensor.c: 811: static inline bool Sensor_isCalibrated(mtouch_sensor_t* sensor)
[; ;mtouch_sensor.c: 812: {
[e :U _Sensor_isCalibrated ]
"811
[v _sensor `*S455 ~T0 @X0 1 r1 ]
"812
[f ]
[; ;mtouch_sensor.c: 813: return (bool)sensor->calibrated;
"813
[e ) . *U _sensor 9 ]
[e $UE 587  ]
[; ;mtouch_sensor.c: 814: }
"814
[e :UE 587 ]
}
"816
[v _Sensor_setCalibrated `TF3551 ~T0 @X0 1 s ]
"817
{
[; ;mtouch_sensor.c: 816: static inline void Sensor_setCalibrated(mtouch_sensor_t* sensor)
[; ;mtouch_sensor.c: 817: {
[e :U _Sensor_setCalibrated ]
"816
[v _sensor `*S455 ~T0 @X0 1 r1 ]
"817
[f ]
[; ;mtouch_sensor.c: 818: sensor->calibrated = 1;
"818
[e = . *U _sensor 9 -> -> 1 `i `uc ]
[; ;mtouch_sensor.c: 819: sensor->acqTime_cal = 0;
"819
[e = . *U _sensor 11 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 820: }
"820
[e :UE 588 ]
}
"822
[v _Sensor_setCalibratAcqTime `TF3554 ~T0 @X0 1 s ]
"823
{
[; ;mtouch_sensor.c: 822: static inline void Sensor_setCalibratAcqTime(mtouch_sensor_t* sensor)
[; ;mtouch_sensor.c: 823: {
[e :U _Sensor_setCalibratAcqTime ]
"822
[v _sensor `*S455 ~T0 @X0 1 r1 ]
"823
[f ]
[; ;mtouch_sensor.c: 824: sensor->acqTime_cal = 1;
"824
[e = . *U _sensor 11 -> -> 1 `i `uc ]
[; ;mtouch_sensor.c: 825: sensor->acquisition_time = (mtouch_sensor_time_t)1;
"825
[e = . *U _sensor 3 -> -> 1 `i `uc ]
[; ;mtouch_sensor.c: 826: }
"826
[e :UE 589 ]
}
"828
[v _Sensor_isCalibratingAcqTime `TF3557 ~T0 @X0 1 s ]
"829
{
[; ;mtouch_sensor.c: 828: static inline bool Sensor_isCalibratingAcqTime(mtouch_sensor_t* sensor)
[; ;mtouch_sensor.c: 829: {
[e :U _Sensor_isCalibratingAcqTime ]
"828
[v _sensor `*S455 ~T0 @X0 1 r1 ]
"829
[f ]
[; ;mtouch_sensor.c: 830: return (bool)sensor->acqTime_cal;
"830
[e ) . *U _sensor 11 ]
[e $UE 590  ]
[; ;mtouch_sensor.c: 832: }
"832
[e :UE 590 ]
}
"841
[v _MTOUCH_Sensor_Sampled_ResetAll `(v ~T0 @X0 1 ef ]
"842
{
[; ;mtouch_sensor.c: 841: void MTOUCH_Sensor_Sampled_ResetAll(void)
[; ;mtouch_sensor.c: 842: {
[e :U _MTOUCH_Sensor_Sampled_ResetAll ]
[f ]
"843
[v _sensor `*S455 ~T0 @X0 1 a ]
[; ;mtouch_sensor.c: 843: mtouch_sensor_t* sensor;
[; ;mtouch_sensor.c: 844: for(sensor = &mtouch_sensor[0];sensor<= &mtouch_sensor[6-1];sensor++)
"844
{
[e = _sensor &U *U + &U _mtouch_sensor * -> -> -> 0 `i `ui `ux -> -> # *U &U _mtouch_sensor `ui `ux ]
[e $ <= _sensor &U *U + &U _mtouch_sensor * -> -> - -> 6 `i -> 1 `i `ui `ux -> -> # *U &U _mtouch_sensor `ui `ux 592  ]
[e $U 593  ]
"845
[e :U 592 ]
[; ;mtouch_sensor.c: 845: {
{
[; ;mtouch_sensor.c: 846: Sensor_Sampled_Reset(sensor);
"846
[e ( _Sensor_Sampled_Reset (1 _sensor ]
"847
}
"844
[e ++ _sensor * -> -> 1 `i `x -> -> # *U _sensor `i `x ]
[e $ <= _sensor &U *U + &U _mtouch_sensor * -> -> - -> 6 `i -> 1 `i `ui `ux -> -> # *U &U _mtouch_sensor `ui `ux 592  ]
[e :U 593 ]
"847
}
[; ;mtouch_sensor.c: 847: }
[; ;mtouch_sensor.c: 848: }
"848
[e :UE 591 ]
}
"850
[v _MTOUCH_Sensor_wasSampled `(uc ~T0 @X0 1 ef1`E3328 ]
"851
{
[; ;mtouch_sensor.c: 850: bool MTOUCH_Sensor_wasSampled(enum mtouch_sensor_names sensor)
[; ;mtouch_sensor.c: 851: {
[e :U _MTOUCH_Sensor_wasSampled ]
"850
[v _sensor `E3328 ~T0 @X0 1 r1 ]
"851
[f ]
[; ;mtouch_sensor.c: 852: return (bool)mtouch_sensor[sensor].sampled;
"852
[e ) . *U + &U _mtouch_sensor * -> _sensor `ux -> -> # *U &U _mtouch_sensor `ui `ux 7 ]
[e $UE 595  ]
[; ;mtouch_sensor.c: 853: }
"853
[e :UE 595 ]
}
"855
[v _Sensor_Sampled_Reset `TF3534 ~T0 @X0 1 s ]
"856
{
[; ;mtouch_sensor.c: 855: static inline void Sensor_Sampled_Reset(mtouch_sensor_t* sensor)
[; ;mtouch_sensor.c: 856: {
[e :U _Sensor_Sampled_Reset ]
"855
[v _sensor `*S455 ~T0 @X0 1 r1 ]
"856
[f ]
[; ;mtouch_sensor.c: 857: sensor->sampled = 0;
"857
[e = . *U _sensor 7 -> -> 0 `i `uc ]
[; ;mtouch_sensor.c: 858: }
"858
[e :UE 596 ]
}
"860
[v _Sensor_setSampled `TF3531 ~T0 @X0 1 s ]
"861
{
[; ;mtouch_sensor.c: 860: static inline void Sensor_setSampled(mtouch_sensor_t* sensor)
[; ;mtouch_sensor.c: 861: {
[e :U _Sensor_setSampled ]
"860
[v _sensor `*S455 ~T0 @X0 1 r1 ]
"861
[f ]
[; ;mtouch_sensor.c: 862: sensor->sampled = 1;
"862
[e = . *U _sensor 7 -> -> 1 `i `uc ]
[; ;mtouch_sensor.c: 863: }
"863
[e :UE 597 ]
}
"872
[v _MTOUCH_Sensor_AdditionalCap_Get `(uc ~T0 @X0 1 ef1`E3328 ]
"873
{
[; ;mtouch_sensor.c: 872: uint8_t MTOUCH_Sensor_AdditionalCap_Get(enum mtouch_sensor_names name)
[; ;mtouch_sensor.c: 873: {
[e :U _MTOUCH_Sensor_AdditionalCap_Get ]
"872
[v _name `E3328 ~T0 @X0 1 r1 ]
"873
[f ]
[; ;mtouch_sensor.c: 874: if(name < 6)
"874
[e $ ! < -> _name `i -> 6 `i 599  ]
[; ;mtouch_sensor.c: 875: return mtouch_sensor[name].addcap<<1;
"875
[e ) -> << -> . *U + &U _mtouch_sensor * -> _name `ux -> -> # *U &U _mtouch_sensor `ui `ux 5 `i -> 1 `i `uc ]
[e $UE 598  ]
[e $U 600  ]
"876
[e :U 599 ]
[; ;mtouch_sensor.c: 876: else
[; ;mtouch_sensor.c: 877: return 0;
"877
[e ) -> -> 0 `i `uc ]
[e $UE 598  ]
[e :U 600 ]
[; ;mtouch_sensor.c: 878: }
"878
[e :UE 598 ]
}
"880
[v _MTOUCH_Sensor_AcquisitionTime_Get `(uc ~T0 @X0 1 ef1`E3328 ]
"881
{
[; ;mtouch_sensor.c: 880: uint8_t MTOUCH_Sensor_AcquisitionTime_Get(enum mtouch_sensor_names name)
[; ;mtouch_sensor.c: 881: {
[e :U _MTOUCH_Sensor_AcquisitionTime_Get ]
"880
[v _name `E3328 ~T0 @X0 1 r1 ]
"881
[f ]
[; ;mtouch_sensor.c: 882: if(name < 6)
"882
[e $ ! < -> _name `i -> 6 `i 602  ]
[; ;mtouch_sensor.c: 883: return mtouch_sensor[name].acquisition_time;
"883
[e ) . *U + &U _mtouch_sensor * -> _name `ux -> -> # *U &U _mtouch_sensor `ui `ux 3 ]
[e $UE 601  ]
[e $U 603  ]
"884
[e :U 602 ]
[; ;mtouch_sensor.c: 884: else
[; ;mtouch_sensor.c: 885: return 0;
"885
[e ) -> -> 0 `i `uc ]
[e $UE 601  ]
[e :U 603 ]
[; ;mtouch_sensor.c: 886: }
"886
[e :UE 601 ]
}
"888
[v _MTOUCH_Sensor_PreChargeTime_Get `(uc ~T0 @X0 1 ef1`E3328 ]
"889
{
[; ;mtouch_sensor.c: 888: uint8_t MTOUCH_Sensor_PreChargeTime_Get(enum mtouch_sensor_names name)
[; ;mtouch_sensor.c: 889: {
[e :U _MTOUCH_Sensor_PreChargeTime_Get ]
"888
[v _name `E3328 ~T0 @X0 1 r1 ]
"889
[f ]
[; ;mtouch_sensor.c: 890: if(name < 6)
"890
[e $ ! < -> _name `i -> 6 `i 605  ]
[; ;mtouch_sensor.c: 891: return mtouch_sensor[name].precharge_time;
"891
[e ) . *U + &U _mtouch_sensor * -> _name `ux -> -> # *U &U _mtouch_sensor `ui `ux 2 ]
[e $UE 604  ]
[e $U 606  ]
"892
[e :U 605 ]
[; ;mtouch_sensor.c: 892: else
[; ;mtouch_sensor.c: 893: return 0;
"893
[e ) -> -> 0 `i `uc ]
[e $UE 604  ]
[e :U 606 ]
[; ;mtouch_sensor.c: 894: }
"894
[e :UE 604 ]
}
